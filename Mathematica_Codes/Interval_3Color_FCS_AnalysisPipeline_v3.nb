(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1426248,      28705]
NotebookOptionsPosition[   1386046,      28115]
NotebookOutlinePosition[   1386394,      28130]
CellTagsIndexPosition[   1386351,      28127]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialize", "Section",
 CellChangeTimes->{{3.6484703923691845`*^9, 3.648470403792838*^9}, {
  3.7792037386618576`*^9, 
  3.779203740580967*^9}},ExpressionUUID->"0d48e6fe-312e-4d0d-93a8-\
fe874ba1ea17"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{"Off", "[", 
  RowBox[{
   RowBox[{"General", "::", "spell"}], ",", " ", 
   RowBox[{"General", "::", "spell1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.642167939244282*^9, 3.6421679399873247`*^9}, {
  3.6514954254104395`*^9, 3.65149564868221*^9}, {3.6514957496829867`*^9, 
  3.651495786850113*^9}, {3.6514985885093584`*^9, 3.6514986184050684`*^9}, {
  3.651520636239416*^9, 
  3.651520636918455*^9}},ExpressionUUID->"a68e3fbb-5456-422b-b54e-\
0eab970bb121"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7148638296045837`*^9, 
  3.7148638450365524`*^9}},ExpressionUUID->"9577663b-f55c-4a0c-907b-\
ba69abff9d57"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions and PSF", "Section",
 CellChangeTimes->{{3.575085645362406*^9, 3.5750856463124075`*^9}, {
  3.5774930265230093`*^9, 
  3.5774930278830867`*^9}},ExpressionUUID->"5f6835cc-6f4d-4d46-8e51-\
e1c87bb2f7c1"],

Cell[CellGroupData[{

Cell["MyNumString", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.4945628646757*^9, 
  3.494562866906504*^9}},ExpressionUUID->"d4e39c81-409e-4e1c-9e7e-\
e2d51c135c19"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyNumString", "[", 
    RowBox[{"myn_", ",", "L_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"myn", ">", 
      RowBox[{
       SuperscriptBox["10", "L"], "-", "1"}]}], ",", 
     RowBox[{"IntegerString", "[", 
      RowBox[{"myn", ",", "10", ",", 
       RowBox[{"L", "+", "1"}]}], "]"}], ",", 
     RowBox[{"IntegerString", "[", 
      RowBox[{"myn", ",", "10", ",", "L"}], "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4934388235276003`*^9, 3.4934389526070004`*^9}, {
   3.493873344913*^9, 3.49387339683*^9}, 
   3.702431547454364*^9},ExpressionUUID->"fa2d8201-0333-4c2a-a0b2-\
8538927e3b11"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyNumString", "[", 
  RowBox[{"30", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7024315503672934`*^9, 
  3.702431562774232*^9}},ExpressionUUID->"f2e83eda-932f-4730-a1b7-\
dc377adc16f1"],

Cell[BoxData["\<\"030\"\>"], "Output",
 CellChangeTimes->{
  3.7024315631023607`*^9, {3.7025877568947344`*^9, 3.7025877613166513`*^9}, 
   3.702587834891323*^9, 3.702642821585232*^9, 3.702669351849676*^9, 
   3.7026744985640516`*^9, 3.7027374432988715`*^9, 3.7028602384262505`*^9, 
   3.70291098643779*^9, 3.703342372138914*^9, 3.7034368281340604`*^9, 
   3.703440262493255*^9, 3.7064782230606384`*^9, 3.706581189382634*^9, 
   3.7070007657578287`*^9, 3.708246189333047*^9, 3.708380840483123*^9, 
   3.7088139578572874`*^9, 3.708858822074026*^9, 3.708858894909833*^9, 
   3.708858966545637*^9, 3.708863170958912*^9, 3.7089242062491984`*^9, 
   3.7135424319382167`*^9, 3.7136133097656016`*^9, 3.7136536705649786`*^9, 
   3.7142202159680634`*^9, 3.7142229012884407`*^9, 3.7144112721458607`*^9, 
   3.714829368297881*^9, 3.7151028393974905`*^9, 3.7161416397361*^9, 
   3.716142745105682*^9, 3.7162898977170134`*^9, 3.717256593938825*^9, 
   3.7172747695794744`*^9, 3.717440210847017*^9, 3.7186373172896156`*^9, 
   3.7227250564156065`*^9, 3.725383774255196*^9, 3.7253840719902253`*^9, 
   3.7253862056942663`*^9, {3.7253947522321005`*^9, 3.7253947746703835`*^9}, 
   3.725395083816066*^9, 3.725395863112639*^9, 3.725396150439073*^9, 
   3.725400631498375*^9, 3.7254016894858885`*^9, 3.7254029817998047`*^9, {
   3.725403889395716*^9, 3.7254039144031467`*^9}, 3.725653830755227*^9, 
   3.725654241710732*^9, 3.7256545147753506`*^9, {3.725654865035384*^9, 
   3.725654869808657*^9}, 3.7256552470902367`*^9, 3.7256557674319983`*^9, 
   3.726515225390233*^9, 3.7265169127907047`*^9, 3.7277391297313843`*^9, 
   3.7279672391175613`*^9, 3.7279677704907084`*^9, 3.727968264698752*^9, 
   3.727968703711839*^9, 3.727969230703097*^9, 3.7279697739256444`*^9, 
   3.731680118817904*^9, 3.7332413549802294`*^9, 3.7336867440699883`*^9, 
   3.771102000676606*^9, 3.7711020634711423`*^9, 3.7711044809040146`*^9, 
   3.771164297208228*^9, 3.771179793786319*^9, 3.7712469938022003`*^9, 
   3.771591129280074*^9, 3.7716680399758434`*^9, 3.772363518346203*^9, 
   3.7724654000962267`*^9, 3.7724797177407947`*^9, 3.772540168555947*^9, 
   3.7725538746345873`*^9, 3.7725626227887506`*^9, 3.772810195982297*^9, 
   3.773426750396273*^9, 3.773567752408985*^9, 3.774519459350611*^9, 
   3.7765450804619637`*^9, 3.776546400978343*^9, 3.7765535269292655`*^9, 
   3.7765543328484364`*^9, 3.776785779792717*^9, 3.777389861789591*^9, 
   3.7774068447099886`*^9, 3.7776716578753567`*^9, 3.7777205872038403`*^9, 
   3.7782673567460933`*^9, 3.778329680218419*^9, 3.779203837126489*^9, 
   3.7792041184045773`*^9, 3.77920419625503*^9, 3.7792043562051787`*^9, 
   3.779468722261052*^9, 
   3.7794691684635735`*^9},ExpressionUUID->"0c8937e6-3af3-4708-ae89-\
c783882af871"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BandPass", "Subsection",
 CellChangeTimes->{{3.5781169365680165`*^9, 
  3.57811693907802*^9}},ExpressionUUID->"b4483ac1-6dfa-447c-b5b1-\
4d84eff233c3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BandPass", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        RowBox[{"GaussianMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"hi", ",", "lo"}], "}"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"imgc", "=", 
        RowBox[{"ImageConvolve", "[", 
         RowBox[{"img", ",", 
          FractionBox[
           RowBox[{"BoxMatrix", "[", "hi", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "hi"}], "+", "1"}], ")"}], "2"]]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        FractionBox[
         RowBox[{"DiskMatrix", "[", "hi", "]"}], 
         RowBox[{"Plus", "@@", 
          RowBox[{"Plus", "@@", 
           RowBox[{"DiskMatrix", "[", "hi", "]"}]}]}]]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSubtract", "[", 
      RowBox[{"imgb", ",", "imgc"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}},ExpressionUUID->"3921df9c-2eac-4a9c-a5bb-\
3f7d37ab20e9"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"BandPass", "[", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxc3XezbVWZx/uuui+io0gDksydg6STz9777JM5gKG77aBtEyQniYIoAqIe
lCgoSUREBbSRjKKAWTF29T/9Su73jk/NUdRdVXvV2mvNOeYIz3jC7wnjz99/
1p73/z9/8Ad/cH9/z/f3/33+wAc+8O53v/vAgQObN2/etm3bCSecsL6+vmfP
nu3bt//DP/zDysrKe9/73r7ZuHHj2trarl27Nm3atGHDhr//+7/fO179dNxx
x/Xe59NOO211dfVtb3tbt//zP//zSSed9B//8R99v2XLFld2++mnn/5v//Zv
Pah23ve+95188smnnHJKT+/9gx/8YP92TQ/dunVr19SHPmt8586d28ernvzd
3/1dV9bCvn376nAPqg9d2UDqZN3up63j1ZVvfetb+6kO++aYY47p167/x3/8
x/6t5R07duj8/v37Deev/uqvukafu/c973lPD2pQJqfHdW/TVeN90+P0ttt7
r/8nnnhiw+knw6xBs6fPW8br/e9/f3cdffTRTVdNnXrqqU3C2Wef3QVNeM9q
Jmu55/7rv/5rHWiuuqAu/dM//dN//ud/1o1/+Zd/Oeywwz70oQ8df/zxPVTH
+lyzZkmXGku/9mH37t21UyNd0BNruX52V73693//927pifvGq870uRb6vp40
lt67uBt7RO/NVZd1Qe30TW32iDrWhDS0Bl6bzWpzHqmYYTPTq7vqRp3pygbY
hx7XKOpnH2q81qLJPnTBnvHq3jkDzUYP6kN9+/CHP2xpoo0eUT+7qwmsV/W/
lntc9/bEuvHOd76zpfyLv/iLFqIvW8Fa7uJm4B/Hq3+7vuWIQrqgVajlvjGf
f/u3f9vtXdazaqH3Btt7z6qRHlcHehB66Ke+7Jt+tTTmthb6ppmswf3j1WVN
Zt/0XrPd0qh7epNmyK5H0qeMV9c05/W227vsr//6r7vF1oskkGh9bvjdWJt9
rmPd2LzVYFNR+01417dM9arJbFztnT53V//63F0tSq3VeB1u6v7mb/4GgXXj
scce23vt13LvNdvy1du62rQ00q7sp4bf7b3vHC+01xBqtrt63DnnnBNDqD/1
Sgt1ssnvS2TTNd1Yby1cPWn4LVMT0vfdMje7nrSzoo3a6VdbpoE0XX2uKWNE
aX3oEQje3PZlLAuN1W176l3veldjqTULXcv1oSv7tTXqvX+tXRdH861+1NLn
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
        "], {{0, 165}, {192, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->{78., Automatic},
      ImageSizeRaw->{192, 165},
      PlotRange->{{0, 192}, {0, 165}}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}]}], "]"}], "//", "ImageAdjust"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.575096671242012*^9, 3.575096685632032*^9}, {
  3.575151552048551*^9, 3.575151584238596*^9}, {3.5751527213321905`*^9, 
  3.575152738242214*^9}, {3.5787952704749374`*^9, 3.5787952717229395`*^9}, {
  3.648226188532628*^9, 3.6482261920908318`*^9}, {3.648226491268944*^9, 
  3.648226494211112*^9}, {3.6482313009610424`*^9, 3.6482313029911585`*^9}, {
  3.6482314723518453`*^9, 3.648231474766983*^9}, {3.6483038949211793`*^9, 
  3.6483038979373517`*^9}},ExpressionUUID->"5784cad0-7202-455e-a48e-\
de80b758a1c3"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindParticles (updated to remove adjacentbordercounts)", "Subsection",
 CellChangeTimes->{{3.578116942838025*^9, 3.5781169456080294`*^9}, {
  3.706478182893057*^9, 
  3.706478194310189*^9}},ExpressionUUID->"635d5ea5-174b-49f7-bf7a-\
c8130ec663cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeighted", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{"img", ",", "imgc"}], "]"}], ",", 
        RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"img", ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Color", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Circle", "[", 
              RowBox[{"#", ",", 
               RowBox[{"hi", " ", "1.5"}]}], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"pos", "=", 
              RowBox[{
               RowBox[{"ComponentMeasurements", "[", 
                RowBox[{"imgc", ",", 
                 RowBox[{"{", "\"\<Centroid\>\"", "}"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], 
             ")"}]}]}], "}"}], "]"}]}], "]"}], ",", "pos"}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, 3.7082569876100755`*^9, 
   3.7083825965615287`*^9},ExpressionUUID->"86e1ff3d-9329-4cb1-91bc-\
3104488369e5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeightedMask", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, {3.7082566948533335`*^9, 3.7082567064482007`*^9}, {
   3.708510282112838*^9, 
   3.7085102832053924`*^9}},ExpressionUUID->"34faea4e-11e2-42c4-8fe3-\
1eddcc12a5d7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
PairConnect2 (still one small error, but doesn\[CloseCurlyQuote]t seem to \
mess up stuff)\
\>", "Subsection",
 CellChangeTimes->{{3.578373737283985*^9, 3.578373754802816*^9}, {
  3.6425405298598948`*^9, 3.6425405335598993`*^9}, {3.642540631241037*^9, 
  3.6425406446910553`*^9}, {3.6483824557337046`*^9, 
  3.648382456997307*^9}},ExpressionUUID->"76b0322d-79d9-4095-a459-\
b2d01e4d853f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PairConnect2", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ticker_", ",", "anolist1t_"}], "}"}], ",", "list2t_", ",", 
    "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newticker", ",", "finalticker", ",", "list1", ",", "list2", ",", "flag",
       ",", "out", ",", "newTracks", ",", "mypos", ",", "myind", ",", "myl", 
      ",", "out2", ",", "out3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newticker", "=", "ticker"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"anolist1t", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"#2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"Sort", "@", "list2t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"myind", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"mypos", "=", 
          RowBox[{"list2", "\[LeftDoubleBracket]", 
           RowBox[{"myind", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Reap", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"While", "[", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"list1", "\[LeftDoubleBracket]", 
                RowBox[{"m", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
               "-", "dist"}], "\[LessEqual]"}], " ", "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"mypos", "\[LessEqual]", 
               RowBox[{
                RowBox[{"list1", "\[LeftDoubleBracket]", 
                 RowBox[{"m", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}],
                 "+", "dist"}]}], " ", "&&", 
              RowBox[{"myind", "\[LessEqual]", " ", 
               RowBox[{"Length", "@", "list2"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"EuclideanDistance", "[", 
                  RowBox[{
                   RowBox[{
                   "list2", "\[LeftDoubleBracket]", "myind", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"list1", "\[LeftDoubleBracket]", 
                    RowBox[{"m", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                  "]"}], "\[LessEqual]", "dist"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"list1", "\[LeftDoubleBracket]", 
                    RowBox[{"m", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "list2", "\[LeftDoubleBracket]", "myind", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"list2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"list2", ",", "myind"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"myind", "=", 
                  RowBox[{"myind", "-", "1"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"flag", "=", 
                  RowBox[{"flag", "+", "1"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myind", "=", 
               RowBox[{"myind", "+", "1"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "list2"}], ">", "0"}], "&&", 
                 RowBox[{"myind", "\[LessEqual]", 
                  RowBox[{"Length", "@", "list2"}]}]}], ",", 
                RowBox[{"mypos", "=", 
                 RowBox[{"list2", "\[LeftDoubleBracket]", 
                  RowBox[{"myind", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                ",", 
                RowBox[{"m", "=", 
                 RowBox[{"Length", "@", "list1"}]}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", 
          RowBox[{"Length", "@", "list1"}], ",", "1"}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"out2", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "&"}]}], ",", "Null"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "list2"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"finalticker", "=", 
         RowBox[{"newticker", "+", 
          RowBox[{"Length", "[", "list2", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newTracks", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"newticker", "+", "1"}], ",", "finalticker"}], "]"}], 
            ",", "list2"}], "}"}], "//", "Transpose"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"out3", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"out2", ",", "newTracks"}], "]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"finalticker", "=", "newticker"}], ";", "\[IndentingNewLine]", 
        RowBox[{"out3", "=", "out2"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"finalticker", ",", "out3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.578278483426984*^9, 3.578278527017045*^9}, {
   3.578278617567171*^9, 3.578278812177444*^9}, {3.578278860177511*^9, 
   3.578278958617649*^9}, {3.5782790527777805`*^9, 3.5782791306678896`*^9}, {
   3.578279228338026*^9, 3.5782792824481025`*^9}, {3.578279331708171*^9, 
   3.57827937375923*^9}, {3.5782797231797194`*^9, 3.5782797524497604`*^9}, {
   3.5782798062098355`*^9, 3.578279820769856*^9}, {3.578279860929912*^9, 
   3.578279877759936*^9}, {3.5782800389101615`*^9, 3.5782800426101665`*^9}, {
   3.5782801504503174`*^9, 3.5782802956605206`*^9}, {3.5782803604306116`*^9, 
   3.5782803672306213`*^9}, {3.5782804440807285`*^9, 3.578280470540766*^9}, {
   3.5782805111508226`*^9, 3.5782805168008304`*^9}, {3.5782805968509426`*^9, 
   3.5782805970109425`*^9}, {3.5782806657110386`*^9, 
   3.5782806854210663`*^9}, {3.5782807162611094`*^9, 
   3.5782807175111113`*^9}, {3.5782807897512126`*^9, 3.578280792511216*^9}, {
   3.5782808529913015`*^9, 3.5782808624313145`*^9}, 3.578280908081378*^9, {
   3.5782809467514324`*^9, 3.5782810046925135`*^9}, {3.5782810446625695`*^9, 
   3.5782810505625772`*^9}, {3.5782811481127143`*^9, 
   3.5782811696327443`*^9}, {3.578281283622904*^9, 3.5782812974929237`*^9}, {
   3.578281465663159*^9, 3.578281465853159*^9}, {3.578281551223279*^9, 
   3.578281564433297*^9}, {3.5782816376533995`*^9, 3.578281646533412*^9}, {
   3.578282025693943*^9, 3.5782820302239494`*^9}, {3.5782822587442694`*^9, 
   3.578282264654278*^9}, {3.5782823233143597`*^9, 3.57828232345436*^9}, {
   3.5782825197346344`*^9, 3.578282525154642*^9}, {3.578282604784754*^9, 
   3.5782826048347535`*^9}, {3.5782826819758615`*^9, 
   3.5782826900358734`*^9}, {3.5782827276359253`*^9, 3.578282894096159*^9}, {
   3.578282962536255*^9, 3.5782829667562604`*^9}, {3.5782831375564995`*^9, 
   3.5782831679665422`*^9}, {3.578283206996597*^9, 3.5782832870267086`*^9}, {
   3.578283348096794*^9, 3.578283367776822*^9}, {3.578283470656966*^9, 
   3.578283492016996*^9}, {3.5782839458876314`*^9, 3.5782839944376993`*^9}, {
   3.5782841031378517`*^9, 3.578284113677866*^9}, {3.5782842223180184`*^9, 
   3.5782842223880186`*^9}, {3.5782843294291687`*^9, 
   3.5782843302791696`*^9}, {3.5782844209192963`*^9, 3.578284457309347*^9}, {
   3.578284550769478*^9, 3.5782845508994784`*^9}, {3.578284822663619*^9, 
   3.57828484069565*^9}, {3.5782853893969555`*^9, 3.578285423857003*^9}, {
   3.578285545237173*^9, 3.578285545617174*^9}, {3.5782858759376364`*^9, 
   3.578285897557667*^9}, {3.578286003598815*^9, 3.5782860371688623`*^9}, {
   3.5782861572790303`*^9, 3.57828615737903*^9}, {3.5782862077491007`*^9, 
   3.5782862166091137`*^9}, {3.5782862581791716`*^9, 3.5782862847992086`*^9}, 
   3.578286325379266*^9, {3.578286401229372*^9, 3.5782864672294645`*^9}, {
   3.578286510369525*^9, 3.578286511389526*^9}, {3.5782870152702312`*^9, 
   3.578287016370233*^9}, {3.5782872721305914`*^9, 3.5782873117806463`*^9}, {
   3.5782874462608347`*^9, 3.5782874467208357`*^9}, {3.5782874911708975`*^9, 
   3.5782874941909018`*^9}, {3.5782876928021803`*^9, 3.578287701252192*^9}, {
   3.5782877771222982`*^9, 3.578287777862299*^9}, {3.578288352623104*^9, 
   3.578288353153105*^9}, {3.578288429383211*^9, 3.578288430623213*^9}, {
   3.5782885667834034`*^9, 3.5782885799034224`*^9}, {3.578288708243602*^9, 
   3.5782887524836636`*^9}, {3.578288898613868*^9, 3.578288905053877*^9}, {
   3.5782893486954985`*^9, 3.5782893521655035`*^9}, {3.578291437249422*^9, 
   3.5782914925594997`*^9}, 3.578291604639657*^9, {3.6425306412239523`*^9, 
   3.642530683860013*^9}, {3.642530742362096*^9, 3.6425308047651834`*^9}, {
   3.642531019962491*^9, 3.642531020132491*^9}, {3.6425311360136547`*^9, 
   3.642531166125697*^9}, {3.64253121132876*^9, 3.6425312242587786`*^9}, {
   3.642531293833877*^9, 3.642531297573882*^9}, {3.6425314082820387`*^9, 
   3.64253150795218*^9}, {3.6425315514062414`*^9, 3.6425315622862563`*^9}, {
   3.6425315928842998`*^9, 3.6425316444823723`*^9}, {3.642531691449439*^9, 
   3.6425317249694867`*^9}, {3.6425319206627626`*^9, 
   3.6425319318037777`*^9}, {3.642532056447954*^9, 3.6425320886969995`*^9}, {
   3.642532138244069*^9, 3.6425321476280828`*^9}, 3.642532244681219*^9, {
   3.6425323095393105`*^9, 3.6425323484653654`*^9}, {3.6425323843774157`*^9, 
   3.642532444282503*^9}, {3.642532501847584*^9, 3.6425325024575853`*^9}, {
   3.6425325615806684`*^9, 3.642532601869725*^9}, {3.642532707053873*^9, 
   3.6425327454539275`*^9}, {3.6425327819739795`*^9, 
   3.6425327821139793`*^9}, {3.642532815416026*^9, 3.6425328677931004`*^9}, {
   3.6425329233521786`*^9, 3.642532926542183*^9}, {3.642533062098374*^9, 
   3.642533259736653*^9}, {3.642533571219092*^9, 3.642533595639126*^9}, {
   3.642533784734393*^9, 3.64253385364149*^9}, {3.6425339204625874`*^9, 
   3.642533928552599*^9}, {3.642533971415659*^9, 3.642533983913677*^9}, {
   3.642534058391782*^9, 3.642534134649889*^9}, 3.6425342296930227`*^9, {
   3.642534352895197*^9, 3.6425345223634353`*^9}, {3.642534700581686*^9, 
   3.6425347028516893`*^9}, {3.642534759857769*^9, 3.6425347601777697`*^9}, {
   3.6425348824019413`*^9, 3.6425348994869657`*^9}, {3.642535074718212*^9, 
   3.6425352725904903`*^9}, {3.6425353223105607`*^9, 
   3.6425353314005733`*^9}, {3.6425353699746275`*^9, 
   3.6425353984366674`*^9}, {3.64253546901377*^9, 3.642535556605893*^9}, {
   3.642535660427039*^9, 3.6425356605370398`*^9}, {3.642535706873105*^9, 
   3.6425357137931147`*^9}, {3.6425384922410283`*^9, 3.642538496281034*^9}, 
   3.6785566714495325`*^9, {3.6785587960190516`*^9, 3.6785588947867002`*^9}, {
   3.6785593039071007`*^9, 
   3.678559305379185*^9}},ExpressionUUID->"8b39f68e-7d9f-4b2f-8f7e-\
5f7dfc3763ea"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
PairConnect3 (Connect a dot in frame(n) to the nearest dot in frame(n-1) \
which is less than the determined jumping distance > there is no conversion, \
but diversion) \
\>", "Subsection",
 CellChangeTimes->{{3.678559583698104*^9, 3.678559593562668*^9}, {
  3.6785687791460533`*^9, 3.6785688974738216`*^9}, {3.6785689412813272`*^9, 
  3.678568949921821*^9}},ExpressionUUID->"a7992e61-107b-446f-a339-\
02e4f4f9fbd6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "is", " ", "used", " ", "with", " ", 
     "LinkTracks", " ", "or", " ", "LinkTracks2", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", "A", " ", "cordinate", " ", "of", " ", 
     "each", " ", "dots", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", " ", "is", " ", "compared", " ", "with", " ", "dots", " ", "at", " ",
      "frame", "#", " ", "N", " ", "by", " ", "Table", " ", "function", 
     "\[IndentingNewLine]", "\t", "Those", " ", "dots", " ", "located"}], " ",
     "+", 
    RowBox[{
     RowBox[{"/", 
      RowBox[{"-", " ", "\"\<dist_\>\""}]}], " ", "are", " ", "listed", " ", 
     "as", " ", "\"\<potentialDots\>\"", "\[IndentingNewLine]", "\t", "If", 
     " ", "the", " ", "nearest", " ", "dots", " ", "in", " ", 
     "\"\<potentialDots\>\"", " ", "is", " ", "actually", " ", "less", " ", 
     "than", " ", "\"\<dist_\>\"", "\[IndentingNewLine]", "\t", "the", " ", 
     "track", " ", "number", " ", "of", " ", "the", " ", "dot", " ", "is", 
     " ", "given", " ", "to", " ", "the", " ", "current", " ", "dot", " ", 
     "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", "\[IndentingNewLine]", "\t", "This", " ", "will", " ", "ensure", " ",
      "there", " ", "is", " ", "no", " ", "conversion", " ", "in", " ", 
     "tracks", "\[IndentingNewLine]", "\t", "If", " ", "there", " ", "is", 
     " ", "no", " ", "dots", " ", "closeby", " ", "in", " ", "frame", " ", 
     "#N"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "current", " ", "dot", " ", "gets", " ", "the", " ", "new", 
     " ", "track", " ", "number", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{
     "list1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ":", 
    " ", 
    RowBox[{"the", " ", "latest", " ", 
     RowBox[{"(", "biggest", ")"}], " ", "track", " ", "number", " ", "being",
      " ", "used", " ", 
     RowBox[{"(", "newticker", ")"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{
     "list1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ":", 
    " ", 
    RowBox[{
    "the", " ", "list", " ", "of", " ", "cordinate", " ", "of", " ", "points",
      " ", "with", " ", "a", " ", "track", " ", "number", " ", "at", " ", 
     "frame", "#", " ", "N", " ", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"list2", ":", "    ", 
      RowBox[{
       RowBox[{
       "the", " ", "list", " ", "of", " ", "cordinate", " ", "of", " ", 
        "points", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
       RowBox[{
       "1", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t ", "out"}]}], 
      ":", "      ", 
      RowBox[{
       RowBox[{
       "the", " ", "list", " ", "of", " ", "cordinate", " ", "of", " ", 
        "points", " ", "with", " ", "a", " ", "track", " ", "number", " ", 
        "at", " ", "frame", "#", " ", "N"}], "+", "1"}]}]}]}]}], 
  "\[IndentingNewLine]", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6786311463602543`*^9, 3.6786316118118763`*^9}, {
  3.6786336143174133`*^9, 3.6786336993652773`*^9}, {3.6786337329091964`*^9, 
  3.6786338276456146`*^9}, {3.6786442408382154`*^9, 3.67864462992647*^9}, {
  3.678644735598514*^9, 
  3.678644831406994*^9}},ExpressionUUID->"13f24dc0-80b6-4efc-b428-\
8d033c82bc0b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PairConnect3", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ticker_", ",", "anolist1t_"}], "}"}], ",", "list2t_", ",", 
    "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newticker", ",", "list1", ",", "list2", ",", "out", ",", "mypos"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newticker", "=", "ticker"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"anolist1t", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"#2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"Sort", "@", "list2t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mypos", "=", 
          RowBox[{
          "list2", "\[LeftDoubleBracket]", "myi", "\[RightDoubleBracket]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"potentialDots", "=", 
          RowBox[{"Cases", "[", 
           RowBox[{"list1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}]}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"potentialDots", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"newticker", "+=", "1"}], ";", 
            RowBox[{"out", "=", 
             RowBox[{"{", 
              RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"potentialDot", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"potentialDots", ",", 
                 RowBox[{"x_", "/;", 
                  RowBox[{
                   RowBox[{
                   "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"potentialDots", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",",
                     "mypos"}], "]"}]}]}]}]}], "]"}], ",", "1"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"EuclideanDistance", "[", 
                RowBox[{"mypos", ",", 
                 RowBox[{
                 "potentialDot", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "]"}], ">", "dist"}], ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{
               RowBox[{"newticker", "+=", "1"}], ";", 
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
              RowBox[{
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "potentialDot", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", "mypos"}], "}"}]}], 
               ";"}]}], "]"}]}]}], "]"}], ";", "out"}], ",", 
        RowBox[{"{", 
         RowBox[{"myi", ",", "1", ",", 
          RowBox[{"Length", "@", "list2"}], ",", "1"}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newticker", ",", "out"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.678559612091728*^9, 3.678559616794997*^9}, {
   3.6785597764591293`*^9, 3.678559889284582*^9}, {3.6785600026430664`*^9, 
   3.6785600028040757`*^9}, {3.6785645606417685`*^9, 3.6785646495908566`*^9}, 
   3.6785661846406565`*^9, 
   3.6785662164474754`*^9},ExpressionUUID->"4e9bff81-2394-4e0a-9c6c-\
3b6b0df3eb2c"]
}, Closed]],

Cell[CellGroupData[{

Cell["PairConnect4 (PairConnect3 + removing diversion)", "Subsection",
 CellChangeTimes->{{3.678559583698104*^9, 3.678559593562668*^9}, {
  3.67856877593787*^9, 3.678568776041876*^9}, {3.678568958833331*^9, 
  3.6785689735461726`*^9}},ExpressionUUID->"fde97955-e3bf-42de-aeef-\
f83f879b3d8b"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "is", " ", "used", " ", "with", " ", 
     "LinkTracks", " ", "or", " ", "LinkTracks2", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", "After", " ", "connecting", " ", "all", " ",
      "dots", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", " ", "to", " ", "dots", " ", "at", " ", "frame", "#", " ", "N", 
     "\[IndentingNewLine]", "\t", "finding", " ", "redundant", " ", "track", 
     " ", "numbers", " ", "by", " ", "using", " ", "RedundantTrack", " ", 
     "function", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"RedundantTrack", "[", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "5", ",", "1", ",", "6", ",", "7", ",", "2", ",", 
        "2", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "2", "}"}], ",", 
           RowBox[{"{", "7", "}"}], ",", 
           RowBox[{"{", "8", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], "}"}]}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "redundant", " ", 
     "track", " ", "numbers", " ", "means", " ", "track", " ", "gets", " ", 
     "split", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", "\[IndentingNewLine]", "\t", "in", " ", "order", " ", "to", " ", 
     "avoid", " ", "this"}]}], ",", " ", 
   RowBox[{
   "choosing", " ", "the", " ", "nearest", " ", "point", " ", "and", " ", 
    "assign", " ", "a", " ", "new", " ", "track", " ", "number", " ", "to", 
    " ", "the", " ", "other", " ", "points"}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.678644657461045*^9, 3.6786447316622887`*^9}, {
  3.678644841734585*^9, 3.678644919664042*^9}, {3.678644955945117*^9, 
  3.678645062191194*^9}},ExpressionUUID->"5ee4fd1c-51ae-46a8-ad04-\
5ada17530553"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RedundantTrack", "[", 
   RowBox[{"list_", ",", 
    RowBox[{"test_:", " ", "Identity"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Composition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"list", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "}"}], "&"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "_", "}"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], "&"}],
      ",", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{"#", ",", "test"}], "]"}], "&"}]}], "]"}], "[", "list", 
   "]"}]}]], "Input",ExpressionUUID->"ab7ff017-5dfe-4aa0-849a-b5497591167e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PairConnect4", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ticker_", ",", "anolist1t_"}], "}"}], ",", "list2t_", ",", 
    "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newticker", ",", "list1", ",", "list2", ",", "out", ",", "mypos", ",", 
      "myRedundant", ",", "null", ",", "tempOriginalPoint", ",", 
      "tempNewPoints", ",", "tempTruePoint", ",", "tempOutlierPointPosi"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newticker", "=", "ticker"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"anolist1t", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"#2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"Sort", "@", "list2t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mypos", "=", 
          RowBox[{
          "list2", "\[LeftDoubleBracket]", "myi", "\[RightDoubleBracket]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"potentialDots", "=", 
          RowBox[{"Cases", "[", 
           RowBox[{"list1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}]}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"potentialDots", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"newticker", "+=", "1"}], ";", 
            RowBox[{"out", "=", 
             RowBox[{"{", 
              RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"potentialDot", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"potentialDots", ",", 
                 RowBox[{"x_", "/;", 
                  RowBox[{
                   RowBox[{
                   "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"potentialDots", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",",
                     "mypos"}], "]"}]}]}]}]}], "]"}], ",", "1"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"EuclideanDistance", "[", 
                RowBox[{"mypos", ",", 
                 RowBox[{
                 "potentialDot", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "]"}], ">", "dist"}], ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{
               RowBox[{"newticker", "+=", "1"}], ";", 
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
              RowBox[{
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "potentialDot", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", "mypos"}], "}"}]}], 
               ";"}]}], "]"}]}]}], "]"}], ";", "out"}], ",", 
        RowBox[{"{", 
         RowBox[{"myi", ",", "1", ",", 
          RowBox[{"Length", "@", "list2"}], ",", "1"}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"myRedundant", "=", 
      RowBox[{"RedundantTrack", "[", 
       RowBox[{"out", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"null", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempOriginalPoint", "=", 
          RowBox[{"Extract", "[", 
           RowBox[{"list1", ",", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"list1", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"myRedundant", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "myj"}], "\[RightDoubleBracket]"}]}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tempNewPoints", "=", 
          RowBox[{"out", "\[LeftDoubleBracket]", 
           RowBox[{"Flatten", "@", 
            RowBox[{"myRedundant", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "myj"}], "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tempTruePoint", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"tempNewPoints", ",", 
             RowBox[{"Flatten", "@", 
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"tempNewPoints", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"tempOriginalPoint", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
               "]"}]}]}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tempOutlierPointPosi", "=", 
          RowBox[{
           RowBox[{"Delete", "[", 
            RowBox[{
             RowBox[{"myRedundant", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "myj"}], "\[RightDoubleBracket]"}], ",", 
             "tempTruePoint"}], "]"}], "//", "Flatten"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"newticker", "+", "1"}], ",", 
           RowBox[{"newticker", "+", 
            RowBox[{"Length", "@", "tempOutlierPointPosi"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"out", "\[LeftDoubleBracket]", 
           RowBox[{"tempOutlierPointPosi", ",", "1"}], 
           "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"newticker", "+", "1"}], ",", 
            RowBox[{"newticker", "+", 
             RowBox[{"Length", "@", "tempOutlierPointPosi"}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"newticker", "=", 
          RowBox[{"newticker", "+", 
           RowBox[{"Length", "@", "tempOutlierPointPosi"}]}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"myj", ",", "1", ",", 
          RowBox[{"Length", "@", 
           RowBox[{
           "myRedundant", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newticker", ",", "out"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.678559612091728*^9, 3.678559616794997*^9}, {
   3.6785597764591293`*^9, 3.678559889284582*^9}, {3.6785600026430664`*^9, 
   3.6785600028040757`*^9}, {3.6785645606417685`*^9, 3.6785646495908566`*^9}, 
   3.6785661846406565`*^9, 3.6785662164474754`*^9, {3.6785691452029905`*^9, 
   3.6785691752347083`*^9}, {3.6786294864193106`*^9, 
   3.6786294970029163`*^9}, {3.6786295295627785`*^9, 
   3.6786295693700557`*^9}, {3.6786296000998135`*^9, 
   3.678629674828087*^9}},ExpressionUUID->"c86dec83-dd46-449a-975c-\
ed8cb61a3664"]
}, Closed]],

Cell[CellGroupData[{

Cell["LinkTracks", "Subsection",
 CellChangeTimes->{{3.6425406972561293`*^9, 3.642540699196132*^9}, {
  3.6425407307771764`*^9, 3.642540734629182*^9}, {3.6483824467792892`*^9, 
  3.648382447886891*^9}},ExpressionUUID->"6c31186f-6439-4489-b08d-\
b37d5660ed7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkTracks", "[", 
   RowBox[{"testgreenP_", ",", "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list1", ",", "list2", ",", "listResult", ",", "listResultFrame", ",", 
      "listResultTrack"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list1", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", 
           RowBox[{
           "testgreenP", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"Sort", "@", 
          RowBox[{
          "testgreenP", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "@", "list1"}], ",", "list1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"testgreenP", "\[LeftDoubleBracket]", 
       RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listResult", "=", 
      RowBox[{"FoldList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PairConnect4", "[", 
          RowBox[{"#1", ",", "#2", ",", "dist"}], "]"}], "&"}], ",", "list1", 
        ",", "list2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listResultFrame", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Insert", "[", 
         RowBox[{
          RowBox[{
          "listResult", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", "i", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "j", ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"listResult", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
              "1"}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "listResult"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"listResultTrack", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"listResultFrame", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], ",", 
        "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"listResultFrame", ",", "listResultTrack"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.642537218408235*^9, 3.642537264040299*^9}, {
   3.642537296025344*^9, 3.6425373967124853`*^9}, {3.6425375490676994`*^9, 
   3.6425375491776996`*^9}, {3.6428863768161287`*^9, 
   3.6428863815353985`*^9}, {3.642886462952055*^9, 3.642886463968113*^9}, {
   3.642939120294883*^9, 3.642939135121731*^9}, {3.64293926676126*^9, 
   3.6429392677223153`*^9}, {3.6429393414655333`*^9, 
   3.6429393421455717`*^9}, {3.6430564615444183`*^9, 
   3.6430564648156056`*^9}, {3.678556682570169*^9, 3.678556741576544*^9}, {
   3.6785567816588364`*^9, 3.6785567968567057`*^9}, {3.6785568671847286`*^9, 
   3.6785568723050213`*^9}, 3.678556966680419*^9, {3.6785646596314306`*^9, 
   3.6785646597424374`*^9}, {3.678564878566953*^9, 3.6785648786709595`*^9}, {
   3.6785659857122784`*^9, 3.678565985832285*^9}, {3.6785672838895297`*^9, 
   3.678567283976535*^9}, {3.678567339273698*^9, 3.678567339384704*^9}, {
   3.6786298277868357`*^9, 3.6786298278828416`*^9}, {3.6786455094707775`*^9, 
   3.6786455421916485`*^9}, {3.6786456047912292`*^9, 3.678645677591393*^9}, {
   3.6786458595918026`*^9, 3.6786458778638477`*^9}, {3.6786459520160894`*^9, 
   3.67864598315987*^9}, {3.6786460706318736`*^9, 3.6786460973284006`*^9}, {
   3.67864615028743*^9, 
   3.6786461816002207`*^9}},ExpressionUUID->"210ecdde-bd5a-484c-a6e5-\
dd349c6264fd"]
}, Closed]],

Cell[CellGroupData[{

Cell["LinkTracks2", "Subsection",
 CellChangeTimes->{{3.6786311154964886`*^9, 
  3.678631122754904*^9}},ExpressionUUID->"7e08c79f-f0ad-4524-a0c0-\
47b296a4da6f"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "get", " ", "rid", " ", "of", " ", "tracks", " ", "which", " ", "last", 
    " ", "only", " ", "1", " ", "or", " ", "2", " ", "frame", 
    RowBox[{"(", "s", ")"}], " ", "and", " ", "re"}], "-", 
   RowBox[{"assign", " ", "consecutive", " ", "track", " ", "numbers"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6786451804919605`*^9, 
  3.6786452852309513`*^9}},ExpressionUUID->"bea03014-025f-44f9-83c7-\
206a2b9c8f20"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkTracks2", "[", 
   RowBox[{"testgreenP_", ",", "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list1", ",", "list2", ",", "listResult", ",", "listResultFrame", ",", 
      "listResultTrack", ",", "listResultTrackL"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list1", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", 
           RowBox[{
           "testgreenP", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"Sort", "@", 
          RowBox[{
          "testgreenP", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "@", "list1"}], ",", "list1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"testgreenP", "\[LeftDoubleBracket]", 
       RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listResult", "=", 
      RowBox[{"FoldList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PairConnect4", "[", 
          RowBox[{"#1", ",", "#2", ",", "dist"}], "]"}], "&"}], ",", "list1", 
        ",", "list2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listResultFrame", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Insert", "[", 
         RowBox[{
          RowBox[{
          "listResult", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", "i", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "j", ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"listResult", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
              "1"}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "listResult"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"listResultTrack", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"listResultFrame", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], ",", 
        "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listResultTrackL", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{"listResultTrack", ",", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Length", "/@", "listResultTrack"}], ",", 
          RowBox[{"x_", "/;", 
           RowBox[{"x", ">", "2"}]}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"listResultTrackL", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "listResultTrackL"}]}]}], ";", 
     "\[IndentingNewLine]", "listResultTrackL"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.678645143510845*^9, {3.6786462319861026`*^9, 3.6786462430877376`*^9}, {
   3.678646706939268*^9, 3.678646782449587*^9}, {3.67864688984873*^9, 
   3.678646931857133*^9}, 3.6786469851691823`*^9, {3.6786471294484344`*^9, 
   3.6786471353687735`*^9}, {3.678648850050847*^9, 
   3.6786488527139997`*^9}},ExpressionUUID->"108d940e-44fa-4e0b-92a9-\
4a4df6170aba"]
}, Closed]],

Cell[CellGroupData[{

Cell["Relinking", "Subsection",
 CellChangeTimes->{{3.6429485555685496`*^9, 
  3.642948561607895*^9}},ExpressionUUID->"fc32cd9a-81c2-4b9c-b97f-\
7e36f8d5fe60"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Only", " ", "the", " ", "longest", " ", "path", " ", "will", " ", "be", 
   " ", "taken", " ", "for", " ", "the", " ", "last", " ", "frame", " ", "if",
    " ", "the", " ", "track", " ", "split", " ", "in", " ", "the", " ", 
   "middle"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6430559206934834`*^9, 3.6430559317251143`*^9}, {
  3.6431167430053205`*^9, 
  3.6431168098051414`*^9}},ExpressionUUID->"55227ad0-6f64-483f-a4ee-\
8ee464f3b45a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Relinking", "[", 
   RowBox[{
   "sortedbyframe_", ",", "sortedbytrack_", ",", "gap_", ",", "distance_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ftrackList", ",", "ltrackList", ",", "linkinglist", ",", "mytrack", ",",
       "mytrackN", ",", "myt", ",", "mypos", ",", "newrange", ",", "flag", 
      ",", "targetFrame", ",", "targetTracks", ",", "candidateTracks", ",", 
      "closestTrack", ",", "out", ",", "newlinkinglist", ",", 
      "newsortedbytrack", ",", "oldtrackN", ",", "newtrackN", ",", 
      "newsortedbyframe", ",", "oldtrackPos"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "extracting", " ", "the", " ", "begining", " ", "and", " ", "the", " ", 
      "ending", " ", "of", " ", "all", " ", "tracks"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ftrackList", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"First", "/@", 
          RowBox[{
          "sortedbytrack", "\[LeftDoubleBracket]", "All", 
           "\[RightDoubleBracket]"}]}], ")"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ftrackList", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"ftrackList", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{"x", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "\[LessEqual]",
           "2"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ltrackList", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Last", "/@", 
         RowBox[{
         "sortedbytrack", "\[LeftDoubleBracket]", "All", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "relinking", " ", "tracks", " ", "and", " ", "making", " ", "a", " ", 
       "list"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"linkinglist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytrack", "=", 
         RowBox[{
         "ftrackList", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mytrackN", "=", 
         RowBox[{
         "mytrack", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"myt", "=", 
         RowBox[{"mytrack", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mypos", "=", 
         RowBox[{"mytrack", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", 
           RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newrange", "=", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"myt", "-", "gap", "-", "1"}], ",", 
            RowBox[{"myt", "-", "2"}], ",", "1"}], "]"}], "//", "Reverse"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"targetFrame", "=", 
            RowBox[{
            "newrange", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"flag", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"targetTracks", "=", 
               RowBox[{"Extract", "[", 
                RowBox[{"ltrackList", ",", 
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{"ltrackList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", "targetFrame"}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"candidateTracks", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"targetTracks", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EuclideanDistance", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], 
                    ",", "mypos"}], "]"}], "<", "distance"}], "&"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "candidateTracks", "]"}], ">", "0"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "candidateTracks", "]"}], 
                   "\[Equal]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"out", "=", 
                    RowBox[{"{", 
                    RowBox[{"mytrackN", ",", 
                    RowBox[{"candidateTracks", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "}"}]}], ";", 
                   RowBox[{
                    RowBox[{"ltrackList", "\[LeftDoubleBracket]", 
                    RowBox[{"mytrackN", ",", "1"}], "\[RightDoubleBracket]"}],
                     "=", 
                    RowBox[{"candidateTracks", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                   RowBox[{"flag", "=", "1"}], ";"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"closestTrack", "=", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"candidateTracks", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"#", ",", "mypos"}], "]"}], "&"}], "/@", 
                    RowBox[{"candidateTracks", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2", ",", 
                    RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}]}]}],
                     ",", 
                    RowBox[{"Min", "[", "x", "]"}]}], "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"out", "=", 
                    RowBox[{"{", 
                    RowBox[{"mytrackN", ",", 
                    RowBox[{"closestTrack", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "}"}]}], ";", 
                   RowBox[{
                    RowBox[{"ltrackList", "\[LeftDoubleBracket]", 
                    RowBox[{"mytrackN", ",", "1"}], "\[RightDoubleBracket]"}],
                     "=", 
                    RowBox[{"closestTrack", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                   RowBox[{"flag", "=", "1"}], ";"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"out", "=", 
                  RowBox[{"{", "}"}]}], ";", 
                 RowBox[{"flag", "=", "0"}]}]}], "]"}]}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "newrange", "]"}], ",", "1"}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"linkinglist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"linkinglist", ",", "out"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ftrackList", "]"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "convert", " ", "old", " ", "track", " ", "numbers", " ", "to", " ", 
       "new", " ", "track", " ", "numbers", " ", "in", " ", 
       "\"\<sortedbytrack\>\"", " ", "and", " ", "\"\<sortedbyframe\>\""}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newlinkinglist", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"linkinglist", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newsortedbytrack", "=", "sortedbytrack"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newsortedbyframe", "=", "sortedbyframe"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"oldtrackN", "=", 
         RowBox[{"newlinkinglist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newtrackN", "=", 
         RowBox[{"newlinkinglist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newsortedbytrack", "\[LeftDoubleBracket]", 
          RowBox[{"oldtrackN", ",", "All", ",", "1"}], 
          "\[RightDoubleBracket]"}], "=", "newtrackN"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oldtrackPos", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"newsortedbyframe", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2", ",", "All", ",", "1"}], 
                "\[RightDoubleBracket]"}], ",", "oldtrackN"}], "]"}], "//", 
             "Flatten"}], "//", 
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"#", ",", "4"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newsortedbyframe", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"newsortedbyframe", ",", 
           RowBox[{"oldtrackPos", " ", "\[Rule]", " ", "newtrackN"}]}], 
          "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "newlinkinglist", "]"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"newsortedbytrack", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"newsortedbytrack", "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
       RowBox[{
        RowBox[{"SplitBy", "[", 
         RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "newsortedbyframe", ",", "newsortedbytrack", ",", "newlinkinglist"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.643045022540145*^9, 3.643045216993267*^9}, {
   3.6430452488580894`*^9, 3.643045276385664*^9}, {3.6430453376271667`*^9, 
   3.6430453986246557`*^9}, {3.6430569720696187`*^9, 
   3.6430570220844793`*^9}, {3.64305706195576*^9, 3.6430571061472874`*^9}, {
   3.6430573628279686`*^9, 3.6430573771327868`*^9}, {3.643057427907691*^9, 
   3.6430574393803473`*^9}, {3.6431331820155783`*^9, 
   3.6431332581189313`*^9}, {3.643136544192884*^9, 3.643136634932074*^9}, 
   3.6431370498418055`*^9, {3.643137451493778*^9, 3.6431374541959333`*^9}, {
   3.643137698250892*^9, 3.6431377016580873`*^9}, {3.643138000046154*^9, 
   3.6431380084446344`*^9}, {3.643138079340689*^9, 3.6431380961476507`*^9}, {
   3.6431381850367346`*^9, 3.643138198147485*^9}, {3.643139144227597*^9, 
   3.6431393006865463`*^9}, {3.6431398221283712`*^9, 
   3.6431398241664877`*^9}, {3.6431407049758673`*^9, 
   3.6431407055348988`*^9}, {3.643471534892849*^9, 3.643471536684952*^9}, {
   3.643471617238559*^9, 3.6434716488853693`*^9}, {3.6434717183183403`*^9, 
   3.6434717592526817`*^9}, 
   3.649472570771883*^9},ExpressionUUID->"5a6a82e1-747e-4124-9620-\
e2ae0544bff1"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sortedbyframe", ",", "sortedbytrack"}], "}"}], "=", 
    RowBox[{"LinkTracks", "[", 
     RowBox[{"testgreenP", ",", "1"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.643140617018836*^9, 3.6431406198890004`*^9}, {
  3.648304096465707*^9, 
  3.6483040988408427`*^9}},ExpressionUUID->"02381558-17b7-41f0-9a6c-\
367595350ec5"]
}, Closed]],

Cell[CellGroupData[{

Cell["ParticleFitting", "Subsection",
 CellChangeTimes->{{3.6515211610224323`*^9, 
  3.651521163990602*^9}},ExpressionUUID->"1d154053-3314-4c35-885f-\
b5e9e82543ab"],

Cell["\<\
When raw images are used for fitting, avgFrameN_ is used to shift frames such \
that the middle frame of running average is used for fitting.
For example when avgFrameN is 3, the centroid at the first time point in \
mylongtrack is determined from the average image of frame 1, 2 and 3. So \
frame 2 should be fitted with this initial guess.
When running averaged images are used for fitting, enter \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] at the last input instead of \
avgFrameN.\
\>", "Text",
 CellChangeTimes->{{3.6557286003930864`*^9, 
  3.655728889600628*^9}},ExpressionUUID->"bca9aaac-2123-45b6-a7a0-\
46c70793f2c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFittingSee", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtrack_", ",", "pad_", ",", 
    "myTrimSize_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempTime", ",", "tempCenter", ",", "frameShift"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tempTime", "=", 
        RowBox[{"mylongtrack", "\[LeftDoubleBracket]", 
         RowBox[{"t", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tempCenter", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"mylongtrack", "\[LeftDoubleBracket]", 
          RowBox[{"t", ",", "2", ",", 
           RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"frameShift", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ImageTrim", "[", 
        RowBox[{
         RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
          RowBox[{"channel", ",", 
           RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tempCenter", "-", "pad"}], ",", 
           RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}], "]"}]}],
       "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", 
        RowBox[{"Length", "[", "mylongtrack", "]"}], ",", "1"}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
  3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
  3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
  3.655581282500985*^9, 3.6555813891080823`*^9}, {3.6555814330835977`*^9, 
  3.65558148994785*^9}, {3.655581570579462*^9, 3.655581605779475*^9}, {
  3.655581714731707*^9, 3.6555817416352463`*^9}, {3.6556456138785295`*^9, 
  3.6556456600301685`*^9}, {3.655645691237954*^9, 3.6556457099260225`*^9}, {
  3.655646442718936*^9, 3.6556464690944448`*^9}, {3.6556603618410645`*^9, 
  3.655660361961071*^9}, {3.6557217222026763`*^9, 3.6557218284757547`*^9}, {
  3.6557218930834503`*^9, 
  3.6557219581311707`*^9}},ExpressionUUID->"d6c02d79-a4cb-43f8-8e60-\
5aa6b3e9ff7c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFitting", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtracks_", ",", "pad_", ",", 
    "myTrimSize_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myAllParametersEach", ",", "myTrimImgs", ",", "myOrigins", ",", 
      "tempTime", ",", "tempCenter", ",", "frameShift", ",", "myImgs", ",", 
      "myData", ",", "myFits", ",", "tempData3D", ",", "myFit", ",", "myPos", 
      ",", "myPosImgCoordn", ",", "myAbsPos", ",", "myIntBGSigma", ",", 
      "myPos90Conf", ",", "myPos90ConfImgCoordn", ",", "myAbsPos90Conf", ",", 
      "myIntBGSigma90Conf", ",", "myFitData", ",", "CC", ",", "A", ",", "x0", 
      ",", "a", ",", "y0", ",", "b", ",", "x", ",", "y"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myAllParametersEach", ",", "myPos", ",", "myFitData"}], "}"}],
       "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tempTime", "=", 
                RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "t", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tempCenter", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "t", ",", "2", ",", 
                   RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"frameShift", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"myImgs", "=", 
                  RowBox[{"ImageTrim", "[", 
                   RowBox[{
                    RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                    RowBox[{"channel", ",", 
                    RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tempCenter", "-", "pad"}], ",", 
                    RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"myOrigins", "=", 
                  RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "mylongtracks", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], 
             "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myData", "=", 
           RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myFits", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"tempData3D", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "#1"}], "}"}], "&"}], ",", 
                   RowBox[{
                   "myData", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Clear", "[", 
               RowBox[{
               "CC", ",", "A", ",", "x0", ",", "a", ",", "y0", ",", "b", ",", 
                "x", ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myFit", "=", 
               RowBox[{"NonlinearModelFit", "[", 
                RowBox[{"tempData3D", ",", 
                 RowBox[{"CC", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"CC", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"A", ",", 
                    RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                    ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"myFit", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
                 "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Rearrange", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"myPos", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPosImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myAbsPos", "=", 
           RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBGSigma", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "5", ",", "7"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90ConfImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myAbsPos90Conf", "=", 
           RowBox[{"myPos90ConfImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBGSigma90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "4", ",", "6"}], "}"}]}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Output", " ", "the", " ", "paramters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myAllParametersEach", "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "2", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", "myAbsPos", ",", 
                 "myIntBGSigma", ",", "myAbsPos90Conf", ",", 
                 "myIntBGSigma90Conf", ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "3"}], 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}]}], ",", "myPos", ",",
             "myData"}], "}"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "mylongtracks", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myAllParametersEach", "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", "myPos", ",", 
       "myFitData"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
   3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
   3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
   3.655581282500985*^9, 3.6555813891080823`*^9}, {3.65565276167636*^9, 
   3.655652802204678*^9}, {3.655660380715144*^9, 3.6556603808751535`*^9}, {
   3.655721972211976*^9, 3.655721995987336*^9}, {3.655834242142449*^9, 
   3.655834341613138*^9}, {3.6561793737004633`*^9, 3.656179378164719*^9}, 
   3.6838989198137875`*^9},ExpressionUUID->"274c7f76-3f9b-4de1-a0a6-\
04085d9b9973"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFittingFixedSigma", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtracks_", ",", "pad_", ",", 
    "myTrimSize_", ",", "sigma_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myAllParametersEach", ",", "myTrimImgs", ",", "myOrigins", ",", 
      "tempTime", ",", "tempCenter", ",", "frameShift", ",", "myImgs", ",", 
      "myData", ",", "myFits", ",", "tempData3D", ",", "myFit", ",", "myPos", 
      ",", "myPosImgCoordn", ",", "myAbsPos", ",", "myIntBG", ",", 
      "myPos90Conf", ",", "myPos90ConfImgCoordn", ",", "myAbsPos90Conf", ",", 
      "myIntBG90Conf", ",", "myFitData", ",", "CC", ",", "A", ",", "x0", ",", 
      "y0", ",", "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myAllParametersEach", ",", "myPos", ",", "myFitData"}], "}"}],
       "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tempTime", "=", 
                RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "t", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tempCenter", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "t", ",", "2", ",", 
                   RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"frameShift", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"myImgs", "=", 
                  RowBox[{"ImageTrim", "[", 
                   RowBox[{
                    RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                    RowBox[{"channel", ",", 
                    RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tempCenter", "-", "pad"}], ",", 
                    RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"myOrigins", "=", 
                  RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "mylongtracks", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], 
             "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myData", "=", 
           RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myFits", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"tempData3D", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "#1"}], "}"}], "&"}], ",", 
                   RowBox[{
                   "myData", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Clear", "[", 
               RowBox[{
               "CC", ",", "A", ",", "x0", ",", "y0", ",", "x", ",", "y"}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myFit", "=", 
               RowBox[{"NonlinearModelFit", "[", 
                RowBox[{"tempData3D", ",", 
                 RowBox[{"CC", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"CC", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"A", ",", 
                    RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                    ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"myFit", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
                 "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Rearrange", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"myPos", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPosImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myAbsPos", "=", 
           RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90ConfImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myAbsPos90Conf", "=", 
           RowBox[{"myPos90ConfImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Output", " ", "the", " ", "paramters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myAllParametersEach", "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "2", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", "myAbsPos", ",", "myIntBG", 
                 ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"sigma", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "2"}], 
                    "}"}]}], "]"}], ",", "myAbsPos90Conf", ",", 
                 "myIntBG90Conf", ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "4"}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "3"}], 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}]}], ",", "myPos", ",",
             "myData"}], "}"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "mylongtracks", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myAllParametersEach", "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", "myPos", ",", 
       "myFitData"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
   3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
   3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
   3.655581282500985*^9, 3.6555813891080823`*^9}, {3.65565276167636*^9, 
   3.655652802204678*^9}, {3.655660380715144*^9, 3.6556603808751535`*^9}, {
   3.655721972211976*^9, 3.655721995987336*^9}, {3.6558217347800684`*^9, 
   3.655821738523283*^9}, {3.655821772268213*^9, 3.6558218199079375`*^9}, {
   3.6558220477879715`*^9, 3.655822098179854*^9}, {3.655822176491333*^9, 
   3.6558222037238903`*^9}, {3.6558251922148223`*^9, 
   3.6558251961030445`*^9}, {3.6558252647589717`*^9, 
   3.6558252785097585`*^9}, {3.655825327463558*^9, 3.65582555844777*^9}, {
   3.6558273393006287`*^9, 3.6558273978079753`*^9}, {3.655834316381695*^9, 
   3.655834318069792*^9}, {3.6558443721728535`*^9, 3.6558444445739946`*^9}, {
   3.655844977494476*^9, 3.6558449788855553`*^9}, {3.6558453738731475`*^9, 
   3.655845391423151*^9}, {3.663965324194535*^9, 3.663965335002153*^9}, 
   3.663965615067172*^9, {3.6838988788284435`*^9, 
   3.68389888575784*^9}},ExpressionUUID->"97a56191-40dd-46a0-b8b9-\
b781748def7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFittingFixedSigmaInclinedBG", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtracks_", ",", "pad_", ",", 
    "myTrimSize_", ",", "sigma_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myAllParametersEach", ",", "myTrimImgs", ",", "myOrigins", ",", 
      "tempTime", ",", "tempCenter", ",", "frameShift", ",", "myImgs", ",", 
      "myData", ",", "myFits", ",", "tempData3D", ",", "myFit", ",", "myPos", 
      ",", "myPosImgCoordn", ",", "myAbsPos", ",", "myIntBG", ",", 
      "myInclinedBG", ",", "myPos90Conf", ",", "myPos90ConfImgCoordn", ",", 
      "myAbsPos90Conf", ",", "myIntBG90Conf", ",", "myInclinedBG90conf", ",", 
      "myFitData", ",", "CC", ",", "BGa", ",", "BGb", ",", "A", ",", "x0", 
      ",", "y0", ",", "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myAllParametersEach", ",", "myPos", ",", "myFitData"}], "}"}],
       "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tempTime", "=", 
                RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "t", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tempCenter", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "t", ",", "2", ",", 
                   RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"frameShift", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"myImgs", "=", 
                  RowBox[{"ImageTrim", "[", 
                   RowBox[{
                    RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                    RowBox[{"channel", ",", 
                    RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tempCenter", "-", "pad"}], ",", 
                    RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"myOrigins", "=", 
                  RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "mylongtracks", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], 
             "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myData", "=", 
           RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myFits", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"tempData3D", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "#1"}], "}"}], "&"}], ",", 
                   RowBox[{
                   "myData", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Clear", "[", 
               RowBox[{
               "CC", ",", "BGa", ",", "BGb", ",", "A", ",", "x0", ",", "y0", 
                ",", "x", ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myFit", "=", 
               RowBox[{"NonlinearModelFit", "[", 
                RowBox[{"tempData3D", ",", 
                 RowBox[{"CC", " ", "+", " ", 
                  RowBox[{"BGa", " ", "x"}], " ", "+", " ", 
                  RowBox[{"BGb", " ", "y"}], "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"CC", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"A", ",", 
                    RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                    ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"BGa", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"BGb", ",", "0.01"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"myFit", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
                 "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Rearrange", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"myPos", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPosImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myAbsPos", "=", 
           RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myInclinedBG", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "7"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90ConfImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myAbsPos90Conf", "=", 
           RowBox[{"myPos90ConfImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myInclinedBG90conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Output", " ", "the", " ", "paramters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myAllParametersEach", "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "2", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", "myAbsPos", ",", "myIntBG", 
                 ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"sigma", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "2"}], 
                    "}"}]}], "]"}], ",", "myAbsPos90Conf", ",", 
                 "myIntBG90Conf", ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "4"}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "3"}], 
                  "\[RightDoubleBracket]"}], ",", "myInclinedBG", ",", 
                 "myInclinedBG90conf"}], "}"}]}]}]}], ",", "myPos", ",", 
            "myData"}], "}"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "mylongtracks", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myAllParametersEach", "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", "myPos", ",", 
       "myFitData"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
   3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
   3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
   3.655581282500985*^9, 3.6555813891080823`*^9}, {3.65565276167636*^9, 
   3.655652802204678*^9}, {3.655660380715144*^9, 3.6556603808751535`*^9}, {
   3.655721972211976*^9, 3.655721995987336*^9}, {3.6558217347800684`*^9, 
   3.655821738523283*^9}, {3.655821772268213*^9, 3.6558218199079375`*^9}, {
   3.6558220477879715`*^9, 3.655822098179854*^9}, {3.655822176491333*^9, 
   3.6558222037238903`*^9}, {3.6558251922148223`*^9, 
   3.6558251961030445`*^9}, {3.6558252647589717`*^9, 
   3.6558252785097585`*^9}, {3.655825327463558*^9, 3.65582555844777*^9}, {
   3.6558273393006287`*^9, 3.6558273978079753`*^9}, {3.655834316381695*^9, 
   3.655834318069792*^9}, {3.6558443721728535`*^9, 3.6558444445739946`*^9}, {
   3.655844977494476*^9, 3.6558449788855553`*^9}, {3.6558453738731475`*^9, 
   3.655845391423151*^9}, {3.663965485538763*^9, 3.6639655359626474`*^9}, 
   3.6639656173703036`*^9, {3.6639657258505087`*^9, 3.663965767234875*^9}, {
   3.6639658125564675`*^9, 3.6639658154426327`*^9}, {3.6639660619637327`*^9, 
   3.6639661631625214`*^9}, {3.663966219218727*^9, 3.6639662361706967`*^9}, {
   3.6639663351493583`*^9, 3.663966338347541*^9}, 
   3.68389895482279*^9},ExpressionUUID->"20c0c442-373c-45ac-8e7e-\
b608e7aec81e"]
}, Closed]],

Cell[CellGroupData[{

Cell["BeadsFitting", "Subsection",
 CellChangeTimes->{{3.651523106216691*^9, 
  3.6515231119520187`*^9}},ExpressionUUID->"7af4ee72-494c-45c1-ba14-\
b56f8a4c1509"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsFitting", "[", 
   RowBox[{"myRefBeadsImg_", ",", "myPosGuess_", ",", "pad_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myTrimSize", ",", "myTrimImgs", ",", "myOrigins", ",", "tempCenter", 
      ",", "myImgs", ",", "myData", ",", "myFits", ",", "tempData3D", ",", 
      "myFit", ",", "CC", ",", "A", ",", "x", ",", "x0", ",", "a", ",", "y", 
      ",", "y0", ",", "b", ",", "myPos", ",", "myPosImgCoordn", ",", 
      "myAbsPos"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimSize", "=", 
      RowBox[{
       RowBox[{"2", "*", "pad"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tempCenter", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
            "myPosGuess", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myImgs", "=", 
             RowBox[{"ImageTrim", "[", 
              RowBox[{"myRefBeadsImg", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenter", "-", "pad"}], ",", 
                 RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"myOrigins", "=", 
             RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "myPosGuess", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myData", "=", 
      RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myFits", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempData3D", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  ",", 
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                  ",", "#1"}], "}"}], "&"}], ",", 
              RowBox[{
              "myData", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Clear", "[", 
          RowBox[{
          "CC", ",", "A", ",", "x0", ",", "a", ",", "y0", ",", "b", ",", "x", 
           ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"myFit", "=", 
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{"tempData3D", ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", 
                RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                  ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", 
                RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"myFit", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
            "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myPos", "=", 
      RowBox[{"myFits", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "6"}], "}"}], ",", "2"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myPosImgCoordn", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"myPos", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", "0.5"}],
          ",", 
         RowBox[{"myTrimSize", "-", 
          RowBox[{"myPos", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
          "0.5"}]}], "}"}], "//", "Thread"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myAbsPos", "=", 
      RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6483906843449163`*^9, 3.6483906948281345`*^9}, {
  3.6483907313009987`*^9, 3.64839074897783*^9}, {3.648390922446535*^9, 
  3.648391064072584*^9}, {3.6483911220930867`*^9, 3.648391274564155*^9}, {
  3.6483913389338684`*^9, 3.648391349604287*^9}, {3.648391401635379*^9, 
  3.6483914032577815`*^9}},ExpressionUUID->"4ed19f10-5e0c-400c-be4d-\
a6180a6d50ff"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsSorting", "[", 
   RowBox[{"myRedAbsPos_", ",", "myGreenAbsPos_", ",", "dist_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myRedAbsPosSort", ",", "distanceOriginal", ",", "idx", ",", 
      "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myRedAbsPosSort", "=", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"myRedAbsPos", ",", "myGreenAbsPos"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distanceOriginal", "=", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"Thread", "@", 
        RowBox[{"{", 
         RowBox[{"myGreenAbsPos", ",", "myRedAbsPosSort"}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idx", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"distanceOriginal", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{"x", ">", "dist"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
       "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "idx"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "myRedAbsPosSort", ",", "myGreenAbsPos", ",", "distanceOriginal"}], 
        "}"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6483909446005745`*^9, 3.648390951901387*^9}, {
  3.6483915027763567`*^9, 3.648391714274162*^9}, {3.6515238560495787`*^9, 
  3.6515239184811497`*^9}},ExpressionUUID->"44982f9b-1b8d-45ba-9e31-\
ab49eef25c4e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsTransform", "[", 
   RowBox[{"myRedAbsPos_", ",", "myGreenAbsPos_", ",", "dist_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw", ",", 
      "myTfFuncError", ",", "myTfFunc", ",", "myRedCorrPos", ",", 
      "distanceCorrected"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
       "}"}], "=", 
      RowBox[{"BeadsSorting", "[", 
       RowBox[{"myRedAbsPos", ",", "myGreenAbsPos", ",", "dist"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myTfFuncError", ",", "myTfFunc"}], "}"}], "=", 
      RowBox[{"FindGeometricTransform", "[", 
       RowBox[{"myGreenAbsPos4Calc", ",", "myRedAbsPos4Calc"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myRedCorrPos", "=", 
      RowBox[{"myTfFunc", "[", "myRedAbsPos4Calc", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distanceCorrected", "=", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"Thread", "@", 
        RowBox[{"{", 
         RowBox[{"myGreenAbsPos4Calc", ",", "myRedCorrPos"}], "}"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "myTfFuncError", ",", "myTfFunc", ",", "distanceRaw", ",", 
       "distanceCorrected"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.648392120969268*^9, 3.648392151951922*^9}, {
  3.6483921960239997`*^9, 3.6483921962424*^9}, {3.6484004568741035`*^9, 
  3.648400590161727*^9}, {3.648400991802699*^9, 3.6484010666779823`*^9}, {
  3.651523934337057*^9, 
  3.6515240057701426`*^9}},ExpressionUUID->"d581b615-8ee9-4476-8e54-\
44a53bd6d777"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsCheck", "[", 
   RowBox[{"myRedAbsPos_", ",", "myGreenAbsPos_", ",", "dist_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw", ",", 
      "myRedCorrPos", ",", "distanceCorrected"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
       "}"}], "=", 
      RowBox[{"BeadsSorting", "[", 
       RowBox[{"myRedAbsPos", ",", "myGreenAbsPos", ",", "dist"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myRedCorrPos", "=", 
      RowBox[{"myTfFunc", "[", "myRedAbsPos4Calc", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distanceCorrected", "=", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"Thread", "@", 
        RowBox[{"{", 
         RowBox[{"myGreenAbsPos4Calc", ",", "myRedCorrPos"}], "}"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Insert", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"distanceRaw", ",", "distanceCorrected"}], "}"}], "//", 
         "Transpose"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Distance Before Correction\>\"", ",", 
          "\"\<Distance After Correction\>\""}], "}"}], ",", "1"}], "]"}], "//",
       "TableForm"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6484012753809195`*^9, 3.648401405682372*^9}, 
   3.6515236689298763`*^9, 3.6515237173296447`*^9, {3.651524011241455*^9, 
   3.6515240637694597`*^9}},ExpressionUUID->"e6631662-8c9a-402f-ace5-\
54cf55e5cc0a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
FindOverlapDistance[track1,track2,\[Tau]] (measures average distance between \
two tracks when they overlap in time for at least time \[Tau], otherwise \
outputs -1)\
\>", "Subsection",
 CellChangeTimes->{{3.6792547892990313`*^9, 3.6792548292263145`*^9}, {
  3.6792560996119766`*^9, 3.6792561534200544`*^9}, {3.679256196156499*^9, 
  3.679256207268134*^9}},ExpressionUUID->"0324cca3-7e73-4d2a-9f07-\
c96e3f788d23"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOverlapDist", "[", 
   RowBox[{"track1_", ",", "track2_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t1", ",", "t2", ",", "ol", ",", "avgpos1", ",", "avgpos2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"makes", " ", "tracks", " ", "have", " ", 
       RowBox[{"form", ":", " ", "t1"}]}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"track", "#"}], ",", "time1", ",", "x1", ",", "y1"}], "}"}],
         ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"track", "#"}], ",", "time2", ",", "x2", ",", "y2"}], 
          "}"}], " ", "..."}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t1", "=", 
      RowBox[{
       RowBox[{"track1", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "7"}], "]"}], "&"}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"track2", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "7"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "The", " ", "following", " ", "just", " ", "sorts", " ", "by", " ", 
        "time", " ", "rather", " ", "than", " ", "track", " ", "#", " ", 
        "and", " ", 
        RowBox[{"splits", ".", " ", "If"}], " ", "the", " ", "two", " ", 
        "tracks", " ", "have", " ", "overlapping", " ", "time"}], ",", " ", 
       RowBox[{
       "then", " ", "the", " ", "split", " ", "will", " ", "contain", " ", 
        "2", " ", 
        RowBox[{"elements", ".", " ", "Thus"}]}], ",", " ", 
       RowBox[{
       "DeleteCases", " ", "eliminates", " ", "all", " ", "parts", " ", "of", 
        " ", "the", " ", "track", " ", "that", " ", "do", " ", "not", " ", 
        RowBox[{"overlap", ".", " ", "Finally"}]}], ",", " ", 
       RowBox[{
       "the", " ", "Transpose", " ", "command", " ", "gives", " ", "back", 
        " ", "a", " ", "list", " ", "of", " ", "overlapping", " ", "segments",
         " ", "of", " ", 
        RowBox[{"tracks", ":", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"segment", " ", "from", " ", "t1"}], ",", " ", 
            RowBox[{"segment", " ", "from", " ", "t2"}]}], "}"}], " ", "so", 
          " ", "the", " ", "mean", " ", "can", " ", "be", " ", "computed", 
          " ", "for", " ", 
          RowBox[{"each", "."}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ol", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"t1", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{
               "2", ",", "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                "7"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"t2", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{
               "2", ",", "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                "7"}], "}"}]}], "\[RightDoubleBracket]"}]}], "}"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
        RowBox[{
         RowBox[{"SplitBy", "[", 
          RowBox[{"#", ",", "First"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"Length", "[", "x", "]"}], "<", "2"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "ol", "]"}], ">", "\[Tau]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"avgpos1", ",", "avgpos2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Mean", "/@", 
            RowBox[{"(", 
             RowBox[{"Transpose", "[", "ol", "]"}], ")"}]}], ")"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{"avgpos1", ",", "avgpos2"}], "]"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6786456735071197`*^9, 3.67864569624042*^9}, {
   3.678649737790583*^9, 3.678649747421134*^9}, {3.678649849596978*^9, 
   3.6786498560923495`*^9}, 3.678649893780505*^9, {3.678651646039729*^9, 
   3.678651754831951*^9}, {3.6786518947939568`*^9, 3.678651906719639*^9}, {
   3.678654891133279*^9, 3.678655133120904*^9}, {3.678655265255536*^9, 
   3.678655271542347*^9}, {3.678655312398819*^9, 3.678655481487516*^9}, {
   3.6786590429146595`*^9, 3.678659058140286*^9}, 3.678659148324044*^9, {
   3.678659360531217*^9, 3.678659413025309*^9}, {3.6786594573761873`*^9, 
   3.6786595006038632`*^9}, {3.678661648900236*^9, 3.6786616602726564`*^9}, {
   3.6786617455580063`*^9, 3.678661846568184*^9}, {3.678908725814332*^9, 
   3.678908744530402*^9}, {3.6792561705500345`*^9, 
   3.679256182637726*^9}},ExpressionUUID->"204407ee-2493-444b-93d6-\
5d47f6322a14"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ColorLinker[gbtrackpairs, greentracklist, blueflag] \[Rule] bluetracklist \
connected to greentracklist\
\>", "Subsection",
 CellChangeTimes->{{3.6806246269012165`*^9, 3.680624764997115*^9}, {
  3.6806247965259185`*^9, 
  3.680624857013378*^9}},ExpressionUUID->"3f6f0af3-63b7-4bf3-b020-\
ddcf46ccbd0e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"This", " ", "returns", " ", "all", " ", "green", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"or", " ", "blue"}], ",", " ", 
      RowBox[{
       RowBox[{"specified", " ", "by", " ", "colorN"}], " ", "=", " ", 
       RowBox[{
       "1", " ", "for", " ", "green", " ", "and", " ", "2", " ", "for", " ", 
        "blue"}]}]}], ")"}], " ", "elements", " ", "of", " ", "gbpairs", " ", 
    "whose", " ", "blue", " ", 
    RowBox[{"(", 
     RowBox[{"or", " ", "green"}], ")"}], " ", "element", " ", "is", " ", "a",
     " ", "member", " ", "of", " ", "colorList"}], "  ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ColorLinker", "[", 
    RowBox[{"pairs_", ",", "colorList_", ",", "colorN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"pairs", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"colorList", ",", 
            RowBox[{"x", "\[LeftDoubleBracket]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"colorN", "\[Equal]", "1"}], ",", "2", ",", "1"}], 
              "]"}], "\[RightDoubleBracket]"}]}], "]"}]}]}], "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "colorN"}], "\[RightDoubleBracket]"}], "//", 
      "Union"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6805740062990694`*^9, 3.6805740406204433`*^9}, {
   3.6805741188562174`*^9, 3.6805741787253094`*^9}, {3.6805742783761835`*^9, 
   3.6805744551618032`*^9}, {3.680574568875996*^9, 3.6805745770167227`*^9}, {
   3.6805746087046037`*^9, 3.680574638548729*^9}, {3.6805746814887447`*^9, 
   3.680574736205081*^9}, {3.6805747827626133`*^9, 3.6805747852001743`*^9}, {
   3.6805752554891725`*^9, 3.6805752772550993`*^9}, {3.680575586323535*^9, 
   3.680575588370466*^9}, {3.6805756485840797`*^9, 3.6805756489434566`*^9}, {
   3.6805757700250216`*^9, 3.6805757790564346`*^9}, {3.680577674705389*^9, 
   3.6805778461890535`*^9}, {3.6805780041356936`*^9, 3.680578086949133*^9}, 
   3.680580011546554*^9, {3.680582146697378*^9, 3.680582190295504*^9}, {
   3.680582634441224*^9, 3.680582676237847*^9}, {3.680611589887657*^9, 
   3.680611591153296*^9}, {3.6806117919141035`*^9, 3.680611804492385*^9}, {
   3.6806144134000797`*^9, 
   3.6806144195720625`*^9}},ExpressionUUID->"b9bfcdd0-1767-4cf9-ac8c-\
c4c480acb09c"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
CrossPairFinder[gbtrackpairs] \[Rule] list of green tracks gi connected to \
list of blue tracks bi : {{g1,b1}, {g2, b2}, ...}\
\>", "Subsection",
 CellChangeTimes->{{3.6805823863330293`*^9, 3.6805823912862163`*^9}, 
   3.680624601365756*^9, {3.68062478274113*^9, 3.6806247899335413`*^9}, {
   3.6806248648218246`*^9, 3.6806249434613223`*^9}, 
   3.6806252236703496`*^9},ExpressionUUID->"483f2053-b61e-4863-ae46-\
fdebf03e20ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrossPairFinder", "[", "myGBpairs_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b1", ",", "g1", ",", "seed", ",", 
      RowBox[{"myFlag", "=", "0"}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"seed", "=", 
         RowBox[{"{", 
          RowBox[{"myGBpairs", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "}"}]}], ";", 
        " ", 
        RowBox[{"(*", 
         RowBox[{
         "seed", " ", "with", " ", "ith", " ", "green", " ", "element", " ", 
          "from", " ", "pair", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"myFlag", "\[Equal]", "0"}], " ", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"b1", "=", 
            RowBox[{
             RowBox[{"ColorLinker", "[", 
              RowBox[{"myGBpairs", ",", "seed", ",", "2"}], "]"}], "//", 
             "Union"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
            "bluelist", " ", "b1", " ", "connected", " ", "to", " ", 
             "greenlist", " ", "seed"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"g1", "=", 
            RowBox[{
             RowBox[{"ColorLinker", "[", 
              RowBox[{"myGBpairs", ",", "b1", ",", "1"}], "]"}], "//", 
             "Union"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
            "greenlist", " ", "g1", " ", "connected", " ", "to", " ", 
             "bluelist", " ", "b1"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"g1", "\[Equal]", "seed"}], ",", 
             RowBox[{"myFlag", "=", "1"}], ",", " ", 
             RowBox[{"seed", "=", "g1"}]}], "]"}]}]}], " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{
            "exit", " ", "if", " ", "greenlist", " ", "g1", " ", "is", " ", 
             "the", " ", "same", " ", "as", " ", "seed"}], ";", " ", 
            RowBox[{"if", " ", "not"}]}], ",", " ", 
           RowBox[{"g1", " ", "becomes", " ", "new", " ", "seed"}]}], "*)"}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"myFlag", "=", "0"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "repeat", " ", "loop", " ", "for", " ", "all", " ", "possible", " ", 
          "green", " ", "seeds"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"g1", ",", "b1"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "myGBpairs", "]"}], ",", "1"}], "}"}]}], 
      "]"}], "//", "Union"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6805804083588796`*^9, 3.680580496547429*^9}, {
   3.6805806479556093`*^9, 3.6805806957530966`*^9}, {3.6805808476007257`*^9, 
   3.680580847819522*^9}, {3.680580927929554*^9, 3.6805809299138975`*^9}, {
   3.6805822183190556`*^9, 3.6805823167853155`*^9}, {3.680582445147624*^9, 
   3.680582489650468*^9}, 3.6805825196701097`*^9, {3.6805826935160985`*^9, 
   3.6805827655538387`*^9}, {3.68061140063095*^9, 3.680611502910879*^9}, {
   3.6806115504808807`*^9, 3.680611563652952*^9}, {3.680611606508988*^9, 
   3.68061164941532*^9}, {3.680611719298317*^9, 3.680611763017613*^9}, {
   3.6806118326217384`*^9, 3.680611837434298*^9}, {3.6806118732598915`*^9, 
   3.6806119010954266`*^9}, {3.680612028677389*^9, 3.6806120313336725`*^9}, {
   3.680612125630992*^9, 3.6806121606332965`*^9}, {3.680612400194989*^9, 
   3.680612531452464*^9}, {3.680612562975997*^9, 3.680612651693954*^9}, {
   3.680612698670108*^9, 3.680612704732683*^9}, {3.680612737749642*^9, 
   3.6806127839376864`*^9}, {3.6806128376774015`*^9, 3.68061283875551*^9}, {
   3.6806129034791393`*^9, 3.680612931182576*^9}, {3.680612991955402*^9, 
   3.6806130150338707`*^9}, {3.680613258192689*^9, 3.680613259848961*^9}, {
   3.680613998596075*^9, 3.680614023940117*^9}, {3.680614216257804*^9, 
   3.6806142169140077`*^9}, {3.6806144254002414`*^9, 
   3.6806144270565624`*^9}, {3.680623480818158*^9, 3.6806235013184032`*^9}, 
   3.680624604283923*^9},ExpressionUUID->"90157c3c-4eed-48d5-86a1-\
aad6ac41f511"]
}, Closed]],

Cell[CellGroupData[{

Cell["ConnectByColor", "Subsection",
 CellChangeTimes->{{3.68184476959031*^9, 3.681844775966675*^9}, {
  3.681844807942504*^9, 3.681844812318754*^9}, {3.6818451029743786`*^9, 
  3.68184510719862*^9}, {3.681848738193301*^9, 
  3.681848741585495*^9}},ExpressionUUID->"29cf71c6-3878-4abd-b4b1-\
bde85aae40dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Connect2Colors", "[", 
   RowBox[{
   "track1_", ",", "track2_", ",", "minOverlapTime_", ",", 
    "maxOverlapDistance_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "idxTrack1", ",", "idxTrack2", ",", "myAllLink", ",", "tempTrack1", ",", 
      "tempTrack2", ",", "myLinkList", ",", "newTrack1", ",", "newTrack2", 
      ",", "myMergedTrack", ",", "bigTrack1", ",", "bigTrack2"}], "}"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", 
     RowBox[{
     "Getting", " ", "color", " ", "index", " ", "assuming", " ", "the", " ", 
      "tracks", " ", "have", " ", "never", " ", "been", " ", "connected", " ",
       "with", " ", "any", " ", "other", " ", "colors"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"idxTrack1", "=", 
      RowBox[{"track1", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1", ",", "3"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idxTrack2", "=", 
      RowBox[{"track2", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1", ",", "3"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"Creating", " ", "linking", " ", "pair", " ", "list"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"myAllLink", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempTrack1", "=", 
          RowBox[{
          "track1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tempTrack2", "=", 
          RowBox[{
          "track2", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"FindOverlapDist", "[", 
          RowBox[{"tempTrack1", ",", "tempTrack2", ",", "minOverlapTime"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "track1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "@", "track2"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myLinkList", "=", 
      RowBox[{"CrossPairFinder", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"myAllLink", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"0", "\[LessEqual]", "x", "<", "maxOverlapDistance"}]}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"Preparing", " ", "output", " ", "track"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", "track1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack2", "=", "track2"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"Connecting", " ", "tracks"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"myMergedTrack", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"track1", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"track2", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}]}], "}"}], "//", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
             "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"SplitBy", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
            "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{
                  "x", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                   "\[Equal]", "idxTrack1"}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                " ", "#", ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
           "myMergedTrack"}], ")"}]}], ";", "  ", 
        RowBox[{"(*", 
         RowBox[{
         "Note", " ", "that", " ", "this", " ", "automatically", " ", 
          "deletes", " ", "times", " ", "where", " ", "three", " ", "or", " ",
           "more", " ", "points", " ", "appears", " ", "at", " ", "once"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"bigTrack1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Length", "@", "x"}], ">", "1"}]}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Note", " ", "that", " ", "this", " ", "automatically", " ", 
          "deletes", " ", "times", " ", "where", " ", "there", " ", "is", " ",
           "overlap", " ", "in", " ", "multiple", " ", "tracks", " ", "in", 
          " ", "track1"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
         " ", 
        RowBox[{"(*", 
         RowBox[{
         "Choose", " ", "to", " ", "label", " ", "big", " ", "track", " ", 
          "as", " ", "lowest", " ", 
          RowBox[{"#", "'"}], "d", " ", "track1"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"idxTrack1", "+", "idxTrack2"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Change", " ", "color", " ", "index", " ", "to", " ", "two", " ", 
          "colors", " ", "from", " ", "one", " ", "color"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "=", "bigTrack1"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ">", "1"}],
           ",", 
          RowBox[{
           RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "lowest", " ", "#", " ", "track1", " ", "that", " ", "should", " ", 
           "be", " ", "linked", " ", "is", " ", "replaced", " ", "with", " ", 
           "bigTrack1"}], ";", " ", 
          RowBox[{"others", " ", "become", " ", 
           RowBox[{"{", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"bigTrack2", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{
                  "x", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                   "\[Equal]", "idxTrack2"}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                " ", "#", ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
           "myMergedTrack"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"bigTrack2", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"bigTrack2", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Length", "@", "x"}], ">", "1"}]}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
         " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"idxTrack1", "+", "idxTrack2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
          RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "=", "bigTrack2"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ">", "1"}],
           ",", 
          RowBox[{
           RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "myLinkList"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"newTrack1", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"Now", " ", "get", " ", "rid", " ", "of", " ", "the", " ", 
       RowBox[{"{", "}"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack1"}]}]}], ";", 
     RowBox[{"(*", "renumber", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newTrack2", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"newTrack2", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack2"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newTrack1", ",", "newTrack2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6818477833286858`*^9, 3.6818479300650787`*^9}, 
   3.681847962152914*^9, {3.6818480224173613`*^9, 3.681848083193837*^9}, {
   3.681848114416623*^9, 3.6818481247852163`*^9}, {3.6818487447936783`*^9, 
   3.6818487458577394`*^9}, {3.6818533936295767`*^9, 3.681853409781501*^9}, {
   3.682708447520831*^9, 3.6827084621686687`*^9}, {3.6827085690727835`*^9, 
   3.6827086288092003`*^9}, {3.6827087069206676`*^9, 3.68270872880892*^9}, {
   3.682766907607557*^9, 3.6827669156630173`*^9}, {3.68276707498313*^9, 
   3.6827671445201073`*^9}, {3.682768646177997*^9, 3.6827686940657363`*^9}, {
   3.6827687722172065`*^9, 3.682768776041425*^9}, {3.6827688265133123`*^9, 
   3.6827688825615177`*^9}, {3.6827689192496157`*^9, 3.682768923001831*^9}, {
   3.682769039177476*^9, 3.6827691459455824`*^9}, {3.682770721506699*^9, 
   3.682770737554617*^9}, {3.682860302066414*^9, 3.6828603066736774`*^9}, {
   3.6828603498911495`*^9, 3.682860543546226*^9}, {3.6828605761940937`*^9, 
   3.6828605966112614`*^9}, {3.682861188652124*^9, 3.6828612173707666`*^9}, {
   3.6828614396034775`*^9, 3.6828617892354755`*^9}, {3.682861825644558*^9, 
   3.6828618869800663`*^9}, 3.682862876700675*^9, {3.682863100068451*^9, 
   3.6828631120611367`*^9}, 3.6828635003333445`*^9, {3.6828721540043063`*^9, 
   3.6828721618757563`*^9}, {3.682885069295019*^9, 3.68288507107012*^9}, {
   3.6832990650866437`*^9, 3.6832990971674786`*^9}, {3.6832991433351192`*^9, 
   3.6832991439671555`*^9}, {3.6832995779349775`*^9, 
   3.6832996392954865`*^9}, {3.6832996727033978`*^9, 3.683299686272174*^9}, {
   3.683299717889982*^9, 
   3.6832997212561746`*^9}},ExpressionUUID->"32a5d40a-f29e-43ad-a4ce-\
5e5096caefbe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Connect2ColorsFor3", "[", 
   RowBox[{
   "track1_", ",", "track2_", ",", "minOverlapTime_", ",", 
    "maxOverlapDistance_", ",", "track1Color_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "idxTrack1", ",", "idxTrack2", ",", "myAllLink", ",", "tempTrack1", ",", 
      "tempTrack2", ",", "myLinkList", ",", "newTrack1", ",", "newTrack2", 
      ",", "myMergedTrack", ",", "bigTrack1", ",", "bigTrack2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myAllLink", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempTrack1", "=", 
          RowBox[{
          "track1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tempTrack2", "=", 
          RowBox[{
          "track2", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"FindOverlapDist", "[", 
          RowBox[{"tempTrack1", ",", "tempTrack2", ",", "minOverlapTime"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "track1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "@", "track2"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myLinkList", "=", 
      RowBox[{"CrossPairFinder", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"myAllLink", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"0", "\[LessEqual]", "x", "<", "maxOverlapDistance"}]}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", "track1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"myMergedTrack", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"track1", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"track2", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}]}], "}"}], "//", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
             "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"SplitBy", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
            "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{"x", "\[LeftDoubleBracket]", 
                   RowBox[{"3", ",", "track1Color"}], 
                   "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}]}], "]"}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                " ", "#", ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
           "myMergedTrack"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"bigTrack1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Length", "@", "x"}], ">", "1"}]}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
         " ", "\[IndentingNewLine]", 
        RowBox[{"idxTrack1", "=", 
         RowBox[{"Total", "@", 
          RowBox[{"track1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1", 
            ",", "3"}], "\[RightDoubleBracket]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"idxTrack2", "=", 
         RowBox[{"Total", "@", 
          RowBox[{"track2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", "1", 
            ",", "3"}], "\[RightDoubleBracket]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"idxTrack1", "+", "idxTrack2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"x_", "/;", 
            RowBox[{"x", ">", "0"}]}], "\[Rule]", "1"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "=", "bigTrack1"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ">", "1"}],
           ",", 
          RowBox[{
           RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "myLinkList"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"newTrack1", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack1"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack2", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"track2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "#", "}"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
            "Flatten"}], "//", "Sort"}], ")"}]}]}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newTrack1", ",", "newTrack2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6833889497817545`*^9, 3.683389048590406*^9}, {
  3.6833892503099437`*^9, 
  3.6833892517180243`*^9}},ExpressionUUID->"e1ef8606-e639-4ac6-aa5e-\
afc3fb1acc51"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Connect3Colors", "[", 
   RowBox[{
   "trackr_", ",", "trackg_", ",", "trackb_", ",", "minOverlapTime_", ",", 
    "maxOverlapDistance_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "trackgb", ",", "trackbAlone", ",", "trackrgb", ",", "newTrackr", ",", 
      "trackbr", ",", "trackrAlone1", ",", "trackgbr", ",", "newTrackg", ",", 
      "trackgr", ",", "trackrAlone2", ",", "trackbgr", ",", "newTrackb", ",", 
      "dum"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackgb", ",", "trackbAlone"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackg", ",", "trackb", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackrgb", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackr", ",", "trackgb", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTrackr", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackrgb", ",", "trackbAlone", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackbr", ",", "trackrAlone1"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackb", ",", "trackr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackgbr", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackg", ",", "trackbr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTrackg", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackgbr", ",", "trackrAlone1", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackgr", ",", "trackrAlone2"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackg", ",", "trackr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackbgr", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackb", ",", "trackgr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTrackb", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackbgr", ",", "trackrAlone2", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newTrackr", ",", "newTrackg", ",", "newTrackb"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6833890896927567`*^9, 
  3.6833892422454824`*^9}},ExpressionUUID->"dbb834f6-fc5f-4411-abfa-\
c210bb52b8b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["ConnectTracks[tracks_,listConnectTracks, (renumberQ)]", "Subsection",
 CellChangeTimes->{{3.67925864456554*^9, 3.6792586589813643`*^9}, {
  3.679260491399173*^9, 
  3.6792605037188773`*^9}},ExpressionUUID->"b24f19eb-5178-45dc-93a6-\
0667abbd32b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectTracks", "[", 
   RowBox[{"tracksList_", ",", "listConnectTracks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newTracksList", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newTracksList", "=", "tracksList"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", "All", ",", 
        "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
        "listConnectTracks", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTracksList", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{"Sort", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"newTracksList", ",", "1"}], "]"}]}], ",", "First"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTracksList"}]}]}], ";", 
     "\[IndentingNewLine]", "newTracksList"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.679260438412142*^9, 
  3.679260486195875*^9}},ExpressionUUID->"3a728b62-234e-4237-837c-\
5cb98b8da533"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectTracks", "[", 
   RowBox[{"tracksList_", ",", "listConnectTracks_", ",", "renumberQ_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newTracksList", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newTracksList", "=", "tracksList"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", "All", ",", 
        "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
        "listConnectTracks", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"renumberQ", ",", 
       RowBox[{
        RowBox[{"newTracksList", "=", 
         RowBox[{"SplitBy", "[", 
          RowBox[{
           RowBox[{"Sort", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"newTracksList", ",", "1"}], "]"}]}], ",", "First"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", "newTracksList"}]}]}]}], ",", 
       "newTracksList"}], "]"}], ";", "\[IndentingNewLine]", 
     "newTracksList"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.679260438412142*^9, 3.679260467243791*^9}, {
  3.6792605093571997`*^9, 3.67926051250838*^9}, {3.679260779604657*^9, 
  3.6792608012368946`*^9}, {3.679260951305478*^9, 
  3.6792609531485834`*^9}},ExpressionUUID->"e00b925c-229a-49f6-b9b7-\
58a165ecf1f8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectTracksFilled", "[", 
   RowBox[{"tracksList_", ",", "listConnectTracks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newTracksList", ",", "spotEnd", ",", "spotStart", ",", "missingNum", 
      ",", "fillingNum", ",", "fillingPos", ",", "fillingSpots"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newTracksList", "=", "tracksList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"spotEnd", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Last", "@", 
            RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
             RowBox[{
             "listConnectTracks", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"spotStart", "=", 
         RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
            RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "1", ",",
            "2"}], "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"missingNum", "=", 
         RowBox[{
          RowBox[{
          "spotStart", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "-", 
          RowBox[{
          "spotEnd", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"missingNum", ">", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fillingNum", "=", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "spotEnd", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "+", "1"}], ",", 
              RowBox[{
               RowBox[{
               "spotStart", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"fillingPos", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{"#", ",", 
                RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}]}],
                "]"}], "&"}], "/@", 
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", 
               RowBox[{
                RowBox[{"Range", "@", "missingNum"}], "/", 
                RowBox[{"(", 
                 RowBox[{"missingNum", "+", "1"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"spotStart", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], 
                 "\[RightDoubleBracket]"}]}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"fillingSpots", "=", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"Last", "@", 
               RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
                RowBox[{
                "listConnectTracks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], ",", 
              "missingNum"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"fillingSpots", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{"fillingNum", ",", "fillingPos"}], "}"}]}], "//", 
              "Flatten"}], "//", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
             RowBox[{
             "listConnectTracks", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
               RowBox[{
               "listConnectTracks", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
                 RowBox[{
                 "listConnectTracks", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], "+",
                "missingNum"}], ",", "fillingSpots"}], "]"}]}]}]}], "]"}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "@", "listConnectTracks"}], "-", "1"}], ",", 
         "1"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", "All", ",", 
        "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
        "listConnectTracks", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTracksList", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{"Sort", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"newTracksList", ",", "1"}], "]"}]}], ",", "First"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTracksList"}]}]}], ";", 
     "\[IndentingNewLine]", "newTracksList"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6818437818788157`*^9, 
  3.681843790654318*^9}},ExpressionUUID->"16fc7f51-9c6b-49d8-83f0-\
e68c41c10803"]
}, Closed]],

Cell[CellGroupData[{

Cell["TrackFiller", "Subsection",
 CellChangeTimes->{{3.681819224690225*^9, 
  3.68181922983352*^9}},ExpressionUUID->"6c7e2434-42df-4bf2-bc2c-\
27dcee1663fc"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "This", " ", "module", " ", "fills", " ", "any", " ", "gaps", " ", "in", 
   " ", "tracks", " ", "by", " ", "interpolating", " ", "the", " ", 
   "position", " ", "from", " ", "the", " ", "last", " ", "postion", " ", 
   "before", " ", "the", " ", "gap", " ", "and", " ", "the", " ", "first", 
   " ", "position", " ", "after", " ", "the", " ", "gap"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.681839614018428*^9, 3.681839638313818*^9}, {
  3.681839694090008*^9, 
  3.681839739850625*^9}},ExpressionUUID->"63e126cb-cd7a-4855-ac87-\
3dc698313573"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrackFiller", "[", "tracksList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "filledTracksList", ",", "myIdx", ",", "missingStart", ",", "missingNum",
       ",", "missingStartShifted", ",", "spotEnd", ",", "spotStart", ",", 
      "fillingNum", ",", "fillingPos", ",", "fillingSpots", ","}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filledTracksList", "=", "tracksList"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"myIdx", "=", 
         RowBox[{
          RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", 
            RowBox[{"2", ";;"}], ",", "2", ",", "1"}], 
           "\[RightDoubleBracket]"}], "-", 
          RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", 
            RowBox[{";;", 
             RowBox[{
              RowBox[{"Length", "@", 
               RowBox[{
               "filledTracksList", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "-", "1"}]}], ",", "2", ",", 
            "1"}], "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"missingStart", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"myIdx", ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", ">", "1"}]}]}], "]"}], "+", "1"}], "//", 
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"missingNum", "=", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"myIdx", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{"x", ">", "1"}]}]}], "]"}], "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"missingStart", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"missingStartShifted", "=", "missingStart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"missingStartShifted", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{"missingStart", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"FoldList", "[", 
                RowBox[{"Plus", ",", "missingNum"}], "]"}], ")"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{";;", 
               RowBox[{
                RowBox[{"Length", "@", "missingNum"}], "-", "1"}]}], 
              "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"spotEnd", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{
                    "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "-", "1"}]}], 
                  "\[RightDoubleBracket]"}], ")"}], "\[LeftDoubleBracket]", 
                "2", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"spotStart", "=", 
               RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{
                 "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], ",", "2"}], 
                "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"fillingNum", "=", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "spotEnd", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{
                  "spotStart", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"fillingPos", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Plus", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], "/@", 
                RowBox[{"Outer", "[", 
                 RowBox[{"Times", ",", 
                  RowBox[{
                   RowBox[{"Range", "@", 
                    RowBox[{
                    "missingNum", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "missingNum", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"spotStart", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                    "-", 
                   RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"fillingSpots", "=", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{
                    "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "-", "1"}]}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "missingNum", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fillingSpots", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Thread", "@", 
                  RowBox[{"{", 
                   RowBox[{"fillingNum", ",", "fillingPos"}], "}"}]}], "//", 
                 "Flatten"}], "//", 
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "filledTracksList", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"Insert", "[", 
                  RowBox[{
                   RowBox[{
                   "filledTracksList", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "fillingSpots", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "+", "k", "-", "1"}]}], 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{
                  "missingNum", "\[LeftDoubleBracket]", "j", 
                   "\[RightDoubleBracket]"}], ",", "1"}], "}"}]}], "]"}], 
              ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", "missingStart"}], ",", "1"}], "}"}]}], 
            "]"}], ";"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "filledTracksList"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "filledTracksList"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681819232566676*^9, 3.681819281457472*^9}, {
  3.681836758312091*^9, 3.681836906328557*^9}, {3.681836938336388*^9, 
  3.681836980535802*^9}, {3.681837014016717*^9, 3.681837143512123*^9}, {
  3.6818371739048615`*^9, 3.6818373862010045`*^9}, {3.6818390382424955`*^9, 
  3.68183903989859*^9}, {3.681839128498658*^9, 
  3.6818391529510565`*^9}},ExpressionUUID->"f02746ea-e599-436d-a217-\
328fce35d95f"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindConnectableTracks", "Subsection",
 CellChangeTimes->{{3.679313898838685*^9, 
  3.6793139041269875`*^9}},ExpressionUUID->"06ba5028-9bd0-4ff8-b38d-\
82b2eb8b35a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindConnectableTracks2", "[", 
   RowBox[{
   "tracksList_", ",", "myMaxN_", ",", "dist_", ",", "time_", ",", 
    "trackNumber_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "allTracksStart", ",", "timeEnd", ",", "posiEnd", ",", "afterTracks", 
      ",", "listConnectTracks", ",", "tempConnectTracks", ",", 
      "tempConnectTracks2", ",", "tempConnectTracks3", ",", 
      "posiConnectTracks", ",", "tempTrack", ",", "tempFrame"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allTracksStart", "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"trackNumber", "+", "1"}], ")"}], ";;"}], ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeEnd", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Last", "@", 
         RowBox[{
         "tracksList", "\[LeftDoubleBracket]", "trackNumber", 
          "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"posiEnd", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Last", "@", 
         RowBox[{
         "tracksList", "\[LeftDoubleBracket]", "trackNumber", 
          "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"afterTracks", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"allTracksStart", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{"timeEnd", "<", 
           RowBox[{"x", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
           "\[LessEqual]", 
           RowBox[{"timeEnd", "+", "time"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "-", "dist"}], "<", 
           RowBox[{"x", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "<", 
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "+", "dist"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
             "-", "dist"}], "<", 
           RowBox[{"x", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "<", 
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
             "+", "dist"}]}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listConnectTracks", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"trackNumber", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"afterTracks", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"afterTracks", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempConnectTracks", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
        "tracksList", "\[LeftDoubleBracket]", "listConnectTracks", 
         "\[RightDoubleBracket]"}], "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Length", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"tracksList", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tempConnectTracks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tempConnectTracks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempConnectTracks2", "=", 
      RowBox[{
       RowBox[{"tempConnectTracks", "//", "Sort"}], "//", 
       RowBox[{
        RowBox[{"SplitBy", "[", 
         RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempConnectTracks3", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tempConnectTracks2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"tempConnectTracks2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", 
           RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}]}], "}"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"posiConnectTracks", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "@", "myMaxN"}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           "myMaxN"}], "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tempFrame", "=", 
         RowBox[{"tempConnectTracks3", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{
         RowBox[{"posiConnectTracks", "\[LeftDoubleBracket]", 
          RowBox[{"tempFrame", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"tempConnectTracks3", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "tempConnectTracks3"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"listConnectTracks", ",", "posiConnectTracks"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6787314149002867`*^9, 3.678731473628646*^9}, {
   3.678731527835746*^9, 3.678731651943845*^9}, {3.67873192075622*^9, 
   3.678731925884513*^9}, {3.6787323688368483`*^9, 3.678732492620929*^9}, {
   3.6787335929338627`*^9, 3.678733599774254*^9}, {3.6787336336611924`*^9, 
   3.6787336361663356`*^9}, 3.6790900466130695`*^9, {3.679090105420433*^9, 
   3.6790901372212524`*^9}, {3.67909033683667*^9, 3.6790904911094933`*^9}, {
   3.6791367729136615`*^9, 3.67913678355427*^9}, {3.6791370766180325`*^9, 
   3.6791371439218817`*^9}, {3.6791371846022086`*^9, 
   3.6791372102186737`*^9}, {3.6791372727062483`*^9, 3.679137333898748*^9}, {
   3.679137417098507*^9, 3.6791374283151484`*^9}, {3.6791501942853203`*^9, 
   3.6791502799182177`*^9}, {3.679152732282485*^9, 3.6791527339295793`*^9}, {
   3.6792419937019463`*^9, 3.679242050430191*^9}, {3.679250900469384*^9, 
   3.679250901061418*^9}, {3.679258064987171*^9, 3.6792580677713304`*^9}, {
   3.6792585280766582`*^9, 3.6792585508039584`*^9}, {3.6792616162782936`*^9, 
   3.6792616315821686`*^9}, {3.6792620662780323`*^9, 
   3.679262089254346*^9}},ExpressionUUID->"535b2327-0786-4778-996a-\
67742db55958"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
MyCrossCorrelatePlotter[myColorParameters_,listHead_,colN1_,colN2_,color_\
optional]\
\>", "Subsection",
 CellChangeTimes->{{3.703275782599066*^9, 
  3.7032758061427093`*^9}},ExpressionUUID->"2585b4ca-456a-4878-a846-\
796da85a0f9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyCrossCorrelatePlotter", "[", 
   RowBox[{
   "myColorParameters_", ",", "listHead_", ",", "colN1_", ",", "colN2_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myColorParameters", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "All"}], ",", "All", ",", 
        RowBox[{"colN1", ";;", "colN2", ";;", 
         RowBox[{"(", 
          RowBox[{"colN2", "-", "colN1"}], ")"}]}]}], "]"}], "]"}], "//", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN1", "]"}], "]"}], ",", 
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"PointSize", "[", "0.007", "]"}]}]}], "]"}], "&"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.703274674140876*^9, 3.7032747392387104`*^9}, {
   3.7032747968973637`*^9, 3.7032748616902075`*^9}, 
   3.7032751970156884`*^9},ExpressionUUID->"4d24b4c0-6a7f-4b7d-a9bb-\
be7743017502"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyCrossCorrelatePlotter", "[", 
   RowBox[{
   "myColorParameters_", ",", "listHead_", ",", "colN1_", ",", "colN2_", ",", 
    "color_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myColorParameters", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "All"}], ",", "All", ",", 
        RowBox[{"colN1", ";;", "colN2", ";;", 
         RowBox[{"(", 
          RowBox[{"colN2", "-", "colN1"}], ")"}]}]}], "]"}], "]"}], "//", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN1", "]"}], "]"}], ",", 
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"PointSize", "[", "0.007", "]"}]}]}], "]"}], "&"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.703274674140876*^9, 3.7032747392387104`*^9}, {
   3.7032747968973637`*^9, 3.7032748616902075`*^9}, 3.7032751970156884`*^9, {
   3.703275630504817*^9, 
   3.7032756482653213`*^9}},ExpressionUUID->"0781a658-1fdd-4452-b978-\
27aa7bf80266"]
}, Closed]],

Cell[CellGroupData[{

Cell["TickFormat[xmin_,xmax_,digits_,divisions_]", "Subsection",
 CellChangeTimes->{{3.703358407462393*^9, 3.703358409042426*^9}, {
  3.703358439210065*^9, 
  3.7033584441361666`*^9}},ExpressionUUID->"1afe7705-f4ae-4a0d-ada1-\
a550cb4ea16b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TickFormat", "[", 
    RowBox[{"xmin_", ",", "xmax_", ",", "digits_", ",", 
     RowBox[{"divisions_:", " ", "10"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"tickNumber", ",", 
      RowBox[{"{", 
       RowBox[{"tickNumber", ",", 
        RowBox[{"PaddedForm", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"tickNumber", ",", "0.01"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Max", "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", 
                 RowBox[{"IntegerDigits", "@", 
                  RowBox[{"IntegerPart", "[", "#", "]"}]}]}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"10", "^", "digits"}], " ", 
                 RowBox[{"{", 
                  RowBox[{"xmin", ",", "xmax"}], "}"}]}], ")"}]}], ")"}]}], 
            ",", "digits"}], "}"}]}], "]"}]}], "}"}]}], "]"}], "/@", 
    RowBox[{"FindDivisions", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmin", ",", "xmax"}], "}"}], ",", "divisions"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7033584100124474`*^9, 
  3.7033584147265472`*^9}},ExpressionUUID->"67a59e8e-3198-4781-b822-\
c7f97bc9c890"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
MyHistogramPlotter[myColorParameter_,listHead_,col_,color_,bins_optional]\
\>", "Subsection",
 CellChangeTimes->{{3.703347014331491*^9, 
  3.7033470305826864`*^9}},ExpressionUUID->"37665852-9515-4cef-b039-\
03638770767d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyHistogramPlotter", "[", 
   RowBox[{
   "myColorParameter_", ",", "listHead_", ",", "col_", ",", "color_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myList", ",", "myMed", ",", "mybinsize"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"myColorParameter", "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"myList", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Flatten", "[", 
           RowBox[{"myColorParameter", ",", "1"}], "]"}], ")"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "col"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "myList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", "\"\<\>\""}], ",", 
         RowBox[{"myMed", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"myList", "//", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[Equal]", "\"\<\>\""}]}]}], "]"}], "&"}]}], 
           "]"}]}], ",", 
         RowBox[{"myMed", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"myMed", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mybinsize", "=", 
           RowBox[{"myMed", "/", "20"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myList", "//", 
           RowBox[{
            RowBox[{"Histogram", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"mybinsize", " ", "i"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "60", ",", "1"}], "}"}]}], 
                "]"}], "}"}], ",", "\"\<Probability\>\"", ",", 
              RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "listHead", "\[LeftDoubleBracket]", "col", 
                  "\[RightDoubleBracket]"}], ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TickFormat", "[", 
                    RowBox[{"#1", ",", "#2", ",", "2", ",", "4"}], "]"}], 
                    "&"}], ")"}], ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"BaseStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
              RowBox[{"ChartStyle", "\[Rule]", "color"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "&"}]}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7033453968476095`*^9, 3.7033456017408676`*^9}, {
   3.703345690238285*^9, 3.7033458191282563`*^9}, {3.703345873413062*^9, 
   3.703345894108388*^9}, {3.703345981093774*^9, 3.703346016106325*^9}, {
   3.7033460780712643`*^9, 3.7033460994455795`*^9}, {3.703346166582602*^9, 
   3.7033462159563966`*^9}, {3.7033463000426383`*^9, 
   3.7033463140848665`*^9}, {3.7033463606945405`*^9, 
   3.7033464081352506`*^9}, {3.7033585202398043`*^9, 3.703358540818222*^9}, {
   3.703358600870448*^9, 3.7033586136397057`*^9}, {3.703358644942337*^9, 
   3.703358657284584*^9}, {3.703358723769965*^9, 3.703358723823965*^9}, {
   3.703358795953441*^9, 3.703358804128601*^9}, 3.7033590514415994`*^9, {
   3.703361587852375*^9, 3.703361605516774*^9}, {3.703361638652496*^9, 
   3.7033616501067543`*^9}, {3.7033618063961444`*^9, 3.703361831989685*^9}, {
   3.7033618848697786`*^9, 3.703361910100312*^9}, {3.703362341703863*^9, 
   3.7033623943320017`*^9}, {3.703362485782957*^9, 3.7033624883070083`*^9}, {
   3.7033625395840573`*^9, 
   3.70336257076271*^9}},ExpressionUUID->"a9b119c5-4438-4627-9262-\
609cd3b0129a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyHistogramPlotter", "[", 
   RowBox[{
   "myColorParameter_", ",", "listHead_", ",", "col_", ",", "color_", ",", 
    "bins_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myList", ",", "myMed", ",", "mybinsize"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"myColorParameter", "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"myList", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Flatten", "[", 
           RowBox[{"myColorParameter", ",", "1"}], "]"}], ")"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "col"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "myList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", "\"\<\>\""}], ",", 
         RowBox[{"myMed", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"myList", "//", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[Equal]", "\"\<\>\""}]}]}], "]"}], "&"}]}], 
           "]"}]}], ",", 
         RowBox[{"myMed", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"myMed", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mybinsize", "=", 
           RowBox[{"myMed", "/", "20"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myList", "//", 
           RowBox[{
            RowBox[{"Histogram", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", "bins", "}"}], ",", "\"\<Probability\>\"", ",", 
              RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "listHead", "\[LeftDoubleBracket]", "col", 
                  "\[RightDoubleBracket]"}], ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TickFormat", "[", 
                    RowBox[{"#1", ",", "#2", ",", "2", ",", "4"}], "]"}], 
                    "&"}], ")"}], ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"BaseStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
              RowBox[{"ChartStyle", "\[Rule]", "color"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "&"}]}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7033453968476095`*^9, 3.7033456017408676`*^9}, {
   3.703345690238285*^9, 3.7033458191282563`*^9}, {3.703345873413062*^9, 
   3.703345894108388*^9}, {3.703345981093774*^9, 3.703346016106325*^9}, {
   3.7033460780712643`*^9, 3.7033460994455795`*^9}, {3.703346166582602*^9, 
   3.7033462159563966`*^9}, {3.7033463000426383`*^9, 
   3.7033463140848665`*^9}, {3.7033463606945405`*^9, 
   3.7033464081352506`*^9}, {3.703346732549771*^9, 3.7033467431699276`*^9}, {
   3.7033468075528164`*^9, 3.703346809363845*^9}, {3.7033584884151525`*^9, 
   3.7033585318370404`*^9}, {3.703358591793267*^9, 3.70335864167127*^9}, {
   3.7033587212929087`*^9, 3.70335872137591*^9}, {3.7033588810271482`*^9, 
   3.703358882944187*^9}, {3.7033589201549244`*^9, 3.703359059365768*^9}, {
   3.703361607820819*^9, 3.703361656398898*^9}, 3.7033618409068685`*^9, {
   3.703361919104509*^9, 3.7033619226515884`*^9}, {3.703362402527178*^9, 
   3.7033624090863256`*^9}, {3.703362456080333*^9, 3.703362482219881*^9}, 
   3.7033625800409193`*^9},ExpressionUUID->"c1b50967-d5f1-466f-aed4-\
017cb1bb709e"]
}, Closed]],

Cell[CellGroupData[{

Cell["TXYDiffusionPlotter[txylsits,maxt,color,shapeN,size]", "Subsection",
 CellChangeTimes->{{3.7148656178431544`*^9, 
  3.7148656407825317`*^9}},ExpressionUUID->"f858624d-8b17-4631-a44f-\
81b076742f79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TXYDiffusionPlotter", "[", 
   RowBox[{
   "txylists_", ",", "maxt_", ",", "color_", ",", "shapeN_", ",", "size_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"msds", ",", "p1", ",", "p2", ",", "msds2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"msds", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{
               "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               "2"]}], ")"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Differences", "[", 
          RowBox[{
           RowBox[{
           "txylists", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", "1", ",", "j"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "txylists", "]"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "maxt", ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Mean", "/@", 
          RowBox[{"msds", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "msds", "]"}], ",", "1"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"ErrorListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Frame #\>\"", ",", 
             "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
            "}"}]}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"msds2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"msds", "//", "Flatten"}], "//", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", "Union"}], "//", 
       RowBox[{
        RowBox[{"SplitBy", "[", 
         RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Mean", "/@", "msds2"}], ")"}], ",", 
          RowBox[{"ErrorBar", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"StandardDeviation", "[", "#", "]"}], 
               SqrtBox[
                RowBox[{"Length", "[", "#", "]"}]]], "&"}], "/@", 
             RowBox[{"msds2", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "All", ",", "2"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}], "//", 
        "Transpose"}], "//", 
       RowBox[{
        RowBox[{"ErrorListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"maxt", "-", "1"}]}], "}"}], ",", "All"}], "}"}]}], 
          ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], "\n", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Frame #\>\"", ",", 
             "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
            "}"}]}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7148648249721494`*^9, 3.7148649737870293`*^9}, {
  3.7148654437669964`*^9, 3.7148655251818724`*^9}, {3.714866422364873*^9, 
  3.714866425576295*^9}, {3.717770099151585*^9, 
  3.7177701066976013`*^9}},ExpressionUUID->"f9e640f7-e3a3-4f62-8553-\
8c83e316675a"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
InteractionAnalyzer[componentAnalysisList_,column_(3=red,4=green,5=blue),\
shapeN,size]\
\>", "Subsection",
 CellChangeTimes->{{3.7148681650656333`*^9, 3.714868208670328*^9}, {
  3.714869979361375*^9, 3.714869983188116*^9}, {3.714874224676405*^9, 
  3.7148742255990944`*^9}},ExpressionUUID->"33440c58-3a13-48d1-9824-\
c5165b818633"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InteractionAnalyzer", "[", 
   RowBox[{"ca_", ",", "column_", ",", "shapeN_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "goodi", ",", "redis", ",", "p1", ",", "greenis", ",", "p2", ",", 
      "blueis", ",", "p3", ",", "myAvgBlueis", ",", "myAvgRedis", ",", 
      "myAvgGreenis", ",", "mySizes", ",", "p4", ",", "p5", ",", "p6", ",", 
      "p4d", ",", "p5d", ",", "p6d", ",", "p7"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "We", " ", "need", " ", "to", " ", "delete", " ", "those", " ", "cases",
        " ", "when", " ", "we", " ", "cannot", " ", "see"}], ",", " ", 
      RowBox[{"eg", "."}], ",", " ", 
      RowBox[{"blue", " ", "in", " ", "every", " ", "track", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "assuming", " ", "blue", " ", "is", " ", "the", " ", "seed", " ", 
          "column", " ", "for", " ", "the", " ", "track"}], ")"}], ".", " ", 
        "In"}], " ", "other", " ", "words"}], ",", " ", 
      RowBox[{
      "sometimes", " ", "we", " ", "cannot", " ", "match", " ", "up", " ", 
       "the", " ", "centroid", " ", "to", " ", "a", " ", "specific", " ", 
       RowBox[{"track", ".", " ", "In"}], " ", "that", " ", "case"}], ",", 
      " ", 
      RowBox[{
      "we", " ", "will", " ", "not", " ", "include", " ", "in", " ", "the", 
       " ", 
       RowBox[{"analysis", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"goodi", "=", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"ca", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "All", ",", "column"}], "]"}], "]"}], 
                 ",", "2"}], "]"}], ",", 
               RowBox[{"x_", "/;", 
                RowBox[{
                 RowBox[{
                  RowBox[{"NumericQ", "[", "x", "]"}], "\[Equal]", "True"}], "&&", 
                 RowBox[{"x", "\[NotEqual]", "0"}]}]}]}], "]"}], 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
               "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               "]"}], "-", "1"}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", 
              RowBox[{"Length", "[", "ca", "]"}], ",", "1"}], "}"}]}], "]"}], 
          ",", "1"}], "]"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"redis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"MovingAverage", "[", 
               RowBox[{
                RowBox[{"ca", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                   "goodi", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", "All", ",", "3"}], "]"}], 
                 "]"}], ",", "2"}], "]"}]}], ")"}], "//", 
            RowBox[{
             RowBox[{"SplitBy", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]}]}], "]"}], 
            "&"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "goodi", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{
       RowBox[{"redis", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Histogram", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Purple", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}], ",", "Red"}], "]"}]}],
             "]"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Interaction time (frames)\>\"", ",", "\"\<Percentage\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Red to \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Interactions\>\""}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"greenis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"MovingAverage", "[", 
               RowBox[{
                RowBox[{"ca", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                   "goodi", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", "All", ",", "4"}], "]"}], 
                 "]"}], ",", "2"}], "]"}]}], ")"}], "//", 
            RowBox[{
             RowBox[{"SplitBy", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]}]}], "]"}], 
            "&"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "goodi", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{"greenis", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Histogram", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Cyan", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Green", ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Interaction time (frames)\>\"", ",", "\"\<Percentage\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Green to \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Interactions\>\""}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"blueis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"MovingAverage", "[", 
               RowBox[{
                RowBox[{"ca", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                   "goodi", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", "All", ",", "5"}], "]"}], 
                 "]"}], ",", "2"}], "]"}]}], ")"}], "//", 
            RowBox[{
             RowBox[{"SplitBy", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]}]}], "]"}], 
            "&"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "goodi", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p3", "=", 
      RowBox[{
       RowBox[{"blueis", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Histogram", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Blue", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Cyan", ",", 
               "Purple"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Interaction time (frames)\>\"", ",", "\"\<Percentage\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Blue to \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Interactions\>\""}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myAvgRedis", "=", 
      RowBox[{"Mean", "/@", "redis"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myAvgGreenis", "=", 
      RowBox[{"Mean", "/@", "greenis"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myAvgBlueis", "=", 
      RowBox[{"Mean", "/@", "blueis"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mySizes", "=", 
      RowBox[{"N", "[", 
       RowBox[{"Mean", "/@", 
        RowBox[{"bca", "\[LeftDoubleBracket]", 
         RowBox[{"goodi", ",", 
          RowBox[{"1", ";;", "maxt"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"column", "==", "5"}], ",", "8", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "4"}], ",", "7", ",", "6"}], 
             "]"}]}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4d", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"myAvgRedis", ",", "mySizes"}], "}"}], "//", "Transpose"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"p4", "=", 
      RowBox[{"p4d", "//", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Size vs. Red Int'n Time\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Avg. red int'n time (frames)\>\"", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                  ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
              "\"\< size (pixels)\>\""}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Purple", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}], ",", "Red"}], "]"}]}],
             "]"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p5d", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"myAvgGreenis", ",", "mySizes"}], "}"}], "//", 
       "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p5", "=", 
      RowBox[{"p5d", "//", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Size vs. Green Int'n Time\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Avg. green int'n time (frames)\>\"", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                  ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
              "\"\< size (pixels)\>\""}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Cyan", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Green", ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p6d", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"myAvgBlueis", ",", "mySizes"}], "}"}], "//", "Transpose"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p6", "=", 
      RowBox[{"p6d", "//", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Size vs. Blue Int'n Time\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Avg. blue int'n time (frames)\>\"", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                  ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
              "\"\< size (pixels)\>\""}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Blue", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Cyan", ",", 
               "Purple"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p7", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MovingAverage", "[", 
           RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
         RowBox[{"ca", "[", 
          RowBox[{"[", 
           RowBox[{"goodi", ",", "All", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "8", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "7", ",", "6"}], 
               "]"}]}], "]"}]}], "]"}], "]"}]}], ")"}], "//", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Size of Tracked \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Clusters\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (frames)\>\"", ",", "\"\<Size (pixels)\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"column", "\[Equal]", "5"}], ",", 
       RowBox[{"p6", "=", "p7"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"column", "\[Equal]", "4"}], ",", 
         RowBox[{"p5", "=", "p7"}], ",", 
         RowBox[{"p4", "=", "p7"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"redis", "//", "Flatten"}], "//", 
        RowBox[{
         RowBox[{"HistogramList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "10", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
          "]"}], "&"}]}], ",", 
       RowBox[{
        RowBox[{"greenis", "//", "Flatten"}], "//", 
        RowBox[{
         RowBox[{"HistogramList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "10", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
          "]"}], "&"}]}], ",", 
       RowBox[{
        RowBox[{"blueis", "//", "Flatten"}], "//", 
        RowBox[{
         RowBox[{"HistogramList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "10", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
          "]"}], "&"}]}], ",", "p4d", ",", "p5d", ",", "p6d", ",", "p1", ",", 
       "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzVtIk3EYBvBPHZ8rzHCVggzKA1oGbtXNPFLMwxTxML0YOJ0oFozJrGSK
LAWdQUdFpxN1uAtNnUokQ8TDZAOVqWSU2kEk1E3mQkvUkThb3/O/ePjx8ML7
hJUqxeW+FEVFM4GixM2OV6O/HphjHd1Q3u+xwvfhHUvQo9GswO0D/TqstLRv
QVvUEzvkLhY64aUoqQtmZwnZrxl5U4pA+Dnu6TXSOX1E7UJRKFz+MBgBg4Uz
N6GB9+gutKX+SIDq+skk6P76LQ/+GVNJ4UVW5D6cmOWdwHVa7iE72km/N4yq
5Ww2/HnFGggle1eD4cN3PVw4QK/dgA1C8z3YWfBSAHvt48SJc58cqGupzIPU
s1opHLObimGKskIOr6szK2D8na3HcCd6Vw0V/Jou8o9j0cPvfIcR0iMCE7TI
ZJ9gsvjfKry/WbJBdrUXdqFLN3QIAxzzRzDE1XoKF6oVHtj2Yu/WW8YEkYoP
zbnKcUjVlU3B8ETnHFwt8H6EdArrC5QLmtagf/fRDnweQ9vhsMRwQO5V07+h
UZdzDDVsN7HRmn4GOaI2Lwy5HcRqZhxpzSeaew2XoW+ak1in5opbGDf+luVD
lzu+EJb6ZRD/A0WrWdA=
  "],ExpressionUUID->"aab6a5e2-44be-49c4-94ab-6bf5c37ef4e6"]
}, Closed]],

Cell[CellGroupData[{

Cell["MyMSDPlotter[myColorParameter_,color_]", "Subsection",
 CellChangeTimes->{{3.7033634332791195`*^9, 3.703363436122175*^9}, 
   3.7033635200950136`*^9},ExpressionUUID->"6a402888-a476-442e-bccc-\
eaad2904372b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyMSDPlotter", "[", 
   RowBox[{"myColorParameter_", ",", "color_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"msds", ",", "p1", ",", "p2", ",", "poz"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mycol", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"color", "\[Equal]", "\"\<Red\>\""}], "||", 
         RowBox[{"color", "\[Equal]", "\"\<Darker[Yellow,0.2]\>\""}], "||", 
         RowBox[{"color", "\[Equal]", "\"\<Purple\>\""}], "||", 
         RowBox[{"color", "\[Equal]", "\"\<White\>\""}]}], ",", "13", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"color", "\[Equal]", "\"\<Green\>\""}], "||", 
           RowBox[{"color", "\[Equal]", "\"\<Cyan\>\""}]}], ",", "15", ",", 
          "17"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"myColorParameter", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"msds", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"poz", "=", 
             RowBox[{"myColorParameter", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", 
                RowBox[{"1", ";;", "All"}], ",", 
                RowBox[{"mycol", ";;", 
                 RowBox[{"mycol", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Total", "/@", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{"#", ",", "1", ",", "i"}], "]"}], "&"}], "@", 
                   "poz"}], ")"}], "2"]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "poz", "]"}], "-", "1"}]}], "}"}]}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "myColorParameter", "]"}], ",", "1"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{
          RowBox[{"msds", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "All"}], "]"}], "]"}], "//", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Frame #\>\"", ",", 
                "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
               "}"}]}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}]}], "]"}], 
           "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p2", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{"msds", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{"Length", "[", "x", "]"}], ">", "i"}]}]}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"1", ";;", "All"}], ",", "i"}], 
              "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Max", "@", 
                RowBox[{"(", 
                 RowBox[{"Length", "/@", "msds"}], ")"}]}], "/", "2"}], ",", 
              "1"}], "}"}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Frame #\>\"", ",", 
                "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
               "}"}]}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"ToExpression", "[", "color", "]"}]}]}], "]"}], 
           "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"p2", ",", "p1"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7033633976363707`*^9, 3.7033634043065166`*^9}, {
   3.7033634446063566`*^9, 3.703363494452468*^9}, {3.7033635582688527`*^9, 
   3.7033635793863087`*^9}, {3.703363719328355*^9, 3.7033638044862194`*^9}, {
   3.7088575637578373`*^9, 3.7088576490150914`*^9}, 3.708857830351329*^9, {
   3.708857923733378*^9, 3.7088579251766176`*^9}, {3.708858271321045*^9, 
   3.7088583576365824`*^9}, {3.7088584038471575`*^9, 3.708858502638214*^9}, {
   3.708858582381677*^9, 3.708858630781037*^9}, {3.7088586952449894`*^9, 
   3.7088587157962065`*^9}, {3.708858994354885*^9, 3.708858994964552*^9}, {
   3.708859280523344*^9, 3.7088592855260754`*^9}, {3.708859617696069*^9, 
   3.708859639859785*^9}, {3.7088596820381384`*^9, 3.708859701508578*^9}, {
   3.7088597351643853`*^9, 3.70885977992908*^9}, {3.7088598123956695`*^9, 
   3.7088598133515635`*^9}, 
   3.7088633626552286`*^9},ExpressionUUID->"97f317fe-51cd-4bef-b470-\
194f247a6dbb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.708859809880732*^9},ExpressionUUID->"ba13489a-8620-4360-aab0-\
8ff2e8e46bee"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
My3DImager[dir_, fileNameHead_, myt_, myx_, myy_, myc_, dimxy_, dz_, rangez_] \
dz in nanometers, assuming pixels are 130 nm\
\>", "Subsection",
 CellChangeTimes->{{3.702597482382226*^9, 
  3.7025975603424044`*^9}},ExpressionUUID->"a21f0844-85ab-4092-b22d-\
10c07527d548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"My3DImager", "[", 
   RowBox[{
   "dir_", ",", "fileNameHead_", ",", "myt_", ",", "myx_", ",", "myy_", ",", 
    "myc_", ",", "dimxy_", ",", "dz_", ",", "rangez_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myImg3D", ",", "myGrid"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myImg3D", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageTrim", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "dir", "<>", "\"\<\\\\\>\"", "<>", "fileNameHead", "<>", 
             "\"\<_t\>\"", "<>", 
             RowBox[{"MyNumString", "[", 
              RowBox[{"myt", ",", "3"}], "]"}], "<>", "\"\<_z\>\"", "<>", 
             RowBox[{"MyNumString", "[", 
              RowBox[{"myz", ",", "3"}], "]"}], "<>", "\"\<_c\>\"", "<>", 
             RowBox[{"MyNumString", "[", 
              RowBox[{"myc", ",", "3"}], "]"}], "<>", "\"\<.tif\>\""}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"myx", "-", "dimxy"}], ",", 
               RowBox[{"myy", "-", "dimxy"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"myx", "+", "dimxy"}], ",", 
               RowBox[{"myy", "+", "dimxy"}]}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"myz", ",", 
           RowBox[{
           "rangez", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "rangez", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           ",", "1"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Image3D", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ColorFunction", "\[Rule]", "\"\<XRay\>\""}], ",", 
          RowBox[{"Background", "\[Rule]", "Black"}], ",", 
          RowBox[{"BoxRatios", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1.3", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
             RowBox[{"1.3", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
             RowBox[{"5", "*", "dimz"}]}], "}"}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myGrid", "=", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"myImg3D", "//", 
               RowBox[{
                RowBox[{"Image3DProjection", "[", 
                 RowBox[{"#", ",", "\"\<YZ\>\""}], "]"}], "&"}]}], "//", 
              "ImageAdjust"}], "//", 
             RowBox[{
              RowBox[{"ImageResize", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1.3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
                  RowBox[{"5", "*", "dimz"}]}], "}"}]}], "]"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"ImageRotate", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], "&"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"myImg3D", "//", 
              RowBox[{
               RowBox[{"Image3DProjection", "[", 
                RowBox[{"#", ",", "\"\<XY\>\""}], "]"}], "&"}]}], "//", 
             "ImageAdjust"}], "//", 
            RowBox[{
             RowBox[{"ImageResize", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1.3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
                 RowBox[{"1.3", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "dimxy"}], " ", "+", "1"}], ")"}]}]}], 
                " ", "}"}]}], "]"}], "&"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"myImg3D", "//", 
               RowBox[{
                RowBox[{"Image3DProjection", "[", 
                 RowBox[{"#", ",", "\"\<XZ\>\""}], "]"}], "&"}]}], "//", 
              "ImageAdjust"}], "//", 
             RowBox[{
              RowBox[{"ImageResize", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1.3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
                  RowBox[{"5", "*", "dimz"}]}], "}"}]}], "]"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"ImageReflect", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Left", "\[Rule]", "Right"}]}], "]"}], "&"}]}]}], 
          "}"}]}], "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7025966134765973`*^9, 3.7025967014998627`*^9}, {
  3.7025968024916396`*^9, 3.702596806741683*^9}, {3.702596871519726*^9, 
  3.702596882303732*^9}, {3.702597085170679*^9, 3.702597102280223*^9}, {
  3.70259718262298*^9, 3.7025971948978977`*^9}, {3.7025972506998143`*^9, 
  3.7025972635593166`*^9}, {3.702597298754261*^9, 3.7025973357679443`*^9}, {
  3.7026437600039062`*^9, 
  3.702643773139658*^9}},ExpressionUUID->"dafbf9f3-4954-44e3-b3fd-\
e66c464e026b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"My3DImagerRaw", "[", 
   RowBox[{
   "dir_", ",", "fileNameHead_", ",", "myt_", ",", "myx_", ",", "myy_", ",", 
    "myc_", ",", "dimxy_", ",", "dz_", ",", "rangez_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myImg3D", ",", "myGrid"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"myImg3D", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageTrim", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
           "dir", "<>", "\"\<\\\\\>\"", "<>", "fileNameHead", "<>", 
            "\"\<_t\>\"", "<>", 
            RowBox[{"MyNumString", "[", 
             RowBox[{"myt", ",", "3"}], "]"}], "<>", "\"\<_z\>\"", "<>", 
            RowBox[{"MyNumString", "[", 
             RowBox[{"myz", ",", "3"}], "]"}], "<>", "\"\<_c\>\"", "<>", 
            RowBox[{"MyNumString", "[", 
             RowBox[{"myc", ",", "3"}], "]"}], "<>", "\"\<.tif\>\""}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"myx", "-", "dimxy"}], ",", 
              RowBox[{"myy", "-", "dimxy"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"myx", "+", "dimxy"}], ",", 
              RowBox[{"myy", "+", "dimxy"}]}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"myz", ",", 
          RowBox[{
          "rangez", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "rangez", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ",", "1"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Image3D", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<XRay\>\""}], ",", 
         RowBox[{"Background", "\[Rule]", "Black"}], ",", 
         RowBox[{"BoxRatios", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.3", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
            RowBox[{"1.3", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
            RowBox[{"5", "*", "dimz"}]}], "}"}]}]}], "]"}], "&"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7025966134765973`*^9, 3.7025967014998627`*^9}, {
   3.7025968024916396`*^9, 3.702596806741683*^9}, {3.702596871519726*^9, 
   3.702596882303732*^9}, {3.702597085170679*^9, 3.702597102280223*^9}, {
   3.70259718262298*^9, 3.7025971948978977`*^9}, {3.7025972506998143`*^9, 
   3.7025972635593166`*^9}, {3.702597298754261*^9, 3.7025973357679443`*^9}, {
   3.702604441189641*^9, 3.7026044659555087`*^9}, {3.702643792443762*^9, 
   3.702643796370987*^9}, 
   3.702644225862552*^9},ExpressionUUID->"edbdee73-ca7c-4718-9c33-\
87fb488c09dd"]
}, Closed]],

Cell["Handchecking Functions", "Subsection",
 CellChangeTimes->{{3.7711044536534023`*^9, 
  3.771104462805997*^9}},ExpressionUUID->"fff8efca-8997-4f22-a255-\
839e90e3afa0"],

Cell[CellGroupData[{

Cell["Trim Corrector Interpolation", "Subsection",
 CellChangeTimes->{{3.727639058955162*^9, 
  3.7276390902800174`*^9}},ExpressionUUID->"15d41bf2-98fb-47a0-8cf1-\
fd1ce8507405"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTrimBGCorrecterAll", "[", "centrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"testimg", ",", 
      RowBox[{"myDot", "=", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIfiiHgg/0oPUoj
aFyA3vbRyn5ywai9tLV/uKTnUXqo0QB83Oah
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}]}], ",", "myDotImg", ",", "myDotImgD", 
      ",", "myDotImgDXY", ",", "p1", ",", "f", ",", "mySubImg", ",", 
      "myCorImg", ",", "CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testimg", "=", "centrim"}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImg", "=", 
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myDot", ",", "testimg"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgD", "=", 
      RowBox[{"ImageData", "@", "myDotImg"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgDXY", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", "myDotImgD", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "//", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"myDotImgDXY", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mySubImg", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "15", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myCorImg", "=", 
      RowBox[{"ImageSubtract", "[", 
       RowBox[{"testimg", ",", "mySubImg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], "}"}], "}"}], 
      "=", 
      RowBox[{"GetTrimPeakIntFixedSigmaAll", "[", 
       RowBox[{
        RowBox[{"{", "myCorImg", "}"}], ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"ListPlot3D", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", 
           RowBox[{"myCorImg", "//", "ImageData"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"centrim", ",", "myCorImg", ",", "mySubImg", ",", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Plot3D", "[", 
          RowBox[{
           RowBox[{"CC", "+", 
            RowBox[{"A", " ", 
             RowBox[{"E", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", "15"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
           RowBox[{"MeshStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Opacity", "[", "0", "]"}], "}"}]}]}], "]"}], ",", 
         "p1"}], "]"}], ",", "A"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.727631334035967*^9, 3.727631726267456*^9}, {
  3.727631770493534*^9, 
  3.727631772474737*^9}},ExpressionUUID->"678926b6-063b-4409-8cfd-\
1696f864444b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTrimBGCorrecter", "[", "centrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"testimg", ",", 
      RowBox[{"myDot", "=", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIfiiHgg/0oPUoj
aFyA3vbRyn5ywai9tLV/uKTnUXqo0QB83Oah
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}]}], ",", "myDotImg", ",", "myDotImgD", 
      ",", "myDotImgDXY", ",", "p1", ",", "f", ",", "mySubImg", ",", 
      "myCorImg", ",", "CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testimg", "=", "centrim"}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImg", "=", 
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myDot", ",", "testimg"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgD", "=", 
      RowBox[{"ImageData", "@", "myDotImg"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgDXY", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", "myDotImgD", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "//", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"myDotImgDXY", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mySubImg", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "15", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myCorImg", "=", 
      RowBox[{"ImageSubtract", "[", 
       RowBox[{"testimg", ",", "mySubImg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], "}"}], "}"}], 
      "=", 
      RowBox[{"GetTrimPeakIntFixedSigmaAll", "[", 
       RowBox[{
        RowBox[{"{", "myCorImg", "}"}], ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"ListPlot3D", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", 
           RowBox[{"myCorImg", "//", "ImageData"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"A", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"myCorImg", "//", "ImageData"}], "//", "Flatten"}], "//", 
         "Flatten"}], "//", "Total"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7276318545152817`*^9, 
  3.7276319114865813`*^9}},ExpressionUUID->"cdb335bb-53f1-4cf8-b2f0-\
f5173541c9b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Species Plot Function for FSXXLMS2 & SFXXLMS2", "Subsection",
 CellChangeTimes->{{3.7276263029335303`*^9, 3.727626321856364*^9}, {
  3.7277224979579563`*^9, 3.727722504088709*^9}, {3.7277239711660833`*^9, 
  3.7277239788603835`*^9}},ExpressionUUID->"586cf469-dcce-471e-b42e-\
28aaecf4db50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BandPass", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        RowBox[{"GaussianMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"hi", ",", "lo"}], "}"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"imgc", "=", 
        RowBox[{"ImageConvolve", "[", 
         RowBox[{"img", ",", 
          FractionBox[
           RowBox[{"BoxMatrix", "[", "hi", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "hi"}], "+", "1"}], ")"}], "2"]]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        FractionBox[
         RowBox[{"DiskMatrix", "[", "hi", "]"}], 
         RowBox[{"Plus", "@@", 
          RowBox[{"Plus", "@@", 
           RowBox[{"DiskMatrix", "[", "hi", "]"}]}]}]]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSubtract", "[", 
      RowBox[{"imgb", ",", "imgc"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}},ExpressionUUID->"c6538116-bd5d-4e6b-ac17-\
79ffe3414d36"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"BandPass", "[", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxc3XezbVWZx/uuui+io0gDksydg6STz9777JM5gKG77aBtEyQniYIoAqIe
lCgoSUREBbSRjKKAWTF29T/9Su73jk/NUdRdVXvV2mvNOeYIz3jC7wnjz99/
1p73/z9/8Ad/cH9/z/f3/33+wAc+8O53v/vAgQObN2/etm3bCSecsL6+vmfP
nu3bt//DP/zDysrKe9/73r7ZuHHj2trarl27Nm3atGHDhr//+7/fO179dNxx
x/Xe59NOO211dfVtb3tbt//zP//zSSed9B//8R99v2XLFld2++mnn/5v//Zv
Pah23ve+95188smnnHJKT+/9gx/8YP92TQ/dunVr19SHPmt8586d28ernvzd
3/1dV9bCvn376nAPqg9d2UDqZN3up63j1ZVvfetb+6kO++aYY47p167/x3/8
x/6t5R07duj8/v37Deev/uqvukafu/c973lPD2pQJqfHdW/TVeN90+P0ttt7
r/8nnnhiw+knw6xBs6fPW8br/e9/f3cdffTRTVdNnXrqqU3C2Wef3QVNeM9q
Jmu55/7rv/5rHWiuuqAu/dM//dN//ud/1o1/+Zd/Oeywwz70oQ8df/zxPVTH
+lyzZkmXGku/9mH37t21UyNd0BNruX52V73693//927pifvGq870uRb6vp40
lt67uBt7RO/NVZd1Qe30TW32iDrWhDS0Bl6bzWpzHqmYYTPTq7vqRp3pygbY
hx7XKOpnH2q81qLJPnTBnvHq3jkDzUYP6kN9+/CHP2xpoo0eUT+7qwmsV/W/
lntc9/bEuvHOd76zpfyLv/iLFqIvW8Fa7uJm4B/Hq3+7vuWIQrqgVajlvjGf
f/u3f9vtXdazaqH3Btt7z6qRHlcHehB66Ke+7Jt+tTTmthb6ppmswf3j1WVN
Zt/0XrPd0qh7epNmyK5H0qeMV9c05/W227vsr//6r7vF1oskkGh9bvjdWJt9
rmPd2LzVYFNR+01417dM9arJbFztnT53V//63F0tSq3VeB1u6v7mb/4GgXXj
scce23vt13LvNdvy1du62rQ00q7sp4bf7b3vHC+01xBqtrt63DnnnBNDqD/1
Sgt1ssnvS2TTNd1Yby1cPWn4LVMT0vfdMje7nrSzoo3a6VdbpoE0XX2uKWNE
aX3oEQje3PZlLAuN1W176l3veldjqTULXcv1oSv7tTXqvX+tXRdH861+1NLn
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
        "], {{0, 165}, {192, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->{78., Automatic},
      ImageSizeRaw->{192, 165},
      PlotRange->{{0, 192}, {0, 165}}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}]}], "]"}], "//", "ImageAdjust"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.575096671242012*^9, 3.575096685632032*^9}, {
  3.575151552048551*^9, 3.575151584238596*^9}, {3.5751527213321905`*^9, 
  3.575152738242214*^9}, {3.5787952704749374`*^9, 3.5787952717229395`*^9}, {
  3.648226188532628*^9, 3.6482261920908318`*^9}, {3.648226491268944*^9, 
  3.648226494211112*^9}, {3.6482313009610424`*^9, 3.6482313029911585`*^9}, {
  3.6482314723518453`*^9, 3.648231474766983*^9}, {3.6483038949211793`*^9, 
  3.6483038979373517`*^9}},ExpressionUUID->"12afe874-5c84-4ec1-8454-\
1cc2240d40ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeighted", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{"img", ",", "imgc"}], "]"}], ",", 
        RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"img", ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Color", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Circle", "[", 
              RowBox[{"#", ",", 
               RowBox[{"hi", " ", "1.5"}]}], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"pos", "=", 
              RowBox[{
               RowBox[{"ComponentMeasurements", "[", 
                RowBox[{"imgc", ",", 
                 RowBox[{"{", "\"\<Centroid\>\"", "}"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], 
             ")"}]}]}], "}"}], "]"}]}], "]"}], ",", "pos"}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, 3.7082569876100755`*^9, 
   3.7083825965615287`*^9},ExpressionUUID->"a246bf0a-d850-4ffd-908d-\
0f5b3c1b33ab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeightedMask", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, {3.7082566948533335`*^9, 3.7082567064482007`*^9}, {
   3.708510282112838*^9, 
   3.7085102832053924`*^9}},ExpressionUUID->"cb059fa4-7f63-4834-b91c-\
071dc2be42eb"],

Cell["\<\
I want to make a function that can look in each channel and try to find a \
particle. After it does this I want it to do the donut to all channels (RGB). \
I want the output to be a list of Red Only, Yellow, White, and Purple spots. \
Within this list will be the RGB trims with the RGB donut intensity. Should \
have a list length of 3 and each one will be the how many spots there are.\
\>", "Text",
 CellChangeTimes->{{3.727557204215579*^9, 3.7275572566428785`*^9}, {
  3.7275572878338532`*^9, 
  3.7275573693423986`*^9}},ExpressionUUID->"5d6bff52-6ced-4b84-b0af-\
516fbf68e401"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgmask", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "15", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}], "//", 
    "Image"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7274841811677756`*^9, 3.727484204684121*^9}, 
   3.727556878721371*^9},ExpressionUUID->"9fe357c6-ca7f-4fa1-a153-\
880f6436c41a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 
   3.7275767933998756`*^9}},ExpressionUUID->"f7a7cda7-7a3d-4fb3-b2d1-\
ffbf58ccb07f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                "}"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, {3.7306533396389585`*^9, 
   3.730653412733721*^9}, {3.7306534790410748`*^9, 3.730653491078511*^9}, {
   3.7306565375544868`*^9, 3.7306565547007227`*^9}, {3.7306569418372684`*^9, 
   3.7306569466166787`*^9}, 3.7336854071770325`*^9, 3.733685529755254*^9, {
   3.7336883828935237`*^9, 
   3.733688383409093*^9}},ExpressionUUID->"c7ef53d0-b7fd-4a36-8b9f-\
2bec594fb7cc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotDataFN", "[", 
   RowBox[{"mySpots_", ",", "mySpotFNs_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], "}"}],
                ",", 
               RowBox[{"mySpotFNs", "[", 
                RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}], ",", 
                 RowBox[{"mySpotFNs", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotFNs", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], 
              ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotFNs", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
             "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7313408926794353`*^9, 3.731340958257808*^9}, {
   3.7313409975455093`*^9, 3.7313409997229137`*^9}, {3.7336855343447123`*^9, 
   3.7336855373388643`*^9}, {3.733685660179097*^9, 3.733685661133805*^9}, {
   3.7336857657391624`*^9, 3.7336857660516815`*^9}, {3.7336858709923058`*^9, 
   3.7336858715622387`*^9}, {3.733685938288226*^9, 3.7336859430045447`*^9}, {
   3.7336860534655013`*^9, 3.7336860632921724`*^9}, {3.733686106551157*^9, 
   3.733686106659053*^9}, {3.733686157592886*^9, 3.7336861585170603`*^9}, {
   3.73368619493834*^9, 3.7336862006623545`*^9}, {3.733686279161891*^9, 
   3.733686284719052*^9}, {3.733686320104744*^9, 3.73368632059907*^9}, {
   3.7336864595329385`*^9, 3.733686461009547*^9}, {3.7336864995873227`*^9, 
   3.7336865002777543`*^9}, 3.733686547048807*^9, {3.733686585779167*^9, 
   3.7336865866083326`*^9}, {3.7336866239977956`*^9, 
   3.7336866247548027`*^9}, {3.733688208547043*^9, 3.7336882304319887`*^9}, {
   3.7336882664848857`*^9, 3.7336882671441045`*^9}, 
   3.7336883145217037`*^9},ExpressionUUID->"5d7fa163-c2ae-4e94-b68e-\
b454dcc8a42f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotDataFN", "[", 
   RowBox[{
   "HCRedTracks_", ",", "myImageInterval_", ",", "my488and561Interval_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mytempSpots", ",", "tempRedOnlyList", ",", "tempYellowList", ",", 
      "tempWhiteList", ",", "tempPurpleList", ",", "mytempInts", ",", 
      "mytempCellFN", ",", "tempGPos", ",", "tempBPos", ",", "tempGSpot", ",",
       "tempBSpot"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempSpots", "=", 
         RowBox[{"HCRedTracks", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "3", ",", "spot", ",", "2"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"mytempInts", "=", 
         RowBox[{"HCRedTracks", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "3", ",", "spot", ",", "3"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"mytempCellFN", "=", 
         RowBox[{"HCRedTracks", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"mytempSpots", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "//", "Mean"}], ")"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"mytempSpots", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "//", "Mean"}], ")"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
               RowBox[{"Range", "[", 
                RowBox[{"2", ",", 
                 RowBox[{
                  RowBox[{"Length", "@", 
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                  "myImageInterval"}], ",", 
                 RowBox[{"myImageInterval", " ", "my488and561Interval"}]}], 
                "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                    "myImageInterval"}], ",", 
                   RowBox[{"myImageInterval", " ", "my488and561Interval"}]}], 
                  "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                    "myImageInterval"}], ",", 
                    RowBox[{"myImageInterval", " ", "my488and561Interval"}]}],
                     "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}],
                 "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                    "myImageInterval"}], ",", 
                    RowBox[{"myImageInterval", " ", "my488and561Interval"}]}],
                     "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}],
                 "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"cell", ",", "1", ",", 
         RowBox[{"Length", "@", "HCRedTracks"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", 
          RowBox[{"HCRedTracks", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "3"}], "]"}], "]"}]}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772569084976136*^9, 3.772569097084089*^9}, {
   3.7753188863815784`*^9, 3.7753189120139766`*^9}, {3.7765540767700276`*^9, 
   3.776554092102455*^9}, 3.776554128734826*^9, {3.776554688662282*^9, 
   3.7765546933038054`*^9}, 3.7765547811317787`*^9, 3.7765548581074877`*^9, {
   3.776554917430843*^9, 3.776554929658655*^9}, {3.776554986619334*^9, 
   3.7765549957437344`*^9}, {3.7765551003254232`*^9, 
   3.7765551009816475`*^9}, {3.7765554671833706`*^9, 
   3.7765554947210336`*^9}, {3.776555823213256*^9, 3.77655582766786*^9}, {
   3.77655597667132*^9, 3.7765560445437665`*^9}, {3.776556390916318*^9, 
   3.7765564166374907`*^9}},ExpressionUUID->"95885b5a-5702-4c2b-b527-\
f7a4d0333ef3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesSFPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.8", ",", "0.14", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, 3.727722548609498*^9, {
   3.727722583207616*^9, 3.7277225860601945`*^9}, 3.7277227131397*^9, 
   3.727722815726414*^9, 3.727722851113195*^9, {3.727722924108713*^9, 
   3.727722928695131*^9}, 3.7277229670202184`*^9, {3.7277230907794256`*^9, 
   3.7277231007245646`*^9}, 3.7277231652633066`*^9, 3.727723256009217*^9, {
   3.727723947145483*^9, 3.727723947230341*^9}, {3.7280542326277814`*^9, 
   3.7280542571551847`*^9}},ExpressionUUID->"837552d6-6355-4313-93ca-\
844d02fd6bf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesSFPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.9", ",", "0.14", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.2"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                "}"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, {3.7306533396389585`*^9, 
   3.730653412733721*^9}, {3.7306534790410748`*^9, 3.730653491078511*^9}, {
   3.7306565375544868`*^9, 3.7306565547007227`*^9}, {3.7306569418372684`*^9, 
   3.7306569466166787`*^9}, {3.7313423755209684`*^9, 
   3.7313423756769686`*^9}, {3.731342412977272*^9, 3.7313424917211113`*^9}, {
   3.7318551752654285`*^9, 3.7318551773305473`*^9}, {3.7318553164345036`*^9, 
   3.731855324306152*^9}, {3.7318555204957695`*^9, 3.7318555237939587`*^9}, {
   3.7318556999222307`*^9, 3.731855709105756*^9}, {3.731855838786173*^9, 
   3.731855873186141*^9}},ExpressionUUID->"b34a6868-a422-40a3-81b9-\
193f371e993c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesSFPlotDataFN", "[", 
   RowBox[{"mySpots_", ",", "mySpotsFN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.9", ",", "0.14", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.2"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], "}"}],
                ",", 
               RowBox[{"mySpotsFN", "[", 
                RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}], ",", 
                 RowBox[{"mySpotsFN", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotsFN", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], 
              ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotsFN", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
             "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, 3.727722548609498*^9, {
   3.727722583207616*^9, 3.7277225860601945`*^9}, 3.7277227131397*^9, 
   3.727722815726414*^9, 3.727722851113195*^9, {3.727722924108713*^9, 
   3.727722928695131*^9}, 3.7277229670202184`*^9, {3.7277230907794256`*^9, 
   3.7277231007245646`*^9}, 3.7277231652633066`*^9, 3.727723256009217*^9, {
   3.727723947145483*^9, 3.727723947230341*^9}, {3.7280542326277814`*^9, 
   3.7280542571551847`*^9}, {3.7313423067557583`*^9, 3.73134231399818*^9}, {
   3.7313426995603204`*^9, 3.7313427440858464`*^9}, {3.7318551148015738`*^9, 
   3.731855117457726*^9}, {3.731855328882414*^9, 3.731855331169544*^9}, {
   3.73185548829173*^9, 3.7318555136173763`*^9}, {3.731855648290079*^9, 
   3.7318556873943157`*^9}, {3.7318558800825353`*^9, 3.731855888850235*^9}, 
   3.7318575285643787`*^9, 3.731857650052526*^9, {3.7318578823234057`*^9, 
   3.7318578840515046`*^9}, {3.7318580190734253`*^9, 
   3.7318580196204567`*^9}},ExpressionUUID->"3ce4fe93-8ab4-48ae-b5d9-\
0f506f312750"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FilterGlobules", "[", "myBlueSpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempGoodList", ",", "tempCrapList", ",", 
      RowBox[{"mytempSpots", "=", "myBlueSpots"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tempGoodList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempCrapList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"(", 
            RowBox[{"FindParticlesWeighted", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", 
                 RowBox[{"spot", ",", "1", ",", "3"}], "]"}], "]"}], "//", 
               "ImageAdjust"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "12"}], "}"}], ",", "1.3", ",", "0.083", ",",
               "imgmask", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "32"}], "}"}]}], "]"}], ")"}]}], "\[Equal]", 
          "0"}], ",", 
         RowBox[{"tempCrapList", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"tempCrapList", ",", 
            RowBox[{"{", 
             RowBox[{"mytempSpots", "[", 
              RowBox[{"[", "spot", "]"}], "]"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"tempGoodList", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"tempGoodList", ",", 
            RowBox[{"{", 
             RowBox[{"mytempSpots", "[", 
              RowBox[{"[", "spot", "]"}], "]"}], "}"}]}], "]"}]}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", "1", ",", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"tempGoodList", ",", "tempCrapList"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.728054666790614*^9, 3.72805468332656*^9}, {
   3.7280547602059574`*^9, 3.7280548810708704`*^9}, 3.728054952062931*^9, 
   3.7280549830387025`*^9, {3.7280550853765554`*^9, 3.7280551613279*^9}, {
   3.728055347744562*^9, 3.7280553479515743`*^9}, 3.728055511776944*^9, 
   3.7280555684181843`*^9, {3.7280556094565315`*^9, 3.728055611055623*^9}, 
   3.728055675714321*^9, {3.728055784592549*^9, 3.7280558147842755`*^9}, {
   3.728055904931432*^9, 3.728055930448891*^9}, {3.7280560985775075`*^9, 
   3.728056098784519*^9}, {3.7280573361462927`*^9, 3.7280573369453382`*^9}, 
   3.7280574552521048`*^9, {3.728057511921346*^9, 3.7280575410900145`*^9}, 
   3.7280575903538322`*^9, {3.728057860578288*^9, 3.728057860818302*^9}, 
   3.7280580091237845`*^9, {3.7318548269587135`*^9, 
   3.731854830748931*^9}},ExpressionUUID->"90c6ba49-526e-48c3-99d8-\
60b351857292"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ErrorBar", "Subsection",
 CellChangeTimes->{{3.7247754101693068`*^9, 
  3.7247754125214415`*^9}},ExpressionUUID->"fee8d20b-42bb-4e72-8c3a-\
813684f8c01b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorBar", "[", 
    RowBox[{"type_:", " ", "\"\<Rectangle\>\""}], "]"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x0_", ",", "x1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y0_", ",", "y1_"}], "}"}]}], "}"}], ",", "value_", ",", 
    "meta_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"error", ",", 
      RowBox[{"mags", "=", 
       RowBox[{"QuantityMagnitude", "[", "value", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"error", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"QuantityMagnitude", "[", "meta", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"error", "===", 
         RowBox[{"{", "}"}]}], ",", "0", ",", 
        RowBox[{"Last", "[", "error", "]"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ChartElementData", "[", "type", "]"}], "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "x1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}], ",", "mags", ",", 
         "meta"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x0", "+", "x1"}], ")"}], "/", "2"}], ",", 
                RowBox[{"y1", "-", "error"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x0", "+", "x1"}], ")"}], "/", "2"}], ",", 
                RowBox[{"y1", "+", "error"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", "x0"}], "+", "x1"}], ")"}]}], ",", 
                RowBox[{"y1", "+", "error"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"x0", "+", 
                   RowBox[{"3", " ", "x1"}]}], ")"}]}], ",", 
                RowBox[{"y1", "+", "error"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", "x0"}], "+", "x1"}], ")"}]}], ",", 
                RowBox[{"y1", "-", "error"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"x0", "+", 
                   RowBox[{"3", " ", "x1"}]}], ")"}]}], ",", 
                RowBox[{"y1", "-", "error"}]}], "}"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",ExpressionUUID->\
"6f0b6d32-b602-486b-a64f-89311c8880b2"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Trim Peak Intensity without Fixing the Sigma", "Subsection",
 CellChangeTimes->{{3.7247754364898124`*^9, 3.724775440457039*^9}, {
  3.7247754957692027`*^9, 3.7247755034016395`*^9}, {3.7247755654011855`*^9, 
  3.7247755676893167`*^9}},ExpressionUUID->"7353d79f-b778-4d01-9534-\
6c3b004f0138"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntSigmaIntergrate", "[", "myMeanTrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"A", " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "a"}], "/.", 
          RowBox[{
           RowBox[{"myTrimtempGauss", "[", 
            RowBox[{"[", "fit", "]"}], "]"}], "[", 
           "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",ExpressionUUID->"ba54da75-3992-4642-9f0a-\
6fe835d7a119"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Trim Peak Intensity with Fixed Sigma", "Subsection",
 CellChangeTimes->{{3.724775626985708*^9, 
  3.7247756465858293`*^9}},ExpressionUUID->"608a76ed-e77e-4854-ba22-\
68db3e957192"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntFixedSigma", "[", 
   RowBox[{"myMeanTrim_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0", ",", "CC", ",", "A", ",", 
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"A", " ", "/.", 
          RowBox[{
           RowBox[{"myTrimtempGauss", "[", 
            RowBox[{"[", "fit", "]"}], "]"}], "[", 
           "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7247756524121623`*^9, 3.724775687147149*^9}, {
  3.727630767396172*^9, 
  3.727630773792183*^9}},ExpressionUUID->"8b365fb4-00ee-4691-ac89-\
24a40bae15f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntFixedSigmaAll", "[", 
   RowBox[{"myMeanTrim_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0", ",", "CC", ",", "A", ",", 
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], " ", "/.", 
          RowBox[{
           RowBox[{"myTrimtempGauss", "[", 
            RowBox[{"[", "fit", "]"}], "]"}], "[", 
           "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7276301415386724`*^9, 3.7276301564210987`*^9}, 
   3.7276307803285947`*^9, 
   3.77125325462321*^9},ExpressionUUID->"640c0fb6-e9db-43d2-a5dc-\
761bd906f9cd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntFixedSigma95Conf", "[", 
   RowBox[{"myMeanTrim_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0", ",", "CC", ",", "A", ",", 
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SqrtBox[
              RowBox[{"2", " ", "\[Pi]"}]], " ", "sigma"}], "/.", 
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "fit", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ",", 
           RowBox[{"MyErrorPropagator", "[", 
            RowBox[{
             RowBox[{"x", " ", "y"}], ",", 
             RowBox[{"A", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", 
             RowBox[{"sigma", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", "1", ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", "1"}], "]"}]}], 
          "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7276301415386724`*^9, 3.7276301564210987`*^9}, 
   3.7276307803285947`*^9, 3.77125325462321*^9, {3.771253301344698*^9, 
   3.771253317951451*^9}, {3.7712534192309093`*^9, 
   3.7712534232585573`*^9}},ExpressionUUID->"e3aef6ea-65f7-4105-b06c-\
ce7a62084753"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get Integrated Trim Peak Intensity and Sigma and Peak Intensity 95% \
Confidence Interval Error Propagated\
\>", "Subsection",
 CellChangeTimes->{
  3.725307697492854*^9, {3.7253099681177263`*^9, 3.725310001941661*^9}, 
   3.771253144082409*^9},ExpressionUUID->"232578f9-4a21-4704-b292-\
e418ec341918"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntSigmaIntergrate95Conf", "[", "myMeanTrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SqrtBox[
              RowBox[{"2", " ", "\[Pi]"}]], " ", "a"}], "/.", 
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "fit", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ",", 
           RowBox[{"MyErrorPropagator", "[", 
            RowBox[{
             RowBox[{"x", " ", "y"}], ",", 
             RowBox[{"A", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", 
             RowBox[{"a", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", "1", ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", "1"}], "]"}]}], 
          "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7253080088086605`*^9, 3.725308086616111*^9}, {
   3.7253081245532804`*^9, 3.7253081564261036`*^9}, {3.7253081882829256`*^9, 
   3.7253082635772324`*^9}, {3.725308330569064*^9, 3.7253083962338195`*^9}, {
   3.7253084602044783`*^9, 3.7253084621205883`*^9}, {3.7253086580737963`*^9, 
   3.7253086603129244`*^9}, {3.7253090274339223`*^9, 
   3.7253090445409007`*^9}, {3.725309093082677*^9, 3.7253092390010233`*^9}, {
   3.725309288875876*^9, 3.7253092914030204`*^9}, {3.7253093924758015`*^9, 
   3.725309399129182*^9}, {3.7253094524912343`*^9, 3.7253094838820295`*^9}, {
   3.725379923149925*^9, 3.7253799249900303`*^9}, {3.726497320170211*^9, 
   3.7264973477820377`*^9}, 3.726497436642132*^9, {3.760826876182366*^9, 
   3.760826897598407*^9}, {3.760827034786384*^9, 3.76082706535353*^9}, {
   3.7712531460948124`*^9, 
   3.7712531533288803`*^9}},ExpressionUUID->"964302f6-fdd2-4b3c-8f6f-\
e3bd24572a6c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Remove Trims which spots are large than 2 sigma for x position\
\>", "Subsection",
 CellChangeTimes->{{3.724775755098036*^9, 
  3.724775846217247*^9}},ExpressionUUID->"10884ae8-510f-4ab8-b229-\
bea13d0e2e69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetGoodTrims", "[", "myTrims_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "myTrims"}], ",", "myTrimtempData", 
       ",", "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Part", "[", 
       RowBox[{"myTrimAllSpotsF", ",", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "myTrimtempGauss", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], 
               "}"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"x", "<", "2"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7251169408171387`*^9, 
  3.725116940823139*^9}},ExpressionUUID->"7058afc7-8c5b-4fbb-9476-\
4f796ab8a1f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Remove Trims which spots are larger than 2 sigma for x position and also \
taking the corresponding Blue Trim (For when there is no existing blue spot)\
\>", "Subsection",
 CellChangeTimes->{{3.7247758552577643`*^9, 
  3.724775902250452*^9}},ExpressionUUID->"2cedf0ed-be45-46c4-ae6d-\
d527ff15465b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetGood0TrimsAndFSTrims", "[", 
    RowBox[{"my0Trims_", ",", "myFSTrims_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "my0Trims"}], ",", "myTrimtempData", 
       ",", "myTrimtempPos", ",", "myTrimtempGauss", ",", 
       RowBox[{"myTrimFSAllSpotsF", "=", "myFSTrims"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"myTrimAllSpotsF", ",", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "myTrimtempGauss", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "[", 
                 "\"\<ParameterConfidenceIntervals\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], 
                 "}"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", "<", "2"}]}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"Part", "[", 
         RowBox[{"myTrimFSAllSpotsF", ",", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "myTrimtempGauss", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "[", 
                 "\"\<ParameterConfidenceIntervals\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], 
                 "}"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", "<", "2"}]}]}], "]"}]}]}], "]"}]}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7251169408261395`*^9, 
  3.72511694083714*^9}},ExpressionUUID->"12ee99a2-9777-40f9-8fe2-\
a55f7cbfdf9e"]
}, Closed]],

Cell[CellGroupData[{

Cell["FilterFitOutlier", "Subsection",
 CellChangeTimes->{{3.71629985262469*^9, 3.7162998590880604`*^9}, {
  3.7177712559439316`*^9, 
  3.7177712581020555`*^9}},ExpressionUUID->"09645c52-1503-45f4-ab7f-\
2d42664ef53b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "removes", " ", "outliers", " ", "based", 
     " ", "on", " ", "intensity"}], ",", " ", 
    RowBox[{
     RowBox[{
     "90", "%", " ", "confidence", " ", "interval", " ", "of", " ", "xy", " ",
       "positions", " ", "and", " ", "the", " ", "size", " ", "of", " ", 
      "sigma"}], ";", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Tatsuya", "'"}], "s", " ", "Recipe", " ", "for", " ", "best", 
       " ", "Gaussian", " ", 
       RowBox[{"Data", ":", " ", "maxDxy_"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"5", " ", "and", " ", "maxSig_"}], "=", " ", "20"}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FilterFitOutlier", "[", 
    RowBox[{"mySpotsFit_", ",", "maxDxy_", ",", "maxSig_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
       "idxSigY", ",", "idxOutliers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"idxInt", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "4", ",", "2", ",", "1"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"x", "<", "0"}], "||", 
           RowBox[{"x", ">", "2"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"idxX90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Differences", "/@", "#"}], "&"}], "/@", 
            RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "5", ",", "1", ",", "1"}], 
             "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "maxDxy"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxY90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Differences", "/@", "#"}], "&"}], "/@", 
            RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "5", ",", "1", ",", "2"}], 
             "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "maxDxy"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSigX", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "4", ",", "3", ",", "1"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "maxSig"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSigY", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "4", ",", "3", ",", "2"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "maxSig"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxOutliers", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
        "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
         "idxSigY"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Delete", "[", 
       RowBox[{"mySpotsFit", ",", "idxOutliers"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7163079773033953`*^9, 3.7163080736239047`*^9}, {
  3.716308283583914*^9, 3.7163083117995276`*^9}, {3.7163083677277265`*^9, 
  3.7163083737850733`*^9}, {3.7175241617528915`*^9, 3.7175241618648977`*^9}, {
  3.7175242033692713`*^9, 3.717524205240379*^9}, {3.7175242379372487`*^9, 
  3.717524239273325*^9}, {3.7175250840096416`*^9, 3.7175250850256996`*^9}, {
  3.717771260303181*^9, 3.7177712633193536`*^9}, {3.7251401938411355`*^9, 
  3.725140216049406*^9}, {3.725140251282421*^9, 
  3.725140265313224*^9}},ExpressionUUID->"7e9e887a-6d55-4981-b194-\
85afb4b5fced"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ErrorPropagator", "Subsection",
 CellChangeTimes->{{3.7247760566022806`*^9, 
  3.72477606271363*^9}},ExpressionUUID->"b1ece991-4722-4115-938c-\
afe25bca5bed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyErrorPropagator", "[", 
   RowBox[{
   "f_", ",", "xmean_", ",", "ymean_", ",", "zmean_", ",", "\[Sigma]x_", ",", 
    "\[Sigma]y_", ",", "\[Sigma]z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "x"}], "]"}], "2"], " ", 
         SuperscriptBox["\[Sigma]x", "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "y"}], "]"}], "2"], " ", 
         SuperscriptBox["\[Sigma]y", "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "z"}], "]"}], "2"], " ", 
         SuperscriptBox["\[Sigma]z", "2"]}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], ")"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", "xmean"}], ",", 
     RowBox[{"y", "\[Rule]", " ", "ymean"}], ",", 
     RowBox[{"z", "\[Rule]", " ", "zmean"}]}], "}"}]}]}]], "Input",ExpressionU\
UID->"0eb85cf7-3557-4fcf-ab75-342e51921296"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting Trims and Filtering Out Bad Spots, also using the 0 frame to take the \
-1 frame trims too, Usually use maxDxy of 5 and maxSig of 20!\
\>", "Subsection",
 CellChangeTimes->{{3.725205412179469*^9, 3.7252054492835913`*^9}, {
  3.725213345770244*^9, 
  3.7252133941380105`*^9}},ExpressionUUID->"0e8edc81-f560-43be-8e58-\
f0d36cc1ffe4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FilterTrimFitOutlier0andFS", "[", 
    RowBox[{"my0Trims_", ",", "myFSTrims_", ",", "maxDxy_", ",", "maxSig_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "my0Trims"}], ",", 
       RowBox[{"myTrimFSAllSpotsF", "=", "myFSTrims"}], ",", "myTrimtempData",
        ",", "myTrimtempPos", ",", "myTrimtempGauss", ",", "idxInt", ",", 
       "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", "idxSigY", ",", 
       "idxOutliers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"idxInt", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"x", "<", "0"}], "||", 
           RowBox[{"x", ">", "2"}]}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxX90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxY90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigX", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigY", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxOutliers", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
        "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
         "idxSigY"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"myTrimAllSpotsF", ",", "idxOutliers"}], "]"}], ",", 
        RowBox[{"Delete", "[", 
         RowBox[{"myTrimFSAllSpotsF", ",", "idxOutliers"}], "]"}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.725201383381035*^9, 3.7252014327208567`*^9}, {
   3.725201505541022*^9, 3.725201605744753*^9}, 3.725201708930655*^9, {
   3.7252042208363276`*^9, 3.725204240246438*^9}, {3.725204271763241*^9, 
   3.725204426520092*^9}, {3.7252044861655035`*^9, 3.7252045014453773`*^9}, {
   3.7252046446155663`*^9, 3.72520471671469*^9}, {3.7252051673364644`*^9, 
   3.725205171063678*^9}, {3.725205597512069*^9, 3.725205627703796*^9}, {
   3.7252134499492025`*^9, 3.72521349571082*^9}, {3.725213660832265*^9, 
   3.7252136725739365`*^9}},ExpressionUUID->"718d344c-8f3f-4434-884e-\
da7f151fe001"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FilterTrimFitOutlier", "[", 
    RowBox[{"my0Trims_", ",", "maxDxy_", ",", "maxSig_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "my0Trims"}], ",", "myTrimtempData", 
       ",", "myTrimtempPos", ",", "myTrimtempGauss", ",", "idxInt", ",", 
       "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", "idxSigY", ",", 
       "idxOutliers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"idxInt", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"x", "<", "0"}], "||", 
           RowBox[{"x", ">", "2"}]}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxX90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxY90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigX", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigY", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxOutliers", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
        "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
         "idxSigY"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Delete", "[", 
       RowBox[{"myTrimAllSpotsF", ",", "idxOutliers"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7252134259508305`*^9, 
  3.725213430366083*^9}},ExpressionUUID->"a04c632a-20e4-4880-a9ef-\
20fd5927f3e8"]
}, Closed]],

Cell[CellGroupData[{

Cell["TrimsForSpeciesPlot[outputDirectory, Color, goodspotlist]", "Subsection",
 CellChangeTimes->{{3.7268579396390133`*^9, 
  3.726857981200719*^9}},ExpressionUUID->"84d9f2a1-4790-4a1b-b18e-\
2b35f96dcc09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"outDir_", ",", "myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"upto", ",", "myIs", ",", "temp", ",", "outName"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"StringPosition", "[", 
                RowBox[{
                 RowBox[{"goodspotlist", "[", 
                  RowBox[{"[", 
                   RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                 "\"\<_sorted\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotNumberRGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_Xred_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_Yred_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Ired_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"outDir", "<>", "\"\<\\\\\>\"", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.726854838016556*^9, 3.7268548682469263`*^9}, {
   3.726854904698144*^9, 3.7268551902937565`*^9}, {3.7268552970160575`*^9, 
   3.7268553011068573`*^9}, {3.7268554106137643`*^9, 3.726855484499131*^9}, 
   3.7268555620137763`*^9, {3.72685577239616*^9, 3.72685586117972*^9}, {
   3.726855939252792*^9, 3.7268559402713423`*^9}, 3.726856018187831*^9, {
   3.726856051880597*^9, 3.7268560521150656`*^9}, {3.7268560902562685`*^9, 
   3.72685610529656*^9}, {3.726856135485732*^9, 3.7268561538423824`*^9}, {
   3.726856193202156*^9, 3.726856200543499*^9}, {3.726856864219626*^9, 
   3.7268568862859383`*^9}, {3.7268569165790906`*^9, 
   3.7268569282250195`*^9}, {3.726856965044675*^9, 3.726856965982503*^9}, {
   3.7268570561885405`*^9, 3.72685706231516*^9}, {3.726857113004418*^9, 
   3.7268571209415483`*^9}, {3.726857222971142*^9, 3.7268572626764574`*^9}, {
   3.7268574457362967`*^9, 3.726857450594911*^9}, {3.7268576496073556`*^9, 
   3.726857664880804*^9}, {3.7268577733453007`*^9, 
   3.7268577746759357`*^9}},ExpressionUUID->"4e3b3c92-05d6-439e-909a-\
710ea4bd5de7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "upto", ",", "myIs", ",", "temp", ",", "aF", ",", "outName", ",", 
      "outDir"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"aF", "=", 
        RowBox[{"\"\<\\\\\\?\\\\\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringPosition", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
         "\"\<\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"StringPosition", "[", 
                RowBox[{
                 RowBox[{"goodspotlist", "[", 
                  RowBox[{"[", 
                   RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                 "\"\<_sorted\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
         RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_XR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_YR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5IR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"outDir", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"aF", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.726854838016556*^9, 3.7268548682469263`*^9}, {
   3.726854904698144*^9, 3.7268551902937565`*^9}, {3.7268552970160575`*^9, 
   3.7268553011068573`*^9}, {3.7268554106137643`*^9, 3.726855484499131*^9}, 
   3.7268555620137763`*^9, {3.72685577239616*^9, 3.72685586117972*^9}, {
   3.726855939252792*^9, 3.7268559402713423`*^9}, 3.726856018187831*^9, {
   3.726856051880597*^9, 3.7268560521150656`*^9}, {3.7268560902562685`*^9, 
   3.72685610529656*^9}, {3.726856135485732*^9, 3.7268561538423824`*^9}, {
   3.726856193202156*^9, 3.726856200543499*^9}, {3.726856864219626*^9, 
   3.7268568862859383`*^9}, {3.7268569165790906`*^9, 
   3.7268569282250195`*^9}, {3.726856965044675*^9, 3.726856965982503*^9}, {
   3.7268570561885405`*^9, 3.72685706231516*^9}, {3.726857113004418*^9, 
   3.7268571209415483`*^9}, {3.726857222971142*^9, 3.7268572626764574`*^9}, {
   3.7268574457362967`*^9, 3.726857450594911*^9}, {3.7268576496073556`*^9, 
   3.726857664880804*^9}, {3.7268577733453007`*^9, 3.7268577746759357`*^9}, {
   3.726859333401745*^9, 3.7268593857175007`*^9}, {3.726859435436879*^9, 
   3.7268594362807207`*^9}, 3.726859657067128*^9, {3.726862050280302*^9, 
   3.7268620845633063`*^9}, {3.7268621385972447`*^9, 
   3.7268621415411873`*^9}, {3.726862193582514*^9, 3.7268622320475135`*^9}, {
   3.726862281230372*^9, 3.7268623251947093`*^9}, {3.726862495125786*^9, 
   3.726862535374193*^9}, {3.7268625705858917`*^9, 3.7268625868553133`*^9}, {
   3.7268626344354897`*^9, 3.7268626850584717`*^9}, {3.726864448445756*^9, 
   3.726864473860623*^9}},ExpressionUUID->"dc9fd740-e1fe-4647-98b1-\
9d5fd9a2cc50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "upto", ",", "myIs", ",", "temp", ",", "aF", ",", "outName", ",", 
      "outDir"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"aF", "=", 
        RowBox[{"\"\<\\\\\\?\\\\\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringPosition", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
         "\"\<\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"StringPosition", "[", 
                  RowBox[{
                   RowBox[{"goodspotlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", 
                 "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
         RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_XR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_YR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5IR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"outDir", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"aF", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.727025999614478*^9},ExpressionUUID->"3066f3af-6beb-4312-a537-\
53b75cb37198"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"outDir_", ",", "myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"upto", ",", "myIs", ",", "temp", ",", "outName"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"StringPosition", "[", 
                  RowBox[{
                   RowBox[{"goodspotlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", 
                 "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<AllParameters.m\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
         RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_XR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_YR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5IR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"outDir", "<>", "\"\<\\\\\>\"", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.726854838016556*^9, 3.7268548682469263`*^9}, {
   3.726854904698144*^9, 3.7268551902937565`*^9}, {3.7268552970160575`*^9, 
   3.7268553011068573`*^9}, {3.7268554106137643`*^9, 3.726855484499131*^9}, 
   3.7268555620137763`*^9, {3.72685577239616*^9, 3.72685586117972*^9}, {
   3.726855939252792*^9, 3.7268559402713423`*^9}, 3.726856018187831*^9, {
   3.726856051880597*^9, 3.7268560521150656`*^9}, {3.7268560902562685`*^9, 
   3.72685610529656*^9}, {3.726856135485732*^9, 3.7268561538423824`*^9}, {
   3.726856193202156*^9, 3.726856200543499*^9}, {3.726856864219626*^9, 
   3.7268568862859383`*^9}, {3.7268569165790906`*^9, 
   3.7268569282250195`*^9}, {3.726856965044675*^9, 3.726856965982503*^9}, {
   3.7268570561885405`*^9, 3.72685706231516*^9}, {3.726857113004418*^9, 
   3.7268571209415483`*^9}, {3.726857222971142*^9, 3.7268572626764574`*^9}, {
   3.7268574457362967`*^9, 3.726857450594911*^9}, {3.7268576496073556`*^9, 
   3.726857664880804*^9}, {3.7268577733453007`*^9, 3.7268577746759357`*^9}, 
   3.7269534731566534`*^9, 3.771109640582051*^9, {3.7711096962699537`*^9, 
   3.771109719093383*^9}},ExpressionUUID->"8de62135-d597-47ab-af2f-\
7f45c9a5e2c4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"goodspotlist", "=", "goodredonlyspotlist"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7269528111887913`*^9, 3.7269528263976607`*^9}, {
  3.7269531525263147`*^9, 3.726953155790501*^9}, {3.7269532251354675`*^9, 
  3.726953227918627*^9}},ExpressionUUID->"e2609b6e-cdf0-485c-a83d-\
ca0e1c8758b5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"spot", "=", "180"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726952842898605*^9, 3.726952844877718*^9}, {
  3.7269530610390816`*^9, 3.726953061118086*^9}, {3.7269530994222775`*^9, 
  3.726953099598287*^9}, {3.7269531855192013`*^9, 3.726953209518574*^9}, {
  3.726953257406313*^9, 3.726953257582323*^9}, {3.726953322943062*^9, 
  3.726953419806602*^9}},ExpressionUUID->"942d1b5b-37b5-4537-aa96-\
4ba645406af4"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"aF", "=", 
    RowBox[{"\"\<\\\\\\?\\\\\>\"", "<>", 
     RowBox[{"StringTake", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"StringPosition", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
          "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
     "\"\<\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"upto", "=", 
    RowBox[{
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", "\"\<Analysis\>\""}], 
      "]"}], "//", "Max"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"myIs", "=", 
    RowBox[{
     RowBox[{"GetTrimPeakIntFixedSigma", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//", 
     "Flatten"}]}], ";"}], "*)"}]], "Input",ExpressionUUID->"5cf83643-d33a-\
46b3-a818-7bf33516f1c0"],

Cell[BoxData[
 RowBox[{"(*", "aF", "*)"}]], "Input",
 CellChangeTimes->{{3.7269528472968564`*^9, 
  3.7269528479818954`*^9}},ExpressionUUID->"3b30e546-c9df-426f-b575-\
75540296413e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"myColor", "=", "\"\<RedOnly\>\""}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726952869809144*^9, 3.726952873422351*^9}, {
  3.7269531378384743`*^9, 3.726953138414507*^9}, {3.72695323532705*^9, 
  3.726953237710187*^9}},ExpressionUUID->"4d68e1dd-974c-46c1-83c9-\
7ee3a29ace8e"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringPosition", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              "\"\<_sorted\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
         "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
         "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
      RowBox[{"goodspotlist", "[", 
       RowBox[{"[", 
        RowBox[{"spot", ",", "2"}], "]"}], "]"}], "\[RightDoubleBracket]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outName1", "=", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"upto", "+", "2"}], ",", 
            RowBox[{"StringLength", "[", 
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
      RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FrameN_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<_XR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", "\"\<_YR_\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5IR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5Igreen_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
    ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.726953115824215*^9},ExpressionUUID->"f5c5d5e9-f084-4f14-aafa-\
c7cfef8b5e22"],

Cell[BoxData[
 RowBox[{"(*", "outName1", "*)"}]], "Input",
 CellChangeTimes->{{3.726952859411549*^9, 3.726952860686622*^9}, 
   3.726953119438422*^9},ExpressionUUID->"ad1128b2-70fe-4bf9-ba45-\
ade3f42040cf"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"StringPosition", "[", 
    RowBox[{
     RowBox[{"goodspotlist", "[", 
      RowBox[{"[", 
       RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", "\"\<_sorted\>\""}], 
    "]"}], "//", "Max"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7269528923344326`*^9},ExpressionUUID->"e3d09b4d-c09d-411b-847e-\
c85510c888ae"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"goodspotlist", "[", 
     RowBox[{"[", 
      RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", "\"\<_sorted\>\""}], 
      "]"}], "//", "Max"}]}], "]"}], "*)"}]], "Input",ExpressionUUID->\
"5518a18b-311f-4cef-9ef7-f698ae385e6d"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"goodspotlist", "[", 
   RowBox[{"[", 
    RowBox[{"spot", ",", "1"}], "]"}], "]"}], "*)"}]], "Input",
 FontWeight->"Plain",ExpressionUUID->"6dedae5f-d702-4cdd-b6ac-5d481ee78e48"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", "Min"}], ")"}],
    "-", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726952899757857*^9, 3.7269529049101515`*^9}, {
  3.726952990800064*^9, 
  3.726953019710718*^9}},ExpressionUUID->"01c32e7e-baae-4700-b1bc-\
04f607a43057"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"StringPosition", "[", 
               RowBox[{
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", 
              "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
         "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
         "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
      RowBox[{"goodspotlist", "[", 
       RowBox[{"[", 
        RowBox[{"spot", ",", "2"}], "]"}], "]"}], "\[RightDoubleBracket]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outName", "=", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"upto", "+", "2"}], ",", 
            RowBox[{"StringLength", "[", 
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
      RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FrameN_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<_XR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", "\"\<_YR_\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5IR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5Igreen_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
    ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7269530449141593`*^9},ExpressionUUID->"10418ce5-7bff-4357-8e92-\
679ce96dfc73"],

Cell[BoxData[
 RowBox[{"(*", "outName", "*)"}]], "Input",
 CellChangeTimes->{{3.726952859411549*^9, 
  3.726952860686622*^9}},ExpressionUUID->"35683191-d4da-45b6-b4d4-\
a6558ffe6c50"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"outName", "\[Equal]", "outName1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726953125224753*^9, 
  3.7269531297580123`*^9}},ExpressionUUID->"99637fa1-d56f-473d-9b69-\
30bcb5afc077"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.6483041433283873`*^9, 
  3.6483041519288793`*^9}},ExpressionUUID->"695efa60-10a1-4711-a763-\
a62af2c5b398"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Reading in Maximum Projection Tif Images ",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 CellChangeTimes->{{3.5831236302316623`*^9, 3.5831236326916656`*^9}, {
   3.6097111426870265`*^9, 3.6097111439581537`*^9}, {3.6422513183492937`*^9, 
   3.642251333965187*^9}, {3.6783136569918723`*^9, 3.6783136621191654`*^9}, 
   3.678316094481289*^9, {3.7792037926619463`*^9, 
   3.779203800389388*^9}},ExpressionUUID->"fc889988-50c3-47a3-8b58-\
7f048afd8549"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FileNameSetter", "[", 
    RowBox[{"Dynamic", "[", "mymovie", "]"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "mymovie", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.651503548625061*^9, 3.651503549729124*^9}, {
  3.6515036971455555`*^9, 3.6515037273852854`*^9}, {3.6515038052497387`*^9, 
  3.651503807864888*^9}, {3.6515048066830177`*^9, 3.6515048169146028`*^9}, {
  3.6515052946509275`*^9, 3.651505295114954*^9}, {3.6515053260127215`*^9, 
  3.651505326890772*^9}, {3.651521020023368*^9, 
  3.651521093823589*^9}},ExpressionUUID->"fc4159d6-b67d-4791-8c90-\
66b700a6ccff"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{Dynamic[$CellContext`mymovie],"Open",All},
    "FileNameSetterBoxes"], ",", 
   DynamicBox[ToBoxes[$CellContext`mymovie, StandardForm],
    ImageSizeCache->{49., {3., 9.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7065812023028316`*^9, 3.708244694989421*^9, 
  3.7088139612807713`*^9, 3.713542439089244*^9, 
  3.7144112771700954`*^9},ExpressionUUID->"1b086bdb-f041-4ed4-9767-\
e42304738c8d"]
}, Open  ]],

Cell["\<\
This will partition a three color movie, if the movie is not three colors \
then an error will occur\
\>", "Text",
 CellChangeTimes->{{3.7792156583826265`*^9, 
  3.7792157072784233`*^9}},ExpressionUUID->"328d44f7-a36a-4cab-aed5-\
f755436641f3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymovie", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"FileBaseName", "[", "mymovie", "]"}], ",", "4"}], "]"}], 
      "\[Equal]", "\"\<AVG_\>\""}], ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"mymovie", ",", 
       RowBox[{"\"\<AVG_\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
     "mymovie"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myColMovie", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "mymovie", "]"}], "//", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectoryQ", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
        "\"\<Analysis\\\\\>\""}], ")"}]}], "\[Equal]", "False"}], ",", 
    RowBox[{"CreateDirectory", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
       "\"\<Analysis\\\\\>\""}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analysisFolder", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
    "\"\<Analysis\\\\\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7174432452321424`*^9},ExpressionUUID->"99d09a31-5936-41fa-b136-\
bfd628c9d02b"],

Cell["\<\
This is making an average image of the movie to help make a mask\
\>", "Text",
 CellChangeTimes->{{3.7792157124147167`*^9, 
  3.7792157303987455`*^9}},ExpressionUUID->"6ea85afc-fd78-4670-a379-\
4ae1fe52f30f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileExistsQ", "[", 
      RowBox[{"analysisFolder", "<>", "\"\<_avg.tif\>\""}], "]"}], "\[Equal]",
      "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"analysisFolder", "<>", "\"\<_avg.tif\>\""}], "]"}]}], ";"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Mean", "/@", "myColMovie"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"analysisFolder", "<>", "\"\<_avg.tif\>\""}], ")"}], ",", 
       "avgImg"}], "]"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.779204378359446*^9, 
  3.779204380966595*^9}},ExpressionUUID->"1a065ae7-3afa-43bb-b523-\
dd282c81c676"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Masks of Cytoplasm and Nucleus", "Subsection",
 CellChangeTimes->{{3.678650616049817*^9, 3.6786506203690643`*^9}, {
  3.678650695665371*^9, 3.678650698023505*^9}, {3.7029286067245507`*^9, 
  3.702928608107577*^9}, {3.7792038561015744`*^9, 
  3.7792038656371202`*^9}},ExpressionUUID->"ccf14e31-c0ed-473b-bb58-\
1f460cdfeafa"],

Cell["\<\
Choose a nice threshold first such that you can make out the shape of the cell\
\>", "Text",
 CellChangeTimes->{{3.7792044022668133`*^9, 
  3.77920441794171*^9}},ExpressionUUID->"46882a4f-d4b3-4632-8eae-\
27a9d597e205"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"avgImg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "//", 
    RowBox[{
     RowBox[{"ImageAdjust", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"threshold1", ",", "threshold2"}], "}"}]}], "]"}], "&"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose threshold such that the shape of the cell can be visualized \
and CLICK\>\"", ",", 
     RowBox[{"thtemp", "=", 
      RowBox[{"{", 
       RowBox[{"threshold1", ",", "threshold2"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"threshold1", ",", "0", ",", "0.2", ",", "0.001"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold2", ",", "0.1"}], "}"}], ",", "0", ",", "0.2", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",ExpressionUUID->"ec9681ed-19ae-4e20-\
a311-f2c389ea8482"],

Cell["\<\
Run this next line to see your selected average image with the desired \
threshold. Click on the image and select the mask tool to create and copy the \
mask image below into the \[OpenCurlyDoubleQuote]mymask\
\[CloseCurlyDoubleQuote] \
\>", "Text",
 CellChangeTimes->{{3.7792044240380583`*^9, 
  3.779204470229701*^9}},ExpressionUUID->"f9cf6894-2e4b-454f-9589-\
17feab33f8eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageAdjust", "[", 
  RowBox[{
   RowBox[{"avgImg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thtemp"}], "]"}]], "Input",
 CellChangeTimes->{{3.705511223008813*^9, 3.7055112427609425`*^9}, 
   3.705513781923174*^9, {3.715278924878066*^9, 3.7152789249820724`*^9}, {
   3.7156096127093287`*^9, 3.715609612853337*^9}, {3.7700333052365737`*^9, 
   3.7700333063147774`*^9}},ExpressionUUID->"d8da2366-e72e-47ae-ac4f-\
12ff0387465d"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxcvWGEo+vWNvjuT4spo6kR8mPX/VRn5MemhRibIuTHHkXIsDU18uNQxBfz
nm+ayPjeM23qE86hKTLOoSlhezVF6JemCP3RlJj60RShXpoiZGhKqB+bIuRH
U4Qa89zruq51Z3+iqlLJkyepVNZa17rWtdb6H7v/x9Gf/8M//dM//eW/y78d
/cf/63/+l3/5j//lf/0f8l/a/b+8/k/9f/7fWv3/85//0z//y/908L/H4/7p
P+Drw96Hvd/2Fns3+c9Pe1f5tfj1W/49Xj7lt3+yS7z+2148+oaXdX7Lwq4t
7NYFj1rn33/Lf7/PL/GeRX7LvZ1jYbdd5V83dsu9HR1vW/PnYu8p//5kt8Rz
P9n1+72dsBOe8ltKIR4Zb90JCzsy3h5/VvJ7SgHP8LSXjkqPvbHb7vMjd/Jj
4/cbPls8vmJHre25nvIz7dilYl8Vu6USanZMy26LR5TsPvxc7zXsmh6D3/Co
ePQ6P2/NztQKrfzeCi87dkTDLqX8nhrvxbWa3VoL3fx6Owzz74P80s+vN8Io
vwzz6+P8+zC/dRim+WVil1l+68x+TsKct4/zr2n+fZl/zcPKrsdb9XMeNvZY
HTfws47s8SN7nvhsk/z5B/m1EV8DnnGWn3mW/zazc8R7x3b2oX8N7DxTu2eY
Hx1fGx4XX8/SXucsvz631zC340Y818iuTXiLfhva+zG0S5/fu/ntg/x7/Grn
7128f2S/x1u69v717V2u2fvZ5W8tO0M7/x5vq9jf2M5vje99i7/hDG3+N9r2
ODxPm/+lgZ0NRw95T3zMiH/JkP8DvEsz++/07S9q2XMP+ax4TQ0+Y8tedzxr
w15Ny27B/W2+ji4f27afXT5rvFaz14G/e8i/Mp4vngM2HW19nVvtb2bFH8wX
3JjtR0v+u9nuIv/5G2//YPct7Lho0TfmNe7NA6zt90921D09xJX5B3iZK94C
e1+YL1jzO7zAjfmMK7v33qw2fsUzR/u6N1uMP+Pv8b5oldHWb+xatDt5hngp
mfXhXE/uZ3ArLL1kj4Llrvdq/L3Es+L3aKU1eoOSWWjJbsFjGna2ivsMPGZt
Zy3ZsRX6jzY9Amx/Jz9T286DR+CMLbN82T6euWuf7D7/cyP7TM9o/WP7xOO2
aGGw8InZ25SWMrLPGz53I1razGwDHmKZXwrZOPcBI/uMTsxiJ7S1vv0ObyGr
H9lzzsz6o+1u8vMs6Wtw/5A2PKOPmdurwCuJ9r8y+4fPmtprgB/a9gKwbRwX
f8LG4Z8m9grhlfA3wn76dhnZNfnLIS2xb+9Zm5bZt/cfFisr69s7DZ9asf9G
347u8zENt8Yu7+vzDPGeoX313TO1+bPP/9OE7//S/s6J/ZUDvsoB/7/Rrvv0
B3g2PHOFnijaeslfFX6HR+jTX/XpvQd8RNc8BXxEn4/Cq74yq79ifL/yaP+b
XT7ZrZ/MZv9qSAHHfDArhYXjMTdmwbDzG6KHNaM+7osRe2FWem/36Ngbs/61
XWIEByaAR1jYMdH2ozVf7SEqr+krKvYuPNmRQAb3e4jUJT7LjvuHEj2GkEH8
Hl9NtHfFYVh7PEctwH80AnABIneFkX6998RHtSzGl+gHdszCS/a9Ybe3+DjE
fkX4Gv9LwA4Nu6eS/yWydXgBxJ54Xf/hvn0S4n9wRvuP9jhwC492v2L0nthn
bERUED9pxWzG6DMx+8LRiMAj+72QrcwH4FMJe1wy6o7dlwABzGiBc/Mqq9DM
NrkHmJl1d+k35nb0jM835m9jO2ppVg4/Nc0fPzaLGNtzruxWeIAhfcLcfNfU
zgb7H+fPM6UvgS/CGeF7+va6EfFkD23a2ZARvGt2UfMYDT8xNLvoO1ZoMeL3
7f42LV/eQBG3xrg74jN0DXOM7N42/w8z+1sLWUQ8G/sr5+YPhn6uBl9rg1Fd
/qvPVywP1uBrb9FXtM3rDOyZanyFDb5GIQHE/gERT4X+7u8Wkf8zI/MVY3q0
8g97f7cv2PCVXftg+GBhv8NPCKnDnu9puVdm0Qvehtj/yX5eMeJf8UhY+b1H
+BvmCzjTFb3DvVn7veH5pz38RHStmd3dE+uv/VKyfECvCBEdHgO4/J4IoEQL
3mHErvGoe/oO3AfkX6E3qDCm75h9xsfIhmuG8yvEB/EV1+x/UzOv0LDHAJPg
k6evmp0LvqBN/1DhZ7Ni12X7wN19t0R8+pe0sIlH4Jmh+Wgxc4vXc7OZudnq
lPF0Y7Y/tc/sxnA4job1AU2M6T+mZrW4H9Y3oEVPzX7rWTXbGOYYECPgUWO+
nrm97omde8bbhELG9jP6J8X/pd0LFDDluTbEB1NmBHgexP4lf47sOSZEvkOz
LEV+2GeLWLjLOD+gVbeYg/U9d+jTcnBM1y8t9wUp+g8YVxHru/Q78VmRR435
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
TjfEzrFRSGwDdm9qgk6NVp4y/pLzAtAGR6t9tw+MoL74Skj7M9TBWwvS8673
1N/TYn0QE0txhKbw6THosO0SO3S9brddfQeah35HHfddRvuaewzFbvkGcf8j
WveUXLy4+QGxvqp425sY2l7VQ6W1HTSfTfPU+7T+gVcBsLNPFZwxI36a8TKj
t0cmIE4G0+uqW72+HfusJA3MuWN9xLcmK+RnXpdXV4r4uw45/p4fLcuG8gYs
/JHzZsi5O8zyL7yf9dri8K3dClu/zbDbAtr2GO2vGdHvsjt2wN1x/u2DWc0d
M4JH8oC6/zKPpQ92TRX1yJnf2de1eYQLepxLvpIT5hpnhk1QgwcXEV/Bwf4d
NQBnxkpeWO2tk50y7qq2uuFWFO0vmlMfsKLyEiih6PUDKC8jN5lZZ+/b/PLO
eL5o+z+++CWP/L/ml2j/v+bXI/5/vY/Z/6pp1l1lveH8RfQiaJ8JqvSzoG1m
U48hI1b90JUwZ7RPtUD1EYPREJs4c+xfzDQZeUZlgHj8nSA9DzoBtrfqxUuL
FXf02YCRr7jlA71DoasePfXkQ88v9W2DVfjGFjJAVzNUPdqX13IVQJ81PnH4
mpSt7txG0NRjnE+9+ZrkrWqedL8tx+nY5TDhe1cKQ+ZPQvipWq8zDB3p4xZk
/+0gZZ80/Umbgfr+JGj7AqZL91mfmQR1ms+pN9k4+9fJ4tb4TpY0Lx3m9KcZ
+oBg8z2LaifM/uuM+71MKnmp87F7UtyeUPwZ+bIeUS2OumSefmbR+pp5t6z1
gmj8gnW6S9O93loGABTwyO/oe7k123wwhu/WdHJ3hhAezcov7VHKHu6oposq
/mfWOXtpx12yMohrRzzykjWCW/NCp1tcRFTcXFJ1GD1W9C7n5O7BnmCGAmYj
Yh+ppnlqv/HK5g0tg6YOQ2UQ36sHq/vFen/M9yPT90Nu6T+9iJcfc7v/R+4H
/pRb/0dTAcV+AGkieva/QOcwZq5hk9GSlwnzddUf1bE7YYzH7OFpgFpwRZYf
KsEJmcMlEcKcuYAmjaKmPOHz4GzKzbWHe7uv58mqAdq8oQqBZuvseH+d6nmp
Ox8TOKTnS+qbdqjRh6TevEpoeI6tnlv111RcRyNOD4p6dO2qvtfld0zlS5kB
8oUBscA4QBeoKV2apj5khVB6HnVQt8nuAR0IdQwN/8vGNatZSmHtklKdb8rK
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
rdbwzLuXn+1rvgo4ReT9R4z2mC5StOtLw/tLRuulbyZcki9SdJr4Z3Hin2FZ
9sb6fzA7VNsOk55wGdLuj3hsN6jnDv126rDT1KzUbZe25iVP0Q3aR6x+G029
R66gmfdQ6PUNQyjHVw4w9Xr9hPaq+p36bHSbZncNg+ZpjENS504Zx8UBauae
pqgpvs/oVaN/nPw3+blwQOqe1kZI2Kw2Q8rWpfKZE1ttiLlWhhk00VFdfsjf
sN9DOz0jA6idueeMFJeM2Yjlmm33kGme9oPZPFj8ayKCa8vuNQnn1rjCR3a/
X3OK5qPF/ccMqr5n++jef0at7WvyZMdm9ajHvTSe7i3rc+8sS39vVbivhuu/
k9H/ynu+mId4R6QfY/hXu/VH6455Z51ysFDYNaw9TsqONvu73fuc2tnfLab/
YPd8M3vHsV/2f7Xemp9MZ/ecmtv4O44FAvhmvugLa4yfnbfM9l9yNtk1uyGw
b0zzDqGsln7ifEtZpR1m13xvkVtpXtm1oYCL7JZVFMwmiP72jFVX6I6atPwO
GYAq6/5LV4KCD4DFz7ciFOYBDxyBqi49ZYVJGec8qOqsT++McwbwucYUMCFh
8HYlV/KglqetutqGh8gsfV6bfN3QI/qAPHzagKOKfz9o4zV0P2N6ii6tvRs0
H0vdtsg1kOFDrYuqn2bsYGcvYjj4vVHQbiPg8dS1M2JlfxQ0HxF4/oic68zs
VT0/ygfwzqeeiznjueom8BvKtfR+694ZNVsTeuQlLV6sbrxX27i1jfOItfxT
Ru1HsnPXmaZmPrCb9TLTjLxH9qJe0lPgu2bwSdvzaJ/JbP+Cn0dU/GJMesVO
2kPurX3Itut2UOXI8j9bRH5l2T8qc+8tWn8meo+x+Itdx5FfzSPEmXg/WC8M
rPl3i8nJUhG1Yb8/cFred3vUF0b7H18oU3hus3TwiHjMTy/+Ytn+7+YN0G/z
p/z7n15gAv+vfCzQwnurTB6b9T+yyyFmVbv7F8ROZ1QFnFJbhU4LTBi+sGrB
Nasyt/Spd6ylxKnD6AuE0ueO3veWsxHOqOWClrDD/3fZOb8j9hhCC7AJyAmm
jBkTxv6Uvy+5JUjcnrAmNomlT6/QZ7T5MnG/zrgh2zU3S1ZnnmZntN3SpduD
RWoWh6bxth2zg8NTh27C8kNabov6GzzTiNyjunTBDo6DVP2anTeiBxiwRof+
m7FjBemg0+bU+GzLoI5obU2A+m5I60YmdcTO2yV1Upq1HNHDJmheuuakzoJ2
QA7DkvrJGf0rZjXNgqr6c77PiPIr8xcrznVJu6WqnDbV8RmcF1SIIjZl+6rD
q39NE3QfLa4/cA4W7n2wx2GeNo59SSXfLqdm3HIuD+Z2CJtCVY/6O2p66J5B
lv2FKrvX3G7zhbV77Lb7Rt7+d2P4YaHfzCt8JX8X4zm0sM/Nwp/nKOBPFv9/
Ndv90TTz6J3/wbSzYPB+sFu/mpXHa89fIPY/f4FJO79ah/2vdr6fzavE8/xg
HTjPzS/8ybrwMJPru70ScJiaR7Lr+kbMBzjL0oyQC8Nh0F1gfuCjsyvP9sHE
aA7iLSsCD9mFI4SHrRrMBZVY2LIAxVbBp49Uqf5fcd9TmgiqCaTqB1rRnpFp
SlGivsB50CbDNBkQfmLiXkKYU5mFul01DXfEyjxsv+L2nzpp9Tuy/nHQzK2+
2z/qe0L8Q0cJU94zNu5uSjsdhKTPnQdtxhE+wNeUngeTeoaM4VD3DLwWOglD
5uoj5kjKBoAO0obl+F4UbddDkXOegaI21EoL48N6Z149TVa9YQQvZlD6FLMJ
ve7cmYACp8bjWbRBCmeGhlga8KOt6Z2X/Owh6h9QsXbnE+0eOE33kfn8M87e
i7e85IQ8Tda85WcVNv/I/n3VrXbZpXfM7P9wX1vrj8nzfaMFfzT8rhz+Ky/I
4j/SRyDCfzQk/914ue/WE/urWfpzi8O/mDY+Rv4fc9v81WZlYWrOc5uc85PZ
9C/WN/8jo3fMFf5kHgGP/8ms+Rezblx+sWf5k9n+T3bGX+2cP9OvxK68b1Zf
+Ep18QFVDQ9bE8OuiahUUTkn43rnjP+FV1LPyBScU4N1R/TQy86ceb00+z+h
cgN6rg77/k7I+xVdb4ytTRtWgoqcCDqjMizV/VQFFMf0xy2BRXJL8XNYzrSz
JHGAGzJO0P9oy9Tc8n/042jvrSbnaFom8Hnfc4P4VaHl4rHqsk8K3DSHZ2gW
L2Q/ZhYwYq4AHyFGfkS8PiB3hzofGIFZkCZAqhtk9FNnQzQXSbNOlaWPiI+i
zc3snSpnmLEEZD4O2o4GdhUZkmp0s6DKi/iVonVsa85CfPwmaGMs3uvoGY6I
8LDZFb53HgqcKldgv4+me3SozhdHf0t1zh1ZpVtOv9wle4dZeOCuMF1id18b
NO+sQoW5+Q/M9w/JSmF6Dnp10K1/yK57KPOgl/3ouf4XQ/+fWXd7R1T+nZEd
Wy6jdYlx/8Zc/k/GxH0z5B59wa9miz+b1f9sfiHOxseGjL9xZuY/Xvz35f+a
3/aL2e+v5hl+svuem0f4vv83u/77/j9o+/F5/vXF38zSf7GZG7H7/i+GCX42
PxGn8YlPgDr3wHoYgK0O98WwPGaaEXjh2opbTj7VtlHtL7+ml7gjAwuPAUXB
nXMyF1QZd7zq1/HNDXXr/9cW16LpDcucQhgxPHoBsaO4mqmGP2fcnpNxVqV5
RTtY8XOvGd8rxi3ofsArwjbEbIHLwowd7bNCzWxIDi9N4gOqB97vkwFQL662
6IyD+nOR0S/DOGhfpibuY67uJEjlp+lc6tUZhnmQqheaHM3ZwLMgyvdp2dOg
KVvAMsgQhImkm9QMNMXtYrYKmoy4MfWd9u4CvVcz+dNVkGYqofslmTttjEoK
a01vnFtFH5XeeF85w2aZMvneqrEA0Pp2qPBFpMC8XUy1eWm6MXTiHe7f0dYP
jL9+xsmaUb0D9InjYzw63L/NpN17JMbVxApM3kAtH8hfev1jqniAkl9bLv+R
mP8LFTwfLcv/amz8N7Oq75bTPzdm/zk5uZ+J3jUNC3PxfraJWL+8QK7+s0Xt
X21KHnZl/PuL/6X8/5T/7/L/Z9NzEMF/egHW8CfaM3zHj3bEv5rFA+nHidvR
F/xgXuRvdutP9qy/GNoQv/jR8pxj+6tRm7ulAhqsygUz90uygneuuALDIrYQ
HdnnztY8sP567t4DWgvtYuhl2uCgDS1HnNSC/exV9hsXbOaQdoJu+ImcBlQF
puSSxOwtgyb9qM6EqUAFfno1O0Q7jrTzGH5h4P7kjzM3ka23ydrpHsTqiSt4
Ukee5uaK/wf3hq16iNzQ46FOr7laI+YdY7d09NWmjF/7jMH/S8+jHYnaYNx3
9L+0o6SNmgRNUAdDEDF6McNGrHKGfe7wf0WzRc1YBSNQsLnMeA/BAcgHFzM8
Th2VS98dtTQV/yxoZxdmcUd7x854oLrI9aAOGH9Ddfmamrwz5pIZZ+7IB2Sc
tvmM+nWwgJiz+WhVqEfv131gzUkzt59x7v4deb7oPd55t7x6799QsfeRlbuv
nGzx1XizFNcj//aFWr6I+b/tf/efzy0eP2fs/ovFe9jg315gJ8Y/DMvj6892
+Ut+67/Z17+/+P/Zeh/QOM8raxznU4SLayqisKLuvKORPbayqvCimiqMWRUH
ZeX+VFyRwWtqqjCmCirKyouLKjo4piYKMnFxUD45eFFEhG1q6qBgf7gonyy8
qCLCNjVVUJAXFWUV40UREZGpqIOCvbjfc8859xkt/DzMaP68Gsmj9/4799xz
J6ubMnczFzNr4VnLC04ixtfi6JOw5FrV/AewXaMHnmMflHb3CEcYwnHmGTq1
fcN+hnmcKeATD1G3dGn+mLUQWVDM/ld0TdK+acS3G5a6hLPKApyb7SrJVFL2
fcSLqBHGxflj74+TBF7xkQNszCL6g3JhgcwYuWuc24G4nbQ88QyTufxE9AO+
N8Y71vdi1J9LlbaaVWp7+WqKGSlVw+1d3oy9dN9/4Vm4b6v2Pfe3oo/w+ft/
TbnWrWvrvpnijhz7yuOvxL6e85MZpV0xlxxdPs8pO99sPiFvxHj+TsrZuxOq
GcgS8FpoTl8nVMO7DsIFVe1UeKYHrEQlkJHurncCrshXOtOK8363tBvylpCZ
ytitmVMtv6ojc4n/hcjpdUWH8oTbpLhlKpNwC3dLrPtn1ekfVXdvMSEj1+t2
ogB1mmFrA++UyjtlUuRo1JlMZewk7VN8iXZxUJ+nMepuJ9DjaUO+z3p/TAx+
1vy9qPY5y7JNehYzwPU2wZrs6nr3e1Sh271OxPUzEbPrhBVOBpu0aw+ygMM4
phOe4Vp1NtOamax+Uj0fjjiWOZaZh20zY+iElVs2cA3PXUJ8P6Ns4qQyi5N4
ndobJ/UzzKec0RbOTfAj5qEuSxOAWUBfmlxnaoiuiL9DzMQVkIkIzMbHI0Lz
qcTUL4YV/YCrLpBL4N1D12stKh6MSGW8XorjzBIrhQiUSxNgNcV7EzrPHik/
XVXd+ihFXorjeo9ifGJVW64KkxjgPZ2Tq8oCNiJVqylq2E3IkvnIGXfOxSE/
35U1PT+/soHP+7OUT966Cu+bstHSBi2P6vdiHnBFbB236Cuq/l1h851Y5/M7
7imX931oE+raTaR8X6szpSeEhrpHnEO8pSe8hat7Q35KlQnzJtficUR1NT6q
lGd2NLDkU31P9JyOtlf4F+bfsn6D1mN9rAO6o/6Uc/3sTBxN3O45edcGPi6n
8uqECDYCx+ZEPjdQ88wlErAObVpn8TXL4hv1TnXo6HVp7r4rsnYXxJYflt0T
0S/18ugFZtBV3wYkbysQdsfqesLrBxClO2F1W+EHLE+3r2vhOilV/B7E8B5Y
8lqI+k2ZjsyWTFVmqboj3NrejEtC93rwXvYuexD77XuY9x+Gb2D0P4yvnfg5
Pdi6cSc8GpIvYL1hnmoGPUBqEHRpPq9RHYAKMXWJp/rGE0NQxlVDjcsT9OOZ
Ejd7XJlAUeztfvmDETH+phPucenWZEGL1P/y0hkoqALIROWxnLTAWHcyuqwK
bXYsmj19z3BLlf6qzn5mtasp32ZIrpnziSaUU9yTXbntvhbxNWJ276RcOfeC
4rizaZ3D67trfV7mgjp6vgWDiFxpps734jjD51aqxM6nLuYtMYEc2S9V+EQC
riirubChN+8bz1wdbTX2QOZSPmG7KuyNtdCtFPcv3Ys+lFlTS/Io5fPXbvWP
hBiy4/JI3cJKdGgzsZ/vXZpKzfNR1YV7nn3XbGW0/bz2exEX4rm1IhzKcClq
2lZIXbNNVs+Ju8aI4XH7jXuHinSjdHWoybGeuMoe9Tddr4a6GwuIhQPq0g0j
99+EqM4ePtmzU7B28wV7YEMHYPub1LN3/s2+2H3vETJ3UredeOYMMvNL4TqJ
d9iHyDwU7DQb8v1jIQOoytwJviAbqn/7yth9AHv0elAl3EGFcEle4wys297h
GjwB7Z639BKH8d2dQA0Oq5cwpW6lTx22Ixeok58lT5+oSoJOCXmT65qSXlEN
UGJa2nzQomqBojapcZa4X73col4bjPPDLdrakpfeYCFpkdJATqpg3NhaKU4Q
d4SWzuM5nbuu8eFzAbTqe8rtif/bpSUpcQNdX3g1dgM813ZEnj23fxbe55ts
aaeMy29qJsdxflfae1PZ+0TKd2K6pib9w4Sqfd+HRWv1PaaOAnKrMZk7rpD/
KLVxI/KVDRn+hGqgK8Lo2Yt3f3gLnwQzhEcpz/oz8qaOB9Ja+eqEMghugHMG
dnlSn/jn597U2fvEDu2o+tjF5XuV66+YwZ63nHY9lGuzhHEPCmL85ePs7or2
YPF8LGls1klxt1EzbG3S3qHKHqsCont9wvTI6WWM61Kc65W+zkx4tVdzuF7v
j8ELDKPrN6ZuHlFz7rQluscMYA/ivXfxiOgdgA/ohK0ys2de3oO4PASLnA+2
OhkujNMH4A+GwmVLsPmqjL12Bra/hGeZ50/Gr2bRT/Add7BZy3br0NZZEwzp
p52EF5gMv91Q+BmT4buuqdc4ownhAfCWujQR1CUvuxh3kJEXwB1EjdISTNK+
U2gdedqKsL9+zQ2XNiGPSlmQuisj8gm+saVec4VF7QBxBLBevX9uHqlXnPCO
sXeSy5NbUgVgz+peyicEy7GtZFXoX6Xi1px6XYxJc0K6PT55bnwr5Rw8n5Z9
LUU9vhKqdyvlSjqujP9atPvS/Lzjfz+LvmT1f3gBZv6lXdirwvBeizbP+M4c
5F6Ks81XUj7ldCHlvN0rqiHItF+N/bcJIaHOuaPusSP3jnfeU4x2xN7R0Y3s
3Epp8pcnVOcib29O3+v2z1zf98Txc6Weo/8dWevXCwtgv7def3Nu6prWnE6S
drX9OunqtmOCrF1d+kZpajRLX6+klF0nT+Aqd2TwuDIHO15dmMYdUwS0jJ9T
szOakSfb/qE6fdtCHrAP6P0CuHhE4muRZ5sH6NSO6x4gbz14hTU5Mb8hRWOz
e4v618LXa8G2zWYn4SeuwXKvhctSuNypbshMIsJP4rihYONDiOuXUDEMIQc4
o5yhB7H/Et7D84BL+BlDOIpZgmODnepGbEIGMBM1Q/qkQdosZQPmURX6/J1t
0SzUZFbbBOijRzUJRD4A47vvYhgVZ5ibArujlReFBHKiuEX4EHWH6qU4QtzY
d4JlFJvuyXJLSJ+jAOzt56Qk5t1n7zE/UqeLZ7afr56DzqV8ev2KcHzfiHUh
xVn9N4X6u/1eEJr/jnC312J1z4hPPJHd+Qti+rImIB/PdTJdM+tK6rWUq2pz
m/k7ivyua0afcCXaJbE8egD2MG+lnN10AZ9QKfo/EsZ3QX6G2RF9q08AOCOK
+RTr/Fv6FPOqBBzf8+hOtPCRUJXVFDVbNu6IprX7DolczP4982+RCrTH/kHN
9ZCvx6jPTRrN6lZTV69NvoCauc0xgrmeXhfYLa64R+3LXunikcV3Oapo9GHO
bkGzuVOawDUfQFtZFhffrOYAEH7n6LB69849fcA+YHInZY+dwUaHYLmTqPnX
gjX3wLIvyXIv4bhLiOxm9Ushtm/JzOOISeT6tO8n4RWL/Uuw6jP4TvMZd3Ak
MwW+9xnY+qS+cxK/hSnxDqkSqUUFMKya5jKmmajVQU0j31bi/GjOCSdS72WV
UIFpf05b8+9W3OADxhPfuDSiLU0jUYVtUMy/bugK9gMJyAkHJCPY+OgZsQEc
CSQXmGdcZeQFZRLXBpgTm7zEIWT/yTF+dp2IUFVGPporiZI3cEUZN21/Qvn5
mzEr4HPOtr0gfzCR8jkdR+l9uu6CmDv3cOwVMXl81sBVC95M+T6M0p6MEv/W
WXoX1J/wiYVSt8PnccqB4k1EVmN51FK6J3TONyv7a47XZSLHynui96JlVwql
r1cnL5N41K/XtIa9xy198vnEvQh1XMjmr8SMVyXquXJZfYsUpQpJfZz25znC
KR1q3jcr02ePvl2aGlTD7AJLtxdXZ+r1ItJ3SYOmVzO7vdKj643Ynle+1N8w
P7AHdX0trHsBSN4U+uSd4s9b5O8RpndYdTu32jPnP4kYfRLxdp/6+ENA/Ij3
92ALNmP2NWQBd3T0NeX4ZuFr4cgtofo3S38SLnzuCbzAGmzZfMl8zBYuoVMw
H+5dQ+bAnOEOqosheZczyBXO6Pdh95DTQMvI/63mYTXke0Yaowco03wQtw9R
99y3mHK/8CKmh70POKjJa9p6v9SDqMLUL9avs39bgPp2iwtYEPOPewcL0gKv
1xxgLub8zCYfKYL7xghXB6xMXDuUyDIxZz/X69VRLPFemAW4AjWV7d9UNf9a
yjV2fC+ud+l9Nxa3aDDPN1v+/5Tpzwkt9BkbVxcmTufbMniEM+pLV1fi8emc
d5Qz3Er5FtNHyiPupXyKnqw//z5im4ztjPJepd9LzYlvs5GRPxfjvyOstOi5
lH9+3MrAiqxSWkyPdEs2FT/5OfylPO7Xx7rf75UmvSulJ9+ScIfnuBBk5/A3
auq+Ik7d9qI2d03MdtXyXcLx+pADtEfLb9ejLk3uDeOez+8MRx7fZeT8zuhh
X5yzN7XC72uFsW9CN5+2TyauWf021PBk7QwhCz+JSw9ycKviLTZXoZN3CXZ8
LTzakllDF4CVASuCeeTrk9XZjEX/pVAFzIdjtmSWqu3oJfiFLagM5mXhd+A7
7lTzuTV8XYK3YU7h9UAP/AwRiX1gFC9ropBIx7DUBHuVLdVpbt+RwAp1BdfR
EUikjeizPaNSY3JVZe/w+Y7GEdX8g8r4R2PfvztOAXVLXaxe2wYYN3JgqFQq
frB2dHwvk3idSou4JbSpUjHpkXrcnolWopaoVB7KCMnJIp9fJ7tlLuV6uf+a
ct0718x4Tdn8axtQ/lvK5ZlVXxDCR1TvQurChiMvRG9wJXb4XAN7TuifI/yu
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
69eEojPfn0Tlzhz7GuyRdr+GTN/iv8XtLOp4s+1syOafVB8K1nwo2PMWXBpk
81uCpa+h8m/C0cb/bci04siO8LUpvNoKv2D+4FDGuMJPgA624j3se9eABlRl
WEXMAy0kPjhUzX7iHdn/YekHLGhb92V5yil5gTb4WO4fq0Am1qZtAWViCFFV
pTFN1fXSFtXRWNGZFyiotzuuZzj1QzxwBOeE73an2pPvAneEuJAQUyJKbUjV
ROqe6k6ieb4hYA5zqz7NVhmr1lLWn5HnyClztfOUua9rA/m26ncirueW/U7K
uXrE7N4Ed+dNdedKe7PsPR6lbomd5LxE18tdVa+O3sV1S4jJOXfRdcvJouW2
M2c32v/qSsrn5suxJe+R5mmd4VMulkO9XqcnnVMfz96hJfEa/17KO/Pl0ct6
H585fz5ac3/k7eVk15Wq+3P6G7bgvevF9G9RP7BeDJ9B+Y68uCBEiopxfmQ2
bt1qjH3+dkX6Xu3BuYxe1YI4ugvadFHahVXS1B7D0VPQ034oHc7lqK37UNM6
7Pc9TFNnpwcxfx+4+4z+PYqah2H9a+i9XUJMZe99CVn7NVTdVZlLwO5Y21vE
r1L+vgWZ/LFwa/bbqsuJ8IzZt035NCEP6AhHzFfb1Z5vQORvyNyGB3gSvMET
Zf8ncDTRg0vV9CxVES9g39DRxSX8XmvgDDRkeoBaHIaH44zgQ6gGkutETGVM
fGDuOCC3IlFfsCvNTSgJOjOuw+TaobNiAk3HPgBn/orSFM7LAxRQAzg+4LtF
2DfIaxYkIwS5RWgguWseG2+lvL/klpCJqAA7Tc5GIwbNWZdKfY9rDHIWdaOO
Bbvg7witezPlfP25qOjnEzgX1Nsr7bcooXT3Uq5+7b0FV8Z6lCpp6DMvcOVM
Z+45IuloPb/bFbNX1f9z5KNSFul1jPObytV5z4hZwQz+XuThVUb+HXtzlfKN
GdVVztO5pw5qPhlUJG+J/rNF2YUrducV5XPI4SrVzyllfHmcD/QUXkeMKEqU
1OLYcSa3f0a7dLrSfdLhuKzoxEi1gLmcLvDYhqXHMaZXfFZnTKydh+DuPkTc
X8DUzh7Evs6oubVH/LhOTNBycr4TqPoZZADXkLXPw76HYj/eM/55RN01ZeO0
ekb5LPL407D0i5kbwXpbg2VbTL+IzKAJviGLa4PqffMTHbhnnuM0fEUV5gJO
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
EVlB94EZXoXfakX8PyEf4BUM+//HMpxCboW2SBboxhYgA2tRMXBe+dIB6QKf
xG4gYqoLaaoiPUT3bwaTgWOaC74MDHA4KgaXtq6saP/a9IYuwLo2uK4objAH
mEUu6fFkXOfZSOIqEcxffcasJXJeMkIC6jfERZ8actzLrX8QapJFZLG+Z7iA
c509wX5VDD5HQ2X9jZOznBmiMp5rh5VHPIF4IfcVlKv35jtFWhCdK2XZzrln
ZzKv6O//F+cf5SOamY9+gH3LymRQVu+9etZK1N3qTpwl1S8srqAa3md3mAER
ax1P2LdvEWenKLyes5p5IXyO63GTK7My/p36YfnjQnY53TGuPb1k9cwi019H
5F+R119PuFe6Aoix7+ugms9D4EvcsbUpTqZuRV1PFY5LUtb2+E+LJ2ePvP15
8VvXENsuYQLOePrH0CM7rUr5NLrrd4Gcn0Ov7XbE8vajlt+ser4G6J3FZM/o
zRc8i6z9IKz5VM3Nmuvh/tlg58fD5SzqgrPBwvei7j8SPMIp3NrFjjgVvjom
cDAcdx5ZwWb4BfuJrCw2CyXYDHTwPjzSA0X8x/IBd8U3uKhOwFX5govIbpjp
09oPSUPAWYGtUCd7AtWCa/KkJ/G51mIz8DZgK2QELUsbkFOXA+IB9mEuk7MB
FvvJDm6M2F8Z9MK5O2QFnmBdOeGgMADfIz6u+n9Q88LjSVETASPROtl7Yhev
MinNpblCAPv5JWScHJWMqtlpnb/FWAGMJr5roiVG/9WIyFu1X1BNQf3KfOJs
ecb1kqYYOUo+a1RSLPO9GJXi3ZWydZ/CySQbFbRL/bfKZOOEsk/SeT+UMbxb
OEb+f/RHumXpRXmA7mRErNwcnmkRT6df/o9TOoOJ72Lvl83Th1hUL6qWJ8o/
Lk2XaWF75gdWlNuNIqNfEY+XXP5FeN4k7RrxZImvAyPqS5dp52YbkGTX494E
rG+TlPZtJrVTPH3DqPfgXD0DZV3u0Dgjzew1RP078AR8hn29Q5rFa1Vfj4yd
u7Ak6+Efg13tDll/DeK5I3B7EbtrYKO7kaEfCbZ7PjxnFrsfsftosP2z4d4H
NZ8FH3AEdm7HWJz/LLxiFl8Tnj0Fyz8bjjkbvvNsuH8TWcIH+I6zuG/+5XGG
lcSzsPoaZALMDB4LkaipITJ5UX7rIvqQp1XF3I5TAseAADZoXrABaMAxPNsA
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
XOLrkOOSEypfLyy9RZGfu0TziWsLev7fjZ8xqry2H+d8QdHP469rgBjr15Ew
ZtDMzetjFM7rZxCVqEx8Ej4XPYnV86xVBpXzl8tn9cdsIB8tvl+oHSdqqYjC
rR1eBRT1P/Ea3jeo+obF/qS0T41YKr3noPg6/JQH1bfnLqZBoLGs7ReB4DML
6098RmtaDM4VMbdY07ODb39R53pxO0SfGKE2EWavkdfjWUAdjmzTHt9hTY9Q
nW8mvUmoX63699yT7VGKmb3N59ypdlV76vBNVlMPews6XVvQ5aIWjuW8d5Ej
m8XcQL68Geg9Z/F3w9aPowNvNTc7d9eB6N2ERX+A554OUfzLYL9W2X+CTN7s
/ktYuuUAX+ror8P3fjdYfXr7l3rsz1tOwPz/Azx3MzxzCnnEB6gaTsHjnEdH
4SiurANqgAYQAdwLDGB3DecGOC9wA/nMffQv7kpvwDWFO6Qc/AQIQBUUhC6q
LvAO4J2od9KDT/uA6v9a6KTVwgdQV8H3gxGjGdMWZZ8GdBywC+cBc4BmzQaT
9WG40DTOmsb0uGKH4QGzsQcwLQawbxClIkBRZzeZf9SX8fjP7LlSds8eGBm9
9TiSnBdnrRdiFByRZxlNinpP9hFdRZB770eUIXsnPK98obS5tEWPCjHqM8/3
+oNWnEtKnCNuuWZF4Z397sT3X7UkrozdLxyPv2O3/E1OmF0+4Z6sovC/Irzk
rLolzp8oKqov6t547Nwt4jfbVN2veD8onK8oay9Luz+YFU9/OvH6jUqPjRuU
H5uB99RJF3JB50Az9kNxC18jbL4Mx5Zpg3dv3L67kOY8P9XnOzGPdkn7dHxW
h3M689DZZvSn6vUW7cSkJ2hFtHMt3RPA9YiPcyJ3M/ppNTXOxN+N+HpUGPxZ
xN8vw1fGa1omq3X7anH+s2C3zweLf2n7i+H21WDpL+nxq+FqEf+7uDwdLq/i
GPMO6WD9nyDr/wz4wJdADo+Gq/0s8yun0AM8KrzhiFgB7AduRq/R/IBxhNkR
uK9e4F3U/6xqLgLlO6EM4LQ0yNaqj0lzmHpkrACyQAaXpFNOdcNr0EQh24I8
661gVy7AO2+D1soyrH9A1s+Na9zK2oy/dJeywArtBmD/j1sDmfWXRQ7IaKz1
x5ULjCecJJnWuW39qlFV6LSvfuXLnnu7WqWr3NQr83ecr5BwqzT75P1iHowD
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
5r4Lvf4a5MDuYLWK214fzPqzEPnb4KdxiGLie+B5T4OvW0ixf4Si/whV/gco
9hmJdx/VfVNsS8xW6vh53v/SUo5+/2Wa6oNU729zcMy/StE+yrnY+Tw9vnD+
7Bzi2ux0u75x3u/6gn5c7LzZ9ZZzM+WFiZQJPqY8sNRRjD+5jSYEO2WBw7ol
6GvbQV3FCnq7asm0vGC5SPmGc0BJLGOHh1Mf8i7V/8eBBWAFAd4DjELWuga1
0GvIAIwA2IKoT4QCwCV4C9Xj3806ReMw+zMHyJgC+PbPe/9adP8bMfVPhV95
mToYC+pE2JI7cPGr1HtflfL90zS6PYr3j1LFf4PbI94fgvE/qtVe9juC0hbt
L2b+8KugHH0F/77poVehofltKGEK63em4lJLwFYVX3ibql/lqP5Xp/LwOkyC
AzL4OGFm8a667pBjOPMZHtYLQv1Bq94H2k1NIV0fUdO1mQ0fa8OdQ5wtWnRu
6NDpv0P7jfZQ79EQYhU1KDpAMsBD+GgOXsPsJtMM7YkTyAKHUfeZl8oP3guW
YpMThLZ7EBttzgO1mBcWIqe74NvMcbIDsb8CPg3GtUxmMdm0GHm4Glp5oxV/
KRsCrvJyte+PnNwfmCyezFbiSj9atQqnK26rGr97JRg6mfjqEv2c/3fq7LFO
3Z+v4nE0XGJd1GHEcS8KF6QJutdvw9WpLzqbPGVFCDp6DWafjZoD1mCHLf9b
0hnxlFsPTC9jYrnrZ/081tTj2vk8FDkicWV7E3X/Dor97RT7fOHrQrP+Ogtf
8XZYuVKfsM2i2L/X8R3V+bnOSIru112fud50JbvD3c+6XqeP3nV9Te+Hu193
Pev6gH5tCGWDL5yPu44436M/cc3xMXUL6c7XKAccss+yB+lht1+mPmC87Tx1
FlXWo/Q3fmmpthykvLObvgNTbGtMHT2ejf4w+i/gBrkxBcyl77sQCkKnBzEO
+ADw/6ehBGDBDHAJHkDM/T8L7q+4AIzDq6UUUwAznQ5D+0My6F7935yKzUlf
RfuL78EOXJn3KaqiKqT5t0KRvB7l8aQB0S+TfIEi+goGSqR7gO7bD33fU9jx
7ETsNyr7L2qgdAa8+VmHOVQ8wI8BV7JV79GrQrV+nsZ/iXJ7xfe73WT4/xme
M4LElTjsVLSe4Vx5fQPQbjI8cqR/rzPJprBBJ3bpGUzKHw5T1awmk+FsKzjf
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
EtIT0u/K2JI+Lu02+tmUtJfSbGkvUw4YTznip5R86gbeDvyD5oCZyb9P+oDm
gMepC/iTb0ZiQuKwhMM0X0RQDvhXfCNlAOYL8BRwhzvc/Yz7ccoAzBRm/aCu
jhr7ZepcNlEHsN+yxMI+AoxW5lsAa5OOhDIg+4KdhgfIx0AACf8/C3ugGrAh
apBjZU8cRLUwR0pHuQb1fw36PRf2MnPQ+ffQvc8mKEsyE/uk+vgUqOK6KPoX
DBSMr2i5LQnx+5ao8kMFev4l6u6bCSbZaHV5KEK/IJ4VFdCb2G02eD/iUnMQ
s7+4xYvWl6h8jkXk2VT3Wzr0BsXaX1ffNO7/rb+KbWH0Gs5d7SZh+xo7utYQ
O7dVc4eB5beF/MV9yjroVISR6H4YGMAO1RfsVDZSq/YPrboTbFHUYIPeKIwf
ZVNRhf3ZDmzPGKHHWzhDl3kO4qgWF0G+jc/S/b/E7jj0ArIzr4eHHW/OGBPL
CJBi3AWPYy9wCb9jj8ZdPa4Ds7BTEG140RTZqNo5ohLBaISNyhEbj2wwB7iR
E9hQ1II5shHdfQBV38AwCI5HmLmC6JkVKQ/e7U2JPIsLFfcoXLOKcc3nWZ9d
Lpnj/lYUX7p/i50+u+x9Hf0mvDfCacJnRc5VsVvp4aW6yPr7UdY4mpWrrG3W
gK0Wkc86fJMcl+yszvMedftu19dU8x90h1HF7+XZ7xkUvza+L8XiZZr2d1LV
/5PvG99T1PFvT7oheT1N8euoilelrE1potifn9Yl/VBafdr76ZPSd6ZvSZ+W
8beMU5QBnkhfmf63jPfTp6d3SR+QvixtK3UH3dIeS11E08BHgbsDB5Kfpj6A
e4AvfJH+Qt+Libcl/jthW4I/oZn+ZmYQLfH8xnMwrgTs4fvcd1L8p7hGUQfw
nSPBwUohl2lq6WtjpbAqayblOOYEdFLuE04wx/9ceIJtgQbok5Q9s6D/yTfg
s3oZEsT4OPU9kF5AntmN9JydwN5/Iea1qapBfx7aCyeB/alC/V8LHOD1u08U
ECDM71gXLgzAqIGC7t8PJmiRbvxGA9c7HfW/+lceLyv1AliErR/v+kQ7zvD6
EPeZmbj7zQTuf7Iq/HD972Y2GPm+EPa3w2RocHXoRt/Q8+pE/RduXhM0eZbr
5t24vzWF5v5W7SL4Yi8V3BS6OnaD34BPdUa6mQ0ccLupm8Z/p+4arjuBG/pD
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
qV+iv1X3/h2aNUzmVtUbkKg3mUWBgL82/3ljOyh3B/6uBFexQj1VZA64MlBw
OPxeUAGyCegDBze78uBF15nr8WpMA7IZnI/6fxzbNa76FnjD1wMjwPV3Erjy
lkEGUpx7gymKuV2tqtn1eB9U/3juMc7q/GjMlauBShKFuaBOEbOwZZ6FadOP
y8RZfCeGR9UMaNW/OIgxbPFRz8PZhnU4H4h+gGL/a3osgP7tDfQ6n6n+mdUU
9/3guHNe+3zu8m+jas/qetFg06W47qCon+3eEPfPuA1xQz0veMppxp/qjaC4
L04sTkyg7vsIzfh7/bOTnkk6QHF/gTr0uJSfUgamvkxT/lep7anH0gak/5t6
/izq5iOpru+lSr+XYt+RNSZ7TPb2rN/krKIff8j6Q/aT2XvoczfQ+1lZN2T/
OWt71jOUG4ZkHsmYk3lXxvT0e+nr2NIuUw8wgWaBoQFf8qf0t35A/cYRX7ov
K5F5hONoCmCO4AVPo6c/5YBPKAMscN/hZjXRzc5C52uOS5TfSu3N1OEEbCcp
/pdQBuxiWQbfsAcpR7rBCX6VOgBmQVzDBpW7qhmo/l2hAsL93izli66mijAL
V99zUJoRXlitqn+d0EsA3wBFRXoTav4OdfybgN5fan8B8L+egaLu5oHS5069
6Bs6Uozr7YUYv64nVQRMYAU4ARW4Boja5EWgfRn/uxt9/yr1oloF5r+xAVyG
viBH489mNpQ2OxCpTYqtbdEtf1NI7UN2gVL7Z4N7U2cyFL4MDO6CEEO/02Qo
ebbr9c+E2V9i36R/v0k9B/kKYFJMQJiihQwV8lblJ7Uq/7AFHYXNbOAB5T3/
/aKmXA58RSW6rh26hdmHO9t4RQbNwT3wsG7UDZbgZXBkx6H+T0E3zx8NwBy4
OlL04Afg/seVX5DiA/RiPGBQ19Br5SyuAsd1j1AKpl0NZsc9yCo12lnsQb6o
R00fh32DHY6Ts/QSeUnRyTXqspul+nRLobt/Whn6zyPyWX/7L9GC2f+MOn72
xWYNvMmx7KObablgYeesCdYd1vG2jbZZVA+7Ur1njv6drkgXX/KS3fe5WWfj
DM3Rt8SnxUd418a3U703U5+/M3EzVVye7z/z5ybNTJ6ZPJTqcVrKGyk3UYd+
e1pT6rK029K3UK2/N31A+l0ZZRTBhRmfZf4+i2v9f6nK98oZk70qe3f20JxP
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
KkR/eOq+tE3il2njMg7B4+vM37KOZ1XlSCQnIfZvSNtyhYD3DRB9YVCLb+bF
KPsDkr8ESN6iDAfcXgF1vl59Qn1Us1GzrCBZu75gV4G84IJWDm+fa4YVjNUK
C/whE1wuuFxggLf9CkSaWo1/gbN2aoEOvkoOkS+E+J8FX3dNY1MwUvNSPUi9
BfJEvTocsIACfs586C8GKv6ArqO3vCV3QK6XVIJcA0X2N1kFmYOhFyBsQW76
KOgF9CnPku8lZyZ9lPRVYmLiB9ANbIr7LnZV7NQY/5h3ozcLJ0WZI8URL8IH
hHuFjQ1tCa4JHhn8TdDJwMTAoQJeQDRkga38BP4PfpMBCaT6EtWAOO8ngAI6
0Ec4yP0xb7Db+zyqG34D+rAZLo+gI0sEJHDJ6QlkghSnLvhtCZAhsALvMwc6
fI/YjnQC5L4rl80CL+OESI58seHoQ9/JnF2Jz6MdclH2oTYA5a1Sl3B6FUTZ
wL+j/89qVAOkfkDhyAWmKmBDMCP0sqVXAIfxBoBkgFNMBWQOY9rOYViAw5gA
KcyVg8+0t+72aAH8D3dbNwJWLS8O8+joYvFNJ/IWdgvUip24Ed8jfKAYDkUJ
7ezr7jKGAQerPdX9t3p/RNlYb4SvMr7vUBu6hehisz+K/9tx+2hhP70DN4Hk
IwX8NKLvZfXUJVs+ivMDkeEnYm7agcj4oeps7tj5i5DzY8K9fy36uS1n/lv0
Fvhaj384mf8L0ceHMACrUbV/PTI+1+Ml8BFU+yF3f2QnTKK/DO/7SOS/nUC8
pgnuJy838eUjh1io/Pm4XYqG2t+OjD/qvn3AmTh0tED1v8ydxfveTexBtLlv
eW30+dP3U/58/xTBbcHmoMDgL0J+D30VNj28KCIy8kBUnJAT4xozWXRQ1AY9
f58ER4j9CUnNyeGpvtDz/5X2QuyXsSNjf2Zd1l3o+D+XjJJugUrbmZsrD5Ct
hV5/oOK6Yq9CoeQpu5RNqt1Kbf4T1a38lVDFswC9H4Ua71+wrGCK1k+r0z7W
/qBdpJulfavdr9PoHHSTdH/A+37w8of2K12Obo02F75iDXzldu1g3SLdx7of
tN66x9qPdRHwFUu0U7RPCx6qp0ImGKQepU6CbmKpqltpVF5XPFBMkTvDv+iO
7H7uG0mjJCpnZ843Wd9kESSQkDktPS39ZdrCNC94jEk9lcJPeZCUmOgNHUF1
/HLoBTSxRIssJjowenHUO1HTImwj7MOJv+DY0OeQBRYE/Ro4JFAmGCpoDzjH
f8XX8Jf4VfqN9RNiP/DI66LnYc8r0AmQWyoHt+3QCfTjDuPWuI50Jc4JByAr
NzoThhDHiY8zgSJHytf4BO+GP8J+IBRZXuRSwBlywB3GEDuCWiFcvCslN0Jt
+Iyzw+ciRaj7mDN4KbqEeyEj+CR6A9J7QHoNSPlA4fAZogswBHt/qvtNvX8u
IbfGqgFuZjqgTWwLmMK0QKxOnATN0837M+bDZ3X7sPbcJBajbK4yFtBVphXU
zdg33WwKb2H7eCNHALFo3QLQDmAP6xE6OFaXIaoQwmcMJHrfNxR5fnT/b731
t3oE9rWhvIO7bNJPJ47WHiMG32/nPMRZykO8612J0z8S/S+R7yuyo1d/SuYH
qEQMQPZ8dljzO/HPluMkgCIAuut7jvw/eg98H7UA7iMKkCMHQIge3CS/T0Vt
XxL9lXjv740YgNQB4ivl3cMcJc+PcxPJvv/mRDpD+gWvfIiOXztg/6FOLrj1
Jw7cL12+dK3mvs/zhuof7SGD6B/lfcbnPf4iPuH4HAgcGbwnWBq6Ncw9/H74
0sg44S/CvlD9HotKY4/FLY/bEF+e+FViTHJz8jro+v+C2i9M/wOZvCsA95M5
+0JpBqD9QxBrH8j/BrT/QJGp6II+/wpEf6/824DPT6ibVDfUtZp7mqOa5xpD
wWDdIYjhT3WxhT8XrigU6xX6TYV8w/TC2YZ5+mj9p7rrhTd10wuPF24qLC78
W3cTcsJHhTptcOH8wo91PH2CLh8+/5XOoneAP/fWjdUma2dpP9Bu1BBUoVZv
y3dRheeLlXcBBXjnfZU3Kc9Gpsw9LymVfi65lHNeYsl+kOWR9Vnmr5n/pn+Q
USv+K21imlNqRWpS6tXkmuRPkg4kFiT+FP8irg2QwEyRa4wRFYRuR5oj+0dk
hO8L04Q9DVkf0hrcGjwo6EDgZ4FXAjYEtAfc5Nf5Z/M/5hP9oBqfOO/XXoeh
E7ji4eGucs9x+4NXyRNyn7sO44ogBxDd0FEub5wb4TdEeoEoyAGEI0R6gQc4
D8x38HAg1xzUTeQC+gmTqkCuRQhXPA2dQ86g2tQxZAUqGR+IoNQtkAHoFssL
GUHvoSfIalQDOYhvV7NtANUGrcC672N7m2l/9WI4YB3GP3X/MOPG3cw8wGX4
J01M+4ffowPgyhS4+7LroKvMvY9jY1UCusryAsfGehtoVf9oxT1/M6v/Yhb5
Ck47YwbQLSFlEdCpIdX0GMocvK72ZJWhzNXHyvzrYFzDbrb3a0aucTvOGKzZ
pZXhjRiOO9b0kThXHYCo3o7d+bvbUf9dd+aq3Ym5l/ptkm5fiZvZNuT/tDHM
fw3VwTdi1R9uT/XA6MbPBrWAbBj/x4B3QNWY4yn39xDu/d7ig/T/tPMnkz/C
+tuPWj5kk1zs0B/qBrn0+QV6f1t4Fl1xfAb13xF6f0+XQS5KvOtfwpvkdt29
3WOI1yDvL312+Sbw7f35gh8F6qCY4GEh20ODwlXh4ogfIzcL/WMuxXwu2he7
KS4y4WLC2gSPJGMyP0WWEp9mJ74mrsz4Ayp/ftZ/WUMA86+WPJQ+z/1Rvl0e
qxiosFeQeXyrco5Km6/N98kPUZOav1DdDzD7Gu2ugmEFf2gddOcgnusKrxc2
GWz1KYbwoqWG24Z1htmGi4bFRY+KmgxNhiv6bn0TfLzU0K5v1v9caNHnF+4t
nKcv0vfX8/Qj9HsLeXoxZIq/dccLv9f9rftedwGQgE5rU3C6wKQJgU5goXoI
IIE+qmLFCGW+YlLeWHmeLB7yVKPEC7LAqZxvcxZkbc6KyX4LPcw46AZ+St+X
Ru6KT6WkpsQkk8vlcQk/xRMVkfjYN6JLMR3RbtEfCb+PWht5J6I6Ynn4d2HZ
YUmhl0KOQhZ4GPR1oCSQL+gKeOG/wn8RXwpI4AvfNp8t3r963WbcgA8BBRCG
cATvuWs/7ruuSlc7nAsOcvFxJpqrMqc5kAeaIf7bHfcikysYuQFkI0C13GYx
HzFSH6aiepQN9gH32bw5w846hyY3KfGoD0YRgBrvgkgG2IabgM9xDkhZwUl4
EUjqfhLqggzBuCccYIIBxuDbIagGfpg5/ljRQBNOAekM0Mz0t6gjt6uNlQPc
t6f/ppO/PT3dO3XipFf5Vq+PmJ5pXGtPDuhg6uDNbP9vvQ+yIGawOnrcZVtF
enNEXUmtXON2dnH4jCkBXe259+/A70JqvoD1/uQRw6FTfXrF8xK1/mm1D8Qa
T+9623DG18a6+zb03bZ671JfkPt4r7URK74QuZvXUNVpox118hbifXc/lgFo
HyBHdeCnOAXQMcW47ajzQ/r/SXjtWzaReMzchPdi4fmx14Fozl+HvnEzxD/Z
+xP8z8HnE9H2yHKxc21zTeM+5U7mbXV74d7HU+JFJ/+LoF79G7AU4v9o8J8h
2WF7wzdEOEYdiHooHBajFf0gso8j2h2jAfmPh6qoTX0v7UbaNfGu9ITMRZkk
csgdziNJW+5pmR8g/hUK0um3K5+ohgDWf5O/Tz1RHa+2Kagu6NT4act02wHD
2xduhdjfC1VcoW/Xv1PkA9Eeb1wMb7cY642/GU8W1ZgWGEeaZhbdKsoyaos8
jWPgvScGviGx6K7+tmFF4SnIB0shU/SBP9sB2aMIPrpeGFuYCVihTLdf5w09
QXXBenh0aoQFN+DfYFbNUY2Af9k/8s/yvPOu5QplptzvpOTKoC/8+wXZiuwJ
WaMzD2V8n/lBxgvxMbFKPDl1YppryojkB0mDkmYnTEnoF/9z3ELAAVKcC5Lb
4dFR5siLkfMiiNfo76G9QueE1ASvBCSwIOiwIFIgDvCAHPC735++G30Cfc56
H/Aa49XuofD42X2/G3FI28UlasrPXU3we3npQrUDFzv7QK/GcVrqRJyVFego
ON/BHl0Fv0JHVoeJP6JqIOWGPEVPaWGPp7O//THcB45Er4AbqFG1EB9UIdCL
aQOtxh0g1QVcjaqASUwRyAejn2CAXj26YOSy7hQqAVNFgCbkAjQxLVA6E1iK
mwA9U+amvGAO0weiGlxXGfqnE7ludvVL+wGqzdGMlb8Z53AWxsdrxRlgM3YA
dC5vZNwgKwpoZRc81M/LqvFLfsYejlV3iDKMrjLUYM0ErezKiF4bEcVBBW4d
BWzX+BIxlDteWlOfLxPi+UBW42vR+esY6nwQheZjiAjITvY+cjNN+EK9gTrt
KHOb7GyuIe63QZ+H58j+64c4TohKIEfQFWYqc/u5g5rgycj9p7xwoihPXGUG
oq6cB+DD+XjncxyQP2H8jcBnjS16dxA1T+LOu9h5hkun60aoOL68BLcgd4HH
bM8nnie8bXyd/VbxowMuCl4Hbg5yDfkz5G1ocfjuiH8iBwm/jE6Nicdd/7iE
r6HrNyanpjxJyU6bLv4p/XL6Z5kTsh5kNeWES+Klq6QBMoPMIa9SflzBUfXK
3608pdKrPNVb1Fk4tT+jyYXu/JD2gjaz0ANi/zrEqEJvC7HfZFAb3xQdKAo0
fWlqMfkXc4tPF1cVv19y1ORc8n7JS+PlYv/iNtNKY41ppKne+Ai+srEoxLjS
uMDoWHQSHovhY23RtiKSBRqLnun7GASAE87BTwgu/FSXo6uEn3q5gFsQryYz
gduQk64rbuZdkE/K2yA7DRkgTXZW+p5UInGSpOY8yfktqyP7NWS1X+FlQ/py
8Za0VWnqtKYUp9SjyQuQLXgknhu/Ke7DuMmQA94XGaNXCj8SOkbtiFwayYs4
Fk7YQlUhhDMchztCvsASsBdywBqcCbb5vEZP4d0eL9xXuHu4r+H9wBvLq+au
hyzQBijgIWQA0gk4on7gUie90xX4HZLLLaLQOh91BPfjvfePqA9JFKIuo7Pb
aXSeTmPer3PhuUWeczewV6UslZVMvdo6BSAegdsw8rXIB27E+Z8Pzv6syoAE
AexkimD0Qf3AqRsgnQfSqwAyCzjF9LasHnzW13Q/Tzn/Vs7PM/aWXv1YLwRa
e+Z6zUz5vxn38RaMeBqjtEpbEXs7+0qrhiidILT3qIt0cKgOQTtO/fawS+M9
7HU7u/prRs4PnSgoEHsYkXdk5Ngh6qdYSsk6q1qs722ICdqw09+Iff593OrR
6l/LLvzonVYLxj/15B6Ozg6ED5BmTyP/DM4Dye/OH7OBHLE/cYZLwxkPiX8d
U/7ajnpfF9Cl73us/kTLLxYeD5Dz+x9EPdn6C1DHm9z5k0rSCxX8T6Brz3qu
lDfQPdZ9nsc6z8VeI32+9V3jZ+//U8Bh6P4Dg11DnEIXhs0Pd4kcHRUnJNr7
r2KJksc/CQuSvoSu/88Ubeom8fD0gPTXmcFZluxTOVqo/KLcZbIl0PV/lfeL
olWpV61TZUHn3abpV3BG06bxL5ii3a7V6Abr7AsHQpcfC12+Rd8B9XpMkWPR
G6j76SaTiUT51OJZJdtL9pc6l5SVJpQGlc0v+7i0oXRJiW9JWvHTYnnxsOJr
phrTRvjqGcZAkxLedzNtMR4AdLANvotjkRl6B23RKKOLYSgggszCZr1H4YPC
TYUf6x5rx2rlkAM2wr9HprqrbFJZlNcVCYAD/OTLZFuky3NDpOclYyRDc/Q5
Q3P4OR5Z4uyvMv/JyM2YkjFd/KFYza4HFckeSQWJa6EfWBa/Ib4zThTni1hg
pXClcEjUP5E7Iokv6cdhb0Mnh9qEpAdvDlqNaoI/+38HOaC33xmfGp8J3kO8
1nl2QQ7Y634TcMAS3nbeId5Trg23xvVd1y2IA8pxGvDEycXpLs4Didt6Mbsb
/gpvvgZPJHpwzpgDiJvgabwgtTpNPcdnIPWmJJ3rFtStIp4hozAHTERfi/Oo
CH4QN4JadP8k3qC9kAfshBvAMXgBQBCAE6oBER2w27gVvISYX49XAXqcDEYx
9S0++nDwe9SAOQwF3O2Zunezjtyqwd3NOIDU+ct669eMM4A9rBNXYJTGYP1v
x89aWIdg7MEArUw/xMoO3tODDbpZXqH7/1bGN2pmW0aKNki88+AnjIcXMc4a
BBj/djjlz8D/m22o82+HOKAFs0EbZgHq+9eG9Z8ofp5BF8dryPPbiL3/GYz/
a5gDKBawwb3/NdwI0v1fP/QMnsrcw6nP13p8icDNzwXm0Um0/LeiVxe58yeV
f74DUfUjznNk7qeARzf0/XzoJlOcxkA1ISr++1zaXG24d7hv0anPBdB/iLfS
h7jy2fsHBJgFtwLdgmuCnUI1YcvDAyLeifoEun9f0Ydxu+MHJ36UpEjuTv42
5U3qX2kboEN+nflN1tAciUQrWSgdkDtLPkVerPgFKv9S6PYXqt01Joj6XYC9
12i/0i0CnB8Lj2d6gtyHwiPEmFg0EoAUQfhfmtKKx5YcgseSkoiSP0oaSveW
1ZXtLx1Rbl/2oCy2LLPsr9IVZQPLBpc6QF7YDpggouRCydiS0/C3DMXrAR30
K34IPUM8YIJ7JjV8R5NpNWCCiwaF/onhtmG3vlt/vHAFdAUJ0BFM0d4pGKC5
le+U/0zZrDyu8FB8lfeHXCjjygJkpVIv6ShpiHSm5KBkJ+SA7uzWbHF2TPbN
zCUZy9JJPzAj7UlKUmrfFNeU5uQJSROSCBoYHn8/7kbsWFFUTFRMTXSW8LOo
wsj50D+dCyPuRoaQM8Engj4LvCjoIwjyz+Yn+831FfmMRHYAUQ/heWS6/+X2
vdsktz94y7gGbj9ui+s+yACeLoudtzmPcZ7jRJRanuEe9z+Mf6Ie8inqOpL7
oLWoF0Jc3Zax23HSBXDRMcSEz1WrSugJdK2JR12w91Ab5BHOAKkvyGqs/6QL
OIjT/zHMG4xsAKgLyBMb6hJC3QDpNdBhG+L62YTvz0GGQAru4Kkmd1QPB49k
gqsMl1v9e6gS8B6O1QX0ak/9N7I7X8r+pX0+xf5ifNvBeLq0L+joiXeq3089
Q+hFQTNTGOxg14NdrAMhiIEyC+lPojeGYnyrwFxj5IyA7yDm0K2eiGmumRAH
LMeZYAvy95XM86sNUX0n6nttxGn+csbzO8YywEbm634Gc0MaOoP64+7GHz1B
+qEWIGUA0wuvy4jkqP/vEZwDLkH8PxpVJAlP3AOeCcV45dvfkXDH/nPg4Z1v
Nzw6IP5TkFty22mx80nnehc312voz61xy3Fr9xjqGe7l6T3M930/B4j/KwGz
BY2BK6H/jwh9L+x++LhIMv3bE71N9GlsdfyhhNeJw1L4KQdT1Wlt4kmZH2Wt
yGrNluWMkrblVspnQc+/P+8K1NSK/EHqWg0XOv3H2lnaRTi3/7mwXd+lNxui
DOVFHMMtiMzVRQug4ruZuMXfQvymm7aXLCr1Lg0tXVNyvMyjrKjctvx2xbTy
f8unlV+sGFKZWPlO5bqKrvLCigdlKvj8QMgJW0v/KEkuIcgguURXMrU4rXgj
5JFrppfGTtND40N47Wn0hBxzyrDU0K1/phdD5iH9wPzCUF2CzhmwwEjNo/yZ
+S4qjmqEcrxyr+KCPAeQQJrsTG4A9ASl0trcgxJ6Q3gK8MDxrAlZ+VlvMy6n
V6cPT/8rLUj8Q+r7qfeS34WeYEXSlIS1CaY4+ziv2F6ib2O6o0dGe0JPsDTy
g8j74e+FvRd2GnLA68DXgUsFGwJW+JPt4FPoBL7xvgU5YLZnu4fY40P36e6T
3KQ8He80V8gVuQa6nnVZCVmAcATDnU85kcthjpMYfsef4EaA7Ho/Re0gqiKe
ixvBI3g/moZc0ueIPk24jX6I2iD7mHJFPLIByUXQQduJ47chF+gkZoJGnAHO
ZDfBPhj7xAGYqoINQS/ww0wTZCf2AEvZaxnyAclEwOrIp2eXeVGoD3CVKQTS
aR+dzFlfU1xOUUA3Mn9aGYq3ont6AUgi08KqshEVwbrZrV4ru9qlffxdjlUz
sJ1ztacP6GJYgOKGPT0XhvRjuu2LQZ4ReRuDO0cxoIFAjPtArPlKnOnZIXd3
OfNmvY8an53o73UGd/tkAnMfd/tkxk9u+6nWH731OYZz/2uo/cnFCQD1euJi
9PuzbGBgii+XmU83dfhJRgbYEtT/HY3MsK8g+ouh9l+HDLAZkH+RowUeZIO8
25EgxxTs/BOhkni6zHCxg95/Kvd9Xg50/x0eO6D+P/S+5/O+Xyh/BcT/P4KC
wJpgOeD/T8NUUL8GCeuFrjEVop/juFD/iar25NQbaf3S76QnZBJtHifJG4mz
fJdsinyFQqBsVSble6rj1c81vbXnIMb26zZBvU8xpBjMgPLDi96Bnv2i4V1T
vFFYfBaiX1hsU2yAuH1b4lC6veRVaXHZ9TIxxH10eWTF15VfV4ZVjqmMM8eZ
3arqzZ5mc8XsisbK62V3yy3lP5W3w+NFWXt5bJmmdFXpQEAI35W+LVlffLrY
t+Rp8RfQI3SabhUNMi4wlhjDoRs4X7TOcAr+JUshB/Ux9Nd/VFimG6v9UrNR
81It0rzJ71BalL8AetmfNylvl2x03iz5Btkd2fLch9KRuXa5XtKJUh/Juhxx
dnf2L1nBWQmZ4zIM6S/Ey8V2YsId5qRcTS4BLPBPwuyEafFEW1AqGgb/334R
PhTOjvw3ojpCE+YVZgM5gHgL7BDkBdzke0EOMAAOmIGXw308STZWQS8wyU0H
OWAXl8sdxr3hQjhCE12ID8sQwAEuTrtxI3jdwQO9hc8hL5Aow0/BbeBT1AlZ
hnwAG2QFb0T1mZeoS0GuUsjFejxzCgzBe8CQ8UQZ5CDeA1B1kJk4BbBOAofY
UhUwqgj8BHWACBLYiXj/Elb9JtwNEp2wpewqyMwYAVZVMMrKoXX/KqebKXdR
ZwA6/aMaHP/zA1Ngxbf8v02/BWu/AvtzIyIBS0/8trKOgaIByuKzXg91sKtC
elXQyj7TzrhFVPejGSd+CvyuAoh5Bc7/yHsCTiDOUUW4VR2ArF4TbvzcEfmT
zv4aYntS35+jx+d99PwiUU46eTLln2p/n2l/tyAyqEUVtzbMGbQDoLx/qgJg
A5HvzzYAy1ALZBfuAMjWNwIvAX9Ebf9/JtxEBblgdOwkLh7RjiPw1qcddX2J
tifZ+/VCpZ8QdO4cxh0L3aa3W7F7kcdSz0avCd5nfIiqX53/OEGhYFSQG8T/
Y6j/+8JcIodEfR/FiZkYK4o7Ev9PQknSnJRtqRniXekOmZlZ5LZnn9Qgeyp7
K/dQxCiHIur3L8jVeus8Cm/qzIYifXjRbIOncYuxxrQS0PlR03PA5S2me1Cl
1wCG9y79GGK2riy79Gbp9LKfypsqIiuewGN2RVjlFvMC87tVyqo48wxzVfUX
1TFVK82u1Ysr681q8wQzwQOFFbaQB15Af0Dywaay4rLjZSvKHEoPlTiXkLzy
RfE9k03xl6Z3Tb8ZZxglRSXGQfA2HTCCT9Ftwzz9z9ALEAaRoYBb0KYZoHGC
fkChfKDYrBivDFZkQk9QkDdF3lv+VLZLdkS2QdYgvSH9TtoLuoJTOVezH2Q9
yCqBPDAp0zmjU3w2bWLa+6nrUmQpx5MOJB5IXJJQFN8QOz3uvGh9TN+YfOgH
UiL7R+wLmxXaN0QYsjnoQGCh4IW/h/+H/r39+vq+9M7yXuwl8SIswU3uxe7f
u5W5rUEUcNS1xdUNeoFB0AtsAwwQ7sxxsjh2OfIcyYbHw4HohpD7IIeJ1D3A
j3lHXIbqQe5Jntu1MO/wh3ihMtJuIdOuUwP+r0dtAHoVfBIZQdvYZSC5/mnE
OaAP8gJJ/PfC2t8LZwISW8L4o6rAO3ECeNtmKXMHP8xcQvnsMpDu3+i2jdOz
macbAJoJOv7fbRDF51R9x8L4t61s0t+KiF3M+gEB4gEj0whpZjPBjh7OoJGp
BVAvj27UGLB2Eh1sd2jp0fhpx3qvwO8qwCxC5gw8zAKUxVeLu30RTvRrsfbT
q74WNtc/hgxMigPI/oW4fdngTH84281S3u81VPwlMwBa/4XMG5xrT32e5D1/
g8xy5sLHR9AT6gjyvabgFSjxBg/F7d8iVPYnmt798Tlh6zjUqdmRqE2T6N8J
yD/RmTj3nnRe6VLvInK95yrk6nhreJ+6bXLv9ngC8R/nfdTnC9/tftf9iwKW
Cg4E/hJ0FfG/e/iyCEnUZmF3NOH7f5DgnUg8Nz5P7ZduSC/INGbfzjkp6cx9
Kvs6b6/CqPTJf6jep5YXVGr9oPZzoOJ7Gk/A40tToKlfsQ469T+LdxVPBax/
uXh7yeBS35JZJfZlQWWrSl9BZ19cNg7ifpR5NUT1DHNrlVvVrcqj8FpqeWyR
WnwtvS19q/tWt1bVVF2tKjEXACo4UCmpnF3haXasbKr4uexfwAR3y+vKXpTZ
l72CLqISvvtYyDC+Jd8WPzdtBCxwwnjP9I2xDd4Gmt4BLHDRIDPY6ucXnkM2
0T1NdUGp2l2TlM9RJeXzlLuVfVQxyuuKYMUKRb7iXN7ovO1yP+hxqmVtqFiy
UEo0By8BHtiTvSBrQdavmZEZ09KF6SLx56na1Obk/5L+TpydkJO4DLJAQ+xk
0emYzZgDlkU0QA7YGbIneHxwQaAZckCm/xK/y742vjU+W7zJXoDvafGIdf/Q
PcftLc+ZF8Hz5/bjpruq8V5I6zzT2dGZ9HPzHKMdj6N3C/EVC3YgvoL/sCvh
D/AyYBlOAYajXngb1it3dKV4yZRB4nEPEILxn4UKgeQu+CTqA5GdoBMgAR+8
ASQegWOYR+gp9AdNsqWOALcx2mncX8I8QP3B9ewCJ4ppgHEYDujLHILoJRBl
4Vn1QOgkniIBqxdXM+MAi9lsTtCDAqzc/Bh8bw/HqgpkneS1s+vhdtYP/O+r
qN5fM9v1dyEOUOD3bMVYp/1/DOYZ8hHJAnas/29DNKW0o4x+mhVEmAmOIc4/
w7wZyH7/GNZ1ou0rt6f3ffcBAwzHrozy/frhb0eO834b7PxtMGMPx4kg8XwY
jghgF7I7iC/UHdQBe2pfydx/iMo3uffxgGdALKJ/wvbvwpn/ULwqm4Ocv5nO
59HN5waq+ldzJ/N+4L1y+8uty+Ow56+A/wN9evvN8iv2FwfwBasD44JcQ9aH
ZIdlhF+JKI/6T3gveo2IeO8NTkxPfpZ8MDUtPTfjdebOnJmS2lyiw7NZ0aQa
qhqg8S84qtmviy2UGZYi2g+E/01fFM8q+bhUV7K1NKHUAeKS9PaZ0MF/V3oO
uvdVpdOgbkdW7C4/VdFU0VLVWDnIvNL8Eur7VYj8JMvT6rGWNZbfLYtqHlve
q/ndcq/qc8ueqtPVdlXPqxaYT8BXjoLuQFL5a+W4ipOACIZW3C0XlOeVh5Zu
KjsEP3dNSTJgjMvQYXxR/H5Jp4kLueAaIJB00yPoDMYUHTZc0Qv0dyELOOjW
aCu1lwtaNDfU5/MHqX3yb6iHAB54orqrHK/Uq44r6iAPfKLIlUfIySXRHZkp
937uxtwZ0keSR5InOetyjmf9khWXNRf+36Sl70sblTYztTX5QdKKJO/EyoS0
+AFxUlFVzH/CQUJz5JGIveGfQhY4EzwoaHXg7oBj/qv4v/sl+/n7nvHJ8pag
t4jF47j7freP3aSQA3Zx77kGuopcT7icd37jHA5YLsWJD31dMyA9wgx6hRff
OVALpmD8T0EPsWWoFUyQ5DWcSpFptR2igH3IBaAqlvQmiDoGv8d0QrehKhi9
CmxklwBjmEbwJRurLvhhVASmqsA7beh90FJEA03owclnDjxRPQxAugXoy+aB
1n0f1QOkWgHdbHvfxWaC7T0zQCPj4lBdDgWLcysryNKzrbP0MAcU7IrYyg2i
35V4C7Qynm8Xm/g1Y5SPwLrfiu8rEPkL8M948NodkX4tqvaaEP9vZB4MJqbk
J8JN3310+qJvKROLMP2ErMKn4a3GcLzZTMM/o9s/G2QDk3pP3MJp598PncH9
EcMRnYepWPuJJxjBd6TXOzSBXP0TBgDx8Hw18RPm3XvcoQP6/m7U+lkHnf9h
VPn0hNpP9D7uufpze/Mu8D522+8m8PjXo9Bzphfx7F7v+x70o7yAaQFrBcbg
mOBLIQlhZWHiiMORv0Y9i34a813s8HjvxNbkSykNaffFlRlxWUkSUe402TSI
/y7o+h+qhxUs0RIu7l39OsP5ohlGeXGL6Sl09h9CTc4sKyoXl/PKu8r7VAws
mw9Iv6t8KU7y5pXLKh5VnoRev8T8deWwareq9Kp7Vd9WT63+uOZ09f6a+bXi
uvu1y2uza17Ukiyw3eJkqar2r3ayHLTYVFdVX67eWPWN+TfoFV4CKqg3F1a8
KOsDL69Ko8v7lxdDttFAP/BDSUPprBJdydzi08WTS96WcItnGB8V+RTJDIcN
z/RF+nn6EYgE5hb4F4g09zRKzZeaDE2LZob6lOqU6mR+CnQ2fJVexVE9Ux5X
/KIoyPsbd4Z+cp38iKxaZpdL9AuTJFE5zdnHAQvkZP4IaGBV2tm0qpRhKf8l
DUp6B7LA9LjH0A2kRxNNEXJJrAnrFUoch30Cfwqo8x/onwC/AaEvcRdp9Brq
2e3xs/t1d+KxPJZ3hDuM2wk5YKXLDJdROA+8DfHPcYrGWcB8xACLIP6pr3Al
IICnqBoz155Wl86e5y69UqWewaXM045wgh/ZhownPGCiE/Y5vqxmbEAJYwKN
QWZwL+wDeuGF0G3MARQBHGa7gDmYA6g/iCtzCIpi+ltD2U0g2cjRPoCDN8L/
c/64y7G6gZC478bevZ1FdSu7Aejo6eFJDY9htd66uWtn2aKZY3UO62ZVv53t
+mlOofMGeles6OkeyHs8eJ8HOWA8zgB4+Ghj1/sbmY5fC9700/u9NvyoBef/
Gxm+H47Ovv6o5iXEPawc+3g58nrplQ8XOwPiAWRjT/OGDbo72OBXp/Xs/4R4
B1SN9wDrcQY4C2e9RDE+Bx9EK6IOHp/g5fheB4VjkeMVdPM6DI9TTo+g/hOV
T8Ivk3OrUdufKP6scP/X47bnNq8ZUP/X+4byE/ix/lcCLgoWB7pB/K8J3Re2
IcIl8iNhYLQ8ZmKsbXxB4ojkmal2YhtA/93Zn0saoPcPy4tV8FWP8jdqphZ4
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
KAO0Uc4gl+EGoJjyCmyj7oLTqCcS9AKLof+XhGmgKsT7qIAqdAMPKUdv4hY0
ADzBeoFpX5BJiOmB/yiF/O+qjzCHRikuMdEXLKMmhR0zOWNaP3Ta5TOT2h2Q
SwByC2AC799sNBHAu7wvoNU7BiiAzP32QRYg2v1q1J3f9M0fueWzm2H3qMEd
JoljUtWvCBHNdsznx5GMp31LQceZJlwHGYDM/NohB+DvYxYXmQVcAQyA1QD1
EQLAPEDsB/EnygBaooMo+rHrD57/YRcZT3El2nEU/0cR/jeV3CeJWYAvpcal
LWUqZXxlr8lmyi1DGeAZ6gGWK6uBCrix+jrN61u/aP2u/UR3hb6W0d9G90yO
mo2ZS1gmWZ2y6drWaWfjeMY53O2C2wpPXa96nwnU/6sFYlaMPVuEx+dvCM4L
qQidCH8fERu1IaYw5mlsRvz+uIz4C4nbkxySTZLx5u4zQuoBaSFpH1LnoW5/
PFM+Oz33Yl5cgXqhbvHK0uIy2e3aFTsqrm4/vT1ru90O3+1GO6R2bEGfiZeH
l7uX3y43KS0rTSoOKx4vGi7My7fI7801z36GMsC8jOz0O6l3UnempKfQU6aS
nZOsEqsSlyZEJryLzY7Dewi1aHr0zuiEyCrUn6yPqEIoZSIcTwQywjaF1SM0
IBeKlUlKgmYHv+K/4s/nB6MM0MIN5llxGVwc+W7cIU4Y15mHsU4LdyGvi5vG
uYw6AFUOZgzh/eAg6zzzJvM8s5CxgDWbkcpggheZDeNzIL4p3oVQgJLfT35D
vqM+Qt6KXoFenz3LPXw8nrt9d6t2W+kS7KzopOL4i/0au2Jbno2ilYSlsYWF
WbuJudElA3V9IT2mTqxWmOYszdVqJ1SuKGsqXVCYpZAp90j2mIyizBLpdKmr
cCMsL1GA+r4hcA/B98FYKxCzRbCDHBN0JOv+c39C0KssoAA+aAR1gk6wNuUY
/H4T3gdcAC4g4QZjRnA45Rz8CdSBiTpYG0wCyRRgAlQBayksQP7EGcET3rMp
vVDi2T2X0gicZgQQlSBJQaIQNDlTyweoqJ/eF45AdI9QuuGkWyDM4SnoAx5S
LMIRSl2Y7ABHqCug6TliDMUcJJFvP7MVILdA3gL/m+mNUfrdUkLkYl8QtH0O
b5nOpSvgTQpudzEemL7yqaMmgEuF60DJux16fozpacIYyevDxxgJ0GAO+BJw
P2YLf4YpAEcIq7t/Rv+c+zDB3QB/aylU/1RhHfABwb7fTuD3rSH2s5i3mIR4
JML/WDvWjfad5izRCdqfauD7iS9JFsmclwmSfYN6gMvyYgoMBQelh0ovlN+p
rlCfVNfe2q79u/YOXWn9jwbexgWmLmZSFqlw/xe+rcF+hcMBZ0lXU4/Z9APe
Jj7f/cpR9z/I0mB/52L17Zrgraijvht+JDI2ajfw89Xj/4rfk/A3QuVnk7al
MFPdEeLXT61IH0v3ypDIrMoSyG3NO5c/VtBYMlB6r2zL9qWV3ZW0Sr9q/HTU
mFcvqDap+a36R6VJjWXV7ErRqqzt83a4VHwvv1wWX6JVYleoUuRY8Bx1A945
x7PmZPZnyKZvymhNDU89lRyV4oO6gfzEkfhN8dLxq+NWx7VHi8ZKRq+Kyop6
HLkw8jjKAj3hQ+Gq4V9DJcI90fuAEKwoKhS6NmR2cDmoCWfxb3Pn85O53xHy
D0NZAPsU3eZOoKjvQp+5of7gAdsWdQBctifHHuWBRywuux70RY3Zm+CWSJ+h
yLwSiB3JBANPBezwv+DH8BPwxc8B7wXeTPoVzzrPqx5P3C3cW9xMXMpcRJ1o
jhkOt7eJ2GElsVlWdRYhqA/wNtY17NevQH3AFy0HLTfNeDVR1c/KMkrairMU
/pI7I3tQJkBGWboE/YZNJXdIiEhU0axAMdQb5gDYQbQS3ENrYBOAX311UJXm
CZ2mtC2ugrol9rU+CpeBTaARijUCTyAE0IUQgMJmohB4ATqAFtAIYoBrEL4H
uEdpgpOrYNIBTAD67wVd4DboAIheqCHlIU4uAuZSrqHEN3QKPMKXwddGqcid
7vRHqO39KPXZwxkF8VHoFQhzyFBw2k2AaI0PCHRQMwQyFSSqI/UCRGF0WgWk
nroFlAYVAKL/h5kAh6HDnweX+TgHED3fFRSCwjVfUIhgBPx1QbjiIxV/mGL9
EwYPjnHM+9tARfswimEVYZwBVOBOi9xq0SCuN8A04DPVK3yG/eBs0HbDSEAF
kL8+eo+1wD6i6p8ncgzhf4z2sO/fz2KlYpPAAVyMsGAV7TbcAB8GBQDMG8N3
QAdlRGWEUPzbox7AQJ6hkKvIV0pXdlFdoGag8V5TUytd20W3VH+W4VkjSRML
M3z/85v1QxsXuy32SU5HnJXc5nl60Hk+2MdzNqpuGmw9bi6q/qf4LiG+oZ7h
/0bgi/wfMc9j+uON439LCk5SRlX5XFph6vPUm2lH03zTozOGMyIzZXJ25q7N
10V4fxvC+iIV3ZX5VeuqJGuLawdqnu98UvcWPem7BHed2LmlXruuuFakzr7G
qfpp1Y/KPZX3d+yuqC81LDMsSy3iFnoVWuSL5znkOGfPyczPWpFxLf0cyjJT
yfuSWxDyGEooSsgAFYFjsbNjRGN3RTFj/CPNUQ5YGCkWURteFC4R3h+mirDA
yrCRsIMhn4M2BKcEtwe94msiDODMS0a57RmKfwuePE8Mxf0EB7ME9LhV3AKU
D4Y4Faz1XBz9Z1hT7EaWH2sUZQBjcCQ8iJ47qB9wZeowhwPtAksCfQJC/Bf6
V/tF+k762PvEe+t6LaV30196GnmKoByw2K3D5SnKAC8d7BxC7NxRJ3DSUsJy
tbm+6UNjP6NZhtH6vnovtLdvPaT5VW2Bmr7KYYQBeuRV5aXlbspYyqRI28E2
IEFihwSD1os6QOwhKi1WAXMAfBPwA5hjqZAD+gCbqoFyHUYBcfBgtbtOUAZI
gMtgbXAL+xVuhIljQBd4BiTDThDPBvUg/tdTykDYKewTdRNItEGKQRmol1IH
bYPuvximgKpQ+QVmFEIkqQshVdAOJfeBBA2Mgn44yQcj0BM8pG4HSe0fhVww
F/SEVQWJFzCu79M7hHrKb5C4g2FsQdRGpllFmTM3/9N8YA3gB0sLfAG9fjsh
wvch6txfYHYiCH8aAfafVvOwgwlANMz96DCz51DXfiWg4dcnRLawKsL4DUe0
DaAysgP4LGQD3T2Z8BEk0Ad9Qh01FyDY3wa8QCIA/+Nbj0oR3PvHI6y3Ev22
sQrgFIr/OeJitDAU/fISb1H3vwvV/3kI/adI06QDZHRkbiIE8LOcsVy/nK18
lYK24j+KasruKk9V+9Wfac7XuqJ9Qkda/67BeUO8/6uz6Le4ZTVl07qt3D7C
Mcd5wjXL46XnoLeS35eAsYBvzDOsy5wmXlSQfvBgqEZYYERYhGS0csyHmDkJ
k/GpCe8Ts5Knkn9NWw37PfWM/ajjN88WyDXM3VLgWOBX8mfxkvIVO4Z3KFap
1t6rXVOnWX9l16LGpMZjjaO7bzZWoo/GG9Y1ujYqNl5qiN71tu5wfUjd39WV
VRXVsyuztveWtZSfKbEpii58XSCeR8/l5bhmsTIlMrkZXhnVqQIpp5KDk0yS
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
udHvYOofARu/clD7yQJmHzH12w27PjVg93kC/sc7/uMw/0sgedY3Af+3Q15Y
DR5txJUP3vfh+F8NNR+r/ZyFmn8N+v1W9ONW9F0qRF/B1T+GmYZqfzJkADYW
fvR9xDpgGaw7UW+nijLANoTz+lH/7wQ84EXUAZzhEuU+xaPOG8y3WYBJiCqa
IdYvfkZ6jfwGpRqVC+reWvK6DEaZxovmDFahdhS6kqubp4sfJUjupMqZuguK
Vw5FP3vQ9eJqwv1Pl3Nji7dXpldfbViJon9ju2m7cqdvN1OHQtcCwuW3m/gR
Gnevia8Zro6rba5780Wk8UPjs6aBljetI99D2t06O3rSByaHbqE67zT+ePLz
9MtpvSn3OdOZl9NRY+9QH1A3um88Y2TTcN7QkxHJgZrBnn7Nnx09Of2WfTpd
+7tM23+0Xm071yr3TfHrsybNponGwS99tSo1caj+m1b5f75Qve/z8erPn/Uq
hyrYy5YUNxX9yPfOC87uz5nMWJIlm7kl41jao4//fOB+v+bN89f1L9Oeej1x
eMB/1//G86h/Lp083xTGGHr5JPMxnaDMgF2B4X4nfJ57n/FU9uxyt/XQdM9x
i3Tb667raoDqfwPq//NQ9Xdz5HPgdvR0WO2obedgf9TW1XbB2ts62+qUVZ9l
rEW9xW6LSlT575ntNZc3Czc9aPrK9DGKfTHTEePHJonGxSbYB+yYSZJRIop+
MyN8A7zD4KFBif5DUgvIVO8vlAH26R5EGMBeawX1vmatRrmaj9pfqq4qhspP
lXoU8R6gRK5J9pp0sdSERLh47RF+sTyRa8LcwngKEM4/wuvLQ+FeyV3CmYWw
oBPqAQLZ0xACuIUQQDPLc5QB4hCaxF5z1igDEIy1dzDb6iXRL9a8lyddQ/G2
HF8EW8JFILEJ9CAvgkb2J6L6jycA0vvtURbYA9qgWBm0GUU/oRB4CmaA7NAN
/M4Cp0g8QPCB40hNAGLrRwMdjzByxqf4X7w/FMlp3292AMEJ/I+jaBj8E2ik
NjjuIj4B4sddPoFkhGGvSdw5a0PNxz6f8qCEgHNALuh94J3fRsgDpqS6twP4
fGElvy7yom8RKr8naPYugor/buj7jeCWB3N80gH7J5DOHrGw+ZsHvh/uvIYP
Y4WfdNj7cUPfzw1zv1kU9bUoB2AN91kmHZQBrqDaj72Al4PDAwOLGfoONqMH
Z3PsBoJdQT1QB3AQ4bxP7NghkhVcQfAEgMojzfuGb5/AWqFrwm/FmiWOSu+Q
pys+UBHXuEsV0X1okGgcaxFguc9uP53DrcZT0Y8aLBNCDXOO6LuSfWfrY8+X
ku9kUnNy+0sjPyfW17YUtZ7veNgp1N3QU9FN797RKdG68J21aSeq/XJ1bTVB
Nevr7evffPmrcbphsWmsyfv7svas9q9dDT09/ZeG60afTrhN6UwXTG2Ztpie
RK/XU5+nFaavTTVOPJ7MH+sf4xm9NXJn+PRQxE+8DbjY09Zb2sPdydRxs8Og
VaL1zrebzQMtHI1cDS61B2p1avVrZKvufe79rFZdUs1UvViVXm1VKVA+VapS
crvIL1epgDNHKks53TCtMmVpavzH5aj+s78NeHUtrutFRWzho4W7t2/uvHYo
MvP8r3DlUL+TwcdXBhUc3RXI7u/ue8JH1lvBa50Hn4eMu7xbhLulK3YJPOdy
AuH/907LnbAX0BnHIMdhh2X2H+z22Z2z6bCWsBm3OmBJsbSzSLfAar+48881
+4mq/9+mqiZ1KO55TRqMpY0z0cNivMf4sEmO0V2E/aMMP6LqP4vi/6b+L/1F
vXT9LL3beltQB1Cs/UN7rfYGLXbqR80v6lLouaeaoGyrPKrUrKilqKhwXR4j
AEZpQ6kcifvipWK+onkiP4U9hSYEqvnd+fh5/+FR4LbikuTUpHxAHYAl+0H2
R2wSbCOoZuxhvYz6yCtwEXAWvfMS4CoFv59DgAfEeigXbt9bUD10gpvgq6AP
KgZcgDlAALywCewEfXDcBUTDNoAFboJYEALAXADMBqDDFsCMdAcXIjE/+5/p
H6ES1Eeqf0WR6J9GevsR93xERx8HF386DP/xB/sd9YSWMKH5GUdqiEeR7kIc
MPUXRlFeACyffcDy/wtcvfZBp4MVfiuB8YMvgE1JPYSNpMO3DPAjCS/PclD3
8IRcuXjI9jDB+1EDpo8RTPZvwrwfa3hhD7Z2QPmEos9qUGPHd771oO9bQt77
WQPjZweKdX34XrQyxaMe4Brq+zFTez/zVub96KGhbK3D/JUZ6zmcQvifzoL5
XOMsFxH+f8K6wGrDNshWxCaG8H816gCcOPZSBCjHOec5W7n6uJl53fmq+SME
C4SXiIWLJ0gJyk4oblcpVxPQUtLhNthp4mMuZ9Vrd8ZR2O2K17RfdvBCyKqz
Zy4euc57rztW9vU/HywybuQXVMbVfmgc/xbc2t5h33O/b673U9+SHp2uuVb6
t/KmRNSNi9ZW1bLUt6EMIPHlzZeNTW+bl343/q7X5tmR3FXRLY/i/8P4sUnK
9JGpjFmpWZ65V/OOM5+nW6e+Tq+dLJiKnng3sTjxccxgNGNEdOg16gFsB84P
8Pes6X3deaXLHHURHd9Hvsd9DWmqbij+UltjVN1UVV7FWiWIXmcq11VvQXng
daVHRWd5fmlTkUKhVYF5bnB2d6ZCxpn082krUl59kv0gkNj2Zvnra3F/PVd6
1vroQUzMbavrK6K+XxxAHUDzySfHlhwrOCoTMO0X6Nftnef1jzerO9ZEk3HX
dqt21XVd5ZroLOGy3rmPPuDYR8eOoNYIAfjYN9r/Zadq87dthvUJ61aai+Ww
BZMFn4WUxYRZr9kn0y1mqibHUL0/jHD/TpM3JuuN00w8UOefY5RjREeVf8BA
EeF+FfTsMFht4Knfrr9RL0tPHtX+Oe3tOm+0n2p1aiVRAzULNX6pC6o5q1qp
vFZpUHqh2K+wTWFYzlhOEGWAMskyyX0SluJfxPpE8kTOC70T3Ct4n7+U9xRP
Hvc1LibOXZyslL84PgEfGO8BnqDobwavkGRUVQpRzcEMVIxQy/8ohLOSugAT
sBXDmBkjAHwLhLVBiw4EI/wfjFBA536sDYYngSfgIsAbeoD1kAOa4SqA8Akn
EAC+CloBbGAGiHp2uOonlEKqyN1eFYn1A0htnwCS0a9Icn1/O35Vwe+qIt3A
q2BK6AIZhJgCEF0E1v/EHYA58P6nweXzt7qvP7B+75EqqC1w/YCrP+6AXjAS
sz/C28uU9OwmfDywll85uHatA67PIjB+sXInZvhhfm861PrfPJ9hkuWzgykW
dv07oOuqh2ygD9hfHGIeT/2CUMSfBcRPgRkNhRnf/mE/Bx24/sF3HHj2R2dJ
YsHxT9wBr2HjYXsDV0DYFVCeQ57jHscyShfFDSYA73kyeO/ztwgMCcmKuohH
S26UFVacVy5X86MW6LgbjBs5mFMs+21F6dWuFK9Q/0vBhqdmz6RfFrlRdO/w
01/x/Z/4s5qKhiououqfhqp/Xa9777ufNwdWD77oX969rL30e0lzeIM9inqh
umMwAVRqkG90aJpvFvom/Z2x81077v67fm4dOj85NHlm6sp000z/fOpc00z4
/KE5nenk6Z9T6rOvp4Ym+6YdJjInwsekRp6MnB7SH2z8Kdwf3lfYqdy5rkOz
/VXbk+/iLRFNDk176hPrg2p+VmLXoIOVbyokKmYq9SpDqp5VsZT3l34s9Spm
LNhSqJG3IvdQdm7G0fToVMO0L8nUDz6JL96KJcS8an+5+blvbNeDqdsPozuv
Hr987IJd+PfQwBO/jm0/qhaIOYCHfC28NnkHeT72CHVzdQ1103arc3F1zXCu
cOp2CqPr0KfoznRROp4CZNkL2k/bBtt4WxvYXLTOs9xkFURrRxlgmflNiy1m
BaZcCPVLmBii6p+Jev5OYxsU+0ko9v0g/kUNaYb6BvEGuPPfgeq/lP4lFP3v
9VpQ9/9G+xiKfm+tCuoK6jfNDHV19TG1ZNXvKj+UG5SilZIUxRTc5e3kJmX2
yxyVXivVjHoArAyiIxIknC4kIOjKX8d3kTePOwAhAD7O2wgBbOb4jjqAR6AR
jn0C+Fnz0PspGabLeOI0j6qWJ6jUdMHOC0++KkEfFEdKNTBmjqL6LwYZAOsD
Y6ewc3ARMALqoKXgF4ydwvAkAHcB+DLoDuoCmkEf0JdE/kKkR+g3Uh1ICKKf
2Oj/dvsJIOOYqPp4v0ch9b2JS18CA+SReqCEVnDYH37QR8gaH2FuIAwRj5k/
wqDvRUz9zIHtQzyh4PP3Aap+JaB/VlD5doDZP+Hxg719G+EhfHsJ9o8tbPsl
Qbk3Ha76bsKG7ziK8RLIAwkw48NXPTtgv7cDUADG/hgBWJMTAGWYAVrD1S++
+AsC3h92/tBBGQBz/7ETMH7ymDH7FzsBXkZZYD1ogGD8H8yGb4BXIYzXDzPA
exxdlKeU1VwPueK4sSvgJ/5IgWIhqqiY+IREskyqfIOSoNop6mNtdwN+4xDz
a7SjtjT6Gxdfbz9/weDOkIpz1pHyNybuTzx/mrgi5WKefklcrUVj3FeZ9sSe
ff36g77DRwY5+vf1e/U4/Vj4frMZT+WuNuxrfIBe0w2mTYwt7c20rw3fPVqX
teObAMOBz0MaE5Xjq6eezVyYDf3lvaC6ODinMqc4v21eZe7ZzKO57Jk8lBd2
TWZO3B1fNdY9PDQgOpQ+sKb3XG9e1/LusC7T9oh21Vazb3bNpk13667X/PU5
8vPflWXld8uSyi6Wp1UUV1ytjPx8rEKxlF7WUSxbNJTfnyOcm5N7IWsmfT6t
M3Xnx0sfIt9+eKvyRuh12YusFyNPWh9tuR92W/ZmT1RuhMGZlFC5kxnHLgUP
BVb6p/qG+2V7v/Ra7cnnwegp7Nbv6upq45LobIkQQDI9jl5FL3Sk0L/SuR1v
Oqx2fIf6/79tbWxGrL9amllx0+YtlBH6zzLfaB5uaml6DtX8VygDjBhfNE5E
mL/biAXFf7PRJqPrBpdR/W8zEDWkGP7Sv6k/rP9W/7aeoN49FPsfUOf/Q1sV
PTnUy9SlWtYa1hqx6l1qV1S5UP3nUtkFF8GD8hly/HK5KAP8LW0iGSqBFYJP
iW4RWS28S8hPAM8AlvB+5X7IZcRZRsH3AJs5DgICyIBrgG6EALCeRB6qMvge
wI2pBBhqmLcaAZ51MqgC5gIb0InxO+zMrwITYBvE/yBogxrALHAnMII74S5I
A2aBe+DB6gB4FnAHHMJOkRrBvlD7hcAf1GwfoexBaAH81v+MIRX8AyDyPwIC
IFh9cQxh5F4givQLyCNngXnk9XAcqQISQ14TELwfzOzZR+r8CMN9kzbkgEjY
/ueC0g9GPDjj4YufXtD+kAEHPwf0dMGdf+OhrEO/9Tywb9duiHzM8LWFLf9x
0O8sIVU8SshLnx2gvsjNhC988XUfZvdi9s/8YXHY9yuT279rKEPUAvbHvH+8
98f4H2t/hDHnwQYwDj1UmP5j/g9WAjZGGYCHDd96v2GrY7uP6r8luzaHOUcL
hwlllGLFFcSlw03lSeSd45sQqBfaJNp25K7ENWke+R7FjWqKmnXaTXr2xhxm
A7Q6m3oHVZdJrw0BOkGMoXLn9CNVopUfpb/0fOeZZpt/rGJ9/bpm0/a8LqU+
x+F/hg1GdYYshrYPdncXdnK1JX+lfE1vnm+WanZoOtvC18zYkvTt1LfE7xvb
zX9wd97qme5THuwYOTI1OV00J/zr16z3wtKFhMUfi9EL+fMMvzIXVOaSfn2c
3z0bOB8wbTzriXLA2smdo1eG1g286rva9777VPfKLu7O6Tb5H3lfpZqVGnLq
9Gu0PxtWaJTrlraVmJSvKDtV5l1uVeldfrlMCDQBrQqi814X3M1VzOHJNs3U
ybiRFppy50PB+w2JI/FL4q+8Ov6S81nf42cPJO6tji69ujpS+rxdeESI5YmV
QZKBTwOq/Vb5mXk7e730CvJ0csty3+e2z22Ny0XnKvp6ZwYnHbqbo5DTDscY
+kr0MzWEAJbZ/227xqbDmm610pKRxkjrMsfxX22qaY5v/H+Y3EDd/2GTJ8be
xtGo/88xuowqP2b8xhu4GB4yOGB4U98OPWr6Taj29+pe0nPU49BN017QatAS
0LqotUFrBbVQQ0WDWf2ZmqbaJ5UzKgnKvMrRSoEKbfI88rFy2bLLZT2ljklt
kIwSHzxySdRZBOuD3gYmQBPPHZ793EOcRpxZlFDgAnKy87AdJnUBskEfcDmL
DqkMcBYUAneDOlg57LZNgRPoBBUSs2VekX7hmBH8A6YAeBKoCnwg7BCQiSL/
CSgDEJsAjf3Z+zAnuBv0weQQBjCD3R+xB2SH28A+UuHnt7dH1B/X3zhA+zEM
hOM3BWaAv92/iAwQQ/J/CK+gPFIZLIq8EyDcBHHVxz4exA5QG/QNsNbPPUAA
kbDnnIB9xwtG4gayBfR+ZUDNNwTceyLg7+O3rk8XuPaWH/KEef/iIT6YAZ6H
WR/R7RPqnfNwz88NtzzioL/GDZc9+Ov4a9ww8RsGrW9ueBE3f2eZcMf/ENw/
cQ8wwJQMl78xqBPAPoBTCAOcYnkOCgCJKP5Vgf+viqq/EnpegQ7ABMdJigll
iPMMVxiK/4u8b/j8BGyFdERuiUWJ80rFyoUq6qkEaezUHtObNcg1c6Olofjn
cXH28vNPDnoQOo7i/2w0NXb+ZcK75IwjBU/LT9Ut/xbRXtfrNlg0mj8WPCo0
TB1++vNVH3MPY6dem1KbQespuM/DkT/Yuqb1e5vwj5YfCl3JXdv6FIbejP6c
ejntNRu9YLv4+6P+z89UFzMX8GfL+VXzuvMpU8pTTyc4x26NyA7rDy77OdiL
dQJXdkX+2Nm68uu+RovGPfWCqOd/Wn64IrbYqPhXcUbx7mK/MtHSqlK/sv7S
b6VnS2oKlhTvL6wpuJ8jluOVtTFzbVrgp/uftr9Xfr/57Z74M3EpcUwv78Qe
fygW03e76+aKqLkL4mcsTjMgBHDk6F1/MT+sB8zvo+B13kPSo9H9lWug62GX
nS57nFfSx52uoKjHE0Bm54eOCQ5l9hH2wnb9toM2N2yWWj+kKYPaZ7l5hHmu
2StT/FSb2hvXofrfafzYZBzFPr/xUuMwVPMHDM4aiBukGuC7fzv9dQj7f9C9
p6upd1r3gc5PHVcdD+1orT3o0aKGaW6mfkHVv0NdUE1QbUalXvm8sqRykiK7
4jaFDjk7lAG2yNhKdUp+E9cV33mEKkoR4RZ2EHwhoMSvwreEN4D7CFc95zpO
Aco+Dku4BpBgO8GawfqcBbMBvzJ/RfUF84Hi0fsOo9Z5UKRfBDVL7BmOL2DN
gSljzqh38BU4heghDEBcBKQd8CAzwFqYBmLP8ERSIxi/loJGcDZwAk+RHoEr
wDHw93UgofCHdcDzALP3kZFLdAE6f5S9XCAD/N7v0Ujtr74/N0F5DL/9w6LI
/BEAHQFW9Cb0vfB17xbY/glDTnuBfhUJG8APpNL3B1D53AiPIPik4Gko4epr
Csw/Qs2PuPjbDXd+62DHlwBqPp5w03ccNDxLDmMenz5c9OyAi2tryAD6pLpH
+2Ei5nEuUAYGQDr6nRgNpEA3UIviH/dmeAoYwExD36MY4P/TEWqrYsYuYNgF
oAM9+P7Hg62IbZDNEuIfz/+cOAQo6zjVUPwroPh/whuM6v9JwZUi6mIfxeul
7snEKZxR8VFr0GrRXWr8xqTdwsMmyJHf+YxnuN+FY69Dy86bRenctn4U9mpJ
8pYMhcKxKu3Gq20V3asH3w+7jPFOrp6SGuEc0xla/Pmp72vXtU7N9o3tHD/S
WpXaTNsPohe+Ct7Vsb4npdOr5zHC/lFjG2duzTb/8vu1+N9+HFu8scj+K37u
59TNybKJg2NvUQ7w+fmkJwb9f5j/iP4e3zKB4p+h7ni1VWVzmVlZV5FX8cYi
n6LkQvcSrAVqVGxTsa64q+hW8e0i2SLGAnwHGJztn/E0te3j22Tqh9HEZYkn
4oPfOL86EnfwWXes4IOGuynRJldLLiedyz3NeeJZMCWIJSDYt8jX2eu6b4DX
Nc9R90X3FjclV3eX9XD7n0wvcRByEqUPO9Q4Kjs+dEx3iLAPt81HHUCD9Skr
7PSbbrHOQsbcySzS7LtpuClW+kkzKTX+abrTRMIk0bjZSNo4ynCFUZ8ht0GQ
gbVBuv5xfR89T32881um9wx1/vd0rXT0dGy0ebXLtJai6NeiylF1NQs13qtd
Unum9lkVzwANUfyXKb1QDFR4K8eMeoArMjekdkk5SVSjDuCtWJ5IDUIAywTD
+Qf5+Hnv8NC49VEPsIGygfIXRzj7VXYDtkRWfA8ozZrEgl2l85jxdRneBZ4F
XRDcBWBeewjcBTvARrCF1MQmnILEYBOIXcIegTIAL4p/XtAH7UQYQGP/CVAI
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
COCysAX4gC+QckRmRdaJOYonSthINv52AvypoqNxWvu1/oiRKPmm9TeHJW7e
Xn/4i4X8pB+N3p4gnHTjlOPF5Bs+D0YybV9HvA/4olx+uGqiQbsl9Cf25Nzc
d2XABlV/15HbY3emvkx3Tr2crVwo+S/OAbYhrL95gW/aYCZqZnrGc7pn9vhc
+zzOCkfQ6/Xvz+NdwL/LNXto5tb06qnM0YCRyP7ugSN9rt1vft76eaQtuJmr
4WJjbu2KqksVV74LlD0v2vLpj0/Md/Q3/S9DnipmiKUn32i5HH5WJLk+6a/E
Pw5Y7FeNS0LxrxxTGzUeeS/yIKr/9yI5IpVYSqxylirzGsuI6Ue3Z0gz4umr
GAa0XTSzsGNhn4Iv7MHsoPWBpwN4A2oRBujz2e0d7vXKQ4VKpaq70xAKYLhm
uUy4JrimuJ5y4XTTd9nt3Oqc6ZjkJIA6AFcHCft2yhdKGKXYLsIuDaGAXTat
1kaoA1Cz7rBysHpmtR29cq3GLRdb9ZI/WbSbB8NOwMvc3Owq3AHdNN5i3GX4
wEDJwANhgAkdps4ebQfNcY0bartRBriu1KaIFQHwJDBeWlu6X3KX5JzEdnFN
cX8xFzE3UQ8RVRFv0pgw1gVgClUI2qAOYLngEEIA+B22SIDYOcXB9Blvp/rg
jlUZtgAxoJHhADPAMVDYw6y7XjYGqODCTqFU0AWdB01wCuQAwhcAM4DSIAOA
VRq4AxM3gNgV8CV7DvBLA/yXF5gum/eny94Gcvze/5PZ94BkUAVcC66la1Hk
08HvowsYQJj9J4Nq/Ta49SfwP6H4hTm/qujlARcOR2DiT6j6W4NfjzLs/PDt
/inw5sFdwHdQ9cI6X9Og5LsTVPsIPgCe4eHZPa7Z+COOd7zHJ+J6DdzyTaA8
QTh8reHHjD8FQANXIP61AAHQoOc/DltFGhtVLBKoAw3AWPByrkaZGvdsvIKK
QjOCekKvhHpQB9AlvJiEVQB3i3wW+SC6XZwmXiXRLxkvfUNWXl5F6bjKNfUt
WsN6mkZe5mrWwfa+boEeXv4PQjLp/0Sv3a+T5Jvy4Tzjxj8PTzyWznZ5V/VJ
tCSxktbo3frPz01d3r2f+hoGDg+LjMiNto8xJi1nA2YnZjnn4hFO/2/Fv9Oc
1tzXqZ7ZPTNrJw9OlE5umd41cwnyC+4zCD9hE/goN/d2Pm/qzlTn1PapzeN+
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
iAHlT+Ij1gL75fpD6IAR3GBltg5wJNwFioEHOL4MUID5H+bx+sLsHzutVwuo
gE9PLGh2J6L490JZAU8DO0HVUxC6K0cU/ZgRQFz7C4KSYBloiq+B/gtPCmkQ
/7gH4EN/nlBufyKAlZvw/O+j4DKEALSFe4T8hLuEBVD8fxaZEk0Q2y6uIjkj
GS+dJDMun6dwQPmMWqemk+4Z/TfGAxYGNlYOjm5HvAMDVWgyUW/33T3cd0IS
IQDtNO4Moayl7yOK+srDa+Nb1nd39J4bIk3iLTxrYhJ1+sZD/gOJPzk6hn7S
OvM7tDrTO279NOpbNxA2pj/xdcp24T/TCK2ZN5v6OCzSvaQzqjmmjlKpVVFc
EVGhVfG2UrHatdqu7p+m2KaCH+s6GjpedU92R/RE9Nzv1uh17Rbv+tnT9lO2
k/vHgR+6DWsaXaursS7wl9qPZwo+5/JnS6H4pzyMuffx9t2rtIvcp+NSjh2T
OJp90O5AUPzxvU57/4k+hDoAhyizqPFIfRT/OcwahPj5GTWMnogwhgnC/TlM
b0Ylc23kW4YtMyXCniFHrwqPDd8aviZsKsQPdQCcfnF+B30O+oR4r/QO93rv
aeFZgGr/F3d+dy/3W+6L3Je4LQI+8D/uUu6+qAPAbsELTiWO+5yuOQg7Hra3
tafaz1Oe252nfKGooy6AbLvHxt3GyNrHajXq+tdacpM3kM9YnLHYa/4E4X9f
swJTfAPw3WTQuM34szEf6v99jK4ZsFD8r9C31V+kV6JboPNQ+40WDWUADo1T
6i1qNaraKq7KjxWlFLco9sqR5D1kpWW0pWckqZLqEnHiDLFyUQ+RDpI0yQ91
AMsQkqQiVDmP3mHYHQRz0Amumj9fKky8lXcTLhmEFmA9+GzL8byC/R9WAsYI
4DXXa9QBYA2QtzD7lwIOIM4A+P73Iop8WfbdD97/p7NRQDo4fqawmb8u0Aek
QA4g3H8Jpv/0di7Y+a1jTwPXASZYB/s/Ouz+/UAFeBvMJrYBTwl7/ywG3a9w
UPwfASYA9vvDOoAhvNj9UxV0f+yADdAKbn+DbC3Az+AA9Df4/xA7wY3ADtIH
foA7qv9Y5+/7bnzNh1W86qBXjwWF9TOCb8CzE/97Yq31JwhZbYXtClZbxLWd
UBHC10OYcd2AfpUPtwQNcH3VzXcc/fsTnMA44AR18icCDqhG+D8YdQBRCP9j
FZBvQj1CmAPgTcolxaD+nyyWICYlESV5UmqVTK/cdgUu5QXVZI03Wkf0NY1u
m++z2koZdI739PVLDdnNPBf9LOFyksPZxEvGt7we7nxemLPzg3BpdNXhZrPO
sR7HQb/Rp2MbJpxGD4y0DTUMvOvp7nDpUG63aPFoy2g725bckd0l1t/XbzDM
MWmAsPne/4gTODe9Y7Skx7+j4Id1Pau6oup0ecL3hO9c36fLJarOV16rVqtb
WefbONEg1+LXkoH+P2U7azuxAtiDdo6OEy3cP7LqT9XX1/xZM/F9fyn/146P
q/Ib3gxnK77annn6kR2Kf9NrFy/eO3M8hZ505ui6Q0sSyuOvxYftq9uLt//9
MXgCKB+5gOp9NPMTcwVzFWOWac94GVHDEEIowJtRQjdhXKL/S19Kl6P302hh
oeGHaeOhw3sCA7EOyE7fPhT/w16mXk9R909H9T/M/TBV3b3avdtV1k0dZQEp
93/QI+gW4JruKuaS61TvGOjg5/jJPpZia3/G3oTiRaHax9l12v1DcUEoYJdN
jDVG//st3ch65EcWhhZe5rdR9G81T0fRL4Kqf5txtkmosbHxiFGukYxRl2Gv
QYt+IeoAihACeKe7S1tc+w/UA4xrrNUoVG9XHVNZqsKlbKNEUcxTuCKvL/dW
RkOmUSpbMlbiDwl/sSnRDaKbRfA9wL/CinAPQEXxHwsdK649uD8lWECYC9cK
2vjYO8d7l8AurLdJTN1fofovyr2eHftYCWwIdf6JKP5x9ce3/3k76oD5QzgB
rmF3/5j7WwacH0IBmND+JCb/KWzfH8LriwPwPpl9C0Dw/6a3Yz1gvB3Arn+E
9h8droB/+f7iLYUGaBY6wA3gV/D7xgxgPPWrgUsAzALu2IV5TXgCeBY8D27C
cxZ6gNnf7KAcXuwAwAOXAWKgCKwPlwHYwRNPAHBVz4NbPTzv5xVUQf+S4oJD
AuLguyYF9Z/A/3jbR3QAa0Dxn1ASwZ3+Eqj9DXAV8IIPMwK0YGOoxY81gPBk
Vgp2AE9ACYRXsB9mgAVCTaj/fy9sj+I/RERflAQcoF2SB6QuyGTIyiqIK71T
aUEdwDY9ecNUkxsWCbbXHKKoYj7aQVE04+gN8SuOTiQ/PL/v2vDdwIyibIkC
VgnjO0/9+h+GXRv6jw69HMkefjy0fDi1/3738q6EjprWpNYTLZdR3Bm11bTq
dBR3FvXqDHwc1p+Qn4ya+U8ugwwXwsY0B6V+rmxjNCjXB1ctrUj4blrmULax
3KBcubzs+6Yq1+pr1d61PPVxjUNNZ5pjm+gtHehvcaH1z5YzzWFN5Ibv9ftr
5iuzy93Lvb46f9ArrH274vXcC/LzikcJ9+XSZlNVLtefSUu5eXxtUsAhkUPj
+1/HqcaV7C3aNxdtHE2O5IjczOxlibJWMOPp2xgajEx6Dar/fvQS+lOUA+rp
9yMqaLtoP9BTFf4GdQCjYaWhm4MnA20CDAMafLN8mn2SvP72qffM9TrhucPz
EXXULZha5ybrNuHajR5+9063Yrc4qP9ZLl+d/BzXOvbb96PaL2F/3O4Gin1Z
u5e2S+3ybbFf4Eab3daPrS0s11pakVUsVqDef5PFJbM41PljJ6BlqPofMplD
vf8fxoJG7w0tDJ0NHxhcQ0+73l69MV3sDtivTdGq1TTTfK8hql6ppqr2TgXz
gZYr/aEoq3BKbrNsuIyTtKUUFWWAcbGdYvpwFTyG4l9OmFtIROg1ese+gY11
GvBVMUuFDAwAfZiLefBi7VwZ8AW9CzoAhdwHuF+hDqCfC7uBveaygQ3AW7YP
QPGORXD9ZwbTvzio/0vRi/D/Sof9Xwrb+SeFPc8nQx+gwOb/cLHVvn7t+35V
fQ52H8DBiXOQH0Q+oQGSCbr/XXD/L4PiXgbmFeEQ+Xj7J8mLqz/uATrgFghr
gGOfk5UwC7ADJdAM2ATgrSDeB+K+QH831gaNBG0AfXAAT4XLAA4+Qh8AK/dc
hCjF93rVKEoTBW5BHjAEVBWKqj9G8cVQ/bUgA6QDBxD3Ag1wM5wPXGDinnAC
bgrwdaAgqv7HgQ2MmQWLBPL48QxQBVgAjwRnBA/ADtAC1f8iuAJoFvUXw07g
M5InpFfIkuTfKDKVB9RqNXt0bPVPm5iY21lH2yu7XPb84n8l1Jsht3f64Opj
h08NXVp2x/jh/ud5b/k+nSjdV7uo6UP7ZPeG/ow+nYGMvpC+p72hP5d3bUNR
F9x8vflj860mStPqVm3UCcR11vesGRwdnJoIna6a9v5/zgBcs8bTxYPSvcrt
Fc0pDaLVk9W8VUbffCvOfqOXqn2z+9ZXvrrsdPloRWwltYpes7JuX+3zxpQG
dZQJ0hu6G8oajtbV13TVbKrirCgviSuq+sRbMJe7kL3+1ezTVxlZ6Xp3VqZy
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
VwlZCy7xX0TxX8dzhzuR6yXndU4v9mtsBLZXLP+ySBAamZeZsCaQIuNH+FnF
Vefv/S8d0D9YBXgcPHRuoUqK53+Mt30L1//D6MHXf0VgANRB74/1/09QHMBu
U9R/pf7T/10CzR8y7ycNGH/kHJBA8fYgUP1Px0+k9P3k+Z8c++QssA3w/1sp
uB9c//ehf9kksH/PU3z/5gH9JwF5C7sZY/wfRgHS083DRRBzmujBDUAPMMEx
FFXQGtAFrwGFsHXoAWLoaEAPlQ2uAS4UdVDsDIY1AbCeF77eqcG+7sk5G7j9
MwD+jwt9TfFdhczs7QfPnyVwDcEXP7VzvgyY74c3g0sUHNEUZIY1BrInKEYW
PwE04MK5myivzIES6O/z0Yx54AVoxiSNMoAquAEfYQ1gnWLbzH6MM5uiA7Yq
ICtsIJoqMST9TDZVMV0lT+Oytr8hwazUms6p3W2X3/NAw8h/YjcmJqUk3f/3
qXFBecWH+ow2oy69gbqR+edHJ4lTLpMCUzsmF14cnbz1vHF86zjdaPTo6xHx
kU3PbZ9XTu6cqZnrn2deHny38q551eu70/r4/zID7P39/uu31ZsfqxaF0YRR
NiU9bjEo2a/V+7qbCkW+dgdV10pHVqdm552uz13lnSnd57rpeib7jg5O977t
Deo52GfURdV1uf1qW37zuSb7xn11MrX7S9uL2vJImVyPvtzNTUlNLkzUi5u8
knw5M5r2YkZke/iX0JLQtZDLQZKBb/1p/Ef8unzf+Kj7/PEN9e31ueKb6YO5
/6U+GPkvRkpAPQBmADwiPfF84nmCdMgjx3232zOXCmd2JyOHDY5l9q12+bb1
NjdsT1tXW2pZqaCJvwd1/wQzKXNt03WTVyarxmHGqUbfDCeNLA069cP11FH8
k71BX2k/1BZDT6nmVa1SzUVNOWK7hj/REnUAbhqx6oXqG9WZ1NRRB2Cv9kNl
SKVAeU55FcX+c6UMJR6lzUpTisyKQij65RRi5EXlN8rZyJXINssckGWXfih1
VbJPYkbcXUxF1FtEUzhaqFOwW6CFT55vnMeb24xLkMuGg4Eji+0QmzarKMt5
NP83M1Uw3WfciToAfdhU8wJDDaNcL6FKhz0xlUAFHF/SF0EHGCtvDqD6LwjR
74Z6fx2UATrBA0gF0D8Y/dcDE0AD+H9gF2Cs+7GG4ryf4v/nS/UCot8JFED+
Iv9lKerfRIrWJ1n5dxslD2yD2r8NdgAOFN2fUppU8P/A3N9eQP6QcwDm/ePd
H1YDLgIEQD2wgP4ACmCe0g/spmgBcQIi4CHKBpgDcAPUwLH6GcYEyUMW/ADV
34WyB7hE0QLCbn7YCagJ4hnr9mM9lUfnn4B65x4KCkj/PHn7j9E9a8D+54Up
awk0gKlQXyAF9X4N9onk7EBGAsYBFnAPKLXiXBJ7HjuB6kAH4MzEgr53B5hP
EiQI46gD0EbxL8k+xyHIlcn9h8eRv0EgUOiNiLy4pGSzzEUFD+Uu9VWtPfo7
TOcsVuxsXWm9vgZUh/tdmr96IVkxdepBWnZ+0ckqv2cmreFdNwZkh5jHj41u
ek56rjdRMWYybjQ8PSY+wjVyZzh9kGk4brhlTGBqZXLg5cXXbYvp73RXjD+n
fYtaj/hfzgD2vzb8cPgsu2ryXnOJMP9x+vjE2Ij1wGr/av+xHqfO3e1ZnX6d
D9svtCq3s3QydeV2HOjy7uLoaemd6HrSxdQ11DHVurmNp82wzaDpS6NCQ3Hd
gcqDJZMFjDmhmWUPstP0bsYnn0sMiD945efl/ku7o95GjITvDesN7Qz6GpAW
IOQv6mfs4+1j66sO3h+vffeiTqDXh8X7vtd9r3JvWq8Q0nbvKtj/nyDxov5f
yB2zALpc25wUUQdA5aBt98G21W4e1X8lWz5rLatqSx1LfPOngqsf0Qy7gvGg
ZxrN/RwG+vri+k/0SvRMdVt1qnS26X4Akxk9bZKWJKr/PzXkiFrowVc/cXUV
uPyvqW5UX1aVRdN/rgrWAeZUvqq0QVlVqVExTClMyUfxoGKMfLK8rryBHLec
lOwymv+vS1uj/p+A+v/XogaicSI/hF4K7RG8wH+N/wZvEO8z7mwuOS5xjtvs
+9m/s75nEWUZR/E/wOTM9JMR80ttzmP9CqxQI8OA3WwvgQpgDKqN9BT830lw
A8axdhomADL7F3sAcsD8bwMOYHvQ9L8H2H94/sf4P7z/3w/oH6z9jXlAf/NA
FkS/KVwAZSEDEMD79wyF9ycAO4G/OWDolABgAXA2wOoffOD9kQlZIJNmE20v
Rf3DEP1Ld9ORaPG/+gpgf8aBDUxWAiLv/7AeEO4HsMI51gThhBtADTiCvoJ5
AG8AXOjxPRD3QS6QByrpj1IUQjE/SAZUgIgMZGZ/EzCBNqIpvZbSAZyAjSpZ
2XM/dFZL8Jlr4CaIL35UUO1x9S9jIPsCYD3xMqj+tyl+oFhPZAI9NuAGFHue
DkW/G3QAFUzf0PMFdQDzBD2WYJbvrJLsHhw6nMtc7rxsfFcFctEEQC9WLNkm
bSW/WUlW9S1RQNfB6In5SRt2JwEPFV/ZkOCoXZdNr1nflEuje6yWM1L0uOp+
g0wrS+dkn96A6dDrkYlht9G6kfbR/qHhUbGB64OLfZN91gNDg+rD9c8/TIhP
Z84yLjx6U/R2YNX481GKht//+/8E14//uP39wOf2Fdu3TfOls6ZTjeMLw6MD
pP5/end2CKOpntT2sH13+/F2i46wNpZOto6b7Uc7FDosOpTbN7Sbt6Q0eTfa
NGU2tqHYz68+XfmyfARV/6VskccB99+lOt1qTypJ4Izjv2IQE3npctS9iMdh
JaF8ocLBG4KaUPxzA8tnwDvB+673aR9pn3iUBb558/kEelWhrn8Pqcczz+sw
+IL1eTzx/OqxzUPe/Qrq/wWd96DuX8phxa7DVt5Oz3bE9qTNJpsoq9PWhRa/
LUIsjMzTzM6YTZmtm9ga7zMeMNxqRGdgaSCuf0evUL9c11Q3F3X/Qzo12pza
O3SKtRY1D2pOE1uIs6j350DPmDrW/TyhXqIWpxauxqRmquqnOqfMpuKhHIBe
HigHGCrtU+JX/I76/0QFN/lQOVH5A2hktpD2k9GXapAsQ9U/RqxINFOkRCRK
OFDopiCvwEH+Gb4R3pM8DtzDnIWo/k+xXWSVZ/2E+sZU5gjmZMaf6KdJhBHv
qfHmmQiutmQPTLwJx9fyevDV6gV/bWPoAORQ/L8DH3AdUP8kewCS+39xalz9
S+D2h13/jCADYAVgvPvrh+2fL+z+seefL2USIP6H+RGguH2S8f/k3T+u/yun
zlC2/z9OYeUPabj8kXF/m+BfZwhbvzDY+2PlYk5g/f9BH6EH7188yeDKr0eH
+4MbUPWxKwi+APyhjQH8jxJM/zWw+ev4b/NPA85ImBGkDcrAWCNtBs3/mClB
1vVqQtHrdQ77df+Gaz3WVpqAvaARaCuVQe8/BfofjvA3ymByMKIwgtYgg1yj
aAvjXSG+ADaANhDuLCbO4duiCOrV8lD8zzLKocydzbSV+RsTN4EbZYAalgDW
r2xXYQMwya3Ee0pAX1BQuEuUIHFTilvurYKCShCaAB7pd5i0WUo5iLqZefcF
XAmzuDgY+yQhN8X47s7HyrkXi69UidW/bw7o+N39p//DQMoI7eDQIOfAmaGC
gVIU++a9W/vcB5hRD+49vPpce3J2hm82fKHoLfX7vE9Pv235pfK/mgDa//it
06xhVX/3FeJ87DTNpN7E2zGbkZLhil7Fntr26x3WKPol28Laplpvtp9CtV61
7VDn01aeNp9W9UaWZ72NJY0F9ZcaxOol61SqastkSu4UMORyPh17dCOdNc0l
Jer6xsSK2HuxEdECl5gv/BPBGhEY3BziEfTWvy8AK30se8t6R6NqL+2T4B3q
y+ST7W3mHYhqfyCq/exenz2dUO+v4HXbswxFPtEjyG2va5ertEub0zGnfvs1
e227fvsZO1Hbh7ZdNv5WA1a91j7WHy30LT5a8JqHm+ea4v6/1MjfUMtQXF9F
v05fX/+MLhF1/0d1AlD070YTwA1U/1W1KojTxDxU/y01LDXeo/jH0z+vGub9
3VG7q3pXNV3loTL2A8tQ8lDuVmJU+qpoouijmKigoVgtryifIrdF1kAuUsZV
ek4qWEpS8pqEvPgDsceiJ0VfCJsJdwoeF8wQoOav4d3F28v9AtwB1EAVdJ1l
N4sBiv8Bpu1MgSj6O9FPK2YAloHG7Qzw3rE/Bt6LZQCDNoMWo+viKeife2cT
Uf3H/L9AYP9j9M8jUP/E7r8NoP7vBdg/I7gB4v1fPxX5Ibv/Rv63/TOF+d+U
gv4hQm4gMwAF/nP9IAISkMwHxn9yGuq/NOh+x4P+95f/1P/GUQ9QD10/nvFx
pS+Cmb8I8AA4C+BtAD14AZNxQKu0ZDxwMPieYdXTD+AKuk7HBrUfvycPsz9W
ARmCK+A2UEmhZsA8YEdw/tkM2h21gNbTB3XlBVD33w/830jAC/oypIFbkCPF
ISztPw5hEwP5DqAGeCAqcGXAmIGJcxtBUQjziUJQXhGBCWCYcTuTH4r/CBT/
pcwGBFvCCEs6K5GNl/0mRx5nPDc9LzX/cwF2oY2iQuKrknGys/KrSo/V+zT3
6Ncbs1vm2B12fuqxyy8w2PECd4zh1ezrUrcr79/K7Mz1LblXY/pMq+VAl27P
176K3tbB+D62QYc+jb63vXXdb3uje7ai6H818GRYfCR3sn8q6fWTBc2lynd3
Vy+uVf3M/fm/if9PvwN/ynyr+Xr7w+nl2jcRs84vj08YPo8a2zJcNajb49fZ
jLr/6x0P2+vb5tuetlK3Hkc5YLXNsZW15VOTfr11/WpdQ51X3fO6lpp/q++X
Pyp7UOScfy27KLPnIX16W6pwitD1Owm3rprHUkULX9wdNRv+Omw5xDXYI8gx
QNQvyG/Er9n7G4r1Y6jKv/M66y2CXpdJnSR887tJWvC8TMJT/35PI9T7X/Bo
db+Ipn+Sq5/zgPMJR3FHRxT7nLaVdsG27rYSqPq/szyLOoBky51oBug3szdP
MqUx5TRhNqowfGBAZzCht0efSu+Szha9FdT90+poowxgp6WnfV4Lq35Ka26F
DcBBTRGNLvVjGvgtL6r/VGgGeKlyXYVWZafKLxT7+AIQptSn2IfmfzmFHAVd
+ZNye+XiZMtlymXYpRlQ9E+h6i8PPKA7In7CCkIhgnYCU/zpfDW8n3iMuQe4
qjiPcYazU7MJsNWwcLKoov6fmXmY8T7jR1SzMAcQd6NEhv9xARqBu/gqJfrx
bI3V9lvOZoMHwGHg/+uAByjZAUwFtn9Y+fM2KP/h7f8WqP5GqP9XAwTQEor4
JgoCyBdwPwkU9R+y648T/J7M8luheID9T+QPASfgDBUzMH+YKep/WPc3lbL9
5wH1z3pQ/OcEB5N50P8Ko7iAxtAVQezTw+z/hxYrnFoBx8EdcMAxUP1rwBOQ
BqJfG/QAcgH/h68iRFAEuIR6ABlw/5aB6o/ruT0oKdkADxh7992GnR7e5l0D
9e8smBUiQQW8DJyBpsANfD/ggnCOIKsF8gIKCysEfQY3EOwFxgAXGozUomO0
ZAyECwDWApFmzmReZP5EiGGhYV1hLWPT55jjOM39msecr4w/WuiOyKyYnWSu
tKJ8sdIztaeaW/SeGnmZS9hoOl90Z/KRCZAIU45yu7x0TTo5Kq3wUUCWUtFc
WXU1VaNeu1FXT5dIz2JfYq90X1/fEVSR/+kV6YntHuy91W/Yf2c4caxgwnQq
+yVxnmWpfUXk06uvkt/X//y/6gQPrO/6o/Y97LvQWsTnqx+uvA1f2PF6+mXZ
VMLU27ETIx0D5r3NnU+6PNrZOjjbg9vvtRxvN2mVbPNv6WtNbBlrWn7W1mBX
d6/GsG5fXXv1v6j3/1WWU3yykDbPNHtv5vBj0XSm25dvJicxJVjHycVyx3RE
JUW8D5cI8wvxC1kIJATk+Ov63fFZ9v5FeoFetF6WXsokfRKLt4IXA+k5ivyP
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
nxGUQPoZpOBaiLd/+J544jxmAfecs0G/xgK3aA5YgHj/P8yoifq3KOABNYIf
SAzLCMsgK5HNjv0mhw7nABc3mgFm+BoEXIWUxA5KXJJ+LcegzK1+SktKr954
wvyTjYhTq/so6ZMvbTD/haxLpVdiE6/cCExtejCfeTUntPBUqWDFt4ojNam1
fbWuDYLPHjftap5qtW6f6MrpdR/I6OcauTcW9pxupnrm1qtbr64uhC+YLe1c
THr3fkUUTfQPVsI/NL2vQpG/7X3NiuSH9yuh6GMjK69WMpdt366vHFh2WDZG
8b99aWm+883F1wGvNWbNXp5D0Z82VTZlPUF6LjfGO0wciu972ufZrdJ9qNOu
zae1r/VAo+aznQ2NtevVfJUfy0LKvpa8KlIqciioQvU/PCc299+nk08+PzR9
cPrusVThlNRkjqRL8fVXu2KcLilHtUQcvCAbMhd0NfBrQL5fl+9JX2mfd17H
0FNAiva6juZ+Wq8qLw9SJ5r+93viPuCJJ6NnmYeRp4lHkrsu7P+nnQOdeB0c
7bXt2Oyu2PhYG9osWhtbj1m4Wc5axlrssaAynzIrM3MyUzIZNxYzqTd+a3ja
KNlA0QD7gONtgIjBR/0SvSXdJ6j6p+mW6w7pcGqTtKy1SzX/aLUQmTWPgPrX
CfWN6rxqmAHkpyqsoqzMqXxcmVnxoGK1PCuq/hzydGgC2Ct3R9ZPJkHmqPRO
1AGISYWhDsBH4q04q/guMU/RZuHrQp1o/jfhl+cL4i3iucN9gFsTxf8C+xRb
Fps5in9bwjdUP36iSRJz//Ct+jb6GZRhwJ5XGPuDuXC4b86gDQP/T9z/8wH6
P/usM3D/A1EHgL0/8PU/BK7/G1EGuA3an7dRhNtTXH+3APJ/DXr9NYoCMC/4
gJF1QH2B/SML/r9kDoApoP7Jvp+HKKgfvP0nUJHvfxiFpAG7v0w0k/RStP82
geqHLVR/jPr5A1wfjAP4uw0UpSP7gHGiiKf/b+vvDpfCh6ABgLf/mO1/lOIO
5kJxAcfsP6z8vQL7AGr0dUqnxzHtCLUeI/j6YZrH8z++48lAvO8/R54QZNDn
YVV1X9gXmMLc4At+i6YwOZQB6yINvECoQAFgMwX/i9XDsL4oA+iJFwILgI4R
+wGyoNxdAdGfyezD/IW5niDK8ooliTWH9SvbBg4F1AGoc4fyvOK9wC8muCz8
SdRHYlnmvbyy8m91Wd12A1MzM6tWOwPXCx6C3i7+EmF9F0qiLeKnr6vd7r17
OMM2cyHHqkiouBNFmGfVSPVi7Z76+w0STawttB3hXT974vuEB02H+MfFJqRe
nH2pP503c2OOc65mbs+b6MXoxewl1bftKAvErLC9e7bMucK8HL2YuBT75uei
w/LNNyKLeYuZy2ZLPQvRi77zj94YLVAtHH198bXDbPRM7XTIdNwLqRfbpu6N
VY96D28bEkYdgGLP427errVO63bmVo3WwIaGuu66B9W2VQVlnWU5xftLSYXG
Bb0FInmWebw5r55qPFHN9Hi04/6+ezqpYTfMr39MHIrHKEDhi2GRjhfeh78J
zQ7hCvINGPF74Z3pk+B93cvV67C3K4p8dq+z3tj7S5nEQKpFHUCPZ5vXZ88V
9yee31H04wnggIug82FnccdI+0o7C9T/P7Z5bKNhnWjFZ33XytnK0+K2OZV5
nPma2Tazo6ZKJjdMNhnPG6camRk+QLE/ph9tkGzgqR+L6j9W/4hE0X8d1f95
rVtaFzRXtRY1mTVLNWc1olH9/6z2RO2N2l1VKbUhlTOqH5QfovqPtX8x7l9R
/qScLuD+1WXVZbNk2lD8Yy+gq5L7JDdLbpPIFxsRqxPdLnxX+LLggkAf/xE+
bb5xHmkU/+84j3GKcxixR7LNsIqyfGGORx0AC1Mg4yO4/t2GbbUAcP8sIAPE
gGrGOMT/F6izmWj2fwvaH9j7D2v/4+gPgejHyF9x4P78df6TomB//qr+N8H1
rx/2gC/g/Sxg/5HdPogU579tFLYPefNPRgGSuwDyHIDfOw34/1Jw/pyELIC1
/zbB9d8QvcVIv910trSrFPxvPcz7WPtDCfaA+O0NQP6R1X9qQPUHTzxk9c8P
dLmg+EkDiL8V6AOw6lcl/TVwAZ0B/Q9cy/H2PxIUvJbA4eMaTPpl8FFTmA4i
odbjzydCx5AFzGFT9HUmoKjHn3EN5ocp2BRgrCAVcAVKYPNnfw7zsvH2D2N/
lSn6QnmgAsTC5MfUzKTBzIe+k5PMtwi3UAfgzmLOKsM2xVbLYcmpyfWNy4p3
nbeMf6dQtrCWuKSksexWxRWVC5ovdRyM1AAJ/MVlA2nSRyagKKw26sHl0bi3
101vZd7NerD4pCHnbr5tYXipWFlEpW41bYNXnemzwRZSW27HpQ7FnlSUAdaG
LEdXn7tMHpqamgp/EfXywCxmDVPPr80Xvnm5eHtheNF+wQN19havXV5HzvMu
DL62mvOd//56/8K2+R2vO+YOzdO8TpsPeK00xzf7aq7i5Z7pJy8+v9j/4sdk
7/iF8XejeaMJQwUDOb2lfdU9Ul39nQEdfa2zzSpNH+pTa/1rzlV9qxgq31Bm
XZZUXFRYU2RcIJdvlu+V059tkHns8ZOHr9JZ06RuK918mpyc5BHHGvs7xjqK
5dK9CNaI5RC/kH2BFwI++b7w5va19BL0DkSx/9Mr0Cva6yXKBfokHdQFeHmy
e9F6qXnyog4gwP2Vm4v7edcvLq5ODI6bHaQckuwu2pFsPtnM2zy0PWB92joV
ZYGzVmrmvOZNaAJoNV0xXTfRNpUw5jE+aHTQqBpV/mMGE2gC6NELQd2/qW6k
rq/uLzT339B2136oHa/po3lLK1UzVTNa47f6a3Xs/PFZjUmNSi1X5ZDqqPKo
8i3U/+MZwE3+iMI/Co/lPsmFynmj+BeUeSd9RiZYCquApkpslqwUlxePEXsm
clrkhxAXmv8Z0QTQzuvOu4mnmauNUwfFfz+bAFsO624WboIPczbTYSYRxjFU
/xvAo6YfVaVWQP9gJRxcFzGXNowWa+v1olkb792ngf3bdqYNlD86Uff/+z/V
z8+g+xEO2p9Gp+Mo2j/7Kbv/NXhbDhMA2fuXrAIYSdH/jQR9fwKFAXzoPwww
uQeYgf0fGRmIMT/4+ueAor4XtP/xBQAj/0+i+m8I3N9x6Pj/APYXT/5kFwBO
2Pbj3f9ueG8EcEB4//8Bvf+Qjg39P99Bj9U/dgDfNwn4fgEo4gkMOOqxH/gK
KIBhd1CMAqSG7V4k4PfTKHs9Gaj5puATiON/G9wJI2H7h+9+MjABHIL4JwIG
qAwyQBYDZhNLUfi/WFkEOwqWoPrfCRmgExDAgSj6qxmjGX8y3mViZj7ALA1+
gFgLRImlhmWd5RrbfvY9HDs5AzmduUq5OXjxFiBaSFrknniwlIHcBcUsVWnN
Qn1rkzELYbtaxyPubV40/lXBiuGjUVqx2685JPff2nrX8UFUxo6s63nnC3lL
t1cwVRZVXa3TadjYlNhi2JbVadD9vqe7/+jg/uHOkdcjEs9Tx1ef75hMmsx+
2TbD80ppjjB/bf7Wq5XXonOZs1ovt84+mraZfjSdPLP8Mn5W8GXgzLeXpbNb
Z+/PfJktnZ2cvfLq20utlz8mC6dzJy9NrkxyTkyP9Y4Pjz4bdhpKGCruv9ib
0T/WHdpt3V7cVt080ej3jKE+o268SrrSrCKwXLK0uDStJB3lgKLCl3l5eYF5
AtlKT38+pnp4PN3mjtTt1pS+5JTEG3FovolpvsQTyRh5JUwwJDd4c+BF/zrf
LT7fvFm8q7xeeHeSdnpZeo2iSUAHTQTvvBgoKKALHlMer9wq3Xe4q7rudY13
CXTa48joYGEnbydqu2j9x6bRutd62aoZRb+IJdn/m9H8jBm9yYhJkXG98RXj
k8YVhq/16/STDWL196DYX9P11gvXY9Lbpluls1v7lfaq1irqAEo1JzUPalYQ
/yGOqVdrcKsXqhupPVMLV/NTlVXVVuFU3q0sqWSoxK+4FfUAs/Lr8p5ymPnD
JKspkyuN0b8dqP9PlaBG83+1mJa4hOhd4e3gBLBfIJ1PiI+eN4IbO4Hs5FQG
P8D3LEUECYID8zfo/zH69/O5hnN4B425f1jzBmtgWtHVg4cGjqtMYNv6APPH
DJQ/sff3b2rM/C2E6q+Pun8uwP4Zwe1PCiaALaD8h3X/yAjgcoj6fkAAEwEF
7Evh/kT+h/jHUU4Avq8AZR44RNn9CaBOAN8AcCcSAXgkrP87CcyEXhoeUCnB
qp+24PyFkX54ghGFSm9FNw7vPwROA/YAdgf1jxjYA2K8/w1g/dDQkxUA2YDz
cxQuAelw/8ezvwDDD3hPAC4l5N81wbbPF+56jjDVOwImIBJ2hQIQ99vgs4mA
GST3AeQsEAnT/xJMA0vAAcBoYEZQFpwA9C/GEmB1Idz/s6PefyejJYr+YcbD
KHdnMw2ghw/if5J5E6ELzQD0LJWsvmxGKAPMceRxVnAZ8IjyJvFN8dMK2Yry
SyhIt8vXKz1RO6/lqX/JVM7K1J7PxdHjG5oBnELowtcuvb+8P6E96dGdxLT0
+7WPLmZZ5tUV2pUyVUZU8qMZYEsjdxNG4/V3xnYP95zqvzygPXhmSGVkbIRj
9OD44viHiZGJc9Mp0+wzj6a1Xv6ePjEdOy0wFTm173nuZMHE+PP48W1TNROH
pm5M5E62TiZMnZnaM802mTxjOdPz4sR0MPqTo5Pdz4dHrSe0xo6Nto+qjLQO
Kg1wDqz2H+kN6MBKP11NdU1Oz3QaiLXE2tRah0qnitGyweKpEmJJTJFq4ZXC
zIKGnOc5I09DM1kyhu7/ufcute5OUkpqclzCaJzV5TfRv6LUIq3Cn4XeD5YJ
aPGn8ceeX8bAAzLzvguef9ne1lD/Fzyfe+Z5XfXcjCYAGvd11P9jF/A7LuxO
VA5T9t/t1m1jbCNQ3ZewMbOKt/5mlWxpafnEPNKMyrzMzMK03pjehN7ExAhr
f+YZJBqKGKjoi+ufABWAM7pOurK6Hdq5Ose1f2mramVo8Wg5aH4nOmhu1fyH
KERs19il4anepV6i1q/arHpGdSf4/4YppSo+VcxR+K6gK18o14Xi31vWWPau
DHYDt5Bml2aU5EEZAMd/jFiXqLGIpvAxoU5BSYEZviN8VrxvuO+g/n8n5212
L/Yk1iRU/20JmwgVKP4tUUcZcn4PqP9lwVyrDei/h+CUUwTbtE0o/lPh4lZx
1h91/9j9y+2MG+h+1VFcf/egpwdw/+GoBzCCPLAGqB+cAahg3xcJN/8sQP+S
Fb/Iej9/HQD+3gHPUF5kBCCB0gOQb4BngP9jjHJRJqB/S0H9F2N/seufKuB8
w4DlmwH+P7sB4Y9xP+6w7VOCLSDu+znh6o+7APK1owb8QDHrF0/+r2AWwPv/
S+AGhn2AkkD/dwXwP4fQVwrfSsiTANkNLAvcU3H3Tw1zPxkf5MhADdFvCtMV
Ad4jojzgCNjBv3igKcAP8cIGACMASijs3x6I/xPgLYTRf5gDXI2+a+8YzZjM
mOSYlpkOMBujBzsCjhP+EPJZBlmp2dLY1FAG4OIw4zrNzc3jwtfCVyB4WLhO
9JRklbSu/AZlOo1R7U79/eaGNhscVV2feJ7zHfSPC22JuBM9GGuQ6H897ZZi
6tH7s48DsqLy14vSi5kq66pyam7XxTVKNSY3X+9w7VjrVOlu77Hr9+mb7Ls0
uDIYN9w05D+W8fznqPsE2+TUFHHq+MSV573js6MfRxaGdUe1B3mHqYalhhVH
44YXhvcPD4zRjT4Y/TZm+LxmQmki7HnHBPN46nj16K3nhs/bRw+PtY8+GjEa
Dh74MLCpX6s3umdXT2TnpQ6ZVt3m9ebDzwIbpmpjqt2rMyurq1kqbpZdLXUs
OVI8XshR1FtAm1eY+z2r5mlFRtaDgPtuqZ53btw8mHwucTCW7rLAJeWoexEG
YdtDHgU1BVAHyPvb+u71fezbjDKAoLcCmgJoveZIx7wwImAzmgCoPSrdlzwO
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
idmZbJKimfE5ozObLXc8v7XwadHZU71lkeXsldcq7KuW1YTWFtS41sjXCtey
1Z2uLakPrQ2tda25WstSLVbzumZZTWvllcrpqq1VFZV9Vc8raVUT1R7V8rU7
am3rFRqPNPzRrNkWB11ESPeFHqnByUGj0S2jPVPfp+3mNp3mPXfxrOsCwfy9
FyKh95c9PwuIQPES90WtRa3FledYztWdvjzLO5U7sWKsfGTvmODIiZFzQ2qj
lwaiB8ll8Ma+N71BvdM9DztFurzba1pDmo406FffqOkqjyreWmSe8zQzMzU7
ZSG2MWZ9lMDJgLCnIdeOjyELgCNIPmhvYHCAqX8IoP5aXxe/v30mfWa8v3sO
eR3wonkc9LT3CAH8r+x610Ue+n8xp0XHLIcKe3sHUvt/2IbbSdiqQu/PZ3PA
SsSqzeq15SkLukWCWRYg/+dmIRD7pmb+poqm/oAA3htfME4ziTFWN5I1ajHS
Muw08DOMwNsfXn1J/TndOd15nQKdDh3i/bOgXa7prRmvKQL1v1D9KOM3eH1Q
I/f/21U5VMXo+irvlfmVPyH/V0FxmYKVQpkcQy5UVlGmjvZUOkcqTDJM8rD4
79ABbBR5KnRZMFygi7+Er4x3mMeMpwA6TKI4EYsb6xCcgiXhlSyZ/u/hyEDV
77ts5WxsbC/2f4HeXwvQ/1lWcvtbgx3AW9T9opz/yAwwHff/LLgBoC5/nzK5
v03Y/U/j3X8/c/73k/3vxfT+o2H3T/X6NCYC4Gcygsis4DxO/xqw/yeun4T3
J4Ee5USr7A2y/ymOnyh2/oTlI4qO3ySzXWPyfR9gNkgCnE9yANn2k46f3P7L
4QxUCHU/qd0fQQEJOP+rQAfQe7j7U0NmLzXRa+WkJgI5nIO481fDzn8rzgDI
z++havBW5vw/k6kaTEetPzoy/iXREyidi2gxujL3/sT9gzgJEEXRk9D97+Dx
4znAQ1hbpwEDfOHx5mWD2JfiuwTRfxde0XxP+MQh+t34icIT0QXWEPQUyhSK
Eg4QkRedEYsWvwkZwJ2WKxst/0OhWEVG7aXGI+1agwQzZ6tFxy7XS96m/n8G
fT1+Nqwr8tdojnjxpPIU0XTerL+zTuQmF6wt5C/aXHygpK3kfFlX+Z7yXRUj
FS4VaysTKu2rJKtLq4qrKyrlKrdXaldsKTtfJlHuXXq77FLpnvJ3kDNKyvIr
witYqx6Vb61arP5SW1lrWK/d6Ng02vqs3b9rFyCBdf0mI32jTZO6096zhnNz
87FnPc7VLqy64Hj+xPkzi4QF9On88ovkGkBrceZs67zJrMiM08TKqYLxyyOZ
oxojLsPrhx8O5Q3fGWjt1+xP7nPvzelW7MvvOgoY5F6TT9OX2i+1TVXc5Sal
IYVncrwyP6X0JIbH5UT/HTEUHhAWBvF/6ejpoMXAiUCbwAd+dgHb/Lf5u/ne
9mHzbvCR8X7mzebt7LXRc7dn2mFWj2q3LlepQ4Iu350eO0pC73/PPsuhAx1/
ltvus+GG7t8OckCbVY2lqyXdot/8g3ksqn8bmWuafTOtNtUz2W52xETC5JbJ
XSNDY0Ho/q8ayho5GwYaiBvU69PhMdYzheq/TveW9ht4duns1Y7XvKspqHlD
/YZ6obqyOi8jGuLfXs1X9Ru9mr6L3q0ShPs/DaWvilwKYxD/qvK/QwdQIKNC
ey8tLT0i+UPilPg+8ReiASJEA6Ba4Ah/Bp8D9P95PMSpkvjOqeHfKdl9j2Cf
/AZ6amtU/iPT/3/YZNju7yfb/9D9r1kp169OVP4MxMt/0v2/ZU4APZD7T+n/
0JED8JTJ+53G+p/FxAA/pwD2qAbO+A/1k67fnuWn/qcXkw/4c1NA+pFewADk
4vc2O+H+uCFTcQEZf3Wo+/UDL3pFIcIVcOrngjP/B3jX+Ar9fcgMYDvqHH7F
nz9A7q8cXviRPODESW0A5fAK0Adv/wgL8DPO/1djn8+PXf89zlLmrP8KTgFa
OSlWAA33/Wr473U13gqSXWAf8zKIKIKT+f8K3L1IQtWnY+2PQtcfovmpg76s
BXj7fxLjn1wAO/NoQRYg+h/q0P8LQPyT90u82bx3ef/HZwjPHv7l/BH8bvyc
Ag8E2AXnBI2EVggTf9A20TIxccAA/NKKMpWyvymUK3WrGDBcNDp0qgxDzCJt
rzqreTzzngi0Cl4IvRLuFnkrVjNeN+lMskRaf+ZS1oGc8txN+UfyPxQ9Lj55
arikvPREqXfppVKpsqLyrvIpiPG7pVNlW8rUS0NLzErETrmeaiuZKN54aqn4
19LHxcPwsy8lMqXvysbL8ytyKj2q/6rJrjvSYNpk2rSu7UgnZ9fZvsT+nsH3
o3VjLFPes55zufN/zlst8F14CK/AhU/n911QvFR+fsuFHYvnFhbP9Z+9dbpw
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
o3l3k03j93Wj6m7W7KjesmRlpXbFs9KXxRifpNmJmeqpTxO7Ewbifojpj8qP
qAkfDK0I3RDMD9EK2hm0J7A54Kn/Jf+Jfld9d0Pm3+J9wDvKa4LXD4B99PXT
9ViiWA95X+y+yu2F6xHXOMj6HcD7h4Hzr3Ra6eTk9MChzbHEkdntOW6fYudg
99z2pU26bZzNVZsKyPnT5D9Zv7VGX99p8n9l460PyZbJomSHrdDdNxbwnwC8
f4w0zDLZkkdavx7JbjGq/RLNc8zfmi02OyT6V1QkKhWWCoNNb5ksMXkvuCyY
bZxp9I/hSYMFBmmQ/d/wJID+RzqoIC3Saifdz1vSvW0D9KN71kv1B+r95PiP
Wz/MP1vVqkj5/wVd/EwH/q85z482f3ZT7+8q6/uvZC9/I/IZzz/0/LhBk39m
AphN1f4n5b+C/P9CWNWvGnUDGKSrsXEBvf+FbCXAoe89VMUcd5bVxjqxtzEn
0p4cbsdP1HpBuHAi/fxZwAlGCMTKVYoHrrR7O5m2cF9THMDO3QDt7n2a36tQ
Fd/IIh0frwH9jdTpRye/LqoDGH9P5BCNtAGEMSJbw1UTNf8MF+jScKV9f1VS
BA3S3h+zB4RcoJ20v6/p38BVc4j8AIY0mAhwltSCgfQTSopiqAyop6pASTEP
H7gbgLXAfU30CditqUE3g7Dyv0o7he2smpiZIuImMXqK4N2Qddo4CWzWCdLd
AxFgJ2cmN4x3kTeV76rnpB9hcMzQxfigQG4aKPQ2GylxtCixGpBftLdxaVb8
5F3g7xL0TXhz5J0YlfhRi31S8lIb00ZkrFP+m5GZ5ZaVmBmU1Z9Vmfky63l2
R9ao7PU5qTmnco7njsuVAxM4lbM8NzjvVd6u/Pv5p6Ei6Cj2L3lc5lpxYolk
WXDtrPqi5kUrOW2hXZM37Ovd2S/e+nRr2K7InVf2xO6ZOBi8O2H3V7v5u2p3
7Nt2Ydv8bdFb6jY/Gdg/MHWTUb9R/6PeGT2Xeq6vD9yQt+7rdZ2rZ3Qe7+J1
CdrPtg+0nVjlu3LBKp/le1rSm6c2nmhY0aBba1ajWT2y+m5lVvmasvSSp4UP
807lrM68nvY+5WmiIm5CTFbU7YjbEZbhNlD324X8Dqx/DWBf3/+2/wvf+75d
Ptk+K7yXeS313uUZ4HnN46Zis2IfTfnP0FY/zvnwjtdql2GXLc6Lnf90Gu88
wSnA8Txk/aOQ9z8H7K+HvH/Gtt7mBvB8E5vVwPSnybfLVgDm78q2y7623i7r
BcxPgrz/2PK69IH0lmWYpTo8PC3XW3xr4Q//V3okR8Q64n7xaDHXXGQuNtMz
W2D2t3ClqF04ZKowtTPZRrm/30gEzH8rcP9SvRM8dcj+L3X36UzTQU+ZOE10
o0PH72qa+v24AN009kD2fzz/wnxU/aPnL978yocHXv3D3l8RPV7M/ZT9z1L2
V5LmH13/Aun27+S5QzT7w/w/zF7/G2Y5QAWb/W3+UwHasJPAEPYtke332bDX
QBLZKgDzP17GwEk4ctpD5IozXvsufP4XVLl/0bWsv+hWNqrgcH8WO+PfkJ/u
VaqgET8CQpUrbeXgA6t0dORGZy5XeFbqiS0INFHFizyhkTw9BigCJFAFgdyf
cfYfpO8qqMJQkAoIt/0bqRcwQH8a/owKZX+MBVgZtNPkT5UcwJTE/19raFOc
EFAfIJBYgitdB4ojp+BSihx9pBm+T7OEF9QbCCQFMT4n2CNw0qonfbGSfgZV
hGfhs/sUGVBHsJLmhuMB/9MA/zd1LujoUg0g5RRy7Xhj+A/5u/SK9PFOYJtx
nkmX6SyoAaSSr6TbZbNtzzvkuJz3UPWtDPANfh26NeJyjGr8gcRRiw1SwlKH
0qqU45WJmYuVRRkmWf9k7s18p9yb2QCM4LvsVdnPgQksAi5QnXMua1GOJ0SD
83nYJTxWtLpoZmln+ZyK35YsXKZbu6IhaYX5qr86HneldY/tTR44tKVqq3SH
2a68XRd3bd6lvuur3ejkvW9b6Lb9A9mb7Aaub6rtf96/s/+f3k29Nd3X1wvX
H1zrsmZT182ux12aHcp2nfbwVW9XLVv5K/D+jibN5orGDfXHa8xqPlT7V1cs
bSzXLX9W+kfxlsJZBftz47Nepd1JiU+2TODHGkd/FhUa+TDUJpQfAoEp6Fyg
D7D+dMj7V32R+S+lK76tXm2eWR6vIOs3K44r5iuc6YbPSLcprh4uai43APl4
xXeDE+PlHes4xxGd/DfbT7f/YBtt+4vtbFtVG5nNgLxJ/tRaTa5n7W39JyB/
A+T8WbJCWYDVLquj0qNQ6x+3/Ar4fpjlMwvM+pctWixqJVLJVeD9f4j3mh8z
DzWvMoswszfbLvpRGAi8f57pEpMwk0io+2cb/2E0GvCvZ/CzvqveIH8eP5Lb
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
orK3Qrf8YplziSpkfqv8W7mOOXszmzJj05ekXku+m6ASHxnTFh0amR6uFno5
+Pugo4G2Aaf8X/i6+Qp93npvgZrf16vVK8NzEqB/n2KzQuxe7KYJD1XX1S5T
XH9z/tfpZ6c6x0KnBw6fQdb/3H6bHc++2s7H7g+bGttMm2H5FBs1wH2I/Gvr
cGsL2dfWI2RKqzqrB9JX0lzLryDzn7LYDHX+bYtvLQosZpKqZ7bkD0D8brGm
pMncDbL+avMb5tPMnwL615kdMBObaYj+FgqE7cLzpnLAvp3JQUGrYKex1Pil
kTXl/nUGOyD3z9HL5q/lmfHOcPw5nbqV8Fr/RctQq1SzgpSu6ovuLJxAfh/G
C86p48YP4v8m4D90Pmp+b6tVAf7Xqc1Q+0Kte14R8X8/eDD1P/J/xvef0f/J
yAGQUf6MJvS/Zrd+htjsP8BO/bvY+98DrCaA+TyR9f6qYHXA2XT7l3H9Yvy/
cR64jjyt8JV7G9hrKCAakVypw+zCrobPVkPmPwYRwEQ3Cypbd4gAurpz4SNu
v0/R3aTzma4JPPBC1gX4/cyljNt0U9cB6gJUyfxCW3O4bYPT87O0j9tHHXXG
w5fR9gwTf8ds/pp6fhWU+wdJEYiobySUz2M1whXUIVRQdTBAXQL8SWT+6BSq
QleA8StmSoj9gQq6FsA4hapSdme8w+PIRaiPeP5ZUgyrEmtgooIK9QonE+pV
WZbwWgN1hoepCsALYzV0RQTviOC9MFt4xvbpdOr6Qw1QyDXjjeEP86309AwW
G4w2KjNyMb4jyDb9Ufib2RHxeotX0rfWq2w7HSY49bjxFG2eB7x3+P0elB0a
GBYKMeBErF9CfmLt4mcp2Af4K2Ns5vzMCOX8zPHK8cqNadfTxqQlp3albUwr
TwtMH5uZmDk7uza7PG9O/rSiY0VflpwvP7bUZ9m+GtNabqNlc3lLe7tD56y1
l9d+023Y3dJzofdST3Pv/N7K3t0bvu2ZvGFid9f61+vz1pmsruxa0yVrH9P2
w0qt1q3LbVe8bjzQ4NHYWh9bl1SzcNmjpWOXtle4l5eXf1G6uzi06EBhXf6d
nOfZOZn5ysnpd1KmJI9PLI3fEPMgqixqPHD//SG/B5kGWgfyAu75HfE94rsF
Mv+PngGeuMt73sPdo9wjVzEDqv5S12/c8Gof6vl/gMxv7GjlKHcYdAiGrD/T
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
TVK07gHso8tVA7yeH5C+LYYzivMlZzYHOVAGPBdfwtdanDb6DH8GYwHOwPCf
RzrNOjehGphPGsmT5KaNFze7yVWjhrz4GB5dCrm0njCH+37apKV6TZvA2aQE
kBPyUReYoDGProJz6FJINsWHQdom5JBSoIK0QhVUA7zW+MQsmE0COWkFBig+
XCdOgGhGvhBHGZ9RMdWTahg3InCqUEqXBdpJVzT5vx5BHPUxURXIqAeLSA/s
QP5gHhApP4PnCq8EHgQGsJ83jz8Z2ONp/RUGSYYuxi7G7wXHTQTC+8KfzF6K
v5Pst1RamVuPtJXYBTvMclJzOeP2lccyryO+T/2FoZ9HPohSxHkkuSdHplSn
ZKcNpq1NzUsdl+qYEpmyKMUstTUlOG16KkaA2HS/jEMZokydrLlZOll7spbn
9uavK5xdsrkstmLLkvqqNTVfN+g0XVq+p+WnVRVt+p1PO5u7ajr0O7d27ujw
7KrqtOyY0Tm6valtTNuo1s9XJK0YapzaGFWfW6NZfaZauFSj8lCle/lX5byy
zOK7BeV5vfn7c6XZOllRGRYZYanFixcmvgDsV8e4R+UC+ptCFaHhIYuCQwOe
+kf7pdO0X+Fzx8vYc6PHccUaxSn3AvceN5nrWVdV1wqXE3SvE/f4fgT0o3uX
O+T+93an7D7YOgPnb5IPy9XkT63vyiwA+0rI9ypWWXSdz9HCDPJ+j4S501MG
Of6YeQcg3wQqfBtg+k2Q7yPMTlKVv84s3+xfiLlis27RStFEyPp18H8gFt6G
TDeaKkyxM3NHMA4qf32Bi3G/0TlAPxcq/8UGCwyi9Yf52fwnvA1cvPNpotsM
uc1BG3fHZFBTjtHA+9bbFm6A/I+++S/Vr5Hbz1za+E+i/I/3/tDzUx9iAHKA
L6gDiPhPpw4A0wO4Ctg/OzeO8M/c/P7E/5nL38z93yG248c4fQ6wrv97/1MB
NbFvnzaCson7h7BbP5/8QDAKPJmD3f0cqNpzKO8/AuyjizG+fr/kxEOuLyNE
z+Zglke/21GE/pcQDfw538NnUqhyf4XH95ydnGKIDTs55+BXzsFPasGvmsCf
M0X3GHULmyG+XCJ3fbyyhwpDdNSZSIqBw+TKsZsq7+s0qR8m7d8g8X4hOwcM
YRn/p51CDsRdBfUKObRphDxhmOoG5A2v2c3BIVIOMLUFcy0cJ4T4tzwkPdJk
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
7M2clrkr/Wx6zOJrydOSihI2x/4avSfqZqRDRH0YJ1Q9ZHZQZ+A/AZ4BH/zi
fMO9K3zMvRd5uXgu8trl+c59icLB3dKtFGp+e+dw5x8g6zOO3dqOug5ZDnKH
23bOts9tZ9qV2dTYrpaPtkmUj7f+U7bAeqUs1mqj9Lw0SyqXVlvctlgEfF9i
8VKMDn3/mKNy96QZIh/V+9tF/wK/9wPER4ks4KOhqF04QnQfsN8O6J8jfAhs
v8t0srDLdIiwPw7y/hKT6SYFgP5tgnvGGcb+wP51oPL/zSDf4Gf9iZD/VfRu
8fJ4kVwpvKatdXOAw9ZAvMc6U6hxYhHev8VLX5KFGQtcAPvX1IPU/wHso+pf
RNc+sPa/BBWAPtX/6Pr5Hel/VlEXEDsAjPP/C8j+jP9fHLkAMHd/P939Zty/
Xqv+TwP8afpXQT4g2az7VzbrChbCvmeiAKP9V2M5AIccgDmq+3Q2AfPH3G8N
+MScbw2v23PA9q+Rt7U/5P4MeJwjvp8BSJ/JLQZ0RwKv9eVKuIXcau42qHIj
uT/A1xPg6wnw3Y+cRfD2PUSHncAZMBbsgd+PHTFdiJ77aEZ4kpTEuGEg1u6m
KTrOBu6Tupbp08k0GfffT1dAKliHAOwFcKgDKGf7/08WMTWAnPaGBzWY3n8F
1QFd7AVBJpYMk6/4gIYKW2lg5temLh9eFBmg7qGSeD+zXchcFlMlFRBOAXHH
UUbRIZCuDWLM+oY8xWogjuG9IKynjukgj3qgK4Vo+JxzmXuHe5GnrfeKP1F/
gcEMg7GGo42OGH1n7ChQNzlvqhQaiqqgQu0Q75SgVuWV9G8rb+sm+SpbM/sf
HZc6L3TX9ZjqwwswDhKGlobtCF8Y8S5iVLRx9KjomOjlsV6xJ2JHJBgSH1iR
6JCol/guMSdpbNL3i18mJ6fmpTplTMy4lrUz+2LuxjzDgrJiWfG20t6Kvyu4
S3WqPlQfrzles6f2aK1xXW/dlbo79XPq+A1vamxrmmvWL/tpyZUK3fI1Zb+W
mBRvKvKDzP8spyPrWObpDEXaH8kZizcldSeExP0a7RLdHJke3h6mCOUD698Y
mBSQFNDt941fqW+iD8fHy9uC/PvLPdYojisWup917QPez3XBPT4NQP8kRxXH
RodGh+P26vYpds9tI+122P5h89JmtM0Umy3W+dZfW6fJ/rZqJ29ujtTM8nPL
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
7gm1Ds0JLg/GINO3BObC8g/lH8ons7mnbyuwzFZfZ2+/vPvzzsHuH3JzgndI
7teI+ZzcfTNnbk5lznxt3yObd5v4u+zwkaU/IJOz+RNh09ths2HbqoymiNmL
M4ZlpMJy2WOtn0GWZfMMl60+YvkOeIFVGe3gAbiPsQ0svq5wwV/AY9txTu61
LbI9gdsG2wFkaMNwnLBSsYnX83Jc583SVqtnXZ3CeTiq25ABzAqgQxzg0Qkf
AwHsjH82/moc1T874NirGmBHIABqf94LBEAfME8qAIth/eQBnG1LFQCqgOxS
/Ocs4APqApzXJLDRAeTRo42h/t/anAP6Uzpgxi7ghdIEvzYPaLB/jDmAkMkB
6mVu/suW/ucNqv31Qv7PDICsPPb5Lmtqp18qJ3nHmRy/1fADXYDwmakPVa3/
GNBsihA8q6LUtuQjovxtuNKPwAtcxHt2BI9n4ysLLNsQ/XpYkmD9CJAWWn65
nrkQz6GKei91CtqmL0xnXWCy+oq/pTYDHvBofuBHdQj3SknkdDJnh0Yln4Gt
GZ3B/jgSxcDbIl5AD3XwG//HFGJkr6O9LPtU6W9sTvAZPB5jD0G+eDzEEdzn
Q9bRCOX2/TXV20LzCMNV5W+o3GOXlP7+xaN49ScqcfwjDTVqolIpjZ3U11K+
TyUzIjt9j8VrpYIMZ0nvtb1gL1HX71xmuvMXHGSqPp6VlF2aPSH7pKr/cTnD
cjbi/m94gNNiAhV7vvLs9hAdx8JeUnwXfbXy785f66/K/z3/rsCYQHKoUdiO
PGB/dF1BRtGTxetLnit7v9PjFd26HK98snJO1xe6na2Khw8Id3+jh6/m9Zo7
ex7sOQ4+YA4y+0ivv3GL6X2sV7eed+J4sKZ7zYUev3T/q/tL3a3Va6r6V/1Q
RSZ/buXAzs93frfikfI+5d6y5NI4ZPmvFz5Y2LNga0FsdHWkQaR2uD2Od7R3
s1fwTGB9cHEgJnglPzdQH5Y/P38TDlu+X3M8K71j8yL4X17zDPB8renduu5R
sPk5uYtz6uW+5VoMHzjeNd+V6FqQPSL7cDaZPY+r2r/acTXTDtT/kFD957DX
erYdGVdg8c0zaPX9rfOt461LcD/f2jxjE25RoIEdGazoVQAHNIWdj4LN0w8w
S3gaH5+GD1mhxxW2MRlj8NtqWb3WgZbGuGoHI/q/jMy3G67E6Yj+5MmdTj6A
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
Y5p6NOORmZ0F7houTMAJmcP4+cY4q40tRj1gH85tL7GEuklfNAPnwpfSEueC
24eoWdI0mfrl5GQxK2euvqYD9TgTpci5SdydKvnqLVIVWSD24Brpi7TA98ng
/1JVPh5rtLGMWiRU856izt6ZJG57WZXETSajgDi+TeZOpK3429x88nPHDogO
VPnbmUpeMxnQa+HtmmessCXbZyHrfz6Tc6kR52jny04qT83OmoGonwfbr0Lc
fwqZP3fPkvX/ee6iXKeUrLm7oo272POApzBvNaL/UKDoG4Gmj3lvRVRl/H/R
N8P/mY8+4Hd4gOOBvwNDgssQl/8N3xGZF9kQvaWwVtGVoj9Lniu7r9OtFSvL
3634tPPdyOd/7/IkMvsnK2+qHI2I/2qXD3A81eW6zj92/qbi3YpvKko6cw93
uPxAp/s65Zcml8Yg8ucWzy5IQuzvHGXO3yT0d6BJ6EygF7J+S4DY/0r+Jtj+
Yf9AYJJMf3d/uS/iney9DNQ/Fkdh3tfuhLxB7jm5Y3Lq51CP80hWnexyoKBg
1vea0l2Nm8dxNXMzMP7buCXA/jdn7rW/a59ofwg36vEctY2C7R8Hbq+fUaUe
H9G9EfXfU99oJZDsx+KhX8LjSeKg35Zeiqu1B66npcpDvbB+/iyVGIhI6wP/
j1fP8CSewfoV2WojxU35OI1YjnMq1LVtmTJI9s+NmJxJI9q0SbGWXFLqT72X
8DeygC4JB+Pvj+cmsKvIAQbAC1ARmFMBrAV+3u4XIIA04IB2mgvmRADngTgR
9Jz0QMkG4jzwSXMScA9s/x1xgO9R/S9Z/T9jH/A+cyPAUSkCXFMAWG5OABqZ
/6T/MEC5aoE3mPG/XJ5gOd4lxvW2+G+Z9bAHd0mTvL1U6b9W7wvCEi/iVqrI
X6qsi/U8VlsmyPoTYecnEf1n4DEfEXP1h8dlRZXK90vwbp+1Em/NB9pag8/P
6mMi/C87NbXwfC/8BCsFtazkEBmVxZFiDVNjgBzB71NZYePZmCWN0tNi2z8B
ND4qeTHiNLtz96k3SD3OEx24e7BKe0iJ73nOvOLvDO9QpPreeOUMS/R9ag2s
6UBuASd55sH2OX9QL/le/P5UaaSv0HY0diK53+NdaSRS5bSfOidkR7Cb2VAa
X0/Y/rJV4yo+6JgsFZpLziNZjbMfB+bflrXEdSeOItd4HFFk/PVg93XdZ3Lm
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
6qZ9f7L+2uN1ylPrjdLA7K3T7CPoc6+nUu+T8/93U/8D9L8Olf+/yAA1LJ+m
3EL056UU4G2ktD+Hoet3JM8C8i9W/J9D3z9AvN/sxJPA/5z9sfPviNpvQe/P
3Z98nfz1R/S/jvpvTP9SpP5H3R86f72sk/856v7bovaT+X8h0lD+mRq5wzz5
GyW031xdf7KUgA39vztyAv/ro3LV+4jIFaYueM1IYyOAGWGs+D0tFeN1pPP7
1/S/XE7gjHV+3p5u7P1vSQuaymhV1C3wzKBmxljceiuPNpcqMHuAecgF3Ag2
OAAncL2hcxeevsTIhf1BJp3avsu6lpWqLc1vNNeZj2e6V87AvxHAQ+2KkzVy
3crq31knykPFL3veVhmvsB729fZf7dTxjnG+7aDy3zXnBKn/sf4ny5GHqpx0
3uXW7qN6XXOj5X3vM8AB97wzdJJv9PctEfWc4y1X7PfF56N8ZO3yVO+Szvme
Q40fgu+sgojn6cEFP88OP/Q30ulBD0T3Bf+L6KYf99Mzgzz/yoj5Qf7mqKr8
2Xgg7RhEHvV+PgnMRBW+VkDu/bTgYOnv1BLnZzCqdztU/p2hGoptxj9n+fQB
fCq8Fhe5fbznQwZIEALYKcXAMiEAnvLzHCFCM/87wbpAAIu123MusFjeosfw
vh/ywOwAOxGyfl9EP1IhUOqj2ndvMaLJ+9ni5ek/HQzpaUwHQ/J/IlD/a7la
oQfg6X8GHvkHjmMO8oA/tM/D1d5OH8Dm9sOIfvqyNrIfyduSF7QxB9RD9I/P
o0LYEqmCLLEOlA7I3NwCbX4ViNNbkENGyMrsizms8saMf6X8gcjxobrfXsQ4
Vb3Oyl1ytSI/Rrt+ZP245Pk1W53nUmn9kPW331Sn5cbvQXH+e6vjJd+Fp1/k
uo4H0nVqAvgfef6NtDwE/k9EB0DVz17a/OPsf6V8P1j9DRYwGb/HE/dL8+dg
QnzijoRBCZVxlZrMnzNx30r9Z18sd//7x8ah/38iNjEmN+YduYDT+3s1ev8u
TapJ92uOPD+66dyvuhw/Tkr3k+zfj5QDRqn3rynvv79m/zVNJVBD+ytg9vyX
/3+uAJwDJsszpLc6Hu47GXX+iPD9CjwKQTkA8DRggeKf8c59aIMPyBOCFYh9
7kvRI7wcCGCjvBMHZfwmFTV6KZANeFBsAE4A4k3PZU4A18qXvZ+83l3o3lLl
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
Y1SnM75n5Au83U8Fq6rB4kC/gAedALWBWuPdPjVIp5AKRTknXV7+yXufIsWA
bMTKEXQFRMHwT9YjpogK4JWsffhZIQGnh98X9qee0PVHUfU5iYfE9nslsgvx
+UPk58jf0aMfKk6U56a3ZEMxa7hT+3y7Jv1L6gBGoN+fU0rU3xx8ZZq2gVul
6kUE0LwSqgZ0FHbIsPwWid3TVuj+NUU3pGJMZfMXw4a3OBCPDE33d8R85lRD
PZRKPKao82mCj2RGMPI34s+WaC/K/MAryWb5f13DKzUiUIbK75G3wjzxK674
3vCz8nPz94OXGaCV9zh6MMPKtBXQr+1FqbXQB6STUD8z3ePwM+zk7pLHvX+X
PGb2cN4E6X6eEtf3Ten/zpPGP9khg1T9qe47Vryep6Xts0XKUluE/9uim1Iu
ev41WWss/Tkyftvq4tdHmH9q1nHrN12KVrGZj4nplonon4HYH6wq9r2zCeo/
/X45HV9PZ/w/kr4M9Z+qPw3tV3T572hLsgXk9HMO9T+SWi01CvP/A5bKd4tk
bv6+l85nXUvtp0ys308SGP/3JlyOPyDk79m4huoAJkv34x9xu2Mb49kZGeBV
TP9GAYgKoPViGftGCcTogE2zmEARC/vnjjHKH4YRbHr9u/c+u7UTbCudcPNn
j6S/ju9tWTqZzW0Q3/WlchrGcw/qfBvEeKWDdZ+1fpz8D4aJCcVswN3hbDki
c0uYo3vhIrx2CRmfW4giooapqJIpFRG6iKyUdzhVw/rLNXhdJqexG5m8y7RS
9/aLboFjhQbYnU11YKe2P9SAOpXbDe+ON3PpDvati7WiMq9CXpI+zJQDhStf
J50pIgHKCzp7zxWQibbJ21hX6UO+K1IGPOBvgOqfGtwnNTsiWMo0/69GfXsH
7/Am6H4XIkIqEOed5BrEilmhjuCO5uM7yBBXQ+TGUA+wRKiabXL1yo30kerH
XrHqjqPmU1mfu/kfpLKXKFZebdT7vyNyifr/sJi3/FOo+d2k2ssMMK/kr+bU
AJ5QSq2PfcgF5Pq3k2f3vBKy/l/WxYD9/w7x+3eh1yDad69u/+0xh9DBZG74
tFDLLcTfr9AVMxm1fY8ivim+U7L56e3ROzQUr8EL+D5ThYxcgojfE1yIyKfy
z2Zkgk7Ij1P1WrULbEb134qp/3yAW79SaYAdQuQfxWs9Vn1XCh5rCppJA4gb
mRv5vNKO8lxG978QP7Ef0ftfQ+Wn8gddf4flUfmrn+s8Jn/j+RcjBYCG+KlT
2Z+4sI/k5fkWekNi/1dJy5da3uz7Oe/XQ7z/pm3fUjn6cQ/wmuaA1xT5dKp2
Z63T1o/+1lS+Iet1PmpV+0yDhR2M7n+K0+y3j6nW1Vf8k/lTnN4tfaS2f0T+
7rAtwPRP5E/VtIfSylN/TzmZsj9leorB/M5A738k6U7S50l0+E1OypHP917E
P5G/vP49gglggFQ/DPOf7L+PrB3gf8T/f8dS/y5EBqiqLeBDugeYLLDU2gMy
B5TLBditPWBfqQJy12+cgQz+3yCD7ioCuC0VgHvTedcksmlZ+vX0MLr5No57
5HRQhszXRt99F9X8ceoQysSELhMb+gv1RsNQ/bkl6Y1s2Vt3QHMR5GWAmMJJ
eG3vOA0umKxBagq+JJVVsoPWyXmwrbTCv8zkz4w/087K7Luz6df+ETq+Drn0
Ch8gzzciwie4mqJTTMsbJl7gMfmDVrgz0QHUyKfn5EnkADcqz96Cj70p8gel
Qu1bvkS8R/leJSNgDmr/hMA+eYOcCPCWTWQQq2CyGAHZiJdJhdkhX+EL6IGD
wgOa+DkSMvrBtzADvIfZOjb8ohB09BCjG8CDkdeKhhcR3bNJGPxNEfr8UPX3
DGK/Y/EPeP4d/ToRf7eLR5ReQRb4VBt9an6cLx3aPBp5oKo0/+jkVb85lf0a
4HfcBBIPZOb+DcXGv5fa3T8I+1MF/59b0PuXF8Wi+r8orQKH9Axvib9zXyFv
mEbNrwJxz4pPX8QliOsuckgsw69hyy3BZIdU/J6PofhbLmSI64j/EYG1gfPo
/Hn3e8a/wNfDT7b1aN8mzFqzvBt8VVD7t8iXqZqcAN7Nb1swPb8kn7ofjdD7
zxTuZ5jwXERzNNVPco68ffvhp0tnv+258dL/WZF7Jmce+j+y/nj/J/JnN+bE
WagPuXLxG6Id4Gvq+I37hA3xT6bJ19aev1zXJuaDk+o8o6T4XyDVW26nyWBp
pE0V+/5Funzz+jVVup/DhPz3IPZv2ovF/HXaNyLyf0jLQvVfbLF+zqW6U+nv
F5vSXzqff0f9n4EOYIoY/7z9EfvzRGIbZIC/JRL5x/j/LJ5+n2T+XJHyR8e4
Xuj9yQBahcdYK/4f0v0vVzig32KoBLpFPiBfa/ffVXhAswXoq1nArYww3kII
RSyNcLP7j44x6D+DCYxJZwfQDRlgbnpTx7fyNqPDURc8L6Q3leuJif9h+JM2
+BvcD6ZZM8G29NXaCcx20B/1GnJmDiaAlnj9dsk3sRF6qs+dPuEBjZ+C0Ve6
peeX4grvx0/CjZ8HM/QWZfGHNNMFco5mN87JzR6Nee8wfvLsAiZqAmhgqYNt
RRagb2S2uzcenAFmeKgtFYs+85v88QXMAL/ifUhNEKqCBlD948RTpTfACuGB
u6ELGBE4ETivGYDve2aAwbr2bw4S/8O594UQWW8DC1kzkxE5LaQRdllIYF7L
Mwqny0XkgriAVNBNiSyKPCE9sDHC+uyS3uesyFvFmyK3pfhN7C+v/UT4xpWM
KDUz/vaSLs3nlTRtTuXPE6UROfnRudMuXdAJpbeLiQNoKO9eOvjt0hZxE3KL
v5h+AkQckoW4TtxEYnrNZc/c8XYKvbsEU85CdAHjgkTwpuK5Wr0Pt6GcgIYK
Gbk18CO+sgR5IDlExDSd/1zBtXitPMic09DzNwjYAyMCI/30W+uICYtbv1aY
/Ft590qPpWsBN39U/Z2u298kzwxtaRt5drqvug3fhxNcG2TyCS5yf7cK83MJ
M/8laUDEuLy5dIiiOhT1obIwATTOMcoRi8XuzZWzZK42AF2zUqTp95rcp3Oz
y6XvScTpfs2Z7iwqUr6rDOCQcj2Vvn6yttSm+98lzk+OEG/H8E4/ptvfvnQq
f3ZLj0nvl37A3kNuvx/ZGtuykAM6p7VK4+V/WqotdV3KSynPIQMMTD6E6P8n
6v/d7V8QHcDUxKnC/tyj6X8CHtT8fE+Of/T83BF3WJ6fjaX9+6MywGJd/zor
B9TTBvBcTKFcQJkLxlvXv3ILB+QWJriv7oBGByja4vl1Vf1vGxNlqQK5La0w
T/q96enpE1D9OQNMSGeMX0D034PvnbGeJuxDfQd1T5sqD7aREuo46SFdSGd2
5P5vNj4SSVQXXYDBA3EDkJkxxnlHaOqeqv1kCz8g9+CeGcuFu9ovdoANP5si
8TKI2iB6q5XF5KRbQFbO4myqhPICdBOVYKScYPsh+q9jXlydl+wmJ+CI0MAH
PaM8NeQQRl2wcwXjC6pIieYX7xnU/h2Y/8/4aqJfPeWPQezHIO77oQOwB7oI
DdgUPe9qdb6bERU7LR4AI4ZX/zq6iGdIJ8xXWEPo+PvwXCktoPbhbfIGfKKI
j/eLPgiT/zMLD7J/XpHKNll5ZxD9RyM7igdJqeMQeoC4Em8JNf7ozdkXeeB6
abg59f7noPJT82+atAA9pVQDeEbevfQJzkIPcUbqgdQUpYffEOmM0Y2ov9TL
ZxTOlf/go4r/neI5HAlds/b4xDxuRnQPDU4IEAdFTY8wOqCmeCbrxsd+YG1g
Kp5ERNBBdZ9eq9RgD3+/wBv+CYFP0UtR/y/ge8p7yDfW+4OXuIvxBSHvyXwb
Ov6Tcml6Dj+LqAIqthGrdUTIn5aY/en7My7vHnRy19H1f+Ki30M3F1mfxunj
TE4HuftMRvRfEd+nF2oBlbx/kZpvFTl4LMV7hl5T43VLipLzdFfh+7tmUdvr
pFRpqfMfJYdvalVPl+otdb4PSvNmlBSuriLqPxeKpSVif4/23Nx3NXUYx69u
iJUD9nsxATRE70/eT5ZtVtrTaYXy+LWlRqdeTKHWNxm/85MzMQMwAwwW7rcu
ugDy/o4lhvHIwwSwDTngO1T/AfFvxt+HDPA2+v8d6P53qP/fHPuL6v/T+Jgq
50/uAekCyP2f8QIgIrivpQZGTuDS/yEBIlIEjli+wEYVIGJx/yOWO4BxBbpp
/87+SPqziO5HkOHm4te5yAbcdlxQL/BJehrifJlUz77FnzRFRmBfEHak/W8X
4MKvlboLUCuxt/BCRE8RRU0egS+DqABqBlBZYb1UhakZ1l4aAQcz1kkbgKyA
PlIJa4s8zlzeShcBejfUllMgMUEf5dDvnXiA8y6Pi45xrrw9eU2EIknwTPIQ
Xd4e8//FfKJNXysox3sxF/G/tyDL1xi9/2REP9+z9AY54G8aJCaYOPbUYJmF
APgxyN14E238myDmqRR8Tb4B3Ar2RgxdxWeDQwlSBaZuaEWIWsElqrd0Ev2X
hfdLEeLn16J6qM4vI/qfQpR+jGng78W1kQPOSPubfl+HirnZp3b3tNLzpfTy
6NK8NSK/Abr91OZE/3aTEvB+sf2p93cGWYORn4UHtb1ypSrIruMc/t+NH9GL
Uu5YWXhVfodva4PxNr47onfHBZcFskP1g1TxYMynKtbry9srNXheHIl9gXGo
+HRMaR2sCC0LsPOn++ccfOyGuj8CvX8cXkfy/T70LfCloMvi1j9XiL8b0mMo
wcfpeBD5f9BDB9AWninuF9wL3Z+79+QR77s6jz9BOv7S94e3/wZS/Y9xjUS9
p88fe39iwYj9GS3fuFV6kOvDKZ+MH+76muFJ3ym3tCfJ7YuSxke1rHeVAchC
Jf7kOXFSjYetcbdbL6cP7qp49auVwTrWRJe/JbqLsf4tS2+ATjldnh9E/izA
Y3daY8R/K6n9T5PD97sp61IKUtYL+ftPTADc/01B9T+C6l83KSfpffT/YVR/
XgCN4vdlPIn+pefnRvT+kzUFZOsCQB5AoTaAnfHRqAAyF5wQD4AsoKXiAn0t
RNDXygLDLUVw4wTmtngA0dYGsLrFADJuwPQC225vkP6dnbimR9JX2A/YqW58
AfH/Oh7UPOiHCv96usvKgFQ//QR5cBu+uk87g9nKj2VCBTD+rzmaCA00GNE/
Bk/DGiY26N+asFqIYxWbST1BuokyD7izukuFzZ110VIMpULLcPG5ZmXTOZRq
jpNzHkb098h1SgfilHhBHrxjXHgf0SFgIaoJ2aSXkQOoDHwxn84T76MHeBDv
ylnIAR97H/bdRq860u9UBzAPjxjMAE3FCp4QuOsO0ERud7x7t5TyB3ExdZQN
moQG624+OHSwcGGIffXZ0EGhZekKRu0Mm1x/tkgDhOoax6X+/WsR9fYSiw3q
v6NUuDn178CTqp3Ldd/vLtTPidLWzas23yfvD2r8Xi9dq94/ImePN+TkR13f
2mL7b0KG4b2xXJ6i34RvhE9KlXBG4f3y73telZ89yxShd/gsk4/XalV0Vvnr
gdbBOdqCtkY2uB4gK2I1MsD1wBL8OXcjzBH1pfjbVA7A7BhKkUFL/Q2RUd9C
/Nf27Ub8j5fq7/uY+ukBdEs+LcRklOTTtZW6XwM9vPolY/6f4l6CzD0sbyt+
gnOk9zNCur+fuOblrlDX30PKH07t/nvlLJDeJ328coXzpa88t/3N5DXn1kWP
d73pmfUw5feX/jRZp9WyiDhrJm9v9vzLhfa5lVFD2hR0uUmQquVjqE+fa/o/
5qgr3v847cL5rg/j47O6/sWkU/WPmr9Jto7IAP9B9a+H+X+85fB7UqzfnzD5
Z6L2U+1/Jqb/ysTHkQH+hbk/LbFMGeCexLmo/+kJX8VPFPuH8f8ReoDRUv/8
K5b6v6uEAXg19h15gLRW5J/QBZBqQCe0A5hmqYEvVewvlf+n0QPpKhbg/58F
ZNf0X10f794B56H+07/8Xnka9NOWcx++10+UAZbhc+4BvsVXOP8s09didDHg
RJTmuK7+gPpIVEharX3JErx+U8Se5MerQgSRH8TYp7pKgrouqq59Kd31/pnG
d316pls/TbfF0Riui45heP8plYAsdQDUB5godCgRIltd3BzPRhaoQA5oIUZQ
SX5sPjnBbcUG4gQwS84gtX29fD94O/pGig3whp84oFP+6/i4LBAMvSNNy8GI
9bel/0OVK2qFEwH8gj43HOHB+N0ezMnrCxsh9umRTaesg2LNrQuTc0/l/1+l
o7236BV0Ap0jrSLU/uCW7igmgaOR0aj9VOTeULwdVT0aM/7vyAPXpe7bDXG/
Vu5/fUvp9nGp5JTugtHCBHnl4Xuo+C15h2UVPyiNwXNSHiXmZ5v8CahkTmVj
YnZ59e8UGirsXnJoqqr95mA7xPlU8Z+2YqYvDhDNQ2UUIiOZFU7gK/vwWBYI
S+mD9X8EJv610v0m2++AfzumqTM+Mv4W4/Wd5aUCe9sCdvsfoOv/Mr9GPqex
+cL8J3g+l9cHcX+VefT84eWfel/XpfCyzEWfT/o/HUDE95DqF7W/e0jxq6OU
YV5FJaB+5Ndy7rmY2Ue3/j56z1xU/8gNv2H108/TJnX/i/Kyf0kfnxPet0RO
d/S1fcxSsaklzttVMdmmOIl7W63unzuu63rXH7CnIyqI/KPq3w7baNtk238Q
/0+nLUX3Pzy1b+p0If9Y/x+T4h9VP+jyR90fYn/el9cPmf8XEq4ndEP0fxd/
AN2/V64fhxH9h7UBTEL8Z+sC8A4ywG55gHaWFgh9AMkGrhpreADlUgNoq9g3
XkARawcQsRyBoy0OUJTwPm4L/VPd4gGeiu5hf1M65t+hr2Hfv93u0ZxDjTP2
BJwG6HhSLMfTYs0Gz+LjNmUDbkYmpHNDeI/c0YgO/kK4oT0O3k+D4glPkXpA
AnIsuQFEBvfPJEf4ASEvqbxsnNfezSQ+i7vZrkIFPiRW925k+lfxSEEP8AMy
AF2dqQF7KZfsUOrE7sMsUMc92E0G2Uz3KCkCnfb0R82pVkAfyuMFu70PojdN
9GXpQX/QiWIDef1rhV6tinrYDh3uO3rn0+mSClcVIW4ApiAf3Fc4JbRRqLgm
+pysmYGFvUPUxHhUOCCHqu66MNUA90pnx1b0omaBC2Gqg70SKS+qoizwinZ1
VO1ILB6N+t+hpKFQfQ0w33O/X7/5Vqn908E7Gt2AcQJ4CR2AE4/lJQs0O7xV
nBsh8r+VEEZ0F7wg7yGHlMnOSrGIqp28VvSWc881XfFZ1+nh08Xa8J9QRT+B
ij4BH08IE7kvMC1wLMjaXzW4VQ7qZVL7NP3/ssABaSkQ8Ue1j9qYq47i1aXq
N12/ogqGo/5z5mcWZtxfRuUf5amQbvtOd0v35rxriP/NqP5d8s5rizvH9Rl+
jgfkAbkCP9UO6vtHSuuzF6b/Xjnc/JElnquLH298VbKjtOmnz9zJTCpL9VcX
+ZLUfJfLnYpOtssV9d2F8m8vH9v+0qu+leHQ9Y/+NjMyruodSrffZOcXjmRh
4JdI9YP7v2/R+VP3k8jfFXL67YX/478Q/fT5Xovef3jq7ynE/nSX18/85BbJ
61H7/57M6/+DeFYm/ppYmTgbkz/xf38TA+D+BI/wfwOEADws/m9HPN4WB+AX
zP7v6AI4VtX/VaEADBbwodgtmv/LY4gIHq+av1ZZoKv2f4YPOF76vxFLA6Sr
dQP4XV6A5g7A+D+AeWaknXPAJXx3vHFwGuD3e8C+TFFejLz3LHJCN3UH3BY8
Yt1DORl0cXTTtoAzAHeHX+A1qxRq+AtHUKygO9IL+FwMwUbatl51chPwb6EC
yL2mAhvdw3gLqIaJrQ+in+6Mw+UcshSZYJWQwVk5iTmbss+IGzASdYHO8JwB
9uRNzSsTIzAbM0Cmx4cc8JWH/sC2gnX5ewu6FuwtaIX+fzKif4GPjMAe6F29
eB/HBPgYgXc162IYz3fkE0yNwMog9cEXhqj91SRExn9l8Ko0QV/A14mcn1RI
F8EZmK9L5BhaI0z2fzPU/23yBLsQpvpnlUhIiByqg3EWeCoyC1lgEDp4dvGc
Aaj7SR1fonyWl0wo/bRkROk+dP3Gv5cIgO0lZPlQ++tQsbdkkDz8EoufEqOo
SsQm1aFtuvcdlLtptjDKLwjllxziTpNT/B7tOFOlhM645+2ztfZ6/fAKxAS4
2xuqyz53ACcU7a3x9/h3zyMLpKI/OIFuaZ6fzxV+zlODfB1R/at4f0XHvwWv
tA1TPzv+/oj+9R6qNGXK7XOn+1reQl396fZ9DdWfV/+yPF5yYlD5X3ddEtuf
HjDc9P6BPM+6P1pX/17I/U9Ly5Ob/ipS8aaWDxVl+mT1V28/HrWjvfxs1smf
ktqz5PUSa8qoNzw/ItAZ87xD9UQv+kBmZsYuIf4q0AEMttguX2irVabZ/7p0
vxro/h9vb4j4X2DbiO7/F/T+QzD9/ybFT1vqflX/28k/Cfk3A9HvR/cfTHoc
9f/XRHJ/hiHy8/Qk+/+RhNfV/zePf14XgI/idqD+T0b/Tw2Q/2j/TxbgKvkA
jxUPwGgBkhW4VHoA5doCmIfh/fZVHhhueYKYDWB1zf93n0YL+KLQwDXtzdEB
HMBjop1+xkQ3etDlXEK3w23Hvfi+efVM13fPCciDvOCRA1IMPsZoOtimrYHJ
Am2EIx6m6Kd66iLNVL2lKnJVKiEJUhubIWaQQ5sAh7o1Rv+XchJ8LrOPrjVR
QnF01iaQWk90DSE3ID73TE5DVIibudtzl8krbKtrah41ZKkjdweVhu7AH+BB
/6lmBYu9ewvG4h26G11qR9/DeM/SGeANRP8z/pHoA1xBvs+3IgcMRTSsFhZw
Jzpmbv6MAiDRQIx6aoJzm94pRD/gRoUHpQX0FXIAdfNOF1ZDFBYV9Q/nofp/
EyYmYC66gn8p9rkXCEkF5HjRUSGCdkXI/RlUTP0P49HLnZ9Xyt/08PIgExAB
uFycgFPS+ukgngBdfNlHnCt6MGITy/gG/r9eDFObYG6YbN2z0uqlVh+3mi1D
49DZLNHE3wXfH1n7/F7rSw2BNZ8d/gkp+ZAZmRo0d9Eu2gpOQwagfir7f1b/
muieOPtv8G3Aq/kKMit9P5lneXnloz2i37h7Vrh3ul+Qzmeyew9+RqvxE5ot
t2/u/Pa5PC5ucuj2RW8fen068ZM9nPNZLq/9RP3+ibjfpAqwW3zf48L0rkPF
WCdNmSKLz2scvEu026OKfYncazlnHpRi/b/FQp8hZ5uVUrqen+FDTzpKTp8V
0rLg3rquk+wW+n1eU/V/XZvv7fabqJLsADbaztr+D/G/Km0WJn/e/saj+r+L
2Z9qv8T98vY3EP0/L3+f48H+/1jiVEwARvV/Lub/1xMmJNyLB9n/E+MzUP/J
AOgoBAD9f9j//yIE4DtSAjQ6YJwCzkkF9JwugIYDYGaBvqry0ZYTiJkAjDa4
mf/dFkuYtT/acgiMl4PxPOQA7jU/Qx5YgU6ggXjOb9r5PX9n5QD6HRP76BES
woNXhWioBtoWMhvsSydygFeDYUIGfmFNA49jDjAKQo9LOag3XmvqCI5SJ3Ba
2gBUDOxvaQYvz+RP9aQ8xL7OcgvF8VvWWMT/LPk47s4eks1d4JWciagSI3Pt
Lt6M5rjqo/pPRV2hP8AkD9EAp1F1DnqGF7yb7y4YgvfoWG8rxP9kvGMPYQKI
88dZdwCqg0/Au54eYcwF3AIGQ3XkEfJOsInFAdwoVZCdygTEzpIbQ2eg95QD
fOgADhZOD0/CJPBiOB+zQHvE4cpCxqTR1KW69q/IA+V4jkHsHo1wK7ALv/4s
P64PkQmo+UnNjzfk+nO7+A15gnNG6C4tYHb+o4up7/8x/qlX0PkT7b+miI59
TxQ9Gz4oXAL7El4odoqrQ1ZTJ938y+R/eiJAxYNriOe1qutNg3PwlfPy9K2P
TDDV0kWZExiqi2A3/O1+ASJ+9gWK1Sf0CzRE1mT/NBq9FFVWcr31MAGUo/az
/58uld+v8NoPRPdPpt9O6TVvxk9otnycXIj7srx78uj0QZ8fXnS6uf7I8Wrj
R43/t3Lo8Uuk/6zsh3NWSeM/RX5evOsP18RPB4+XxCinruRFMcwLpOZHl/oS
cXoeELZ/huKe8z49bRIQ9y0sL5sWUrzmrnqR3qFU/CYH1oU6liYcbFMHd12c
ftPR/3P7dwXVP8n2D9R/Xv+qpk1L7Zp6EdG/HDmATn//xvT/MjJArWRqfo7R
DYDY39n/6/+/lfLnI4p/YoB7aAP4keJ/tDSA/1LsL1b13yw10KfRAeQqA3AC
WCs28FohgbgFiAj1M15KAAYHZLc0wKMU/ad08TO+f1HyArTr/t/cHo8OYAAi
m14mnATS079DlN8rpgMzwgq7cTs4IL+jGET+dn2V/sdmI0pN5GfTiZH8VjuB
+g7iJnk94QRFbtB/kQXq6i7AB1XDHkPP9b2zkbSW5qsX4EZ2ueaz9trgfJm5
VD7ifcTqooM41Z1ela9bL3SFVAtlvdie2wDvoH7iBTVB/V/oJieoFmaAUZ72
ugN+iSmAXIDO6ADoT8u6RczadryLD8gdtF+gnRRBzgdWo/8/prvYEnHdfsTH
zfgd1cAXYpruJC7QFPzOVzhFDgH0xRkojRyyAS4X5ofpJHo/qn5+2Fa0Tthg
KuzNDTMTsD/YKz3+VsIF7pIP55niPyM7iunURQ+QM8WlJXQD5a3vkhQ+nPhI
rOAZVP23iukkuKZoV4STxBb5ivcpopJXbJiMREfY1H5eLXprTzkYnQwxjcFQ
mVB8XbQBCAcNB5oeHlsDay02JLF/3PIPVSZw6Sv7ApwZePvn9e+Sf57/kO9T
vHrU+Sbe96j3KS+vLG0L3AVtC+jIRo/mlVL37YSOPxk/kQTP7Lw2uvbtc83G
1L/MdQ+6//Ou664R+PySXJ8biuvbMHcHav5kdP299KDLJ5U9q0jjl1v/pVnj
hd9j1d8v/u6tjHXaJZVkrlSM31K8U3duvrp8dgE/CeXPGzQZvhXOnngHjso4
4jROn2O0q+bcf0yYn6mOe3TZZm+7Txi5GHl+vYk4oedvbfl9LZbqx5bUauj+
T6a8lNIfsX9bvT8Vv1sk/5w0E4+6yAEPJq1G/0+336mJ1zH75yEHkP2fnvBe
/E1dADPir2gCmKwbwF+xf8Xujv1LTOCx8gFqLSTQQ/9jAv2GuDe+INOkC7xU
nb9xB5lmqXz0tVAAbsv5y275A9ATiCrg1WPO2kz8k9HoRFwPsBt180vqdm5a
PcE8dQcT8flNPNgDsC8wXIh+eH0+s0/AK8StAF+tT/Dclp4m/LBBUawWkmqK
VEXGOCvUAdxx9tRP4qA2gsQGlaj6n86gRhC5wt21D2wrNPc56Tl0lpszPQOI
AKUbRMNcsoM9mADoF06v8M3oL3lfXilngIOeD/Jv5Dcr+CA/BTVqiPcV7w/e
zt4NvoCvId7HH/q2awewFvF/wD8tUKY5d6icwoOI/vMBagIxExxBPd0cfEHq
17wA8AaYIYUc6mi8J3fQnoVm/ibTjvqaxkHrSXxsLye9bboPbpNOYJXIjfCW
oo8jbTEJ7IqMiWySXv8GdAFO6QB2L3lZfr0/R56Rzre/OE5fPySGP5U+zklN
+BVp+OcV0YuYKt3MAfQsbCkGM/GMxO9fw3fEa16q7nupmuPDiObVqvVVgx7U
9qm6+3eRNiLxQFWF/UvVPzNBXt925IFugRXo/T/0NQiQ79vRR58Vxv/xgj5S
+KpW0D5/HV719vmXPfMx8yd4BmMea+Keot6/TAz/MGb+ZS5qfVDnx6h7j8RH
cv0n4mc6SE4wveQQ/xbm/lfR8/MG1DmbSj7luvYRLx6V5dCM31014yVruv+3
0Dy8Nc23Ip5uFo3kWkd/X3L8qO5Flapdcvl4XFu/Srw3qYBjkK1LxHBxOdLU
026T6j91vxraa6L/p+L3JsT/kLQtqV/L7Sca0397Mf9OI/r/jck/Qf3/kSRe
/jj95+DX2YlP4NFUHAA6f5ADfH/CAAsDaDgA/4hbIP+vv2J7SQd0KOr/WDxb
SwuM83+u5Qf2my6AvyHe1yLGDRJ4uHp+owVoXAHaigtY3fIDMhxg8n9OKQNQ
xewjG70MairCVyADdEDkz1Ovfy8ifCLyA/PeAET8PM0E8doU8B7Cv3MJGSBd
qqjcFU7AK3Vdd8EyPFeLQZDmqHQck4IAVUT5aj+ufHtEN8Fa0ghpZKEBfhIu
mJig53St/VKb3T7iBxplR/YAdHWgz+MCVImaucSLzMEc+QkywOq8lu5s92B3
b/cMzJ6npTRHz1neAdYUtEIHMEs4gA8R/zXx+BR97HZ0AdXxDu8WIMqFm7Gt
AU7HxMG2lh4Ar4Krgxs1EXCnvtBiAjWSMnCCtLF9iHu6hJ4NURuc/ODL6MRn
yDn8PctHryR8QRphrxVVQ83m1a5cqJ1WkcTin8UMJDpojBBCjP2j+soGMfxe
RudPv4BdmBW4Pagila8b4dxInjT9mxWdxv8LvQorpFhuGIxHQu/oosFpplOI
e83VQvi7gpx4bvo53ZsZYC36/KH6fqmTzpgvFkNqDl6TaciK1PiYFnjG/wxe
LeKoH5bLaiL6/yzfFlT/rgXjC6Iwa9GRKT+fO/9JmP8r8+jTQJWGSnT9Yam4
fuuiy2dTdP8jMPXz7v+mNv/c93dA9JPldxgT3iBlAGr9EuFPtejhYorfkHYc
HaZf0tW4vWZ+9vszpEXP67JPWj4Gd1pL3T5dK6hrX0t/9jninzq/vaVqPVO6
d8eEX5mKeF+ivT9ZLp9oq+XRO/wSImMA3v0f2Q7bFtj+gwyQm9YqrWvqCWSA
4anL0f+fRvU/nTwKs/9A1H/6/VRI+yeIR2ViZWIZqn+aNoD3yPvnWdT/A3L/
6GEpgO6QCoiZAegCtEoXQKqBDLVcgKuq/ycOuJ7m/3NyBDLX/77C/be1GIHV
lQ9M1a+ubWC0pQhQPcZ4AVeP4Tbzbdsftobaa9bULtBM/t/pKthc9b8HcgM/
G4nvfh5eA6IguTG4ia9yd+hB1HMr0M+6F3rkldLFQaywS7vAMt1TyRO4hnlg
l+Kf2benVMJ+0nQWq5/geimFlIiZyS6Pig3EbTfT1odor6VZQ+T5kKXecAOy
wABMjaeECXTl8brUG13nVff37lGeFp512gMaRuBx7QFC3sa+P71X8P4lI3iF
v4O/B+L/lH+rPIJcqojkt3AaDgc3K36mog8gD26wlMCogLczVBmkP+DCUM9C
cw+sI41gOuVVhKi3Qa2t08gCPeUX+mghdbi2aQa4XEjO4F5M7azifO4tojoI
0cKM+ET0+bsixPfSsXcQ6v2QyAJ5BvwpFgHZBPTtorswewqqj7yH/EKNr55y
6qKqWSOp9W6WTk+T0FDhfuiA0FQsZ3b5SxDfqfheU4NUQ+EdlLe/E0JE8XOj
7kPN9GnaAFDl/4zvDf8O3xUfEdW9fLO8v0jno6jgnJg+3+SX5BP1sxK1n7u/
mbrzz0ROXp1Hzja3tHNcMej+7ej9yeeKQfST30d9jw2I+/jcXsjqtfE4iqmf
jn50+KSG96xsdoJ9pN51UioyvPNxn0/vGcPiq6W6v177ZSrQ8b5PXp9RpeSN
v6fUfb93fu78Xkxf7qeNkgWVfsl0JSN+nLw+t4kX8wje1zeFk+ugLvmwdL/o
+bM47Tf5fXRN7Y/Jv794v9T8npFMx6+E5J/F/F+U1FL7v714/EvuP4z+fUIA
swP4Kv7N+BXSAOQW8G31AJOFADRaIKu0BxgrNcChiv67GWCtFf3luv8v1fR/
d/Y3CgDTLJcwg/iNSAPUbSECuQs4bLuCCeCsbbKtOb6zeMR0TfsAy9m4h/Kd
V1mhBzICNQ+cVo8wUTuDAcgD89QlxChDEkNAfKC5BixLb4qYJ5domFhCVBd6
XCxBqg2SZ8GrQIJ8Bh/THpAO5NRi4/2mv1jC3aUWVg09AJFB1HEhy/PV7ONZ
q4QLHKRb4JWcHpgDbsot6EcxynaKD/CYZz06gJWe/roElKNDPVfwsZecwMWY
A3phfn0Gsf+GGIE9/N0CHl296gdd2pL9iMqYKn4MK+aPqppNg+TONgmxv+YU
QJ/QoD6eDSUUXkOPQL/Q5+UZelm7AaJwJklF93lEaP8wdUNPii1Af/AniobL
K6xPEZ04jUvoxxHiBdkNJKLjJ7K/NuKfzr2MfU7/W/DPcXv4RNFJ9RIlYaPS
PwnRTz4Stb16I1s1UZ9CxzN2A2VC+RqkM+eafuj5l6nvn4Yo3xdgzT+v797c
AK4L+bNMqundEPvU+D/lX4GeaQEyJ7FU3KbU9j2IuWo4Zn/i/R35T+aT4XsL
9X8npn+yfIxie1gcP9786PJJd79PpPRFjbeRQvpeyVkgdQ/6+/yQ/YNQHz9I
4XexsH7j5RxDjA/3RLHq/Oldv1Ke9Oz0e2ZQx7OnNnu1Mq46fxIHPRMRT1Wa
RfK04qUvR/o+YxT97EepYjNbN+tr6PrDYsBe1xTbT9PsBMW/Qf7XRJxkaftH
5h95/+NTL2L2n55SI6VE+/8Zuv3dSaqF+CcCuGXSYEwAdZOGJf4X8X8P+n+j
ALIv4XXE/+V43gCpA9ZcKEDO/2fjGlv1/0dE/WbLDShVWmBDxQJIVR+wRfWf
PMClVvT3tWq/QQBEaQfQ1dIDN/ofUdr977c8gq7Y6GEQj5mGl8CaVoZz4vPm
+F4nIiMM0Neu2Oh3vAMfR+rPOiAnfGc3/f8jmI06IPK/00Yw3boNsHNyoe7z
JjhM9Z9cwiXCBnDeGqyrABGXPnEDHxM7YKV6OHqK1hA/413td5sJ32XDs63F
564ifyciAugfyF3xRNSS7bkT0E2WYc7shIqzEFMAfUKJBTKqIDZMAVsKiFVh
BnjY9xbexzt8pX462Pbwz8NHOyIh1XK0WKubN1nxYUUOL2XMBS1DxM5WBq+h
fl4LBqUSaNwDqBfQWxhho7JB5O1A1OON0s9/T85hpwuniye0LUxNfnptUje8
qKgZIp/XfKMZ+i/lA+oFkEWwKPJaUW3M/MOL6CBAhYEUxP5r8hlsi3/y/jD5
Rwel7fseuhHjVDI4lB0KSruUdwDD93MFueMch+9kM3JAfczzrPFDhfMJq/q3
QwYYIT2EaZj1PVL4ecbfDr/2QJ58y1cTr1hN/yFfY9/H3t2o/I19v6L731Lw
WgFRf9ORaentt1DOHoPd1PXZnLckj+6+y1xE+6Yh/l932V1bEfun8BOjwqNX
6r5XcugGTf0nukOvyv5Fzh7s/I9Lu6detk0sni+lIMU7/3z5UE7SXM890kp5
UdDRbiC6e3L6ZjqvSs+eH7l3oo/VGCnUUO06KN0aYv3J9V0tBGtTYdnK5PXb
TZEfo952HqKCdfAKqj89v39J+yGtHjJAeWpbTP+/p/QX9udQ8k/J9Pzwy/Xn
jrQ/HtcOgM4/TwgDEFb0/y1xmSYA3gDekwrQgPh49ABnpQGQpAdRQP/R/X+s
ugDeAB/SBZCbwKra/t2N/b5SAzHdQLSF9ou2mABm628wv0T/c/9/SiqgdC/Z
YaOWwWRU94+UDWqi0je3m51ATfsftpH40x7aD3RQX+BUj8Du/02hBr7D02wL
mA2IEGqge8Dr+MgeYJ+UBdoIGTxVyEqqBvZ2UluUeEvqBVMvpIWcSEdl0I2Z
uA32d8ZVvECftc1iBhiO90IfdAJVsg1DiKiAH7Kv5HyWWx21ZJk0wqbmtcmj
o/RVd4Knwn3QUwNT6XPSBaMeFTVBxnqJVydzZYNvsq+Dn9xA6ldVRw/AWOgm
XKAr2AC/IyPmOuokMfDUvtsXeCdIVRCqAryAqjpFuMCWirQpUtaqCCXrTshp
gQpCb4cO6kLAjaFRDT8oxvBcee0RL0DXIN7wyxH/eYj74arw1PMje5CZgU5C
KXLyNOyivegcPgj3Qe9fTSq/JcgBVPf2qf8/q3x0RHd/KpoPFrqZjP+qugEw
p63VJZB1v1+AuWCCavwJeXovwzzES98laaYf8MdI52MFMsBkKfw3RCbgKzgE
obsGtZ+qi/3R99OPnYjfFh4yfOugA6hE/E/N+xE5gEh/1vyt6vzbyeH1ADIA
OR1096He2w/Zo3PoCPm0On9ifdcg41PBt5qF9Seit8BS7VqPxwyhSehfy07y
qvxrjHuluTR9Llyvue1flapXLeH86urWl+yk7u0XmPx5sUrDu5Sb60fQ97P+
F+PXbngXPytkzEjd/nvYe9l62f7PtjjtVcz/D6VR9W+/eH8F6AJ+wvxP1f8W
iv6fk76X56fZAVL9czWm/20J9yADLEu4IBXg+zEBfKf5/1E86ABKFNBo+QD+
JQ4QHcGMEtjT/+v+q0oHhBmgaqzp/6dZbkB23QLv6n9HafJ3q/c32P+omE8V
/4YPNNpW2zba1tF2RXFPRVMnop8dQEM79c3i5XTCGeEj2x/4egf1P/w9+wBe
BLgrOGDndeQRMaTShRImNvATvX5mg+qSfzJ9FOg4YFRDg/jp9JbG+GBdBHkR
IFOQaI1JUgqhaxC3Ae8KIciN4DoL7TFc+KBzWU9bu8C3cjrmNMcc+WZuO3nH
35NXH91mJ7wDfR6qg/Me9Vz+OjzKC45jEvgVOeBPb6Iv4Ev0LRAm0Il3txe9
bfUAO9xuqHo3/dyLdUEd3IdeoIt25z9K836obmNlmqsZYcniBi0J9g41DZJl
m61csEeqIS3FvHtB2iEtCskaJFuImCE6id+Q614RorhIil0nw50jx4vWSEWA
ej7Ninjjf62IPoJ0E62HzqAIlf8k/i49x6eH/1b0pGp/PqL/vcL7w0+GT0vV
lzjlbKGWWPlbhloHqd97TOh/YhyWIBe8oy1gF3yX3O97hAgYgUq/FpFfNXjJ
X4zPqZj8KT67jbk/zj8a0b9Be//d6KGGeB/0dvbaCvYWXBTb4l3kgINSY/V5
ZqIDmOKmU8PsPF5m2ij26e5NR5fqcvfl5Z8af3T1JdrnrZxV+FmOzeaep4r8
vJdi4u8s/S7yeS7ip99f7H0ieyZZztUJuiI3kl/dYF2Z6zqPWK52u1RhqEkX
FBe1t/Spjqj61JVmxWzEvlGz+TZ9tbB++8R0IxOWXt9zpfr9nZ263155fvXC
9B+wzUL8n0jdkro8xSbub4H2/y/L74/Kn3eSjiTV0seZiH7Wf/p/Ef//N0z/
3AB8gvm/X0I6JoCbmAAmqv+nCthGzP+j5QVOHtBmbQA66wbIzX+hvMBz5Qpw
t/MvV9XvazmDG95vlPb/0Rbnj7t+87x7/f89+ktMAQuEZRhtY/2fLC/js/j+
TNT3sBu0oxdRfxaZgX1BvPgP9D47axugjugm/rRBOjuB7fbX8TqxYyI2mIzh
R/Aq8nVkFkgTZ3i29izHpCM8W85Du8S5NsjAq076L47SrYb7nH9bV4EHpNVK
rtCX6AJOZvbJWiOG4FKphbADSMzJknvoRCkEVUeFqZ+3RAwTzqEthEHPFyfd
jWplK8gVFugpVLBByAF/em8rA5AVVNO/3coB3Hl5kAXIdd0nXFyZZuYy8WK3
qnYuUeyTJdtbKiHJiLO3QycCdaSuR9ZAb0sxYEYhVYTZAaxEBpihq8CMwmpF
NZQDqBtM3u7f5B5QXsSugP4d/5Jr5xZE/Dmp+a8Rw/8b+Q2T6bctTEffk+Fb
mC24BeC/86p0ve8rpE4RdQvYi2SHKqVtdkzOXcmhoVL7IJ6/qm6AnAQ46ZPv
Y3D+xfjdAcT9PD/j/hQq/03M/Q3x7Oh7xUt3385y953lLS+g2lKzAkd+s4Kv
PNPzyfMl+mKwm5fY1Zj7u+TtyfvW9S3y8rfozuag7lPl3+SBU/L1Isd3dI7R
9aBrd7n2PDZxQbeIzT9dfj03hPDrj5l/eiaRfOztGesD9evjTmr4tFScE3ne
22n8LU3956Z/kXqCmUKmkqu6RIpWx/DOnOpIU9/fVIyfCXiQEUdtjO+0496u
mtgDdbA2or+jjY5fv6Uuler3/pR10vx1YPr/UPf/O0mZqv9G/Zv6f0QArU58
P7ENMkBTVf8JcgAtRgdwIP4rbQHi0QEcjluADPBXbEc5gf8iJ3CjA7JZW8DO
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
    "], {{0, 512}, {512, 0}}, {0, 65535},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit16", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16, 
        "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
        "Black Is Zero", "FillOrder" -> 1, 
        "StripOffsets" -> {525958, 542342, 558726, 575110, 591494, 607878, 
         624262, 640646, 657030, 673414, 689798, 706182, 722566, 738950, 
         755334, 771718, 788102, 804486, 820870, 837254, 853638, 870022, 
         886406, 902790, 919174, 935558, 951942, 968326, 984710, 1001094, 
         1017478, 1033862}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
        "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384, 16384,
          16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
         16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
          16384, 16384, 16384, 16384, 16384, 16384}, "XResolution" -> 72, 
        "YResolution" -> 72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
        "inch", "DateTime" -> 
        DateObject[{2019, 10, 4, 12, 55, 38.}, "Instant", "Gregorian", -6.], 
        "Artist" -> "Created with the Wolfram Language : www.wolfram.com", 
        "SampleFormat" -> "Unsigned integer data"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSizeRaw->{512, 512},
  PlotRange->{{0., 512.}, {0., 512.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.779204022252078*^9, 
  3.7792045369885187`*^9},ExpressionUUID->"dbf8b6a0-84df-4a1b-9853-\
2eb596bcc804"]
}, Open  ]],

Cell["This will export out the mask image to the analysis folder", "Text",
 CellChangeTimes->{{3.779215645966916*^9, 
  3.7792156536473556`*^9}},ExpressionUUID->"b41c6f03-0e3c-4217-907f-\
207aba7c392a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymask", "=", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt00GKXdcVhlHJrTQ9hcwi3TTTtckAbKKYdGSQDSGzj4RjiGzJqqp371n7
3PsteAUF1Tjv/3b9+fsfv/nnV69evfrpT+9/fPPdv//67t13//n26/e//P3t
T//64e2bf/zt7c9vfnjz7i/ff/izV1/975MkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkyYZev6ff
EOT1r/RDArz+iH5N1nr9e/pJWeUT8buA2/hc/U7gDv6wfidwbV+O3wVc1xPr
dwKX9Jz6XcDFPDd+J3AlL6vfCVzDA/W7gN09GL8D2NoB9TuAbR1TvwPY0mHx
O4ANHVq/A9jM0fU7gI2cEL8D2MZJ9TuALZxXvwMY7tT0HcBoC9p3ADOtSt8B
jLM2fQcwiWjfAYzA0ncAA+D6HYCl43+gN7gxnf4XeoXb0uF/pXe4J139/+gp
7kg3/4ge43508d/Qc9yN7v07epBb0bE/RW9yIzr1p+lVbkOH/hy9y03ozJ+n
l7kD3fgP6XGuTxf+Aj3P1em+X6QHujQd9yn0Rhem0z6NXumydNin0jtdlM76
dHqpK9JNn0WPdT266DPpua5G93w2Pdi16JovoCe7EJ3yZfRql6FDvpCe7Sp0
x5fTy12CjvgIvd3+dMEH6fl2p/s9TA+4N13vCHrDjel0x9Ar7kp3O4weck+6
2pH0lhvSyY6l19yN7nU4PehedK0T6El3oludQ6+6DR3qLHrXXehOp9HDbkJn
Oo9edg+60pn0tjvQjU6lx92ATnQuve4GdKJz6XXn04XOpvedTvc5nR54OJ3n
fHrh2XSdBfTEs+k6K+iNJ9NtltAjD6bTrKFXnkuXWUTPPJYOs4reeSwdZhW9
81S6yzJ66KF0lnX00jPpKgvpqUfSUVbSW4+ko6ykt55IN1lKjz2QTrKWXnse
XWQtvfY8ushieu55dJHF9Nzj6CCr6b3H0UFW03uPo4OspvceRwdZTe89jg6y
mt57Gt1jOT34NLrHcnrwaXSP1fTe4+ggq+m9x9FBVtN7j6ODrKb3nkb3WE4P
Po3usZwefBrdYzk9+DS6x3J68Gl0j+X04NPoHsvpwYfROZbTg0+jeyynB59G
91hODz6N7rGcHnwa3WM5Pfg0usdyevBhdI719OLD6Bzr6cWH0TnW04sPo3Os
pxcfRudYTg8+je6xnB58GJ1jPb34MDrHenrxYXSO9fTiw+gc6+nFh9E51tOL
D6NzrKcXn0XXAPTks+ga6+nFZ9E1AD35KDqGoDefRLcg9OiT6BaEHn0QncLQ
q8+hSyB69jF0CEXvPoXuwOjhp9AdGD38EDoDo4cfQmdw9PIz6AqQnn4GXcHR
y8+gK0B6+hF0BElvP4FuIOntJ9ANKD3+BLoBpccfQCeg9PgD6ASWXt/TBSy9
vqcLYHp+TxfA9PycDoDp+TkdQNP7a3p/TgfQ9P6a3l/T+3M6AKbn53QATM/v
6QKWXn8AncDS63u6gKXXH0AnoPT4E+gGkt5+At1A0tuPoCNIevsRdARITz+C
jgDp6WfQFRy9/Ay6AqSnn0FXcPTyQ+gMjB5+CJ2B0cNPoTsoevcxdAhF7z6F
7qDo3cfQIRA9+xg6BKJnn0OXQPTsc+gShl59Dl3C0KsPolMQevRJdAtBbz6J
bkHo0SfRLQS9+Sg6BqAnH0XHAPTks+ga6+nFZ9E1AD35LLrGenrxYXSO5fTg
w+gcy+nBp9E9ltODT6N7rKb3nkb3WE4PPo3usZwefBidYz29+DA6x3p68Vl0
DUBPPoluIejNJ9EtCD36IDqFoVefQ5dA9Oxj6BCK3n0K3YHRww+hMzh6+Rl0
BUcvP4OuAOnpR9ARJL39BLoBpccfQCew9PqeLoDp+TkdQNP7a3p/Te+v6f05
HQDT83u6gKXXH0AnoPT4E+gGkt5+BB0B0tOPoCM4evkhdAZGDz+F7qDo3cfQ
IRA9+xy6hKFXH0SnIPTok+gWgt58Et1C0JuPomMAevJZdI319OLD6BzL6cGn
0T1W03uPo4MspueeRxdZS689kE6ylB57It1kJb31RLrJSnrrkXSUhfTUM+kq
6+ilh9JZltFDT6W7LKJnnkuXWUKPPJlus4CeeDZd53x64eF0nrPpfafTfU6m
551PFzqVHncHutGZ9LZb0JHOo5fdhM50Fr3rNnSoc+hVN6JTnUFvuhUd6wR6
0r3oWofTg25G5zqa3nM7Otix9Job0skOpcfckW52ID3lnnS1w+ghd6W7HUTP
uC9d7hh6xY3pdEfQG25Nx3ucXnBvut7D9IDb0wEfpOe7AJ3wEXq7a9AVX0wP
dx265Ivo0S5Fx3w+vdjV6J7Ppfe6Hl30qfRO16XLfoGe5wZ04k/Tq9yJbv0R
PcYt6egf6A3urfB3V/i7q/3d1T4nH4H+dnmaY5sWf0/9F+eXK9BvSJIkSZIk
SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
SZIkSZIkSZIkSZIkSZIkSfJb/wVmY/Lj
      "], {{0, 512}, {512, 0}}, {0, 1},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{512, 512},
    PlotRange->{{0, 512}, {0, 512}}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"analysisFolder", "<>", "\"\<_mask.tif\>\""}], ",", "mymask"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.695765046835212*^9, 3.6957650613840446`*^9}, {
   3.7055137992181635`*^9, 3.705513800518238*^9}, {3.7136419255917816`*^9, 
   3.713641926390827*^9}, {3.7152789467933197`*^9, 3.7152789476543694`*^9}, {
   3.7156096401608987`*^9, 3.7156096508625107`*^9}, {3.715638199950425*^9, 
   3.715638201410509*^9}, {3.7700338284675865`*^9, 3.7700338298874083`*^9}, 
   3.773076316951456*^9, 3.77359354775279*^9, 
   3.7792156348592806`*^9},ExpressionUUID->"6e4762f2-896b-4508-8c40-\
56e6ae295529"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Creating Transformation Function (need to only run this once per imaging day \
to get a transformation function for that imaging day)\
\>", "Subsection",
 CellChangeTimes->{{3.6515232012801285`*^9, 3.6515232091525784`*^9}, {
  3.7792157387032204`*^9, 
  3.779215770463037*^9}},ExpressionUUID->"fbc1f047-2bfc-4344-a4a4-\
3a31c5535177"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dirBeads", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", "\"\<Beads\>\""}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.6515233788132825`*^9, 
  3.651523475464811*^9}},ExpressionUUID->"83ba9313-a312-4e02-be32-\
fd076948e659"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myFiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.tif\>\"", ",", "dirBeads"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myBeadsImgs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "@", 
      RowBox[{
      "myFiles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "myFiles", "]"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDims", "=", 
   RowBox[{"ImageDimensions", "@", 
    RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorCombine", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ConstantImage", "[", 
        RowBox[{"0", ",", "myDims"}], "]"}]}], "}"}], "]"}], "//", 
    "ImageAdjust"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose an image to calculate the transformation function and CLICK\>\
\"", ",", 
     RowBox[{"nRefImg", "=", "data"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"data", ",", "1", ",", 
     RowBox[{"Length", "[", "myFiles", "]"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6472842488313336`*^9, 3.6472842802491302`*^9}, {
  3.6472843380484366`*^9, 3.6472843498251104`*^9}, {3.6472843849931216`*^9, 
  3.6472846989050765`*^9}, {3.6476199272898703`*^9, 3.6476200105786343`*^9}, {
  3.6476207275146403`*^9, 3.6476207335459857`*^9}, {3.6476207720271864`*^9, 
  3.647620795722542*^9}, {3.6484024981878595`*^9, 3.6484025788674746`*^9}, {
  3.648402631659494*^9, 3.648402640107977*^9}, {3.64840269085988*^9, 
  3.6484027018515086`*^9}, {3.6485688255122385`*^9, 3.648568839433035*^9}, {
  3.6515234645531864`*^9, 
  3.6515234936248493`*^9}},ExpressionUUID->"0935b445-fd79-430e-91ac-\
36a65abe00e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRefBeadsRedImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nRefImg", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRefBeadsGreenImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nRefImg", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myRefBeadsRedImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdRed"}], "]"}], "&"}]}], ",", 
       RowBox[{"myRefBeadsGreenImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdGreen"}], "]"}], "&"}]}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Choose thresholds and CLICK\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"thRed", "=", "thresholdRed"}], ",", 
       RowBox[{"thGreen", "=", "thresholdGreen"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"thresholdRed", ",", "0.01", ",", "0.5", ",", "0.005"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"thresholdGreen", ",", "0.01", ",", "0.5", ",", "0.001"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.647284738342332*^9, 3.6472847566733804`*^9}, {
   3.6472870495625267`*^9, 3.6472870798832607`*^9}, {3.6476066050868835`*^9, 
   3.6476066416629763`*^9}, {3.647616071455329*^9, 3.6476160716063375`*^9}, {
   3.647620819450899*^9, 3.64762084254622*^9}, {3.648402606340046*^9, 
   3.6484026099952545`*^9}, {3.6484045377655168`*^9, 3.648404538013531*^9}, {
   3.648404585229232*^9, 3.648404587589367*^9}, {3.648568868680708*^9, 
   3.6485689240248733`*^9}, 3.648568962481073*^9, {3.65524317128572*^9, 
   3.6552431720297623`*^9}, {3.70266730914184*^9, 
   3.702667309451858*^9}},ExpressionUUID->"e26d1601-8c67-4f77-a85d-\
b7c5edbc340b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myRefBeadsRedImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myRefBeadsRedImg", ",", "thRed"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myGreenPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myRefBeadsGreenImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myRefBeadsGreenImg", ",", "thGreen"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<   `` red particles and `` green particles were found.\>\"", ",", 
   RowBox[{"Length", "@", "myRedPosGuess"}], ",", 
   RowBox[{"Length", "@", "myGreenPosGuess"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6472871195535297`*^9, 3.6472871600828476`*^9}, {
  3.6472872536111975`*^9, 3.647287254323238*^9}, {3.647291607334216*^9, 
  3.647291611030427*^9}, {3.64760669330293*^9, 3.647606693582946*^9}, {
  3.647606739886594*^9, 3.6476068095835805`*^9}, {3.6476161035591655`*^9, 
  3.6476161113906136`*^9}, {3.647616714199092*^9, 3.64761671451111*^9}, {
  3.6476208578180933`*^9, 3.647620903682717*^9}, {3.648383804191662*^9, 
  3.648383913465254*^9}, {3.648384596706857*^9, 3.648384602902068*^9}, {
  3.648388533593933*^9, 3.648388542173948*^9}, {3.648388651943741*^9, 
  3.648388653191743*^9}, {3.6484031152761555`*^9, 3.648403123347617*^9}, {
  3.6485687322569046`*^9, 
  3.64856879756064*^9}},ExpressionUUID->"c10728c6-f957-4d6b-993a-\
0b24851d3917"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"20\\\"}]\\) red particles and \
\\!\\(\\*RowBox[{\\\"19\\\"}]\\) green particles were found.\"\>",
  StringForm["   `` red particles and `` green particles were found.", 20, 19],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.648568985201372*^9, 3.6515235201513667`*^9, 3.653246218124297*^9, 
   3.6532527077294817`*^9, 3.6532552039882593`*^9, 3.653256957552557*^9, 
   3.6550425296257057`*^9, 3.6550575945573378`*^9, 3.655068691610053*^9, 
   3.655217274388502*^9, 3.655228553207613*^9, {3.6552432007644053`*^9, 
   3.6552432154442453`*^9}, 3.6553857869982815`*^9, 3.655646328235388*^9, 
   3.655820969340288*^9, 3.6559035980123777`*^9, 3.6563471108824816`*^9, 
   3.6563627214073524`*^9, 3.6573794707367115`*^9, 3.66351859333272*^9, 
   3.6655118560080605`*^9, 3.665946320648436*^9, 3.665946353678325*^9, 
   3.66594638978139*^9, 3.6659464553431396`*^9, {3.6670006452102585`*^9, 
   3.6670006780331354`*^9}, {3.6761452388342323`*^9, 3.676145321048935*^9}, 
   3.6761453609462166`*^9, 3.6761464958351283`*^9, 3.6783201265379095`*^9, 
   3.7026673472260184`*^9, 3.7088149561854625`*^9, 3.713665244365506*^9, 
   3.7151036992870455`*^9, 3.7172612538728075`*^9, 3.7172760508300533`*^9, 
   3.717440488591755*^9, 3.717441278619813*^9, {3.7186374483658915`*^9, 
   3.718637480311954*^9}, 3.733241520700554*^9, 3.771174562600373*^9, {
   3.77342713591558*^9, 3.773427172025024*^9}, {3.7734272235248103`*^9, 
   3.77342727939942*^9}, {3.7745205064866505`*^9, 3.7745205227731934`*^9}, {
   3.774520558809702*^9, 3.7745205848463664`*^9}, 3.7765463447114077`*^9, 
   3.776546385409731*^9, 3.776546808474712*^9, 3.777391834560398*^9, 
   3.7782702047318125`*^9, 
   3.778270261424819*^9},ExpressionUUID->"75d9c320-c648-4a8d-a52b-\
11bf941ea66f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedAbsPos", "=", 
   RowBox[{"BeadsFitting", "[", 
    RowBox[{"myRefBeadsRedImg", ",", "myRedPosGuess", ",", "7"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myGreenAbsPos", "=", 
   RowBox[{"BeadsFitting", "[", 
    RowBox[{"myRefBeadsGreenImg", ",", "myGreenPosGuess", ",", "7"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "myTfFuncError", ",", "myTfFunc", ",", "distanceRaw", ",", 
     "distanceCorrected"}], "}"}], "=", 
   RowBox[{"BeadsTransform", "[", 
    RowBox[{"myRedAbsPos", ",", "myGreenAbsPos", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"myTfFuncError", ",", "myTfFunc", ",", 
   RowBox[{
    RowBox[{"Insert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"distanceRaw", ",", "distanceCorrected"}], "}"}], "//", 
       "Transpose"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distance Before Correction\>\"", ",", 
        "\"\<Distance After Correction\>\""}], "}"}], ",", "1"}], "]"}], "//",
     "TableForm"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.6472917775439515`*^9, 3.6472918674140916`*^9}, {
   3.6472919395192156`*^9, 3.6472921294710803`*^9}, {3.64729216005583*^9, 
   3.647292204343363*^9}, {3.64729223768727*^9, 3.6472922638717675`*^9}, {
   3.6472923420242376`*^9, 3.647292344791396*^9}, {3.647292377799284*^9, 
   3.647292382471551*^9}, {3.647292597439847*^9, 3.6472926420633993`*^9}, {
   3.6476167011113434`*^9, 3.6476168305597477`*^9}, 3.647619593401773*^9, {
   3.6476200713801117`*^9, 3.647620079346567*^9}, {3.647620137890916*^9, 
   3.6476201587781105`*^9}, {3.6476209285711403`*^9, 3.647620985123375*^9}, {
   3.647621041082576*^9, 3.647621051891194*^9}, {3.647710782554494*^9, 
   3.647710782794508*^9}, {3.648384062470116*^9, 3.6483840627509165`*^9}, {
   3.6483842823091035`*^9, 3.6483842897503166`*^9}, {3.64838861160007*^9, 
   3.6483886246104927`*^9}, {3.648389210430524*^9, 3.6483892208045425`*^9}, {
   3.6483912901037827`*^9, 3.6483913257040453`*^9}, {3.6483913568583*^9, 
   3.648391371119725*^9}, {3.648391426798223*^9, 3.648391471012701*^9}, {
   3.6483917247137585`*^9, 3.6483917651700726`*^9}, {3.6484010898193054`*^9, 
   3.6484011325947523`*^9}, {3.6484011932102194`*^9, 3.64840120301078*^9}, {
   3.6485690330251074`*^9, 3.648569059400616*^9}, {3.6485690926485176`*^9, 
   3.6485690984008465`*^9}, {3.6485691294816246`*^9, 3.648569207153067*^9}, {
   3.6485692641953297`*^9, 3.648569271000719*^9}, {3.6485693716974783`*^9, 
   3.648569381953065*^9}, {3.6515236902010927`*^9, 3.6515237054009624`*^9}, {
   3.651524094618224*^9, 
   3.6515240992494893`*^9}},ExpressionUUID->"97eb1b14-5102-4bac-ac45-\
dcf3a432b5f8"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*FractionBox[\\\"1.7542586056843025`*^-307\\\", \\\"109.5`\\\"]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"",2,134,1,32418264740656559826,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.778270266155612*^9},ExpressionUUID->"ffb6e575-0cd4-45e2-959d-\
faaca337de7d"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*SuperscriptBox[\\\"0.0013735993397209817`\\\", \\\"109.5`\\\"]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"",2,134,2,32418264740656559826,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.778270266171234*^9},ExpressionUUID->"aa304745-b9f0-41b6-907b-\
f38d95cedd2d"],

Cell[BoxData[
 TemplateBox[{
  "General","munfl",
   "\"\\!\\(\\*FractionBox[\\\"5.0602875761630154`*^-307\\\", \\\"109.5`\\\"]\
\\) is too small to represent as a normalized machine number; precision may \
be lost.\"",2,134,3,32418264740656559826,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.778270266249342*^9},ExpressionUUID->"323c0688-c340-419f-a4ca-\
bfafb08cc925"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"General\\\", \
\\\"::\\\", \\\"munfl\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,134,4,32418264740656559826,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{
  3.7782702663430686`*^9},ExpressionUUID->"478161f9-367e-4206-a9d1-\
6023a44e7a5d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.10742100600125493`", ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"1.0019222745838088`", 
         RowBox[{"-", "0.004740230150030335`"}], "2.9362477884257734`"},
        {"0.0031746350051068805`", "1.0035866555136628`", 
         RowBox[{"-", "1.5296803906358158`"}]},
        {"1.0147311595843274`*^-6", "6.17354946582635`*^-8", "1.`"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   TagBox[GridBox[{
      {"\<\"Distance Before Correction\"\>", "\<\"Distance After Correction\"\
\>"},
      {"1.5602828744101385`", "0.15182954773950436`"},
      {"1.366843519376112`", "0.12485701803335685`"},
      {"1.6393778378711819`", "0.020618971282531196`"},
      {"0.9678717306149347`", "0.038849512834638646`"},
      {"1.3592096514417589`", "0.13454771037337096`"},
      {"1.4205703353228945`", "0.1306986090091003`"},
      {"1.0127490238753851`", "0.1784487574282157`"},
      {"1.4172891793053721`", "0.25517176951469556`"},
      {"1.8280588027431464`", "0.08589546049510684`"},
      {"1.676887839654676`", "0.054211864017138935`"},
      {"1.8046050090297445`", "0.17214368872349284`"},
      {"2.41014411107482`", "0.03430448284210807`"},
      {"2.140913168250913`", "0.21377429167331022`"},
      {"2.264447230266396`", "0.08965643600658219`"},
      {"2.9555780752147034`", "0.0135785880881711`"},
      {"2.785194839453952`", "0.08435776070020576`"},
      {"3.2153191101015532`", "0.10183986365815037`"},
      {"3.1102021653129635`", "0.12742958839321952`"},
      {"3.1328464925759394`", "0.028785193210944155`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6635185995400753`*^9, 3.665511858304192*^9, 3.6659463234365954`*^9, 
   3.6659463606367235`*^9, 3.6659464052352743`*^9, 3.665946457019236*^9, 
   3.6670006489394712`*^9, 3.6670006805312786`*^9, 3.676145241122363*^9, {
   3.676145278987529*^9, 3.6761453621992884`*^9}, 3.676146497711236*^9, 
   3.6783201296460867`*^9, 3.7026673805329237`*^9, 3.708814959763754*^9, 
   3.713665246278051*^9, 3.715103702726384*^9, 3.7172612562908115`*^9, 
   3.717276052873657*^9, 3.7174404908325596`*^9, 3.717441280242216*^9, 
   3.7186374516976976`*^9, 3.7186374818155565`*^9, 3.7332415222925587`*^9, 
   3.771174564426576*^9, 3.7734271414126606`*^9, 3.7734271762148333`*^9, 
   3.7734272437797284`*^9, 3.773427285799102*^9, 3.774520528162259*^9, 
   3.774520587665322*^9, 3.776546388067443*^9, 3.776546814928611*^9, 
   3.7773918364770546`*^9, 
   3.778270267632159*^9},ExpressionUUID->"89582868-b7b6-4088-96f7-\
0069321d4064"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
     "\"\<TransformationFunction.m\>\""}], ",", "myTfFunc"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"40989a75-87c4-43a7-96d2-93085f09d702"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTfFuncInv", "=", 
   RowBox[{"InverseFunction", "@", "myTfFunc"}]}], ";"}]], "Input",ExpressionU\
UID->"4cd80e42-06e4-4a13-b5d5-cb3c20a2bdb9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Running z-average (use this if you want to make a running average of the \
movie; I usually do not do a rolling average so I leave the avgFrameN = 1)\
\>", "Subsection",
 CellChangeTimes->{{3.642337220641624*^9, 3.642337230681198*^9}, {
   3.678313774559597*^9, 3.6783137753366413`*^9}, 3.6783160899130273`*^9, {
   3.779215790319173*^9, 
   3.7792158121754227`*^9}},ExpressionUUID->"f743aeb4-469a-453b-a5ba-\
79bf05690df0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgFrameN", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myMaxN", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
     "myColMovie", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], "-", "avgFrameN", "+", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myColMovieRunAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{
       RowBox[{"ImageAdd", "[", 
        RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", 
          RowBox[{"j", ";;", 
           RowBox[{"j", "+", "avgFrameN", "-", "1"}]}]}], 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"1", "/", "avgFrameN"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
      RowBox[{"channel", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
     RowBox[{
      RowBox[{"ImageAdjust", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "threshold"}], "}"}]}], "]"}], "&"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"channel", ",", "1", ",", 
      RowBox[{"Length", "[", "myColMovieRunAv", "]"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"threshold", ",", "0", ",", "0.2", ",", "0.001"}], "}"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6423382732288284`*^9, 3.6423382777220855`*^9}, {
   3.642338308730859*^9, 3.6423383088428655`*^9}, {3.6423386993952036`*^9, 
   3.6423387003632593`*^9}, {3.6423387599876695`*^9, 3.642338760298687*^9}, {
   3.642338798179854*^9, 3.6423388086594534`*^9}, {3.6483102143678484`*^9, 
   3.6483102325378737`*^9}, {3.6515228854160624`*^9, 
   3.6515228856970778`*^9}, {3.678313684729459*^9, 3.6783136848644667`*^9}, {
   3.678313715858239*^9, 3.6783137159772463`*^9}, {3.678648513961624*^9, 
   3.6786485140406284`*^9}, {3.6786530916647177`*^9, 3.6786530917427177`*^9}, 
   3.7174404993405747`*^9},ExpressionUUID->"3bf28e00-a76c-40cd-9c7b-\
81c7e758eec4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking Transformation Function", "Subsection",
 CellChangeTimes->{{3.6483887123676476`*^9, 
  3.6483887334296846`*^9}},ExpressionUUID->"1ef6a2c0-01ce-47ca-9f73-\
afd665781551"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorCombine", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ConstantImage", "[", 
        RowBox[{"0", ",", "myDims"}], "]"}]}], "}"}], "]"}], "//", 
    "ImageAdjust"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose an image to check the transformation function and CLICK\>\"", 
     ",", 
     RowBox[{"nCheckImg", "=", "data"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"data", ",", "1", ",", 
     RowBox[{"Length", "[", "myFiles", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.648404118652545*^9, 3.648404125492936*^9}, {
  3.64856940301727*^9, 
  3.6485694140098987`*^9}},ExpressionUUID->"2f0ebc76-9d71-42ae-9081-\
16fa03037457"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCheckBeadsRedImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nCheckImg", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myCheckBeadsGreenImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nCheckImg", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myCheckBeadsRedImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdRed"}], "]"}], "&"}]}], ",", 
       RowBox[{"myCheckBeadsGreenImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdGreen"}], "]"}], "&"}]}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Choose thresholds and CLICK\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"thcRed", "=", "thresholdRed"}], ",", 
       RowBox[{"thcGreen", "=", "thresholdGreen"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"thresholdRed", ",", "0.01", ",", "0.5", ",", "0.005"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"thresholdGreen", ",", "0.01", ",", "0.5", ",", "0.005"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6483887532573195`*^9, 3.648388796801996*^9}, {
  3.648390090354471*^9, 3.6483900905260715`*^9}, {3.648401539475024*^9, 
  3.648401539675036*^9}, {3.648401584090576*^9, 3.648401584226584*^9}, {
  3.6484016287071285`*^9, 3.6484016531065235`*^9}, {3.648404129261152*^9, 
  3.648404129388159*^9}, {3.648404642357499*^9, 3.6484046502619514`*^9}, {
  3.6485694291687655`*^9, 3.648569447672824*^9}, {3.7026674353740606`*^9, 
  3.7026674356920786`*^9}},ExpressionUUID->"095f9840-cd50-495b-85b9-\
d847b530c2c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedCheckPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myCheckBeadsRedImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myCheckBeadsRedImg", ",", "thcRed"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myGreenCheckPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myCheckBeadsGreenImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myCheckBeadsGreenImg", ",", "thcGreen"}], "]"}]}], "]"}], 
      ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<   `` red particles and `` green particles were found.\>\"", ",", 
   RowBox[{"Length", "@", "myRedCheckPosGuess"}], ",", 
   RowBox[{"Length", "@", "myGreenCheckPosGuess"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.648388871717328*^9, 3.648388885414152*^9}, {
  3.648388936491642*^9, 3.648388950095866*^9}, {3.648390120868125*^9, 
  3.6483901256573334`*^9}, {3.6484015647394695`*^9, 3.6484015650184855`*^9}, {
  3.6484016700824947`*^9, 3.6484016702105017`*^9}, {3.64840316133979*^9, 
  3.6484031700442877`*^9}, {3.648569478513588*^9, 
  3.6485694871920843`*^9}},ExpressionUUID->"0b944e34-1bec-44e2-956d-\
8fb2511e507f"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"7\\\"}]\\) red particles and \
\\!\\(\\*RowBox[{\\\"7\\\"}]\\) green particles were found.\"\>",
  StringForm["   `` red particles and `` green particles were found.", 7, 7],
  Editable->False]], "Output",
 CellChangeTimes->{3.6485694876981134`*^9, 3.651523578047678*^9, 
  3.6522146179874964`*^9, 3.6783201839781947`*^9, 3.7026674506189322`*^9, 
  3.703441248860548*^9, 3.708815000326171*^9, 3.7136652879714665`*^9, 
  3.717441239123143*^9},ExpressionUUID->"8acfa498-b868-4af7-b01c-\
e3fbf8a9ab8e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Reading in Parameters (only if parameters exist)",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 CellChangeTimes->{{3.678552493212551*^9, 3.6785525007159805`*^9}, {
  3.6786508024734793`*^9, 3.678650831977167*^9}, {3.708815029062045*^9, 
  3.7088150299114723`*^9}},ExpressionUUID->"fb8a47fd-6da4-4bd6-a227-\
5c9fd8364fd1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myMaxN", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
     "myColMovie", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], "-", "avgFrameN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myColMovieRunAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{
       RowBox[{"ImageAdd", "[", 
        RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", 
          RowBox[{"j", ";;", 
           RowBox[{"j", "+", "avgFrameN", "-", "1"}]}]}], 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"1", "/", "avgFrameN"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6786492212580795`*^9, 
  3.6786492291705313`*^9}},ExpressionUUID->"1dcbdac5-4bef-403d-a1f2-\
1db00ed03ac4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"redRunAvp", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redspots.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678649299490554*^9, 3.678649305386891*^9}, {
  3.6786493359696407`*^9, 3.6786493362346554`*^9}, {3.771102207764485*^9, 
  3.7711022122879486`*^9}},ExpressionUUID->"dc84fcc4-1460-47e0-988d-\
250acd3a0578"],

Cell["\<\
Syntax::sntue: Unexpected end of file (probably unfinished expression)  (line \
43001 of \"C:\\Users\\TSlab\\Dropbox\\Work Folder\\Postdoc\\Munsky \
Lab\\_mirroredFiXiE\\20190909_u2os_multiplex\\smFLAG-KDM5B\\Analysis\\MAX_\
Cell01_redspots.dat\").\
\>", "Message", "MSG",
 CellChangeTimes->{3.7715911872997417`*^9, 3.7723637130689898`*^9, 
  3.7728102473483467`*^9, 
  3.7774069069475145`*^9},ExpressionUUID->"52f2c0fa-d963-4b60-9708-\
e5c35a56651d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myredtracks", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redtracks.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678649274450122*^9, 3.6786492825785866`*^9}, {
  3.678649317097561*^9, 3.6786493250110135`*^9}, {3.6786493763939524`*^9, 
  3.678649387642596*^9}, {3.678649458082625*^9, 3.6786494586896596`*^9}, {
  3.771102216304854*^9, 
  3.7711022167532787`*^9}},ExpressionUUID->"cd3a86f1-4c3c-47a9-a543-\
0c5797c13513"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",ExpressionUUID->"3a1d404a-9293-4e5e-9560-50b066a643a4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.772810268790841*^9},ExpressionUUID->"c70db2e7-290a-4a7f-b72f-\
e9b9965f3c72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTfFunc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
     "\"\<TransformationFunction.m\>\""}], "]"}]}], ";"}]], "Input",Expression\
UUID->"0ff34014-0a5e-4ec4-9f9b-8e4f2a2d5f58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTfFuncInv", "=", 
   RowBox[{"InverseFunction", "@", "myTfFunc"}]}], ";"}]], "Input",ExpressionU\
UID->"d6fd1693-b025-424e-ad51-b08f9b81b136"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mymask", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_mymask.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.714220631806486*^9, 
  3.714220643566139*^9}},ExpressionUUID->"2b92866b-8c10-43b1-91a7-\
36668309d539"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myNucMask", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_myNucMask.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7142206571639643`*^9, 
  3.7142206813786507`*^9}},ExpressionUUID->"97a8fa9c-041f-473e-a520-\
bb71c230a432"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myCytMask", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_myCytMask.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.714220674839081*^9, 
  3.7142206870316353`*^9}},ExpressionUUID->"3394fbd5-bddc-42fa-af4e-\
1703fc5e73f9"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myCytImg", "=", "myCytMask"}], ";"}]], "Input",
 CellChangeTimes->{{3.708859060029485*^9, 3.7088590654881086`*^9}, {
  3.7142206960564213`*^9, 
  3.7142207023932724`*^9}},ExpressionUUID->"d2dd280a-03bd-4cc9-8f49-\
49d362d71cfc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myNucImg", "=", "myNucMask"}], ";"}]], "Input",
 CellChangeTimes->{{3.7088590665037146`*^9, 3.708859072175701*^9}, {
  3.7142207059432287`*^9, 
  3.7142207104993343`*^9}},ExpressionUUID->"15fc0a6b-52a7-4ae9-8945-\
d0cf33253bf5"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Find Red Particles from Running z - averaged Movie (Red laser) \
\>", "Subsection",
 CellChangeTimes->{{3.648582517877397*^9, 3.648582532363226*^9}, {
   3.678314933279872*^9, 3.6783149871069503`*^9}, 
   3.6783160864648304`*^9},ExpressionUUID->"74092ba4-b9e9-4e9c-b1da-\
bdd3d77af0d9"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"redRunAvp", " ", "is", " ", "list", " ", "of", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "y1"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x2", ",", "y2"}], "}"}], "..."}], ".", 
      RowBox[{"{", 
       RowBox[{"xn", ",", "yn"}], "}"}]}]}], "}"}], " ", "in", " ", "each", 
   " ", "frame"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.648310502039258*^9, 
  3.6483105068292646`*^9}},ExpressionUUID->"1de773a5-6098-41ac-89a5-\
38a4ebdfd215"],

Cell["Adjust threshold to see spots nicely", "Text",
 CellChangeTimes->{{3.7794579862239857`*^9, 
  3.779457996768589*^9}},ExpressionUUID->"171954f8-5bdc-4460-8707-\
56d0a33b07d3"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"ImageAdjust", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"threshold1", ",", "threshold2"}], "}"}]}], "]"}], "&"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose threshold such that the dots appear nicely and CLICK\>\"", 
     ",", 
     RowBox[{"thred", "=", 
      RowBox[{"{", 
       RowBox[{"threshold1", ",", "threshold2"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frame", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{
      "myColMovieRunAv", "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold1", ",", "0.001"}], "}"}], ",", "0", ",", "0.4", ",", 
     "0.001"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold2", ",", "0.03"}], "}"}], ",", "0", ",", "0.4", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7782723283809314`*^9},ExpressionUUID->"d63b4c24-125b-4bbb-a0e9-\
748f03ae5837"],

Cell["\<\
Choose a threshold setting to where you can see nice well defined spots that \
match the left image\
\>", "Text",
 CellChangeTimes->{{3.779458062784365*^9, 
  3.779458079792338*^9}},ExpressionUUID->"0d8d2386-1da6-47fc-a0ab-\
9c1955c5a836"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"BandPass", "[", 
        RowBox[{
         RowBox[{"ImageMultiply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", "//",
             " ", 
            RowBox[{
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
               "thred"}], "]"}], " ", "&"}]}], ",", "mymask"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"lowpass", ",", "hipass"}], "}"}]}], "]"}], "//", 
       "ImageData"}], "//", "Max"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"imgb", "=", 
     RowBox[{"BandPass", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", " ", "frame"}], "\[RightDoubleBracket]"}], " ", "//",
         " ", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
           "thred"}], "]"}], " ", "&"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"lowpass", ",", "hipass"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", " ", 
         RowBox[{
          RowBox[{"ImageAdjust", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
            "thred"}], "]"}], "&"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"SelectComponents", "[", 
         RowBox[{
          RowBox[{"ImageMultiply", "[", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"imgb", ",", 
              RowBox[{"max", " ", "threshold"}]}], "]"}], ",", "mymask"}], 
           "]"}], ",", "\"\<Count\>\"", ",", 
          RowBox[{
           RowBox[{"lo", "<", "#", "<", "hi"}], "&"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Choose parameters and CLICK\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mymaxred", "=", "max"}], ",", 
       RowBox[{"bandpassred", "=", 
        RowBox[{"{", 
         RowBox[{"lowpass", ",", "hipass"}], "}"}]}], ",", 
       RowBox[{"thred2", "=", "threshold"}], ",", 
       RowBox[{"dotsizered", "=", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold", ",", "0.1"}], "}"}], ",", "0", ",", "0.4", ",", 
     "0.01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lowpass", ",", "1"}], "}"}], ",", "0", ",", "10", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"hipass", ",", "7"}], "}"}], ",", "0", ",", "10", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lo", ",", "5"}], "}"}], ",", "0", ",", "20", ",", "1"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"hi", ",", "100"}], "}"}], ",", "50", ",", "200", ",", "1"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.655156342343388*^9, 3.6551563855198574`*^9}, {
   3.6551569541843834`*^9, 3.6551569562885036`*^9}, {3.655157024720418*^9, 
   3.655157031384799*^9}, {3.65515707720842*^9, 3.655157094113387*^9}, {
   3.655209648674336*^9, 3.655209654147649*^9}, {3.655209687963583*^9, 
   3.655209718291318*^9}, {3.6552195662525887`*^9, 3.65521958129945*^9}, {
   3.6552198314277563`*^9, 3.655219859378355*^9}, {3.6552208955876226`*^9, 
   3.6552210658043585`*^9}, {3.6552247276228027`*^9, 
   3.6552247439917383`*^9}, {3.6552921896374087`*^9, 
   3.6552922480687513`*^9}, {3.6552923080771832`*^9, 3.655292327054269*^9}, {
   3.6552927204457693`*^9, 3.655292790844796*^9}, {3.6552929072794557`*^9, 
   3.655292943668537*^9}, {3.6552930057180862`*^9, 3.6552930359018126`*^9}, {
   3.6552930800953403`*^9, 3.6552930930210795`*^9}, {3.655293177245897*^9, 
   3.655293196566002*^9}, {3.6552932696371813`*^9, 3.6552933387971373`*^9}, {
   3.655293386239851*^9, 3.6552933890070086`*^9}, {3.655293444293171*^9, 
   3.6552934504225216`*^9}, {3.6553852703427305`*^9, 3.655385282727439*^9}, {
   3.655385448528922*^9, 3.655385450655044*^9}, {3.6553868241846056`*^9, 
   3.655386824280611*^9}, {3.65564328578937*^9, 3.655643291765712*^9}, 
   3.656170007881769*^9, {3.678314318159689*^9, 3.6783143273252134`*^9}, 
   3.70266762559094*^9, 
   3.776546947666997*^9},ExpressionUUID->"ad5aac45-29f0-46e1-8509-\
d6223f3775b2"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"redRunAvp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FindParticlesWeighted", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "i"}], "\[RightDoubleBracket]"}], "//", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
         "&"}]}], ",", "bandpassred", ",", "mymaxred", ",", "thred2", ",", 
       "mymask", ",", "dotsizered"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<   `` red particles were found.\>\"", ",", 
   RowBox[{
    RowBox[{"redRunAvp", "//", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Length"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6416671590710993`*^9, 3.641667160981102*^9}, 
   3.6416672208711853`*^9, {3.641667289681282*^9, 3.641667293321287*^9}, {
   3.641667594711709*^9, 3.6416675968717117`*^9}, {3.6416676942218485`*^9, 
   3.6416676965618515`*^9}, {3.641667731801901*^9, 3.6416677801319685`*^9}, {
   3.641667834062044*^9, 3.6416678341320443`*^9}, {3.6416678809021096`*^9, 
   3.6416679270121746`*^9}, {3.6419201148249674`*^9, 3.641920115121368*^9}, {
   3.641921141663178*^9, 3.641921157093605*^9}, {3.6419220920442543`*^9, 
   3.641922096739862*^9}, {3.6419228275921583`*^9, 3.641922829776162*^9}, {
   3.642340312445465*^9, 3.6423403442652845`*^9}, 3.642704345076248*^9, {
   3.642726079737813*^9, 3.642726082409751*^9}, {3.642792989459677*^9, 
   3.642792992539853*^9}, {3.6428827624754*^9, 3.6428827661706114`*^9}, {
   3.6440627900178404`*^9, 3.644062792687993*^9}, {3.644062842960869*^9, 
   3.644062858231742*^9}, {3.648308689078539*^9, 3.6483087109765697`*^9}, {
   3.6484755081417904`*^9, 3.6484755158372307`*^9}, {3.648475893885854*^9, 
   3.648475894221873*^9}, {3.6485787564642563`*^9, 3.6485787724401703`*^9}, {
   3.648578865240478*^9, 3.648578892761052*^9}, {3.648578994033845*^9, 
   3.6485790123688936`*^9}, {3.6485850086688623`*^9, 3.648585011277011*^9}, {
   3.648585278382289*^9, 3.648585281013439*^9}, {3.6491771572658987`*^9, 
   3.64917716035609*^9}, {3.6514995376416454`*^9, 3.6514995401737905`*^9}, 
   3.6532316008052344`*^9, 3.6532460744960823`*^9, 3.6532524994165664`*^9, {
   3.655058313586464*^9, 3.655058315713586*^9}, {3.6552247012882957`*^9, 
   3.655224702843385*^9}, {3.655225079158909*^9, 3.6552250959988728`*^9}, {
   3.655225342662981*^9, 3.655225342918995*^9}, {3.655385627791176*^9, 
   3.6553856300433044`*^9}, {3.6561736238625917`*^9, 
   3.6561736249116516`*^9}, {3.6786485529138517`*^9, 
   3.6786485710498896`*^9}, {3.708252364800526*^9, 3.7082523648942785`*^9}, {
   3.708257068603965*^9, 
   3.708257092495367*^9}},ExpressionUUID->"c1c20ab6-1a66-42a9-8e2b-\
c99d2440be88"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"66417\\\"}]\\) red particles \
were found.\"\>",
  StringForm["   `` red particles were found.", 66417],
  Editable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVz2lI03EcBvBpBTpQl6BNnSwP5sK8JqV59lubyzBBV7ZMKrTSrNzywDwx
FfGeSzGHR84rITSzzAjxzgscHjM11NRsIL+/S0wQyaPf98XD583zvHhsIqWh
D/VoNJqUZGbHyUgTjVEpYxEFxmDUaBLmLarE6PO9FO7Aa4wMNrcugsWlZ1PB
QqvwkK16jGgSw3iwTqMz1BEPWzcswP7VsrhtYmHDeIqTCqNVOqsbXGDuntdr
wGiC1eQFZg06XgHnWuhR4A7L6rQ+0diQ7w56LLkVH7dhJJHsTum1Y1TFN/hj
20F2fSHjfKKma9bTvhMjdho7A5R6cHITic59Dm3gShX3F9jn0G2QRPxdihzB
yo6UYPCBOl4GqlnJ6WBhYLgS7DigfwU/vHT6CR5su/3r+UT6zoyAb0RBTvhm
fg9GuTzxHlhRrTIvIFoys/xB5d38p+C50Vs21QMYMcv9vMDS5j1hDXFG6ZJT
TyxiR1WDseXeNBUxGs3LG4nDJh6hTUQp8s8CK0riMDhmGuDAHsRIZ+oaCMr6
FEmg6+PlVrA99HK6LdHSJbhyaAgj/n6MDtQ/lWg2TBz1qb0A7rYURIIywQrX
YoT81otT5BOfJKhnwUih1LSA6Mmjh4Pzf8V54FXO+AQ4SvMtqp3E6GgvQgGm
FnMSqqYwCqJn1YFWCu00qFbFX38+jREKybwDpkb4dKmZFFr6yF+miMNt2vsx
VhQq6bc7UULMLGvUgjqN6bNy8LaxgsGi0EIwmve1ppDyLfVezKaQOY/neINY
rzgpBCXrS73go0ie7U3iQpBsH0xvdmOEEd9YJxu42VFI/xLvDFij+66atKfQ
htGaUA1y1GLwyLhFNEsU+VU2gRIz52ENMe/aEG2OKIjN9gR71t7JUzkUOvxS
IUojdsq35KBgMU4Ljrwac08ncrMTCsH2dZtZ8MexjJlBZLxg5/ZyKfQf6DPH
iA==
  "],ExpressionUUID->"90ad8aaf-6cef-4995-8a82-2fa2d86d39ae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"redComponentMask", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageTransformation", "[", 
      RowBox[{
       RowBox[{"FindParticlesWeightedMask", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "i"}], "\[RightDoubleBracket]"}], "//", 
          RowBox[{
           RowBox[{"ImageAdjust", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}],
            "&"}]}], ",", "bandpassred", ",", "mymaxred", ",", "thred2", ",", 
         "mymask", ",", "dotsizered"}], "]"}], ",", "myTfFuncInv", ",", 
       RowBox[{"DataRange", "\[Rule]", "Full"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.708256750602844*^9, 3.7082567908996572`*^9}, {
  3.7082571018227262`*^9, 3.7082571287134533`*^9}, {3.7082578925158763`*^9, 
  3.708257893190201*^9}, {3.708584356025682*^9, 3.7085843756888323`*^9}, {
  3.7085858710205374`*^9, 3.708585874580758*^9}, {3.708585926807132*^9, 
  3.7085859272551336`*^9}},ExpressionUUID->"dc4889ed-ddff-4d0d-9648-\
82ac7a77e081"],

Cell["\<\
This will show you the red spots that are being found in each frame (this has \
not linked them up yet)\
\>", "Text",
 CellChangeTimes->{{3.779458183280257*^9, 
  3.779458197984098*^9}},ExpressionUUID->"435ac3ee-042a-49e5-86ac-\
dd46b650c88f"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
      RowBox[{
       RowBox[{"ImageAdjust", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
       "&"}]}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Circle", "[", 
           RowBox[{"#", ",", "7"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
          "redRunAvp", "\[LeftDoubleBracket]", "frame", 
           "\[RightDoubleBracket]"}], ")"}]}]}], "}"}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<CLICK if you want to save this dataset\>\"", ",", 
     RowBox[{
      RowBox[{"redRunAvp", ">>", 
       RowBox[{"analysisFolder", "<>", "\"\<_redspots.dat\>\""}]}], ";", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"analysisFolder", "<>", "\"\<_redComponentMask.tif\>\""}], 
        ",", "redComponentMask"}], "]"}], ";"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6484729196047344`*^9, 3.6484729346525955`*^9}, {
   3.6484732663805685`*^9, 3.648473273579981*^9}, {3.648473375579815*^9, 
   3.6484734015733013`*^9}, {3.651499239413588*^9, 3.6514992801819196`*^9}, {
   3.6550583209618855`*^9, 3.655058323098008*^9}, {3.6558511741399035`*^9, 
   3.655851183930464*^9}, {3.6786485847056704`*^9, 3.67864859710238*^9}, {
   3.7083821491925735`*^9, 3.7083821580510836`*^9}, 3.7083824341543827`*^9, {
   3.708382475808323*^9, 
   3.7083824842332134`*^9}},ExpressionUUID->"edf53add-5087-481b-b83f-\
56ca39777f66"],

Cell["Just a plot to visualize the number of spots per frame", "Text",
 CellChangeTimes->{{3.779458207264629*^9, 
  3.7794582250396457`*^9}},ExpressionUUID->"5bdc333d-dfbd-4717-a7e6-\
d9c8fddc7019"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rSpotNPlot", "=", 
  RowBox[{
   RowBox[{"Length", "/@", "redRunAvp"}], "//", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.6552256984433303`*^9, 3.6552257065547943`*^9}, {
  3.70881642686051*^9, 3.7088164766993337`*^9}, {3.772466055662245*^9, 
  3.7724660569948854`*^9}, {3.778275490147872*^9, 
  3.778275491771949*^9}},ExpressionUUID->"6755a142-98f4-4af9-875b-\
5dead15e34aa"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdmElyHEUUQAtWLHvBggWLgiAIgiCIZp5xMRpjwI0HjOWpLI+yLbsl4XGV
R9ARasEBdIQ6Qh+hjtBHIKDfS+J/bTJe/Tnz59B6bfvh6ZsvNk3z9wtN8++4
+Vsf+2/obnZ8YJRf2oyTPNuMw3X45c3YK3+li/5eRV9u0b8Bvw7fgt9glN8k
vvHeSvm9TTz9vZPk7yaeM+rvvZT/+5uxlT8gf/U/TPV8RH7G/zjF+yTl9yn2
8meM1vs5+Sj/gnxuw18il7/Cv/x1yu9Yqq9DHy5wo/03Md8CD+b37WYclcPF
fL/DHv0C1/n5nu/K4Vr/DzH/Atf++BE2fuLm+GZs9X881fcTcv3Dxfk5keKf
iPU0P2/GUf9w7feT+L+D/GSS/5Liy+b/a4xX4FH73zbjpByu/XCK78pPJftF
zKeDnd+yiPYjXPvv96jfwc5fSfIRrv15mvyND9f5hF2/Udb+TLKHG/sBdv3G
M9Ffczbm08F1Pc5G/RGu++cc8a3/XNQvST4q1/6PmF8H2/9FOfmNcPH8OQ9r
fz7mV2D7fVTf/vqT7/RnB7s/C1y0V27+F4jn/MnGhz0fxgsp/hbs/G1F/bIV
/Y1bMb/mYsynS1wupvhw7/xd4rv2l2J+RTY+7Ho2l7HTHq7nxeWU/+WYT3Ml
yjvY+6BcSfFl7a9uRvupgz2fy9UYb4Sd76aP+beJO5n17fsYv8DO36C+8fqY
36S9/XMNv+TTXov+Opn16uF63l2L+Q1w3e9JPmm/TfztmF/rd+PD9lsP1/6G
PZ8H/Vk/bL3GrecfdbnebeIusX3r+6MkdnT96rwxTsnOc7Ku/4303TqQe6/W
88G8XP8bcRyTXt23N+NoXNfB87++S6zDddGvfoyb5LWPrN942tlHfrcPnUfz
2Cb+rVhHvRedf/1dj3XI9Z5wHuiDWv/tmI99UufffUg+JfW194T1jvaZ85/s
mzsxf98p5tcpd5/6jrGPYPt6gN2n3ivugwl2nzY7jMaH7dduJ/rvd2I+Ba79
L7v+O7GeKflv7sLOP+x8dHejfQ/X941sfP1Zv0z+k/7h5l6KL3tuyfY/XPfx
vVjvION/vBfjTbLzfz/6b+F6jsvY97Lx4dp/sOfqeD/Fh+3PZhfGvt2N+h3s
fuxhz/2S7IfdmO+4G/OZkn7zAL/Gl43/IPrrYestsPfYADu/o/b2H1zvmYdR
v32Y4sPulz7JC1z3n/7gMelPsPdWs2Rkfmew93wLO/9z5ea3jPkvkr9eObxc
xnqK+vg7TP4G5fCR+Vif+uS7Sv4n7Zn/tfrYN3vooT/bi/HbvZjfXPZ8gO3H
RdLvk7/lXsy/wPbXYZIPyd+RbH/BvtNWxkN/SvWt9e/+2ycP7Gf7MV67H/Ob
J3m3H+Mt4Hpewd5vS/25/vpD/1B7/A3aw0ew599ofPyt4PpuS/K19u7/g5j/
7CDm18r2P+w7tYOdj4X6cK9/1z/5Lwex3kPZ/k/xjw5ifWPyt0r2k/F596+T
v+avGH8G1/MYdv7nsP3Swe7vhXL0e9h+XcLeL0V2/fVn/cZ3/6d8xuR/Jfve
sh701zLxm0exntmj6L+FPV/ncL2flWO/SPI+yZew51VR3/rNh3iD9taf9Efz
tX7Y9ZtSPetUT/MYP55/cP0dAzufc9j3Tvc4+lvA3u990l+q7/sB9jw6TPZD
4iPY99JovshXyf9k/uS31p/v/yfERz6D3Q8tbH/Pk373JNa3gOt7FXY+l7L1
q2/9Kd5gPOuX/Z2kPv5XKd4ke/7B9f/dT6N8Btf6Ye+3eeJOe/QXyb6HnY8l
7HqWp7G+Qxn9IcU7guv7MtmvjOf6J/laf9g3zyLPYNenfRbzn8P197H23v/K
3f+w9S6V468k/4dwvf+S/Aiu7zvY+3Vl/sinpL9O/pvnkWfPY74tbH/Mn8d8
uv/l/wDrwXjV
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 123.45},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 420.}, {127., 198.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7088164574144373`*^9, 3.708816477368363*^9}, 
   3.708817566307314*^9, 3.7088179129746695`*^9, 3.715103863445738*^9, 
   3.715108507942505*^9, 3.7151085773258753`*^9, 3.7162248924665375`*^9, 
   3.716290126292033*^9, 3.7172761059417515`*^9, 3.7172766530417867`*^9, 
   3.717440554248085*^9, 3.717440881535104*^9, 3.717441310153469*^9, 
   3.7174416133560157`*^9, 3.7174418920035105`*^9, 3.7174421697932158`*^9, 
   3.717442542536085*^9, 3.717442768671488*^9, 3.7174430319183593`*^9, 
   3.717443327432092*^9, {3.7186375368352804`*^9, 3.7186375443470964`*^9}, {
   3.7186545176234713`*^9, 3.718654524615284*^9}, {3.7227251962596054`*^9, 
   3.722725199988819*^9}, 3.7227253124122486`*^9, 3.722725561187478*^9, 
   3.7227258850960045`*^9, 3.7227262494118423`*^9, 3.725383950943302*^9, 
   3.725384151046747*^9, 3.7253862902021*^9, {3.7253949718986645`*^9, 
   3.7253949768509474`*^9}, 3.7253951723311286`*^9, 3.725395975286055*^9, 
   3.7254012220851545`*^9, 3.725402774246933*^9, 3.725403143817072*^9, {
   3.725403996619849*^9, 3.7254040000180435`*^9}, {3.7256543326699343`*^9, 
   3.7256543380072403`*^9}, 3.725654604724495*^9, {3.725654959391781*^9, 
   3.725654963322006*^9}, {3.725655371544355*^9, 3.725655376406633*^9}, {
   3.7256611564922347`*^9, 3.725661162278566*^9}, 3.7265153929307566`*^9, 
   3.726516098460204*^9, 3.7265164036665072`*^9, 3.726516654414195*^9, 
   3.7265170176829667`*^9, 3.7277392100922794`*^9, {3.72796737589651*^9, 
   3.7279673815166845`*^9}, {3.727967907062636*^9, 3.7279679265259666`*^9}, 
   3.7279684129226336`*^9, 3.727968980049556*^9, {3.7279693360927753`*^9, 
   3.7279693407839775`*^9}, {3.7279698821808243`*^9, 3.7279698898100414`*^9}, 
   3.7316803570203753`*^9, {3.7316804018390903`*^9, 3.7316804163651295`*^9}, 
   3.733242786643281*^9, {3.7332431260986614`*^9, 3.7332431366974945`*^9}, {
   3.7332435373720217`*^9, 3.7332435455702477`*^9}, 3.7336868933895454`*^9, 
   3.733687019401968*^9, 3.7711027498573337`*^9, {3.771164415844719*^9, 
   3.771164428575447*^9}, 3.772465950305168*^9, 3.772466057462886*^9, 
   3.7725409915385637`*^9, 3.7725428819857197`*^9, 3.772554141223503*^9, 
   3.772554392439864*^9, {3.7728103964331264`*^9, 3.7728104128394938`*^9}, 
   3.77342743871507*^9, 3.773427750041646*^9, {3.7745207673292475`*^9, 
   3.774520791394392*^9}, 3.774521743187362*^9, 3.7745219857716913`*^9, {
   3.774522908678932*^9, 3.7745229258081074`*^9}, {3.7745237277245665`*^9, 
   3.774523743021764*^9}, {3.774525589009605*^9, 3.7745256068430653`*^9}, 
   3.776547046890097*^9, {3.777391960403399*^9, 3.777391961263043*^9}, {
   3.7773932257206426`*^9, 3.777393249878333*^9}, 3.777403494560466*^9, 
   3.777403560796919*^9, 3.777404233422861*^9, 3.777405931987735*^9, 
   3.7774065448781834`*^9, {3.777407021541546*^9, 3.7774070325537043`*^9}, {
   3.777407452824517*^9, 3.777407468547745*^9}, 3.778270358908457*^9, {
   3.778271835449094*^9, 3.7782718496627564`*^9}, {3.7782724137859855`*^9, 
   3.7782724430937595`*^9}, {3.7782731021283712`*^9, 3.7782731245927186`*^9}, 
   3.7782737520282726`*^9, {3.77827441902677*^9, 3.778274440830553*^9}, {
   3.778274996255535*^9, 3.7782750166616735`*^9}, 3.7782755543231435`*^9, 
   3.7782756753074927`*^9, 
   3.7794581757208247`*^9},ExpressionUUID->"8860aaa2-12a8-4910-a40f-\
94427579f90f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linking red tracks", "Subsection",
 CellChangeTimes->{{3.64254041315073*^9, 3.642540414480732*^9}, {
  3.6425404664358053`*^9, 3.6425404781358213`*^9}, {3.642540880429388*^9, 
  3.6425408812693896`*^9}, {3.6425409505334873`*^9, 3.6425409508134875`*^9}, {
  3.6483100576456265`*^9, 
  3.6483100640456357`*^9}},ExpressionUUID->"f613f007-eadb-43f8-9a88-\
2721b84b678a"],

Cell["\<\
This will link the tracks; set the pixel jump size that you will allow to \
link red spots; you can get more artifactual linked tracks if the \
maxJumpDistRed is higher than 5; having it too low will cause you to have \
partial/fragmented tracks\
\>", "Text",
 CellChangeTimes->{{3.779458243023674*^9, 3.7794582801117954`*^9}, {
  3.7794584670724893`*^9, 3.779458474591919*^9}, {3.779458578160843*^9, 
  3.7794586415364676`*^9}, {3.779458681504754*^9, 
  3.779458696592617*^9}},ExpressionUUID->"4b7f20bb-30dc-46e0-b098-\
9c08dd2a7193"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxJumpDistRed", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"my488and561Interval", "=", "2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6484765380766993`*^9, 3.6484765505344114`*^9}, {
   3.6485791838487015`*^9, 3.648579204208866*^9}, {3.678316141946004*^9, 
   3.6783161778030543`*^9}, {3.67831628944344*^9, 3.6783162895144444`*^9}, {
   3.6783163214922733`*^9, 3.678316321762288*^9}, {3.6783163693640113`*^9, 
   3.6783163761714*^9}, {3.678316418771837*^9, 3.6783164188668423`*^9}, {
   3.6783164783402443`*^9, 3.678316478683264*^9}, {3.7711080326770816`*^9, 
   3.7711080565254884`*^9}, {3.771164388515616*^9, 3.77116440171408*^9}, 
   3.773427759122051*^9, {3.774520684381596*^9, 3.774520690034786*^9}, 
   3.7745229399254017`*^9, 3.7765502140039167`*^9, 3.7773919658282523`*^9, 
   3.778270428872538*^9, 3.7794584824333677`*^9, 3.779458565537121*^9, 
   3.7794586761614485`*^9},ExpressionUUID->"c8e6f53f-5935-4d16-9942-\
f44861f8cc23"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myredtracks", "=", 
   RowBox[{"LinkTracks2", "[", 
    RowBox[{"redRunAvp", ",", "maxJumpDistRed"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<`` red tracks were found by allowing `` pixel jump, and the average \
length of the tracks is ``\>\"", ",", 
   RowBox[{"myredtracks", "//", "Length"}], ",", "maxJumpDistRed", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Length", "/@", "myredtracks"}], ")"}], "//", "Mean"}], "//", 
    "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.642538579958152*^9, 3.642538586658161*^9}, {
   3.642538786164441*^9, 3.6425387862844415`*^9}, {3.642883694363701*^9, 
   3.6428836961238017`*^9}, {3.6428866887429695`*^9, 3.642886725174053*^9}, {
   3.642886823230662*^9, 3.642886828141943*^9}, {3.643139322152774*^9, 
   3.643139391104718*^9}, {3.64313945425633*^9, 3.6431394638798804`*^9}, {
   3.6431395717610507`*^9, 3.6431396151045303`*^9}, {3.6431400019896584`*^9, 
   3.643140002560691*^9}, {3.6431415705373745`*^9, 3.6431415942497306`*^9}, {
   3.6431416834658337`*^9, 3.6431416894341745`*^9}, {3.643141863171112*^9, 
   3.643141865746259*^9}, {3.643473089089744*^9, 3.643473106553743*^9}, {
   3.648475694477448*^9, 3.648475701765865*^9}, {3.648476554158619*^9, 
   3.6484765642621965`*^9}, {3.648477027086669*^9, 3.6484770373752575`*^9}, {
   3.648579056232402*^9, 3.6485790602726336`*^9}, {3.6485793513222804`*^9, 
   3.648579354025435*^9}, {3.6485854937596073`*^9, 3.6485855238063264`*^9}, {
   3.649177306571166*^9, 3.649177324329824*^9}, {3.649372827183387*^9, 
   3.649372830471014*^9}, {3.678648827753572*^9, 3.6786488625615625`*^9}, {
   3.708253323883111*^9, 3.7082533299185143`*^9}, 
   3.708257051402505*^9},ExpressionUUID->"c272c36d-7049-4368-a7c3-\
590c086115e2"],

Cell[BoxData[
 InterpretationBox["\<\"\\!\\(\\*RowBox[{\\\"4661\\\"}]\\) red tracks were \
found by allowing \\!\\(\\*RowBox[{\\\"5\\\"}]\\) pixel jump, and the average \
length of the tracks is \\!\\(\\*RowBox[{\\\"7.715726239004505`\\\"}]\\)\"\>",
  StringForm[
  "`` red tracks were found by allowing `` pixel jump, and the average length \
of the tracks is ``", 4661, 5, 7.715726239004505],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7026678688028507`*^9, 3.703441927994506*^9, 3.703442424311594*^9, 
   3.708251127075818*^9, 3.7082527541271524`*^9, 3.7082533318549423`*^9, 
   3.7083834554110856`*^9, 3.7088165160233593`*^9, 3.708817928496825*^9, 
   3.713665384953915*^9, 3.7142267587337275`*^9, 3.7151038949453297`*^9, 
   3.7151085843262167`*^9, 3.7162249078063645`*^9, 3.716290128335637*^9, 
   3.717276115058168*^9, 3.717276653915388*^9, 3.717440560373296*^9, 
   3.7174411425591717`*^9, 3.7174413127898736`*^9, 3.7174416162732205`*^9, 
   3.7174418945951157`*^9, 3.7174421721176205`*^9, 3.7174425450068903`*^9, 
   3.717442771822693*^9, 3.717443034648364*^9, 3.717443329647296*^9, 
   3.7186375545405183`*^9, {3.718654520150676*^9, 3.718654530605695*^9}, 
   3.722725203600025*^9, 3.722725315421421*^9, 3.7227255638706317`*^9, 
   3.7227258916303787`*^9, 3.7227262521419983`*^9, 3.725383952575395*^9, 
   3.7253841529638567`*^9, 3.725386295554406*^9, 3.7253949792700863`*^9, 
   3.7253951802835836`*^9, 3.725395977891204*^9, 3.725401224218277*^9, 
   3.7254027764560595`*^9, 3.7254031475772867`*^9, 3.7254040027251983`*^9, 
   3.725654340615389*^9, 3.7256546145480576`*^9, 3.725654967462243*^9, 
   3.7256553932385955`*^9, 3.725661164421688*^9, 3.7265159082460995`*^9, 
   3.7265161023026466`*^9, 3.7265164080432076`*^9, 3.726516663037414*^9, 
   3.7265170210833855`*^9, 3.7277392156369486`*^9, 3.7279673896534796`*^9, 
   3.727967936396201*^9, 3.72796841943005*^9, 3.72796899486971*^9, 
   3.727969356389282*^9, 3.727969897666215*^9, 3.73168042527678*^9, 
   3.733242788719887*^9, 3.7332431391951017`*^9, 3.733243549713657*^9, 
   3.7336870247226067`*^9, 3.771102764473042*^9, 3.7711644368439198`*^9, 
   3.7712470900893803`*^9, 3.772466121247198*^9, 3.772541070094386*^9, 
   3.772542992507468*^9, 3.772554489309278*^9, 3.773427781342312*^9, 
   3.7745208411833754`*^9, 3.77452203969451*^9, 3.7745229525038953`*^9, 
   3.774523797636753*^9, 3.774525612578313*^9, 3.7765470554698067`*^9, 
   3.7773919747201695`*^9, 3.777393322905697*^9, 3.777403630513981*^9, 
   3.777405976511125*^9, 3.777406584751506*^9, 3.77740707612813*^9, 
   3.7774074750403566`*^9, 3.7782704343117886`*^9, 3.778271865783908*^9, 
   3.7782724582506685`*^9, 3.7782731333412886`*^9, 3.77827376737921*^9, 
   3.778274454559265*^9, 3.7782750244507575`*^9, 3.778275688573907*^9, 
   3.779458263011818*^9, 3.7794585160652914`*^9, 3.7794585942707644`*^9, 
   3.779458706281171*^9},ExpressionUUID->"4cf8b8b8-79ed-46cf-84ca-\
b2a0b70d0b30"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myredtracks", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_redtracks.dat\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678648868490902*^9, 
  3.6786488727061434`*^9}},ExpressionUUID->"4824c533-30b6-46a0-8a38-\
ff3bbe52a29c"],

Cell["\<\
This will filter out shorter tracks, I find that anything >40 helps to ensure \
you are tracking real RNA and not spot noise\
\>", "Text",
 CellChangeTimes->{{3.7794585000163736`*^9, 
  3.7794585333762817`*^9}},ExpressionUUID->"b76c640d-905d-4b2d-80e8-\
6709266bba4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shortestTrackRed", "=", "41"}], ";"}]], "Input",
 CellChangeTimes->{{3.6484757566900063`*^9, 3.648475765734524*^9}, {
   3.65512178235567*^9, 3.6551217825156794`*^9}, {3.65515259338896*^9, 
   3.6551525935009665`*^9}, {3.655764080892455*^9, 3.6557640815724936`*^9}, {
   3.655846201517486*^9, 3.655846202325532*^9}, {3.6558477053505*^9, 
   3.6558477059905367`*^9}, {3.6670002780732594`*^9, 
   3.6670002785292854`*^9}, {3.6761449442743845`*^9, 3.676144944794414*^9}, 
   3.717442821723383*^9, {3.7711080649180903`*^9, 3.7711080860465403`*^9}, {
   3.771343771196644*^9, 3.771343835540076*^9}, {3.7713438656578064`*^9, 
   3.7713438818590665`*^9}, {3.7724659306999846`*^9, 3.772465936276458*^9}, {
   3.7734278008619566`*^9, 3.773427801167116*^9}, {3.774520700999058*^9, 
   3.7745207015614567`*^9}, {3.774522967181566*^9, 3.7745229750171003`*^9}, {
   3.779458536273447*^9, 
   3.7794585467690477`*^9}},ExpressionUUID->"1989ea12-a9e6-4397-a441-\
a003a1e42714"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mylongredtracks", "=", 
   RowBox[{"myredtracks", "//", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{"#", ",", 
       RowBox[{"x_", "/;", 
        RowBox[{
         RowBox[{"Length", "[", "x", "]"}], "<", "shortestTrackRed"}]}]}], 
      "]"}], "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<   `` red tracks are longer than ``, and the average length of the \
long tracks is ``\>\"", ",", 
   RowBox[{"mylongredtracks", "//", "Length"}], ",", "shortestTrackRed", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Length", "/@", "mylongredtracks"}], ")"}], "//", "Mean"}], "//",
     "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6425389130486193`*^9, 3.6425389355786514`*^9}, {
  3.642538966830695*^9, 3.642538972310703*^9}, {3.6425399119100266`*^9, 
  3.6425399119700265`*^9}, {3.6428837130837717`*^9, 3.642883717557028*^9}, {
  3.6434731736335793`*^9, 3.643473178601864*^9}, {3.648475205109458*^9, 
  3.6484752053814735`*^9}, {3.6484757139595623`*^9, 3.648475842221898*^9}, {
  3.648475908638697*^9, 
  3.648475908965716*^9}},ExpressionUUID->"d8359c56-31d5-4b14-be48-\
db5834cd739a"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"90\\\"}]\\) red tracks are \
longer than \\!\\(\\*RowBox[{\\\"41\\\"}]\\), and the average length of the \
long tracks is \\!\\(\\*RowBox[{\\\"67.91111111111111`\\\"}]\\)\"\>",
  StringForm[
  "   `` red tracks are longer than ``, and the average length of the long \
tracks is ``", 90, 41, 67.91111111111111],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.678316238236511*^9, {3.678316298038932*^9, 3.6783163271615973`*^9}, 
   3.678316382879784*^9, 3.6783164256152287`*^9, 3.678316485821672*^9, 
   3.678319774164755*^9, 3.678653356646783*^9, 3.6792543430695086`*^9, 
   3.6792543840318513`*^9, 3.702667869120869*^9, 3.7034419441555824`*^9, 
   3.7034424339996424`*^9, 3.7083834557079687`*^9, 3.7088165162267957`*^9, 
   3.7088179286374493`*^9, 3.7136654300543327`*^9, 3.7142267588647966`*^9, 
   3.7151038954875164`*^9, {3.7151085850146437`*^9, 3.7151085873095617`*^9}, 
   3.7162249100839686`*^9, 3.716290128522837*^9, 3.7172761174981737`*^9, 
   3.7172766585485964`*^9, 3.7174405681047115`*^9, 3.7174411453827767`*^9, 
   3.717441316892681*^9, 3.717441619268426*^9, 3.7174418968259196`*^9, 
   3.7174421754328265`*^9, 3.7174425475652943`*^9, 3.717442774147097*^9, 
   3.717442825030589*^9, 3.7174430370683684`*^9, 3.7174433319727*^9, 
   3.718637554758919*^9, 3.7186545309020953`*^9, {3.7227251730222764`*^9, 
   3.7227251748023777`*^9}, 3.7227252057311473`*^9, 3.7227253167454967`*^9, 
   3.7227255650586996`*^9, 3.722725892932453*^9, 3.7227262529810467`*^9, 
   3.725383954796522*^9, 3.72538415441794*^9, 3.7253862967514744`*^9, 
   3.725394980760171*^9, 3.7253951811406326`*^9, 3.725395979989324*^9, 
   3.7254012265224085`*^9, 3.725402778266163*^9, 3.72540314851334*^9, 
   3.7254040041092777`*^9, 3.725654341943465*^9, 3.7256546152120953`*^9, 
   3.7256549681402817`*^9, 3.725655394435664*^9, 3.725661165919774*^9, 
   3.7265159124312916`*^9, 3.7265161069674516`*^9, 3.7265164119398527`*^9, 
   3.7265166648273315`*^9, 3.726517024310541*^9, 3.7277392185238457`*^9, 
   3.7279673898525143`*^9, 3.727967936591721*^9, 3.727968419568904*^9, 
   3.727968998734647*^9, 3.727969356620885*^9, 3.7279698978494225`*^9, 
   3.731680426367222*^9, 3.733242789936693*^9, 3.7332431407865076`*^9, 
   3.7332435500724573`*^9, 3.7336870248060117`*^9, 3.7711027707431483`*^9, 
   3.771102859728627*^9, {3.771108068575361*^9, 3.77110808938939*^9}, 
   3.771164471744502*^9, 3.77117998009332*^9, 3.77124709015178*^9, {
   3.771343820664624*^9, 3.7713438372280817`*^9}, {3.771343867394414*^9, 
   3.7713438826886697`*^9}, 3.7724661223412*^9, 3.7725410746726327`*^9, 
   3.772543012350591*^9, 3.772554497533708*^9, {3.7734277907270603`*^9, 
   3.773427803046914*^9}, 3.7745208552356787`*^9, 3.774522054501336*^9, {
   3.774522956269395*^9, 3.774522976343224*^9}, 3.774523813607641*^9, 
   3.7745256147958565`*^9, 3.776547059923601*^9, 3.777391977488302*^9, 
   3.777393325628978*^9, 3.777403637179163*^9, 3.777405983026455*^9, 
   3.7774065905460997`*^9, 3.7774070809731565`*^9, 3.7774074758203583`*^9, 
   3.778270438846105*^9, 3.7782718720809155`*^9, 3.778272462467043*^9, 
   3.77827313597128*^9, 3.7782737707744412`*^9, 3.7782744611267185`*^9, 
   3.778275028046793*^9, 3.778275691182651*^9, 3.779458266939042*^9, {
   3.7794585196074944`*^9, 3.7794585478611097`*^9}, 
   3.779458714287629*^9},ExpressionUUID->"f10646c4-8a18-441b-8e2b-\
04aef422aee2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mylongredtracksf", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mylongredtracks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.642539945260073*^9, 3.6425399477700768`*^9}, {
  3.642539980762123*^9, 3.642540101124292*^9}, {3.642882956696509*^9, 
  3.642882958979639*^9}, {3.642883739316272*^9, 3.6428837407643547`*^9}, {
  3.6428843711884127`*^9, 3.6428843719094543`*^9}, {3.643473298073697*^9, 
  3.6434733047940817`*^9}},ExpressionUUID->"bbd416d9-d127-4c56-ad65-\
2020b477d8f4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
       RowBox[{
        RowBox[{"ImageAdjust", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
        "&"}]}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{"#", ",", "7"}], "]"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"mylongredtracksf", "\[LeftDoubleBracket]", 
            RowBox[{"frame", ",", "All", ",", 
             RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], ")"}]}]}],
         "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.6552430875899324`*^9, {3.6786486060098886`*^9, 3.678648615953458*^9}, 
   3.6786487384634647`*^9, 
   3.7279699027196465`*^9},ExpressionUUID->"0012e2c7-b807-4f99-9cd2-\
3b943674a1f1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rSpotNPlot", "=", 
  RowBox[{
   RowBox[{"Length", "/@", "mylongredtracksf"}], "//", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.6552256984433303`*^9, 3.6552257065547943`*^9}, {
  3.70881642686051*^9, 3.7088164766993337`*^9}, {3.708816666933374*^9, 
  3.708816669753731*^9}},ExpressionUUID->"f1ce8062-eb86-41fb-9f42-\
915bb0faf71f"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxd2UmuHTUUxvEDI4Y1YMCAgYkihBBCl74npu+hSOgDwaQBQpMUfTM6S6gl
eMACaglnCbUEL6GWgFD8Cfn/Jke/d3zclF1173t1z+Wb56/dbmb/3Gb2X7z1
c5y7Fc/k/os8+g546vFsj3f2eF+Pd8F3wwk+A5+F74UZ74cfgB+ET/BD8MPo
9xH4Ufgx+HHM4wn4Sfgp+GnM+xn4Wfg5+Pketc5zcB7tsL3QY78uDtuLPfbr
5LC9hDxsLyMP2yvIw/Yq8rL26bXRDtvr43octjd61PWB7U3kYXsLedjeRl7W
+O9gfrC9izxs76F/2OaxfYYdDtjeH/vLsMMB23nUy/38utzvh5B1f10Y8xn2
C2P7QN4+QD3ssuph+xD1sMMB20eol3v/DgdsH4/OsMMB2yeolzV/OGD7FPWw
wwHbZ2N/Wdb5gQO2iz3q/F4c8w4HbJ+PzrDDIev8f4HxYZf78ymQt0s99udR
hh0O2L5EPexwyHp+ljGf4AwX2OEqa71yX2+D7avRCc5wgV3u+1PhgBtsl0cn
OMNF1vhwRfuAG2xXMD6c4QK73K93RT7gJuv7wVWML+v6wwV21Fc40L7Bdm10
gjNcZK0f+QoH3GD7GuPDGS6wwxUOuMH2DcaHs6z9hx2ucMANtm977OchwRku
sMMVDrjBdn2cT4Lz9bF9kfX5hHyFA+2brM+f78Z8grOs8WGHK+oDbrB9j/Hh
LPf5FuRd1vhwoH2T9ffND6MTnOECO1zhkPv8G2w/jk5whgvscIVD1vphu4Hx
4XxjbF9k7b+s+w8OtG+w3Ryd4AwX2OEKB9xgW0ZPcJL7ek6ynk/Iz7KuF/pb
YEf7Fa7wBgf625Fvct/PA7afxvYTnOCTrPOB/AwXeIEdXuEKb3DAO9zgA7af
R09wgk+y1g/PcIEX2OEV41XkN1nPF3hHfYMP2H4ZPcn6PIJPcIZnuMj9fllg
h1e4whv6D3iHG3zA9uvoCU7wSdbzSdb5hwu8oN7hFe0rvMEB73CDD9h+Gz3B
CT7BWe7zn2XtP7ygvaO/FfkKb3Cgfocb2h+Yj/0+5ic4yVo/nOEZ9QVeYJd1
/8NV7vf3hnzAu9z/T9zgA/3ZH2P9BCdZ64czPMMFXmStX+77scIV3uCAd7hh
vAO2P0dPcJK1flnfD+EZLvACO7zCFd7kvp8B73CDD9j+Gj3BCT7BGZ7l/t6i
yP09xwI7vMIV3uT+HiXgHW7wAdvfPfb3NBOc4BOc//e/DmJlNw==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 420.}, {0, 19.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.708816670430659*^9, 3.7088179288034377`*^9, 3.7136654447074356`*^9, {
   3.714226758980096*^9, 3.714226771619815*^9}, 3.715103901940466*^9, 
   3.7151086085745125`*^9, 3.71622492097359*^9, 3.716290128678838*^9, 
   3.7172761245003877`*^9, 3.717276670025617*^9, 3.7174405776327286`*^9, 
   3.717441153871192*^9, 3.7174413239770937`*^9, 3.717441625728837*^9, 
   3.7174419042453337`*^9, 3.71744218300384*^9, 3.7174425570199113`*^9, 
   3.7174428333262043`*^9, 3.717443042637578*^9, 3.717443341769518*^9, {
   3.718637554961719*^9, 3.718637561836732*^9}, 3.7186545366509056`*^9, 
   3.722725210712432*^9, 3.7227253225458283`*^9, 3.7227255702269955`*^9, 
   3.722725899026801*^9, 3.722726257661314*^9, 3.725383959444788*^9, 
   3.7253841585571766`*^9, 3.7253863024438*^9, 3.725394985614449*^9, 
   3.725395181319643*^9, 3.725395984375575*^9, 3.7254012311636744`*^9, 
   3.7254027824304013`*^9, 3.725404009857606*^9, 3.7256543462647123`*^9, {
   3.725654615401106*^9, 3.7256546198543606`*^9}, 3.7256549720425043`*^9, 
   3.7256553947036796`*^9, 3.7256611711160717`*^9, 3.7265159220283346`*^9, 
   3.726516114074129*^9, 3.7265164180805063`*^9, 3.7265166704046144`*^9, 
   3.7277392244083853`*^9, {3.727967390079545*^9, 3.7279673940277834`*^9}, 
   3.727967936787363*^9, 3.727968419769938*^9, 3.727969004183512*^9, 
   3.727969356823451*^9, 3.7279698980083113`*^9, 3.7316804264312253`*^9, 
   3.7332427921636996`*^9, 3.733243142602512*^9, 3.7332435501192575`*^9, 
   3.7336870249153967`*^9, 3.771102770865803*^9, 3.771108095827104*^9, 
   3.771164475311779*^9, 3.7711799837505283`*^9, 3.771247091025382*^9, {
   3.771343874088438*^9, 3.771343884689077*^9}, 3.7724661286682897`*^9, 
   3.7725410747921476`*^9, 3.772543012492213*^9, 3.772554497580508*^9, {
   3.773427791023805*^9, 3.7734278051836834`*^9}, 3.7745208553693233`*^9, 
   3.7745220546170263`*^9, {3.7745229563910694`*^9, 3.7745229783057394`*^9}, 
   3.7745238137452803`*^9, 3.7745256149382925`*^9, 3.7765470600797725`*^9, 
   3.7773919776023083`*^9, 3.777393325738178*^9, 3.7773934271659536`*^9, 
   3.777403637234166*^9, 3.777405983082458*^9, 3.7774065906085*^9, 
   3.7774070810199566`*^9, 3.7774074758837585`*^9, 3.7782704390648355`*^9, 
   3.7782718722996254`*^9, 3.778272462607634*^9, 3.7782731360962515`*^9, 
   3.778273770883792*^9, 3.778274461345419*^9, 3.778275028281149*^9, 
   3.778275691307621*^9, 3.7794585197245007`*^9, 3.7794585537984495`*^9, 
   3.7794587144196367`*^9},ExpressionUUID->"331f196f-55d8-460a-9649-\
796e6b035cc0"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Check all tracks (and double-check transformation \
function)",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.678656482400874*^9, 
  3.6786565180001364`*^9}},ExpressionUUID->"7d36ebe7-ba97-42cc-92d6-\
4e9326e9594a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mylongredtracksColReg", "=", "mylongredtracks"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mylongredtracksColReg", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "All", ",", "2", ",", 
     RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"myTfFunc", "/@", 
    RowBox[{"mylongredtracksColReg", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "All", ",", "2", ",", 
      RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}]}]}], ";"}], "\n", 
 RowBox[{"Clear", "[", "mylongredtracksColRegf", "]"}], "\n", 
 RowBox[{
  RowBox[{"mylongredtracksColRegf", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mylongredtracksColReg", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.678656043431703*^9, 3.6786560875329804`*^9}, {
   3.6786561598079076`*^9, 3.6786561750647345`*^9}, {3.67865622941523*^9, 
   3.6786562349688396`*^9}, 3.7174434694759455`*^9, {3.7711029160040407`*^9, 
   3.771102923310584*^9}},ExpressionUUID->"adc2c87b-5ba9-44e3-a610-\
c565a850aee6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Linking red, blue, and green tracks",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.6786547016865463`*^9, 
  3.6786547243377857`*^9}},ExpressionUUID->"83575452-74dc-4a93-a8cf-\
984c737fbc0c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tracksr", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], "&"}], ",", 
     "mylongredtracksColReg", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tracksr", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Range", "@", 
    RowBox[{"Length", "@", "tracksr"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.678900911216363*^9, 3.6789009372048492`*^9}, {
   3.6789010307171974`*^9, 3.678901093315778*^9}, {3.6789011440456796`*^9, 
   3.6789011642058325`*^9}, {3.6789012128626156`*^9, 3.67890121940499*^9}, {
   3.67890129021404*^9, 3.678901301349677*^9}, {3.678902151039276*^9, 
   3.6789021582796907`*^9}, {3.6789025134420047`*^9, 3.678902522757538*^9}, {
   3.678902654264059*^9, 3.6789026763353214`*^9}, {3.6789027446572294`*^9, 
   3.678902753245721*^9}, {3.678904333521107*^9, 3.6789043889832797`*^9}, {
   3.6792550147929287`*^9, 3.6792550165440288`*^9}, {3.681844558966263*^9, 
   3.6818445797824535`*^9}, 3.6834835180407495`*^9, {3.7711024103707685`*^9, 
   3.7711024107896414`*^9}},ExpressionUUID->"dfd1c965-6f96-468f-9b5b-\
aa9bac82ea21"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fitting Red Tracks with Gaussian and Making Parameter \
File",
 FontFamily->"Gill Sans MT",
 FontColor->RGBColor[1, 0.5, 0]]], "Section",
 CellChangeTimes->{{3.683894372287684*^9, 3.6838943796241035`*^9}, {
  3.7711029450557013`*^9, 
  3.7711029758956423`*^9}},ExpressionUUID->"8b969bb7-de50-4747-8b20-\
d0bfb79596c6"],

Cell[CellGroupData[{

Cell["Setting Parameters", "Subsubsection",
 CellChangeTimes->{{3.683898386499284*^9, 
  3.6838984034672546`*^9}},ExpressionUUID->"36641862-8797-46b6-8625-\
0d7513d744ec"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pad", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTrimSize", "=", 
   RowBox[{
    RowBox[{"2", "*", "pad"}], "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.655828154591261*^9, 
  3.655828157255413*^9}},ExpressionUUID->"3e9a71fb-f24c-421c-91d6-\
2d762eb141d1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting red tracks with Gaussian", "Subsubsection",
 CellChangeTimes->{{3.648311925933276*^9, 3.648311951456312*^9}, {
  3.663966516753745*^9, 3.663966552696801*^9}, {3.7025907355437713`*^9, 
  3.7025907367299023`*^9}},ExpressionUUID->"d8f4059f-e734-4066-b40c-\
b8d7f9a0e539"],

Cell["\<\
This is doing an intial guassian fit of the red spots and their positions; I \
use this information for the positions of the spots below\
\>", "Text",
 CellChangeTimes->{{3.7794588933928733`*^9, 
  3.7794589420326552`*^9}},ExpressionUUID->"0eac7cad-021a-483c-8afd-\
4bad9d5d0cb0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"ParticleFittingFixedSigma", "[", 
    RowBox[{
    "myColMovie", ",", "1", ",", "tracksr", ",", "pad", ",", "myTrimSize", 
     ",", "1.5", ",", "avgFrameN"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.651521936358779*^9, 3.651521980680314*^9}, {
   3.6515264178271046`*^9, 3.651526418963169*^9}, {3.6556528271791067`*^9, 
   3.655652835579587*^9}, {3.655729675004551*^9, 3.6557296844890933`*^9}, {
   3.6558241615248704`*^9, 3.655824168428265*^9}, {3.6558256423425684`*^9, 
   3.655825656478377*^9}, {3.6558274714471874`*^9, 3.655827472615254*^9}, {
   3.655827961488216*^9, 3.6558279616002226`*^9}, {3.6558404104252543`*^9, 
   3.6558404277352448`*^9}, 3.6558444753967576`*^9, {3.655845038598971*^9, 
   3.6558450410451107`*^9}, {3.6558454088221464`*^9, 
   3.6558454140694466`*^9}, {3.663965639584574*^9, 3.663965640275614*^9}, {
   3.6639665554099565`*^9, 3.663966556994047*^9}, {3.683898975251959*^9, 
   3.6838989796792116`*^9}, {3.7025907384638786`*^9, 3.7025907393389006`*^9}, 
   3.702593757430551*^9, 
   3.771102447176633*^9},ExpressionUUID->"3da0bf30-ce33-4429-9edd-\
0bc1302d3ba4"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,285,8,23681909039735116284,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.7794587584971576`*^9},ExpressionUUID->"89092371-c53b-48d5-9fde-\
b6ddb18c5cfa"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,285,9,23681909039735116284,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.779458758609164*^9},ExpressionUUID->"0a06434c-6ad6-4f7a-ad47-\
7f37ac010cd3"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,285,10,23681909039735116284,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.779458758766173*^9},ExpressionUUID->"a2f5ff61-6d4c-424d-ba4c-\
aa18655ec553"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NonlinearModelFit\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,285,11,23681909039735116284,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.779458758816176*^9},ExpressionUUID->"edb7274b-e024-4250-ad63-\
0cfc7e6f6bf0"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6639664986737113`*^9, 3.6639665014338694`*^9}, {
  3.6639665597462044`*^9, 
  3.663966561266291*^9}},ExpressionUUID->"b06e4f95-5311-4047-b0f2-\
acc26c891124"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.656699657352935*^9, 3.656699679889224*^9}, 
   3.6567711080776825`*^9, {3.6639665057051134`*^9, 3.663966508489273*^9}, {
   3.6639665643934703`*^9, 
   3.6639665659695606`*^9}},ExpressionUUID->"97375092-868a-471e-a859-\
bb74d9e36f7c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedAllParametersColReg", "=", "myRedAllParameters"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"myRedAllParametersColReg", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], "=", 
     RowBox[{"myTfFunc", "/@", 
      RowBox[{"myRedAllParameters", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}]}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6556550070447874`*^9, 3.655655038013559*^9}, {
   3.655655073245574*^9, 3.655655159853528*^9}, {3.6558419501863236`*^9, 
   3.655841961905994*^9}, {3.6838993982921553`*^9, 3.6838994284438796`*^9}, 
   3.771168052861079*^9, 
   3.7711746584909687`*^9},ExpressionUUID->"c6f4f233-9414-4908-97f5-\
e5b35722bbef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mylabel", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TrackN\>\"", ",", "\"\<FrameN\>\"", ",", "\"\<X (130 nm pixels)\>\"",
      ",", "\"\<Y (130 nm pixels)\>\"", ",", "\"\<Peak intensity\>\"", ",", 
     "\"\<Background intensity\>\"", ",", "\"\<SigmaX (130 nm pixels)\>\"", 
     ",", " ", "\"\<SigmaY (130 nm pixels)\>\"", ",", 
     "\"\<X min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<X max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<Y min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<Y max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<Peak intensity min 90% confidence interval\>\"", ",", 
     "\"\<Peak intensity max 90% confidence interval\>\"", ",", 
     "\"\<Background intensity min 90% confidence interval\>\"", ",", 
     "\"\<Background max 90% confidence interval\>\"", ",", 
     "\"\<SigmaX min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<SigmaX max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<SigmaY min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<SigmaY max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<R\>\"", ",", "\"\<G\>\"", ",", "\"\<B\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedAllParametersColRegLabeled", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{"myRedAllParametersColReg", ",", "mylabel", ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651501541625267*^9, 3.6515015675997524`*^9}, {
  3.6515056381085725`*^9, 3.651505651915362*^9}, {3.6515225150488777`*^9, 
  3.65152254060034*^9}, {3.6556552001338315`*^9, 3.655655201364902*^9}, {
  3.6557321908504486`*^9, 3.655732192306532*^9}, {3.655840561476894*^9, 
  3.655840614977954*^9}, {3.6558419246388626`*^9, 3.6558419361055183`*^9}, {
  3.6838994667480707`*^9, 
  3.683899477419681*^9}},ExpressionUUID->"068b6466-5aef-4838-b702-\
8427b4454386"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
    "analysisFolder", "<>", "\"\<_FixedSigmaRedAllParameters.xls\>\""}], ",", 
    "myRedAllParametersColRegLabeled"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedAllParametersColReg", ">>", 
   RowBox[{"(", 
    RowBox[{"analysisFolder", "<>", "\"\<_FixedSigmaRedAllParameters.m\>\""}],
     ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.648319854940589*^9, 3.6483198620705986`*^9}, {
   3.648319895152645*^9, 3.6483199454877186`*^9}, {3.648319983187793*^9, 
   3.648319985987797*^9}, {3.6483202401841755`*^9, 3.648320240454176*^9}, {
   3.6485877198879347`*^9, 3.648587745048374*^9}, {3.651500654319516*^9, 
   3.651500664374091*^9}, 3.651501351168373*^9, {3.651505715675009*^9, 
   3.651505716779072*^9}, 3.65150683429299*^9, 3.651520145559351*^9, {
   3.655732200122979*^9, 3.6557322064913435`*^9}, {3.6557593689049444`*^9, 
   3.655759375376315*^9}, {3.6558406279206944`*^9, 3.6558406349530964`*^9}, 
   3.678321873722842*^9, {3.7026700557049346`*^9, 3.7026700682136497`*^9}, {
   3.77110578462695*^9, 3.7711058487154303`*^9}, {3.7711104409653807`*^9, 
   3.7711104421295033`*^9}},ExpressionUUID->"613a1ee2-88ff-444b-a567-\
d74f296d70a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making RGB Trims from Red Tracks", "Section",
 CellChangeTimes->{{3.6574596442643747`*^9, 3.6574596461844845`*^9}, {
  3.6949760931994843`*^9, 3.6949760978029575`*^9}, {3.717791367390662*^9, 
  3.7177913807046976`*^9}, {3.771103017894242*^9, 
  3.7711030340073*^9}},ExpressionUUID->"b3c8d124-1246-43a1-bd08-90d36dfdb631"],

Cell["\<\
This reads in the movie again if you need to; if it is already defined from \
running the code above then you do not need to run this\
\>", "Text",
 CellChangeTimes->{{3.779458965649006*^9, 3.7794589822409554`*^9}, {
  3.7794590353449926`*^9, 
  3.779459044336507*^9}},ExpressionUUID->"443a2ff7-e478-4f90-9a01-\
bd46101548aa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FileNameSetter", "[", 
    RowBox[{"Dynamic", "[", "mymovie", "]"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "mymovie", "]"}]}], "}"}]], "Input",ExpressionUUID-\
>"554cd8b3-fe0a-43aa-8a9f-b449c14afd7f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{Dynamic[$CellContext`mymovie],"Open",All},
    "FileNameSetterBoxes"], ",", 
   DynamicBox[ToBoxes[$CellContext`mymovie, StandardForm],
    ImageSizeCache->{49., {3., 9.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.656795102013057*^9, 3.716140965116562*^9, 3.726513137268983*^9, 
   3.726514023196082*^9, 3.7265140764461975`*^9, 3.726514264561371*^9, 
   3.726514311524082*^9, 3.726514407590603*^9, 3.726514471202034*^9, 
   3.7265145845727196`*^9, 3.7265173334296703`*^9, 3.7265176264380617`*^9, 
   3.7265176787990313`*^9, 3.726517794540041*^9, 3.72652514819083*^9, 
   3.726525259676759*^9, 3.726525337995654*^9, 3.7265254879826317`*^9, 
   3.7265256300932217`*^9, 3.7265260165801125`*^9, 3.7265260478155265`*^9, 
   3.726526089312591*^9, {3.7265902671447487`*^9, 3.72659028884599*^9}, 
   3.726590725830984*^9, {3.7265907674183626`*^9, 3.7265907880255413`*^9}, 
   3.726591051029585*^9, 3.726591295803585*^9, {3.7265913877538443`*^9, 
   3.7265914224478283`*^9}, 3.72659148366933*^9, 3.7265915749225492`*^9, {
   3.7265919971717005`*^9, 3.726592039430118*^9}, 3.726592073957093*^9, 
   3.7265973495678406`*^9, 3.726597470510758*^9, 3.7265975813300962`*^9, 
   3.7265977121055765`*^9, 3.72659779242117*^9, 3.7265978655873547`*^9, 
   3.7265979276549053`*^9, 3.726597983613106*^9, 3.7265980729162135`*^9, 
   3.726598244610034*^9, 3.7265999829214597`*^9, 3.726600104000385*^9, 
   3.7266004031174936`*^9, 3.7266005474277477`*^9, 3.72660064940058*^9, 
   3.7266012543941836`*^9, 3.72660131709577*^9, 3.7266013840826015`*^9, 
   3.726601433797445*^9, {3.726601484642353*^9, 3.726601512965973*^9}, 
   3.726601549500063*^9, 3.726601596620758*^9, 3.7266016705819883`*^9, 
   3.7266017102092547`*^9, 3.726601760318121*^9, 3.726601811964075*^9, 
   3.7266018730085664`*^9, 3.7266019590214863`*^9, 3.7266020740840673`*^9, 
   3.7266021201987047`*^9, 3.7266021573618307`*^9, 3.7266023239413586`*^9, 
   3.726602413400475*^9, 3.726602489876849*^9, 3.7266027960623617`*^9, 
   3.7266028922308626`*^9, 3.726602955864502*^9, 3.726603036736128*^9, 
   3.7266030934883738`*^9, 3.726603170749793*^9, 3.726603227241024*^9, 
   3.726603400943959*^9, 3.7271046019865637`*^9, 3.727107400622527*^9, 
   3.7279788731001406`*^9, 3.7279789435242476`*^9, 3.7279791409572535`*^9, {
   3.7279792035569406`*^9, 3.727979230947837*^9}, 3.727979295712389*^9, 
   3.7279793602475233`*^9, 3.7279794322033634`*^9, 3.727979484682637*^9, 
   3.7279795232199516`*^9, 3.727980278564742*^9, 3.727980388207359*^9, 
   3.727980463276144*^9, 3.727980540320875*^9, 3.7279806381892757`*^9, 
   3.7279810448063345`*^9, 3.727981555173532*^9, 3.7279816381358852`*^9, 
   3.7279817056207027`*^9, 3.7279818419037333`*^9, 3.7279819128521814`*^9, 
   3.7279819564083176`*^9, 3.7279820918956394`*^9, 3.7279821394059134`*^9, 
   3.7279821808214846`*^9, 3.727982217605812*^9, 3.727982361804166*^9, 
   3.7279824607872095`*^9, 3.727982529725978*^9, 3.72798264070816*^9, 
   3.7568414606973996`*^9, 3.75684149672546*^9, 3.756841550850556*^9, 
   3.7568417670909243`*^9, 3.756841822406088*^9, 3.7568419258930073`*^9, 
   3.7568419745307894`*^9, 3.756842066947075*^9, 3.7568421750012555`*^9, 
   3.756842251556634*^9, 3.756842311011035*^9, 3.75684241863319*^9, 
   3.7568424518858566`*^9, 3.7568425730291653`*^9, 3.756842610725446*^9, 
   3.756842645536765*^9, 3.7568430369549484`*^9, 3.7568431328919697`*^9, 
   3.7568431779534616`*^9, 3.7571691192871833`*^9, 
   3.757169821098729*^9},ExpressionUUID->"2b1cd64b-96b4-4344-b7f2-\
72a3569ad6e0"]
}, Open  ]],

Cell["\<\
This will read in the movie and partition it as it does above; doesn\
\[CloseCurlyQuote]t need to be done if you have already defined it from above\
\>", "Text",
 CellChangeTimes->{{3.7794589546563773`*^9, 3.7794589589126205`*^9}, {
  3.779459048192727*^9, 
  3.779459069504946*^9}},ExpressionUUID->"9f01826a-9037-419e-893d-\
7c0bc84aeb74"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mymovie", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"FileBaseName", "[", "mymovie", "]"}], ",", "4"}], "]"}], 
      "\[Equal]", "\"\<AVG_\>\""}], ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"mymovie", ",", 
       RowBox[{"\"\<AVG_\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
     "mymovie"}], "]"}]}], ";"}]], "Input",ExpressionUUID->"f29fde18-787f-\
451b-afb9-4e2f8dcf202e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myColMovie", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "mymovie", "]"}], "//", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectoryQ", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
        "\"\<Analysis\\\\\>\""}], ")"}]}], "\[Equal]", "False"}], ",", 
    RowBox[{"CreateDirectory", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
       "\"\<Analysis\\\\\>\""}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analysisFolder", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
    "\"\<Analysis\\\\\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6515063970679827`*^9, 3.651506411178789*^9}, {
   3.6515066477483206`*^9, 3.6515066488673844`*^9}, {3.6515067054626217`*^9, 
   3.6515067061716623`*^9}, {3.6515265140116053`*^9, 3.651526514107611*^9}, {
   3.6783130580806165`*^9, 3.6783130585136414`*^9}, 
   3.7055111247331915`*^9},ExpressionUUID->"33054578-a81f-415e-9107-\
6f9231a2c478"],

Cell[CellGroupData[{

Cell["Reading in all saved parameters", "Subsection",
 CellChangeTimes->{{3.6574596491006513`*^9, 
  3.6574596608893256`*^9}},ExpressionUUID->"7849efa8-c72c-4903-8f89-\
411c95b03127"],

Cell["Reading in parameters from the above cell", "Text",
 CellChangeTimes->{{3.779459142721134*^9, 
  3.779459177457121*^9}},ExpressionUUID->"d331c456-46cf-4c75-802f-\
8b8c2a67a98b"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"analysisFolder", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
    "\"\<Analysis\\\\\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileExistsQ", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}], "]"}],
      "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"mymovie", ",", 
         RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}], 
       "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Mean", "/@", "myColMovie"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImg", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"mymovie", ",", 
     RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.717256246764773*^9, 3.7172562614830003`*^9}, {
  3.717256331268729*^9, 3.717256367000797*^9}, {3.7172564058132687`*^9, 
  3.71725643367292*^9}, {3.7174995778871717`*^9, 3.717499589644394*^9}, {
  3.717499693030506*^9, 3.7174997042933292`*^9}, {3.717499798888921*^9, 
  3.7174998188225617`*^9}, {3.722949243962117*^9, 3.7229492994162893`*^9}, {
  3.7711038992633777`*^9, 
  3.771103918419525*^9}},ExpressionUUID->"0779d8cf-0ad1-48b8-b341-\
d1b68f91560f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymask", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"analysisFolder", "<>", "\"\<_mymask.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImg", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"mymovie", ",", 
     RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avgFrameN", "=", 
   RowBox[{"IntegerPart", "[", "avgFrameN", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTfFunc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
     "\"\<TransformationFunction.m\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTfFuncRev", "=", 
   RowBox[{"InverseFunction", "@", "myTfFunc"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myMaxN", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
     "myColMovie", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], "-", "avgFrameN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myColMovieRunAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{
       RowBox[{"ImageAdd", "[", 
        RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", 
          RowBox[{"j", ";;", 
           RowBox[{"j", "+", "avgFrameN", "-", "1"}]}]}], 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"1", "/", "avgFrameN"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedAllParametersColReg", "=", "myRedAllParameters"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myRedAllParametersColReg", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"myRedAllParameters", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", 
       RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "myRedAllParameters", "]"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedParameterColRegSplit", "=", 
   RowBox[{"myRedAllParametersColReg", "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656776915246834*^9, 3.6567770411270337`*^9}, {
   3.656777794704136*^9, 3.6567777949281483`*^9}, {3.6568621692991114`*^9, 
   3.6568622644904785`*^9}, 3.656862713412467*^9, 3.656862761616552*^9, 
   3.6568628067474313`*^9, {3.6591097466730127`*^9, 3.659109748619124*^9}, {
   3.6591110230040145`*^9, 3.6591110236840534`*^9}, {3.6591223641256895`*^9, 
   3.659122391069231*^9}, {3.6949786906683617`*^9, 3.694978700467176*^9}, {
   3.716303884402073*^9, 3.7163039054082737`*^9}, {3.7163039645296555`*^9, 
   3.716303973122147*^9}, {3.7163076320705976`*^9, 3.7163076417398167`*^9}, {
   3.7163081887392216`*^9, 3.716308191885828*^9}, {3.7163123949520054`*^9, 
   3.7163124037205067`*^9}, {3.7163127842162695`*^9, 
   3.7163127894485693`*^9}, {3.7163155499314594`*^9, 3.716315566059382*^9}, {
   3.716316313896281*^9, 3.7163163455965495`*^9}, 3.71631666076558*^9, {
   3.7172563266421204`*^9, 3.717256356556378*^9}, {3.7174995599087286`*^9, 
   3.7174995735323634`*^9}, {3.717500029993186*^9, 3.7175000357363973`*^9}, {
   3.717500071197281*^9, 3.7175000749718885`*^9}, {3.71750020651776*^9, 
   3.717500248011449*^9}, {3.717500477008795*^9, 3.7175005122270613`*^9}, {
   3.7265250997029552`*^9, 3.7265251009998302`*^9}, {3.7711033012542624`*^9, 
   3.771103302588061*^9}, {3.7711038784514184`*^9, 3.7711038791189857`*^9}, {
   3.771169006697932*^9, 3.771169010577157*^9}, 
   3.7711690977804003`*^9},ExpressionUUID->"d0ea488c-3273-4ad4-beb0-\
86da14af9d52"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgImg", "=", 
   RowBox[{"Mean", "/@", "myColMovie"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avgColImg", "=", 
   RowBox[{"ColorCombine", "[", 
    RowBox[{"ImageAdjust", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "avgImg", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "avgImg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ConstantImage", "[", 
        RowBox[{"0", ",", 
         RowBox[{"ImageDimensions", "@", 
          RowBox[{
          "avgImg", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"myRedParameterSplit", "=", 
    RowBox[{"myRedAllParameters", "//", 
     RowBox[{
      RowBox[{"SplitBy", "[", 
       RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Grouping", " ", "tracks", " ", "together", " ", "from", " ", "Parameter", 
    " ", "list"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedCentroid", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "myRedParameterSplit", "]"}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"myRedParameterSplit", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All", ",", 
            RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], "//", 
          "Mean"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "myRedParameterSplit", "]"}], ",", "1"}], 
          "}"}]}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Taking", " ", "the", " ", "mean", " ", "position", " ", "of", " ", "each",
     " ", "grouped", " ", "tracks"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"posRedLongTracks", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{"#", ",", "7"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"RedCentroid", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ")"}]}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"RedCentroid", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"RedCentroid", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "RedCentroid", "]"}], ",", "1"}], "}"}]}], 
        "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Making", " ", "dumb", " ", "little", " ", "circles", " ", "around", " ", 
    "the", " ", "average", " ", "position", " ", "of", " ", "each", " ", 
    "tracks"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", 
          RowBox[{"start", "-", "1", "+", "frame"}]}], 
         "\[RightDoubleBracket]"}], "//", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
         "&"}]}], ",", "posRedLongTracks"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"frame", ",", "start", ",", "end", ",", "1"}], "}"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.7177693020572615`*^9, {3.725912471899654*^9, 3.7259124741667833`*^9}, {
   3.7711033264725003`*^9, 
   3.7711033274353333`*^9}},ExpressionUUID->"f05cab2e-427e-487d-9ebb-\
2d689da04d8b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Making Red Track Trims with either Blue and Green aligned to center of pad\
\>", "Subsection",
 CellChangeTimes->{{3.7711679957490234`*^9, 
  3.77116801774336*^9}},ExpressionUUID->"9ad25d9d-e3b5-429f-931a-\
919345216acf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "=", 
   RowBox[{"myRedAllParametersColReg", "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"myRedParameterSplitColReg", ">>", 
  RowBox[{
  "analysisFolder", "<>", 
   "\"\<_myRedParameterSplitColReg.m\>\""}]}]}], "Input",
 CellChangeTimes->{
  3.77117439821412*^9, {3.771180738368869*^9, 
   3.771180758758812*^9}},ExpressionUUID->"91873b3b-05c1-4dbd-91e7-\
dc0b08657373"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pad2", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "myRedParameterSplitColReg", ",", "TrimRed", ",", "TrimGreen", ",", 
   "TrimBlue", ",", "Trim3Colors"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "=", 
   RowBox[{"myRedAllParametersColReg", "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "TrimRed", ",", "TrimGreen", ",", "TrimBlue", ",", "Trim3Colors"}], "}"}],
    "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tempTime", "=", 
           RowBox[{"myRedParameterSplit", "\[LeftDoubleBracket]", 
            RowBox[{"myi", ",", "i", ",", "2"}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"tempCenter", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"(", 
             RowBox[{"myRedParameterSplit", "\[LeftDoubleBracket]", 
              RowBox[{"myi", ",", "i", ",", 
               RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], ")"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tempCenterColReg", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"myTfFunc", "@", 
             RowBox[{"myRedParameterSplitColReg", "\[LeftDoubleBracket]", 
              RowBox[{"myi", ",", "i", ",", 
               RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"tempRed", ",", "tempGreen", ",", "tempBlue"}], "}"}], 
           "=", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ImageTrim", "[", 
              RowBox[{
               RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", 
                 RowBox[{"tempTime", "+", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"avgFrameN", "/", "2"}], "]"}], "-", "1"}]}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenter", "-", "pad2"}], ",", 
                 RowBox[{"tempCenter", "+", "pad2", "-", "0.1"}]}], "}"}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ImageTrim", "[", 
              RowBox[{
               RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", 
                 RowBox[{"tempTime", "+", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"avgFrameN", "/", "2"}], "]"}], "-", "1"}]}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenterColReg", "-", "pad2"}], ",", 
                 RowBox[{"tempCenterColReg", "+", "pad2", "-", "0.1"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ImageTrim", "[", 
              RowBox[{
               RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                RowBox[{"3", ",", 
                 RowBox[{"tempTime", "+", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"avgFrameN", "/", "2"}], "]"}], "-", "1"}]}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenterColReg", "-", "pad2"}], ",", 
                 RowBox[{"tempCenterColReg", "+", "pad2", "-", "0.1"}]}], 
                "}"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"tempRed", ",", "tempGreen", ",", "tempBlue", ",", 
            RowBox[{"ColorCombine", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ImageAdjust", "@", "tempRed"}], ",", 
               RowBox[{"ImageAdjust", "@", "tempGreen"}], ",", 
               RowBox[{"ImageAdjust", "@", "tempBlue"}]}], "}"}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{
            "myRedParameterSplit", "\[LeftDoubleBracket]", "myi", 
             "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], "]"}], "//",
        "Transpose"}], ",", 
      RowBox[{"{", 
       RowBox[{"myi", ",", "1", ",", 
        RowBox[{"1", 
         RowBox[{"Length", "[", "myRedParameterSplit", "]"}]}], ",", "1"}], 
       "}"}]}], "]"}], "//", "Transpose"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6567771182624454`*^9, 3.6567771483431664`*^9}, {
   3.7156217870305834`*^9, 3.7156218081887302`*^9}, {3.715704817154024*^9, 
   3.715704831875252*^9}, {3.7163113650801*^9, 3.716311372024497*^9}, {
   3.7163114217843432`*^9, 3.716311423096418*^9}, 3.7163125072364273`*^9, {
   3.726525421861836*^9, 3.726525422324999*^9}, {3.726525728805104*^9, 
   3.72652575255311*^9}, {3.771168885973564*^9, 3.7711688988123355`*^9}, {
   3.771168950353483*^9, 3.7711689519115334`*^9}, {3.771174237228255*^9, 
   3.771174239495742*^9}, 3.7711800918844395`*^9, {3.7712542177197294`*^9, 
   3.7712542277829885`*^9}},ExpressionUUID->"b55008f2-f7b2-47c2-9f55-\
74e52483e6b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"TrimRed", ",", "TrimGreen", ",", "TrimBlue"}], "}"}], "]"}], ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myRedTrackRGBTrims.m\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7711037850679846`*^9, 
  3.771103806668453*^9}},ExpressionUUID->"8fa90a2e-a7f9-4f0e-9f8f-\
64e980827daf"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Hand Checking all red tracks", "Subsection",
 CellChangeTimes->{{3.726939354834359*^9, 3.7269393577785273`*^9}, {
  3.7711036881604614`*^9, 
  3.771103705578563*^9}},ExpressionUUID->"7e3a4dff-86d4-48f8-b19a-\
5774a5e2dc7e"],

Cell["\<\
Define all the myDirectories below here, only put the directories that have \
the same construct and the same imaging conditions that you want to handcheck \
below. Always change the my\
\>", "Text",
 CellChangeTimes->{{3.7794592437289114`*^9, 
  3.7794593008491783`*^9}},ExpressionUUID->"1a7c6f11-5dc4-4a89-a14f-\
74d2b1807f8f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myDirectories", "=", 
   RowBox[{"{", 
    RowBox[{"(", 
     RowBox[{
     "\"\<P:\\\\20190920_u2os_multiplex\\\\smFLAG-KDM5B-GBInterval_2\\\\\
Analysis\>\"", "<>", "\"\<\\\\\>\""}], ")"}], "}"}]}], ";", " ", 
  RowBox[{
   StyleBox[
    RowBox[{"(", 
     StyleBox["*",
      FontColor->RGBColor[1, 0, 1],
      Background->RGBColor[1, 0.925, 0.925]]}]], 
   StyleBox[
    RowBox[{
     RowBox[{
     "Input", " ", "all", " ", "analysis", " ", "folder", " ", "pathways", 
      " ", "here", " ", "that", " ", "already", " ", "have", " ", "the", " ", 
      "RedTrackRGBTrims", " ", "from", " ", "above", " ", "and", " ", "that", 
      " ", "are", " ", "the", " ", "same", " ", "construct", " ", "and", " ", 
      "same", " ", "imaging", " ", "intervals"}], ",", " ", 
     RowBox[{
     "make", " ", "sure", " ", "to", " ", "add", " ", "a", " ", "\\\\", " ", 
      "after", " ", "the", " ", "Analysis", " ", "folder", " ", "when", " ", 
      "inputting", " ", "new", " ", "folders"}]}],
    FontColor->RGBColor[1, 0, 1],
    Background->RGBColor[1, 0.925, 0.925]], 
   StyleBox["*)",
    FontColor->RGBColor[1, 0, 1],
    Background->RGBColor[1, 0.925, 0.925]]}]}]], "Input",
 CellChangeTimes->{{3.771247741693612*^9, 3.7712477670183067`*^9}, 
   3.7712478191247*^9, {3.7712479018723974`*^9, 3.771247901981597*^9}, {
   3.771254046438854*^9, 3.7712540617965107`*^9}, {3.7715912023333983`*^9, 
   3.7715912097266674`*^9}, {3.7715915155938854`*^9, 3.771591544315597*^9}, {
   3.7724664960403953`*^9, 3.7724665042463293`*^9}, {3.7724666251070623`*^9, 
   3.7724666280623035`*^9}, {3.772466671727358*^9, 3.7724666718383636`*^9}, {
   3.77247976391724*^9, 3.772479770950925*^9}, {3.7725626959361124`*^9, 
   3.7725627013448935`*^9}, {3.7745256620136857`*^9, 3.774525697334281*^9}, {
   3.7765477520879493`*^9, 3.776547757260938*^9}, {3.777671680173606*^9, 
   3.777671683597908*^9}, {3.777720489323392*^9, 3.7777204918228025`*^9}, {
   3.778276161155511*^9, 3.778276177465761*^9}, {3.778280114453397*^9, 
   3.7782801165478177`*^9}, {3.77832604845221*^9, 3.7783260517190475`*^9}, {
   3.7794655990464144`*^9, 
   3.779465617254456*^9}},ExpressionUUID->"a5d61cb3-c7e4-4918-ad18-\
29ce2e6c9784"],

Cell["\<\
Showing the number of myRedTrackRGBTrims (cells) you have in this directory\
\>", "Text",
 CellChangeTimes->{{3.7794656587578297`*^9, 
  3.779465682230172*^9}},ExpressionUUID->"4cdc4ac0-8ef3-450e-88f7-\
0773955c2a76"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{"myDirectories", "[", 
       RowBox[{"[", "directory", "]"}], "]"}], "<>", 
      "\"\<*_myRedTrackRGBTrims.m\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"directory", ",", "1", ",", 
      RowBox[{"Length", "@", "myDirectories"}], ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.772470011505622*^9, 
  3.772470012957627*^9}},ExpressionUUID->"c64b6023-04c8-4048-b871-\
907c039a5703"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P:\\\\20190920_u2os_multiplex\\\\smFLAG-KDM5B-GBInterval_2\\\\\
Analysis\\\\MAX_Cell01_myRedTrackRGBTrims.m\"\>", 
   ",", "\<\"P:\\\\20190920_u2os_multiplex\\\\smFLAG-KDM5B-GBInterval_2\\\\\
Analysis\\\\MAX_Cell02_myRedTrackRGBTrims.m\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.771591430601185*^9, 3.7715914559823484`*^9}, {
   3.7715915174839096`*^9, 3.771591547117813*^9}, 3.7716683821878195`*^9, 
   3.7723640364339*^9, 3.772466509752803*^9, 3.772466610409663*^9, {
   3.7724666660022593`*^9, 3.7724666741258397`*^9}, {3.7724700061241508`*^9, 
   3.77247001383303*^9}, 3.772479775870822*^9, 3.772555273097167*^9, 
   3.7725626618995075`*^9, 3.7725627927311993`*^9, 3.7745259402992935`*^9, 
   3.7765478072686567`*^9, 3.776785784441331*^9, 3.7776716855504026`*^9, 
   3.777720494996702*^9, 3.7777205949982452`*^9, 3.7782761800139236`*^9, 
   3.7782801203506436`*^9, 3.778326055202446*^9, 3.7794656524014664`*^9, 
   3.779468729796483*^9, 
   3.7794691768210516`*^9},ExpressionUUID->"b6564973-0e6c-4fe8-988a-\
7f274147fb07"]
}, Open  ]],

Cell["\<\
Getting the file names of each cell in the directory and then uploading the \
RedRGBParameters made above\
\>", "Text",
 CellChangeTimes->{{3.7794656881185093`*^9, 
  3.7794657589025583`*^9}},ExpressionUUID->"6db059dd-d435-42b7-9928-\
1494f9b767b3"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedRGBTrimsAllCellsFNs", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{
        RowBox[{"myDirectories", "[", 
         RowBox[{"[", "directory", "]"}], "]"}], "<>", 
        "\"\<*_myRedTrackRGBTrims.m\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"directory", ",", "1", ",", 
        RowBox[{"Length", "@", "myDirectories"}], ",", "1"}], "}"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myRedRGBParameterAllCellsFNs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
         RowBox[{"[", "cell", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", "\"\<my\>\""}], "]"}], "//",
            "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
      "\"\<_myRedParameterSplitColReg.m\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedRGBTrimsAllCellsFNs"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBParameterAllCellsFNs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7268499807140965`*^9, 3.7268500277031384`*^9}, 
   3.7268501304843283`*^9, {3.7269371716464877`*^9, 3.726937178587885*^9}, {
   3.726937220443279*^9, 3.7269373238271923`*^9}, {3.7269373976344137`*^9, 
   3.726937442915004*^9}, {3.7269374759718943`*^9, 3.7269374836353326`*^9}, {
   3.7269375145320997`*^9, 3.7269375494910994`*^9}, {3.7269390729002333`*^9, 
   3.726939108211253*^9}, {3.7269391669966154`*^9, 3.7269391802923756`*^9}, 
   3.7269392557646923`*^9, {3.7269393961857243`*^9, 3.7269393982898445`*^9}, {
   3.7269394560891504`*^9, 3.726939457201214*^9}, {3.7269395419920635`*^9, 
   3.7269395440341806`*^9}, 3.7269396696023626`*^9, 3.7711038313818274`*^9, 
   3.7711041911838017`*^9, 3.7711042514230328`*^9, {3.771104345193139*^9, 
   3.771104346721648*^9}, {3.7711060817586875`*^9, 3.7711060821114798`*^9}, {
   3.7711061214627256`*^9, 3.7711061217529497`*^9}, {3.771247717858926*^9, 
   3.771247729244368*^9}, {3.7712477760845385`*^9, 3.771247831915947*^9}, {
   3.7712478880793476`*^9, 3.771247893116165*^9}, {3.7712484891914606`*^9, 
   3.7712484938674774`*^9}, {3.77124856166671*^9, 3.771248564073718*^9}, {
   3.7724700322097473`*^9, 3.772470053032056*^9}, 
   3.779465727537764*^9},ExpressionUUID->"8824dcf5-5268-4f86-a3d7-\
f150cc166025"],

Cell["\<\
Counting the number of myRedParametersSplitColReg files, should be the same \
number as there are cells\
\>", "Text",
 CellChangeTimes->{{3.779465762037737*^9, 3.779465790566369*^9}, {
  3.7794662662145743`*^9, 
  3.779466267430644*^9}},ExpressionUUID->"62ea1ba6-dbc3-4200-8e4f-\
089d7c3490c2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedParameterSplitColReg"}]], "Input",
 CellChangeTimes->{{3.772469997856886*^9, 
  3.7724700003695297`*^9}},ExpressionUUID->"dcfc6636-1a36-4ce8-a8a2-\
5b8f3f44bd60"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7724700011981325`*^9, 3.772470039116042*^9}, 
   3.7724702524651003`*^9, 3.772479788112773*^9, 3.7725552848781195`*^9, 
   3.772562817135567*^9, 3.774526007933342*^9, 3.7765478098643093`*^9, 
   3.7767857911401744`*^9, 3.7776716915195293`*^9, 3.7777205039667215`*^9, 
   3.777720603366537*^9, 3.7782761852646885`*^9, 3.778280134254423*^9, 
   3.7783260622336254`*^9, 3.779465657077734*^9, 3.779468733777711*^9, 
   3.779469180934287*^9},ExpressionUUID->"a0cb3287-5a71-4755-8507-\
fa9bc39b747d"]
}, Open  ]],

Cell["\<\
Looking at the length of each track, each number is the length of the track \
for each spot (should all be over >40 in length)\
\>", "Text",
 CellChangeTimes->{{3.779465808054369*^9, 3.7794658134936805`*^9}, {
  3.7794660187904224`*^9, 
  3.779466053110386*^9}},ExpressionUUID->"b7281770-3d24-4e09-a7ea-\
7b5d3456c69a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"myRedParameterSplitColReg", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7711805993826065`*^9, 3.7711806160265217`*^9}, {
  3.7712480415526896`*^9, 3.7712480616763587`*^9}, {3.7712485866536007`*^9, 
  3.7712485874666033`*^9}, {3.7794659441991563`*^9, 
  3.7794659464872875`*^9}},ExpressionUUID->"b89636a4-6ee0-4380-8ba7-\
2f8ad0134a11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "239", ",", "62", ",", "126", ",", "47", ",", "99", ",", "61", ",", "73", 
   ",", "47", ",", "108", ",", "85", ",", "68", ",", "45", ",", "50", ",", 
   "46", ",", "49", ",", "48", ",", "46", ",", "46", ",", "88", ",", "42", 
   ",", "44", ",", "76", ",", "89", ",", "43", ",", "42", ",", "54", ",", 
   "86", ",", "60", ",", "70", ",", "166", ",", "54", ",", "118", ",", "42", 
   ",", "94", ",", "56", ",", "68", ",", "44", ",", "136", ",", "71", ",", 
   "132", ",", "66", ",", "51", ",", "50", ",", "43", ",", "42", ",", "52", 
   ",", "56", ",", "53", ",", "50", ",", "46", ",", "218", ",", "57", ",", 
   "53", ",", "59", ",", "72", ",", "44", ",", "48", ",", "45", ",", "91", 
   ",", "57", ",", "101", ",", "51", ",", "42", ",", "65", ",", "84", ",", 
   "133", ",", "56", ",", "43", ",", "89", ",", "84", ",", "92", ",", "55", 
   ",", "53", ",", "64", ",", "60", ",", "43", ",", "50", ",", "55", ",", 
   "81", ",", "46", ",", "41", ",", "56", ",", "65", ",", "48", ",", "43", 
   ",", "54", ",", "43", ",", "51", ",", "46", ",", "45"}], "}"}]], "Output",
 CellChangeTimes->{{3.77118060124804*^9, 3.771180616993758*^9}, 
   3.7711808304698563`*^9, {3.7712476200521717`*^9, 3.7712476297766056`*^9}, 
   3.771247686180408*^9, 3.771247918385257*^9, {3.7712480382060766`*^9, 
   3.7712480621935606`*^9}, {3.7712485800697765`*^9, 3.771248587794204*^9}, 
   3.7712512793755817`*^9, 3.7712542630685225`*^9, 3.7713441030151215`*^9, 
   3.771591400282593*^9, 3.7715915549466867`*^9, 3.7716683887809205`*^9, 
   3.772364045366557*^9, 3.7724666799195237`*^9, 3.772469990689197*^9, 
   3.7724702541813574`*^9, 3.772479788163636*^9, 3.7725552849249196`*^9, 
   3.7725628171668425`*^9, 3.7745260080320835`*^9, 3.7765478416553183`*^9, 
   3.7767857911869745`*^9, 3.777671691550741*^9, 3.7777205040760393`*^9, 
   3.7777206034134417`*^9, 3.778276185374033*^9, 3.7782801343731356`*^9, 
   3.778326062343*^9, 3.779465838908134*^9, {3.77946594462018*^9, 
   3.779465946778304*^9}, 3.7794687344917517`*^9, 
   3.779469182254362*^9},ExpressionUUID->"256c2586-f5fb-4f32-a002-\
de83c6cab2fd"]
}, Open  ]],

Cell["\<\
Reading in the trims made above from each cell in this directory\
\>", "Text",
 CellChangeTimes->{{3.7794660642780247`*^9, 
  3.7794660787738533`*^9}},ExpressionUUID->"7c6df42d-0726-42c7-ba84-\
35398c1c3f46"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedTrackRGBTrimsAllCells", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBTrimsAllCellsFNs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726703983688779*^9, 3.726704043797591*^9}, {
   3.726850109633778*^9, 3.726850154608858*^9}, {3.726939399233898*^9, 
   3.726939400392965*^9}, {3.726939458057263*^9, 3.726939458633296*^9}, {
   3.726939545489264*^9, 3.7269395466733313`*^9}, 3.771104191997132*^9, {
   3.771104889255972*^9, 3.7711049167007656`*^9}, 3.7712482310171485`*^9, {
   3.772470259826292*^9, 
   3.772470261809496*^9}},ExpressionUUID->"7fcc051b-cba3-4a7f-bf1b-\
4b2cbbd91c73"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "Is", " ", "in", " ", "the", " ", "same", " ", "order", " ", "as", " ", 
     "up", " ", "top", " ", "need", " ", "to", " ", "make", " ", "these", " ",
      "both", " ", "compatiable", " ", "with", " ", "reading", " ", "in", " ",
      "multiple", " ", 
     RowBox[{"directories", "!"}]}], "*)"}],
   FontColor->GrayLevel[0],
   Background->RGBColor[1, 1, 0]]}]], "Input",
 CellChangeTimes->{{3.77118063834064*^9, 3.7711806880109787`*^9}, {
  3.771182083612405*^9, 3.7711820929512215`*^9}, {3.771182579156645*^9, 
  3.7711825942526054`*^9}, {3.774618370413349*^9, 3.774618391137732*^9}, {
  3.779466084343172*^9, 3.7794660848862033`*^9}, {3.7794665009349995`*^9, 
  3.7794665017350454`*^9}},ExpressionUUID->"da8b2529-d919-479b-829b-\
27ebf7a6091a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "239", ",", "62", ",", "66", ",", "47", ",", "99", ",", "43", ",", "40", 
   ",", "47", ",", "49", ",", "85", ",", "45", ",", "46", ",", "43", ",", 
   "53", ",", "53", ",", "49", ",", "90", ",", "65", ",", "43", ",", "42", 
   ",", "59", ",", "67", ",", "54", ",", "86", ",", "41", ",", "68", ",", 
   "73", ",", "58", ",", "42", ",", "166", ",", "127", ",", "43", ",", "118", 
   ",", "57", ",", "68", ",", "49", ",", "44", ",", "155", ",", "66", ",", 
   "54", ",", "51", ",", "51", ",", "50", ",", "50", ",", "57", ",", "56", 
   ",", "46", ",", "40", ",", "176", ",", "58", ",", "53", ",", "59", ",", 
   "41", ",", "53", ",", "48", ",", "45", ",", "91", ",", "57", ",", "101", 
   ",", "92", ",", "42", ",", "73", ",", "61", ",", "59", ",", "69", ",", 
   "43", ",", "56", ",", "49", ",", "45", ",", "78", ",", "49", ",", "57", 
   ",", "40", ",", "48", ",", "47", ",", "58", ",", "56", ",", "44", ",", 
   "41"}], "}"}]], "Output",
 CellChangeTimes->{{3.7711806408834443`*^9, 3.7711806885257792`*^9}, 
   3.771180840225706*^9, 3.771247696188246*^9, 3.771248598747445*^9, 
   3.7712542702222195`*^9, 3.7713441094198103`*^9, 3.771591400438826*^9, 
   3.771591564448564*^9, 3.7716683992820807`*^9, 3.7723640651826634`*^9, 
   3.7724666935481377`*^9, 3.7724798037352448`*^9, 3.772555302289048*^9, 
   3.7725628440655537`*^9, 3.774526046927801*^9, {3.774618370710141*^9, 
   3.774618391622288*^9}, 3.7765478475465884`*^9, 3.7776716995817018`*^9, 
   3.777720516342045*^9, 3.777720615085831*^9, 3.7782761909049764`*^9, 
   3.7782801529240427`*^9, 3.778326071500735*^9, 3.7794662313295794`*^9, 
   3.7794687439772944`*^9, 
   3.7794691985362935`*^9},ExpressionUUID->"85e07baf-126c-4523-a73e-\
d50c1d676bac"]
}, Open  ]],

Cell["\<\
Counting the number of myRedTrackRGBTrimsAllCells files, should be the same \
number as there are cells\
\>", "Text",
 CellChangeTimes->{{3.7794662386629987`*^9, 
  3.7794662639584455`*^9}},ExpressionUUID->"bc16b327-170d-469a-942e-\
45b7ffe88863"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}]], "Input",
 CellChangeTimes->{{3.772470274391852*^9, 
  3.7724702781385355`*^9}},ExpressionUUID->"62ec8a2f-0c44-4836-8a60-\
10ae69d2c124"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7724702788873367`*^9, 3.7724798037631664`*^9, 
  3.7725553023202477`*^9, 3.7725628440911818`*^9, 3.7745260470220833`*^9, 
  3.7765478492669706`*^9, 3.777671699597362*^9, 3.7777205164357605`*^9, 
  3.777720615101483*^9, 3.778276191014295*^9, 3.7782801530021524`*^9, 
  3.7783260715944233`*^9, 3.7794662313725815`*^9, 3.779466271276864*^9, 
  3.7794687440182967`*^9, 
  3.7794691985772963`*^9},ExpressionUUID->"d9486067-c272-4e93-8df1-\
679a70c048c3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"my488and561Interval", "=", "2"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cell", ">", "2"}], ",", 
          RowBox[{"my488and561Interval", "=", "3"}], ",", 
          RowBox[{"my488and561Interval", "=", "2"}]}], "]"}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"GetTrimPeakIntFixedSigma95Conf", "[", 
           RowBox[{"#", ",", "1.5"}], "]"}], "&"}], "/@", 
         RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "spot", ",", "All", ",", 
            RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}], 
          "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"cell", ",", "1", ",", 
         RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", "1"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", "1", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", "cell", "]"}], "]"}]}], ",", "1"}], "}"}]}], "]"}]}], 
    ";"}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Can", " ", "use", " ", "this", " ", "if", " ", "I", " ", "have", " ", 
    "some", " ", "cells", " ", "with", " ", "different", " ", "488", " ", 
    "and", " ", "561", " ", "intervals"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.771254517179126*^9, 3.771254533035681*^9}, {
   3.7723645935944653`*^9, 3.7723645950628686`*^9}, 3.772365735536687*^9, 
   3.7723685999723563`*^9, 3.774525739559769*^9, {3.7745260445063467`*^9, 
   3.77452616039508*^9}, {3.77655031497869*^9, 3.776550361332524*^9}, 
   3.7776716944094687`*^9, 3.7782761887023716`*^9, 
   3.7794663251349444`*^9},ExpressionUUID->"4e43e1b1-192e-415d-82b8-\
fee4afd4d128"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedRGBGaussIntAllCellsFNs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
         RowBox[{"[", "cell", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", "\"\<my\>\""}], "]"}], "//",
            "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
      "\"\<_myRedTrackRGBGaussIntAllCells.m\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedRGBTrimsAllCellsFNs"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771339159315649*^9, 3.7713391960674744`*^9}, {
  3.7724699036657457`*^9, 
  3.772469904657156*^9}},ExpressionUUID->"b30f9adf-4193-41a5-9ce2-\
f9775c891c12"],

Cell[TextData[{
 "Fitting the gaussian intensity of only frames that all fluorescences were \
being imaged; make sure to put the correct imaging interval below!  ",
 StyleBox[" ",
  Background->RGBColor[1, 0.5, 0]],
 StyleBox["(should not have to run this again and can just skip down to the \
uploading if you have already done this step!)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7794662814464455`*^9, 3.7794663393827596`*^9}, {
  3.7794687690327277`*^9, 
  3.779468769673764*^9}},ExpressionUUID->"78ac9bca-865f-4ad3-a73b-\
751eecf28d8f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"my488and561Interval", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"GetTrimPeakIntFixedSigma95Conf", "[", 
        RowBox[{"#", ",", "1.5"}], "]"}], "&"}], "/@", 
      RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
       RowBox[{"[", 
        RowBox[{"cell", ",", "spot", ",", "All", ",", 
         RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"spot", ",", "1", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
         RowBox[{"[", "cell", "]"}], "]"}]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7794663178425274`*^9},ExpressionUUID->"d346251c-e489-425d-a76a-\
7750a6207d0b"],

Cell["Making file names for the gaussian fit information", "Text",
 CellChangeTimes->{{3.7794663475742283`*^9, 3.7794663586948643`*^9}, {
   3.779466432823104*^9, 3.7794664330631175`*^9}, 
   3.7794687617703123`*^9},ExpressionUUID->"ffb0092e-cf87-4e0b-8ec0-\
3443add7a785"],

Cell[TextData[{
 "Exporting the gaussian fit information because it takes a little while to \
run ",
 StyleBox["(should not have to run this again and can just skip down to the \
uploading if you have already done this step!)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7794663627100935`*^9, 3.779466393222839*^9}, {
  3.7794664362793016`*^9, 
  3.779466441254586*^9}},ExpressionUUID->"4ae156a1-d88c-49c6-926e-\
7ab0b7687d1c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Put", "[", 
      RowBox[{
       RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
        RowBox[{"[", "cell", "]"}], "]"}], ",", 
       RowBox[{"myRedRGBGaussIntAllCellsFNs", "[", 
        RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedRGBGaussIntAllCellsFNs"}], ",", "1"}], 
      "}"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Only", " ", "use", " ", "if", " ", "you", " ", "generated", " ", "more", 
    " ", "Gaussian", " ", "Fits", " ", "from", " ", "the", " ", "line", " ", 
    "above"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.771339074563786*^9, 3.771339123283529*^9}, {
   3.771339178676618*^9, 3.77133928520326*^9}, {3.771339335092496*^9, 
   3.7713393351725*^9}, 3.7713393844046974`*^9, {3.771668641582382*^9, 
   3.7716686775972166`*^9}, 3.7723686164695573`*^9, {3.7724699337540655`*^9, 
   3.7724699339880657`*^9}, {3.772469964780085*^9, 3.7724699654692883`*^9}, {
   3.77247176888871*^9, 
   3.7724717691383104`*^9}},ExpressionUUID->"5bf94cf4-a0c4-42a6-a1cd-\
56a54bea52a0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBGaussIntAllCellsFNs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7713395065739155`*^9, 3.771339513588886*^9}, {
  3.772469871409419*^9, 
  3.772469886766325*^9}},ExpressionUUID->"53c51c74-aa3d-42ed-adde-\
c73cdd0bd5c9"],

Cell["\<\
Counting the number of myRedTrackRGBGaussIntAllCells files, should be the \
same number as there are cells\
\>", "Text",
 CellChangeTimes->{{3.7794664792867613`*^9, 
  3.7794664844080544`*^9}},ExpressionUUID->"32803bff-4df4-4ff7-a720-\
2acb46b34b71"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedTrackRGBGaussIntAllCells"}]], "Input",
 CellChangeTimes->{{3.7724697669463034`*^9, 3.7724697757132387`*^9}, {
  3.7724698257813845`*^9, 
  3.772469836227023*^9}},ExpressionUUID->"7eeaa05c-9f9c-43f9-913a-\
d6e19b266896"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7724697691541443`*^9, 3.772469776463441*^9}, 
   3.772469837116626*^9, {3.772471990804814*^9, 3.772472002230194*^9}, 
   3.77248170475747*^9, 3.772558129869723*^9, 3.772566592115052*^9, 
   3.7745371135305786`*^9, 3.7765491969984217`*^9, 3.776551786083285*^9, 
   3.7776864758713284`*^9, 3.7777205188883266`*^9, 3.777720631354658*^9, 
   3.778279637028822*^9, 3.778288872808666*^9, 3.7783292688288364`*^9, 
   3.7794664645999217`*^9, 3.779468785594675*^9, 
   3.779469219674503*^9},ExpressionUUID->"7ecbd717-27ea-42ae-a56b-\
1b81c18dd75c"]
}, Open  ]],

Cell["\<\
Looking at the length of each gaussian fit, should be the track number above \
divided by the 488 and 561 interval, each number is the length of the \
gaussian fits for each spot\
\>", "Text",
 CellChangeTimes->{{3.77946651125459*^9, 
  3.779466560583411*^9}},ExpressionUUID->"b974caec-090b-4378-9f9d-\
95d99f037b78"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771339546115616*^9, 3.771339571043877*^9}, {
   3.772468999298591*^9, 3.7724690052818546`*^9}, 3.7724720248658347`*^9, 
   3.772481730222176*^9, {3.774618365068844*^9, 
   3.7746183850560617`*^9}},ExpressionUUID->"7473c9fb-6ca4-44c8-be2b-\
adde3e08345d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "120", ",", "31", ",", "33", ",", "24", ",", "50", ",", "22", ",", "20", 
   ",", "24", ",", "25", ",", "43", ",", "23", ",", "23", ",", "22", ",", 
   "27", ",", "27", ",", "25", ",", "45", ",", "33", ",", "22", ",", "21", 
   ",", "30", ",", "34", ",", "27", ",", "43", ",", "21", ",", "34", ",", 
   "37", ",", "29", ",", "21", ",", "83", ",", "64", ",", "22", ",", "59", 
   ",", "29", ",", "34", ",", "25", ",", "22", ",", "78", ",", "33", ",", 
   "27", ",", "26", ",", "26", ",", "25", ",", "25", ",", "29", ",", "28", 
   ",", "23", ",", "20", ",", "88", ",", "29", ",", "27", ",", "30", ",", 
   "21", ",", "27", ",", "24", ",", "23", ",", "46", ",", "29", ",", "51", 
   ",", "46", ",", "21", ",", "37", ",", "31", ",", "30", ",", "35", ",", 
   "22", ",", "28", ",", "25", ",", "23", ",", "39", ",", "25", ",", "29", 
   ",", "20", ",", "24", ",", "24", ",", "29", ",", "28", ",", "22", ",", 
   "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.771339548019725*^9, 3.771339571637911*^9}, 
   3.771591400782464*^9, 3.7716089972226095`*^9, 3.7716686345280323`*^9, 
   3.7716686871553974`*^9, 3.7724684174801006`*^9, {3.7724690029100037`*^9, 
   3.7724690060906687`*^9}, 3.77246935183574*^9, {3.7724719908458157`*^9, 
   3.772472025115836*^9}, {3.7724817048372574`*^9, 3.7724817313065434`*^9}, 
   3.772558129903324*^9, 3.772566592166907*^9, 3.7745371135462327`*^9, {
   3.774618365553071*^9, 3.7746183855714164`*^9}, 3.7765491970609083`*^9, 
   3.776551786098869*^9, 3.7776864759025364`*^9, 3.777720520438093*^9, 
   3.777720631479594*^9, 3.7782796370600953`*^9, 3.77828887290238*^9, 
   3.7783292689382153`*^9, 3.779466465835992*^9, 3.779468795630249*^9, 
   3.779469220732563*^9},ExpressionUUID->"d3651f72-e8b1-4be2-bb42-\
8c053d33811d"]
}, Open  ]],

Cell["\<\
This is the handtracking code, you can either click each spot one at a time \
for the downstream analyses OR you can take all the spots from a particular \
cell not both.\
\>", "Text",
 CellChangeTimes->{{3.779469805321*^9, 
  3.7794698919779563`*^9}},ExpressionUUID->"58fae28c-ce9b-4285-b0dd-\
db7302afc8f4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goodredspotlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"lastsaved", ",", "numbersaved"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageAdjust", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "1", ",", 
             RowBox[{"1", ";;"}]}], "]"}], "]"}], "//", "Mean"}], ")"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageAdjust", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "2", ",", 
             RowBox[{"1", ";;"}]}], "]"}], "]"}], "//", "Mean"}], ")"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"ImageAdjust", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "3", ",", 
             RowBox[{"1", ";;"}]}], "]"}], "]"}], "//", "Mean"}], ")"}]}], 
       ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<Last Saved\>\"", ",", "lastsaved"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Number Saved\>\"", ",", "numbersaved"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"spot", ",", "1", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
       RowBox[{"[", "cell", "]"}], "]"}]}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cell", ",", "1", ",", 
     RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Click To Save Spot\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lastsaved", "=", 
        RowBox[{"{", 
         RowBox[{"cell", ",", "spot"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"mytempgoodspot", "=", 
        RowBox[{"{", 
         RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "spot"}], "]"}], "]"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mytemptracknumber", "=", 
         RowBox[{"{", 
          RowBox[{"myRedParameterSplitColReg", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "1", ",", "1"}], "]"}], "]"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mytempgoodspotGaussInt", "=", 
         RowBox[{"{", 
          RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot"}], "]"}], "]"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"goodredspotlist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"goodredspotlist", ",", 
           RowBox[{"{", 
            RowBox[{"cell", ",", 
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", "mytemptracknumber", 
             ",", "  ", "mytempgoodspot", ",", "mytempgoodspotGaussInt"}], 
            "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"numbersaved", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Cells_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", "goodredspotlist"}], "]"}]}], ",", 
          RowBox[{"\"\<Spots_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", 
             RowBox[{"goodredspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"cell", ",", "3", ",", "All", ",", "1"}], "]"}], 
              "]"}]}], "]"}]}]}], "}"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Click Here If All Look Good (Take All Spots From This Cell!)\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lastsaved", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
            RowBox[{"[", "cell", "]"}], "]"}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"mytempgoodspot", "=", 
        RowBox[{"{", 
         RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "All"}], "]"}], "]"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mytempgoodspotGaussInt", "=", 
         RowBox[{"{", 
          RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "All"}], "]"}], "]"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"goodredspotlist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"goodredspotlist", ",", 
           RowBox[{"{", 
            RowBox[{"cell", ",", 
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", 
             RowBox[{"Thread", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"myRedParameterSplitColReg", "[", 
                 RowBox[{"[", 
                  RowBox[{"cell", ",", "All", ",", "1", ",", "1"}], "]"}], 
                 "]"}], ",", "  ", 
                RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
                 RowBox[{"[", 
                  RowBox[{"cell", ",", "All"}], "]"}], "]"}], ",", 
                RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
                 RowBox[{"[", 
                  RowBox[{"cell", ",", "All"}], "]"}], "]"}]}], "}"}]}]}], 
            "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"numbersaved", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Cells_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", "goodredspotlist"}], "]"}]}], ",", 
          RowBox[{"\"\<Spot_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"goodredspotlist", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3", ",", "All", ",", "3", ",", "1"}], 
                 "]"}], "]"}], ",", "1"}], "]"}]}], "]"}]}]}], "}"}]}]}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Red\>\"", ",", "Large", ",", "Red"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Green\>\"", ",", "Large", ",", " ", "Green"}], "]"}], 
       ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Blue\>\"", ",", "Large", ",", "Blue"}], "]"}]}], "}"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.72670444728049*^9, 3.726704494612335*^9}, {
   3.7267045433066792`*^9, 3.7267047126610384`*^9}, {3.726704795575425*^9, 
   3.726704825590955*^9}, {3.7267049120797806`*^9, 3.7267051017542987`*^9}, {
   3.726705199726963*^9, 3.7267052705855937`*^9}, {3.7267053080289145`*^9, 
   3.7267054157802563`*^9}, {3.7267056378195457`*^9, 
   3.7267056866165895`*^9}, {3.72670575329906*^9, 3.7267059095885878`*^9}, {
   3.7267060615217075`*^9, 3.7267061695090837`*^9}, {3.7267062080504427`*^9, 
   3.7267062135030823`*^9}, {3.726706286986806*^9, 3.7267063702133074`*^9}, {
   3.7267064138394628`*^9, 3.7267064216212626`*^9}, {3.7267065324965262`*^9, 
   3.7267067171595674`*^9}, {3.7267067675979524`*^9, 3.726706787920493*^9}, {
   3.7267068220780067`*^9, 3.7267069413148923`*^9}, {3.726707024880151*^9, 
   3.72670707453283*^9}, {3.726707146568262*^9, 3.7267071829611807`*^9}, {
   3.7267072137376614`*^9, 3.726707226477189*^9}, {3.726707268721161*^9, 
   3.726707302184136*^9}, {3.726707347634383*^9, 3.726707364791018*^9}, {
   3.726707439994464*^9, 3.726707443836672*^9}, {3.726707485149291*^9, 
   3.726707558360489*^9}, {3.726707663262809*^9, 3.7267076826881175`*^9}, {
   3.726707923457288*^9, 3.726707964595018*^9}, {3.7267080998717604`*^9, 
   3.7267081237994685`*^9}, {3.7267081725554085`*^9, 
   3.7267081895263786`*^9}, {3.7267085459055*^9, 3.7267085908011274`*^9}, {
   3.7267086217563486`*^9, 3.7267086347398815`*^9}, {3.726708764508135*^9, 
   3.7267087790388036`*^9}, {3.7267088268193493`*^9, 3.726708832284294*^9}, {
   3.7267100793389854`*^9, 3.7267100916891403`*^9}, {3.7267105497390027`*^9, 
   3.7267106182597256`*^9}, {3.726710703067725*^9, 3.7267107579148965`*^9}, {
   3.7267109011065965`*^9, 3.726710911114146*^9}, {3.726711018997254*^9, 
   3.7267110375604963`*^9}, 3.7267110701946545`*^9, {3.726711149049497*^9, 
   3.7267111526568685`*^9}, {3.726711638832678*^9, 3.7267116532205825`*^9}, {
   3.726711841630866*^9, 3.726711845834319*^9}, {3.72671190293672*^9, 
   3.7267119085206995`*^9}, {3.72671220690578*^9, 3.7267122619413996`*^9}, {
   3.726712299968387*^9, 3.726712359745057*^9}, {3.7267124340718036`*^9, 
   3.72671245636687*^9}, {3.72671264181277*^9, 3.726712719831187*^9}, {
   3.7267128089725804`*^9, 3.7267128585490284`*^9}, {3.726712941773153*^9, 
   3.726713016707507*^9}, {3.726713052862712*^9, 3.726713102499483*^9}, {
   3.7267131730605536`*^9, 3.726713182876116*^9}, {3.7267133374342184`*^9, 
   3.7267133411105366`*^9}, {3.7267134272537746`*^9, 3.726713449898782*^9}, {
   3.72671348549842*^9, 3.726713513101472*^9}, {3.7267135864603357`*^9, 
   3.726713620543038*^9}, {3.7267136796934414`*^9, 3.7267137452090607`*^9}, {
   3.7267137995400195`*^9, 3.7267138087567425`*^9}, {3.7267138388582473`*^9, 
   3.726713850168662*^9}, {3.726713884219524*^9, 3.7267139900602913`*^9}, {
   3.7267140387090764`*^9, 3.726714058072736*^9}, {3.726851062561329*^9, 
   3.726851108391531*^9}, {3.7268512070836864`*^9, 3.726851212437565*^9}, {
   3.7269376338929267`*^9, 3.726937649955846*^9}, {3.72693942530739*^9, 
   3.7269394273715076`*^9}, {3.726939475051235*^9, 3.726939477451372*^9}, {
   3.7269395607311354`*^9, 3.7269395635792985`*^9}, {3.726942201797196*^9, 
   3.7269422089576054`*^9}, {3.7277126591881933`*^9, 3.727712691169183*^9}, {
   3.7277234597592793`*^9, 3.727723463874364*^9}, {3.771104192899848*^9, 
   3.771104195167094*^9}, {3.771104705035037*^9, 3.771104709985818*^9}, {
   3.771104917461463*^9, 3.7711049227744875`*^9}, {3.77110502466527*^9, 
   3.7711050636739597`*^9}, {3.77110512218799*^9, 3.771105142580368*^9}, {
   3.771105177821249*^9, 3.771105179501979*^9}, {3.771105559458762*^9, 
   3.7711056152538056`*^9}, 3.771105701396356*^9, {3.771106155045681*^9, 
   3.7711061694322586`*^9}, {3.7711062865343733`*^9, 3.771106353982567*^9}, {
   3.771106687222252*^9, 3.771106747356059*^9}, {3.771106886386295*^9, 
   3.771106887573649*^9}, {3.7711069336719112`*^9, 3.77110693400566*^9}, {
   3.771106991431389*^9, 3.77110699149124*^9}, {3.771107067186936*^9, 
   3.7711071052911644`*^9}, {3.7711071443380175`*^9, 3.771107150450965*^9}, {
   3.771107480175367*^9, 3.771107485779932*^9}, {3.77110758101163*^9, 
   3.771107587390068*^9}, {3.771107630179906*^9, 3.771107731385523*^9}, {
   3.7711087620421023`*^9, 3.771108915167012*^9}, {3.7711102648967047`*^9, 
   3.7711102966488285`*^9}, 3.7711109098725834`*^9, 3.7711805101149397`*^9, {
   3.7711821099061203`*^9, 3.7711821276296186`*^9}, {3.7711822027821913`*^9, 
   3.771182207086851*^9}, {3.771251259809311*^9, 3.7712512724003563`*^9}, {
   3.771251884461932*^9, 3.7712518874811387`*^9}, {3.7712519178713427`*^9, 
   3.7712519414125175`*^9}, 3.7712519766802187`*^9, {3.771252009330611*^9, 
   3.771252038168144*^9}, {3.771252108009365*^9, 3.77125216831684*^9}, {
   3.771252302115879*^9, 3.7712523191461954`*^9}, {3.771252375622098*^9, 
   3.7712523878676023`*^9}, {3.7712524413988667`*^9, 3.771252460644271*^9}, 
   3.7712526148579383`*^9, {3.7712535088818207`*^9, 3.7712535275501785`*^9}, {
   3.771253651863454*^9, 3.7712536851915693`*^9}, {3.771253784371919*^9, 
   3.7712537929475503`*^9}, {3.7712538359869013`*^9, 
   3.7712538460131407`*^9}, {3.77125454601787*^9, 3.7712545506677256`*^9}, {
   3.771663379992488*^9, 3.771663467414769*^9}, 3.7716635013636255`*^9, {
   3.7716635344227858`*^9, 3.7716635440246916`*^9}, {3.771663615007148*^9, 
   3.7716636472792115`*^9}, {3.7716638367324543`*^9, 3.771663868951069*^9}, {
   3.7716639233597803`*^9, 3.771663923672242*^9}, {3.7716639797503815`*^9, 
   3.771663995359022*^9}, {3.7716640595620747`*^9, 3.771664069128793*^9}, {
   3.7716641198277617`*^9, 3.7716641202649746`*^9}, {3.771664433249571*^9, 
   3.7716644789326315`*^9}, {3.7716645942157526`*^9, 3.771664640629401*^9}, {
   3.77166490825998*^9, 3.771664910010008*^9}, {3.7716654484142094`*^9, 
   3.771665486839546*^9}, {3.771665531165316*^9, 3.771665554980791*^9}, {
   3.7716656138446827`*^9, 3.7716657378096695`*^9}, {3.771666138626957*^9, 
   3.7716662384771247`*^9}, {3.771666352457074*^9, 3.7716664157620444`*^9}, {
   3.771666446776373*^9, 3.771666456227687*^9}, {3.7716672400279846`*^9, 
   3.7716672480263343`*^9}, {3.771668411978709*^9, 3.7716684231966844`*^9}, {
   3.771668564555795*^9, 3.7716685668583546`*^9}, {3.7716690607418203`*^9, 
   3.7716690675398006`*^9}, {3.771669170908487*^9, 3.771669193395054*^9}, {
   3.7723705393752885`*^9, 3.772370593484759*^9}, {3.7724818428207545`*^9, 
   3.772481843136241*^9}, {3.7725667210091825`*^9, 3.7725667214600105`*^9}, {
   3.7725668742277966`*^9, 3.7725669095330324`*^9}, 3.7725675314033213`*^9, {
   3.7794667814660454`*^9, 3.779466781865068*^9}, {3.7794697275155497`*^9, 
   3.779469758539324*^9}},ExpressionUUID->"3454127d-547e-4b27-9c9f-\
8f83b09fad0a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myDataFileName", "=", "\"\<20190920_smFLAG-KDM5B\>\""}], ";", " ", 
  StyleBox[
   RowBox[{"(*", 
    StyleBox[
     RowBox[{"Change", " ", "this", " ", "name", " ", 
      RowBox[{"first", "!"}]}],
     Background->RGBColor[1, 0.5, 0.5]], "*)"}],
   FontSize->24,
   FontColor->RGBColor[0, 1, 1]]}]], "Input",
 CellChangeTimes->{{3.7783295557633715`*^9, 
  3.778329556575842*^9}},ExpressionUUID->"eb89260c-eddd-4149-87c1-\
6a6d486c7777"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HCRedTracksAllCells", "=", "goodredspotlist"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Need", " ", "to", " ", "now", " ", "export", " ", "it", " ", "out", " ", 
    "in", " ", "an", " ", "excel", " ", "format"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"analysisFolder", "=", "\"\<P:\\\\FCS_data\\\\\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HCRedTracksAllCells", ">>", 
    RowBox[{"(", 
     RowBox[{
     "analysisFolder", "<>", "\"\<\\\\\>\"", "<>", "myDataFileName", "<>", 
      "\"\<_HCRedTracksAllCells.m\>\""}], ")"}]}], ";"}], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "Change", " ", "the", " ", "name", " ", "of", " ", "the", " ", 
     "construct", " ", "above", " ", 
     RowBox[{"manually", "!"}]}], "*)"}],
   FontSize->18,
   Background->RGBColor[0.9, 1, 1]]}]}], "Input",
 CellChangeTimes->{{3.7713437050450096`*^9, 3.7713437479921613`*^9}, {
   3.771591239187114*^9, 3.771591277720641*^9}, {3.771669511339486*^9, 
   3.7716695120245123`*^9}, {3.771669543010857*^9, 3.771669570071046*^9}, {
   3.7716696046284475`*^9, 3.7716696622241197`*^9}, {3.7716700413804502`*^9, 
   3.771670134099656*^9}, {3.771670226904112*^9, 3.7716702372353153`*^9}, {
   3.771670275200105*^9, 3.7716702757329707`*^9}, {3.7716707792752132`*^9, 
   3.7716707943751993`*^9}, {3.7716708304549026`*^9, 
   3.7716708317647657`*^9}, {3.7716709583649693`*^9, 3.771670981434984*^9}, 
   3.7723707357386694`*^9, {3.774618414939493*^9, 3.774618431319171*^9}, {
   3.774618861497916*^9, 3.77461886542078*^9}, {3.7765478859141455`*^9, 
   3.776547889321185*^9}, {3.7765498516388025`*^9, 3.776549855172087*^9}, {
   3.7765499392525144`*^9, 3.7765499607946587`*^9}, {3.77772018997894*^9, 
   3.7777202050275207`*^9}, {3.7777207092009783`*^9, 3.777720711699691*^9}, {
   3.7782768526568775`*^9, 3.7782768551810126`*^9}, {3.7783256407489614`*^9, 
   3.7783256425766616`*^9}, {3.7783260735500565`*^9, 3.778326076502458*^9}, {
   3.7783295364561367`*^9, 3.7783295467404523`*^9}, {3.779470068155033*^9, 
   3.7794700688260717`*^9}},ExpressionUUID->"1ff76deb-c12d-4a7b-8ae4-\
e5b01fb2b0ff"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorizing Species ",
 StyleBox["(Do this one if all data sets are taken at the same imaging \
intervals!)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0.5]]
}], "Subsection",
 CellChangeTimes->{{3.7712565336887317`*^9, 3.771256549774989*^9}, {
   3.771256895461563*^9, 3.77125690844001*^9}, 3.771667564980994*^9, {
   3.772559085240713*^9, 
   3.772559095860551*^9}},ExpressionUUID->"f93355cc-de06-48e5-8a30-\
a9ce504001d9"],

Cell["\<\
I usually make this folder separately and copy and paste the \
HCRedTracksAllCells.m into this directory that I manually make, usually the \
date and the construct(s) name that was used for the experiment\
\>", "Text",
 CellChangeTimes->{{3.7794699690813665`*^9, 3.7794699962019176`*^9}, {
  3.7794700848419876`*^9, 
  3.7794701238822203`*^9}},ExpressionUUID->"08d08f04-4f69-4936-8aaa-\
319981a4d3ca"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "analysisFolder", "=", "\"\<P:\\\\FCS_data\\\\20190920_smFLAG-KDM5B\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7716707113715534`*^9, 3.7716707115051904`*^9}, {
  3.7724671164470882`*^9, 3.772467118364896*^9}, {3.772482063581051*^9, 
  3.772482063775577*^9}, {3.7735677788981433`*^9, 3.7735677810405226`*^9}, {
  3.774620998674166*^9, 3.7746210067074933`*^9}, {3.7777202437475824`*^9, 
  3.7777202712616916`*^9}, {3.7777203309798365`*^9, 3.777720333169775*^9}, {
  3.7777207192945347`*^9, 3.77772072129552*^9}, {3.778279923909816*^9, 
  3.77827992657885*^9}, {3.7783256497466526`*^9, 3.7783256509651194`*^9}, {
  3.7783293774348245`*^9, 
  3.7783293800593348`*^9}},ExpressionUUID->"1dc0698b-e013-4015-bd17-\
e170f6246154"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCellsFNs", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"analysisFolder", "<>", "\"\<\\\\*_HCRedTracksAllCells.m\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7268499807140965`*^9, 3.7268500277031384`*^9}, 
   3.7268501304843283`*^9, {3.7269371716464877`*^9, 3.726937178587885*^9}, {
   3.726937220443279*^9, 3.7269373238271923`*^9}, {3.7269373976344137`*^9, 
   3.726937442915004*^9}, {3.7269374759718943`*^9, 3.7269374836353326`*^9}, {
   3.7269375145320997`*^9, 3.7269375494910994`*^9}, {3.7269390729002333`*^9, 
   3.726939108211253*^9}, {3.7269391669966154`*^9, 3.7269391802923756`*^9}, 
   3.7269392557646923`*^9, {3.7269393961857243`*^9, 3.7269393982898445`*^9}, {
   3.7269394560891504`*^9, 3.726939457201214*^9}, {3.7269395419920635`*^9, 
   3.7269395440341806`*^9}, 3.7269396696023626`*^9, 3.7711038313818274`*^9, 
   3.7711041911838017`*^9, 3.7711042514230328`*^9, {3.771104345193139*^9, 
   3.771104346721648*^9}, {3.7711060817586875`*^9, 3.7711060821114798`*^9}, {
   3.7711061214627256`*^9, 3.7711061217529497`*^9}, {3.771247717858926*^9, 
   3.771247729244368*^9}, {3.7712477760845385`*^9, 3.771247831915947*^9}, {
   3.7712478880793476`*^9, 3.771247893116165*^9}, {3.7712484891914606`*^9, 
   3.7712484938674774`*^9}, {3.77124856166671*^9, 3.771248564073718*^9}, {
   3.771667358211341*^9, 3.7716673824530582`*^9}, 3.7716703330570135`*^9, {
   3.77167043290154*^9, 3.7716704381023245`*^9}, {3.771670671735075*^9, 
   3.771670703345566*^9}, {3.7716707525986032`*^9, 3.7716707580657115`*^9}, 
   3.7716708885510335`*^9, {3.7725682357142763`*^9, 
   3.772568235867874*^9}},ExpressionUUID->"92542dee-bd67-4bdf-913b-\
928d770b666d"],

Cell[CellGroupData[{

Cell[BoxData["HCRedTracksAllCellsFNs"], "Input",
 CellChangeTimes->{{3.77654989058922*^9, 
  3.776549891542282*^9}},ExpressionUUID->"a773bdbc-91a5-4690-84f9-\
894c67246191"],

Cell[BoxData[
 RowBox[{"{", \
"\<\"P:\\\\FCS_data\\\\20190920_smFLAG-KDM5B\\\\20190920_smFLAG-KDM5B_\
HCRedTracksAllCells.m\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.7765498876504793`*^9, 3.7765498922763176`*^9}, 
   3.776550021091137*^9, 3.7765523281337643`*^9, 3.7765527213411355`*^9, 
   3.7765530007827225`*^9, 3.776553543714381*^9, 3.776554359884647*^9, 
   3.7767857988848705`*^9, 3.77772033696487*^9, 3.777720792418478*^9, 
   3.778279974764991*^9, 3.7783258065156527`*^9, 3.778329383248479*^9, 
   3.778329696674202*^9},ExpressionUUID->"96e2b561-10bc-4793-8ce3-\
189e1a313486"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCells", "=", 
   RowBox[{"Get", "[", 
    RowBox[{"HCRedTracksAllCellsFNs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771667421766527*^9, 3.771667432416176*^9}, {
  3.7716705914173775`*^9, 3.7716706042301598`*^9}, {3.7716710463545685`*^9, 
  3.7716710837966347`*^9}, {3.7724821044041605`*^9, 
  3.772482105531851*^9}},ExpressionUUID->"4a85f69b-a2c4-4907-ab6b-\
a97baa54c856"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HCRedTracksAllCells", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7716691178736916`*^9, 
  3.7716691194146185`*^9}},ExpressionUUID->"9ebddaaf-b237-40a5-b1dd-\
0afad7eb8e3b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.771669125315364*^9, 3.771670470106185*^9, 
  3.7716710974780445`*^9, 3.772372437833399*^9, 3.772378846661028*^9, 
  3.7724820676110845`*^9, 3.7724821132562275`*^9, 3.7724823141608334`*^9, 
  3.772558820493142*^9, 3.7725626428481207`*^9, 3.7725682699189644`*^9, 
  3.7735678392674627`*^9, 3.776549437351885*^9, 3.776549877851562*^9, 
  3.7765500254823217`*^9, 3.7765523324980717`*^9, 3.776552726214979*^9, 
  3.7765530056608095`*^9, 3.776553547965028*^9, 3.7765543643004627`*^9, 
  3.776785814975103*^9, 3.7777203480601254`*^9, 3.7777208101403065`*^9, 
  3.778279981551136*^9, 3.7783258261466756`*^9, 3.7783293960430107`*^9, 
  3.778329706412006*^9},ExpressionUUID->"a40e699f-ef1a-48cf-a47a-\
89c0d5951898"]
}, Open  ]],

Cell["\<\
This is the spot detector or \[OpenCurlyDoubleQuote]species\
\[CloseCurlyDoubleQuote] definer function; it will define 4 types of species; \
all species must have a red signal (JF646, RNA signal); the species are \
categorized as: Red tracks, Red + Green tracks, Red + Green + Blue tracks, \
and Red + Blue tracks; these colors are based on the light of excitation!\
\>", "Text",
 CellChangeTimes->{{3.7794701301215773`*^9, 
  3.7794702687295055`*^9}},ExpressionUUID->"8f757ce7-48d1-40fd-a69c-\
46935fbde953"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies", "=", 
   RowBox[{"SpeciesPlotDataFN", "[", 
    RowBox[{"HCRedTracksAllCells", ",", "5", ",", "2"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.772450968071106*^9, 3.772450998178537*^9}, {
   3.7724510310814095`*^9, 3.77245104658282*^9}, {3.7724521805911613`*^9, 
   3.7724521809950485`*^9}, {3.7724535712536964`*^9, 3.772453572131628*^9}, {
   3.7735677916029243`*^9, 3.7735677948069725`*^9}, 3.776549408779958*^9, {
   3.776554167900709*^9, 3.7765541684786916`*^9}, {3.776554372447933*^9, 
   3.776554373777374*^9}, 3.7765550799616776`*^9, 3.776555149396467*^9, {
   3.776556050606642*^9, 3.7765561020595036`*^9}, {3.77655614253508*^9, 
   3.776556146632125*^9}, 3.776556379506573*^9, 3.7777203574985385`*^9, 
   3.7782799860058193`*^9},ExpressionUUID->"41df7aa9-6bf7-4f4d-b55f-\
6a753dcad743"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies"}]], "Input",
 CellChangeTimes->{{3.776556684707774*^9, 
  3.776556686155899*^9}},ExpressionUUID->"5ac57887-6e2c-4102-a44c-\
2adbff19aac1"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"104", ",", "74", ",", "0", ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{3.7765566869208527`*^9, 3.7767858343819466`*^9, 
  3.7777203717777176`*^9, 3.7777208294005404`*^9, 3.7782799958056965`*^9, 
  3.778325854636917*^9, 3.778329412060232*^9, 
  3.7783297221042223`*^9},ExpressionUUID->"017ae3e4-975f-46c0-b6ef-\
7b08f8ca116e"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorizing Species ",
 StyleBox["(Do this one if you have two data sets that are taken with \
different imaging intervals! Do not need to use otherwise)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0.5]]
}], "Subsection",
 CellChangeTimes->{{3.772558943681994*^9, 3.772558962214861*^9}, {
  3.7794702898497133`*^9, 
  3.7794702942019625`*^9}},ExpressionUUID->"d081328d-2e8e-4853-8fa3-\
28fdb3bf7d6b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "analysisFolder", "=", 
   "\"\<P:\\\\FCS_data\\\\12xSun-KDM5B_1xFLAG-12x-AlexX\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7716707113715534`*^9, 3.7716707115051904`*^9}, {
   3.7724671164470882`*^9, 3.772467118364896*^9}, {3.772482063581051*^9, 
   3.772482063775577*^9}, 
   3.7746210276020517`*^9},ExpressionUUID->"17824144-8bf2-405c-8cef-\
62a7f1b9e865"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCellsFNs", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"analysisFolder", "<>", "\"\<\\\\*_HCRedTracksAllCells.m\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7268499807140965`*^9, 3.7268500277031384`*^9}, 
   3.7268501304843283`*^9, {3.7269371716464877`*^9, 3.726937178587885*^9}, {
   3.726937220443279*^9, 3.7269373238271923`*^9}, {3.7269373976344137`*^9, 
   3.726937442915004*^9}, {3.7269374759718943`*^9, 3.7269374836353326`*^9}, {
   3.7269375145320997`*^9, 3.7269375494910994`*^9}, {3.7269390729002333`*^9, 
   3.726939108211253*^9}, {3.7269391669966154`*^9, 3.7269391802923756`*^9}, 
   3.7269392557646923`*^9, {3.7269393961857243`*^9, 3.7269393982898445`*^9}, {
   3.7269394560891504`*^9, 3.726939457201214*^9}, {3.7269395419920635`*^9, 
   3.7269395440341806`*^9}, 3.7269396696023626`*^9, 3.7711038313818274`*^9, 
   3.7711041911838017`*^9, 3.7711042514230328`*^9, {3.771104345193139*^9, 
   3.771104346721648*^9}, {3.7711060817586875`*^9, 3.7711060821114798`*^9}, {
   3.7711061214627256`*^9, 3.7711061217529497`*^9}, {3.771247717858926*^9, 
   3.771247729244368*^9}, {3.7712477760845385`*^9, 3.771247831915947*^9}, {
   3.7712478880793476`*^9, 3.771247893116165*^9}, {3.7712484891914606`*^9, 
   3.7712484938674774`*^9}, {3.77124856166671*^9, 3.771248564073718*^9}, {
   3.771667358211341*^9, 3.7716673824530582`*^9}, 3.7716703330570135`*^9, {
   3.77167043290154*^9, 3.7716704381023245`*^9}, {3.771670671735075*^9, 
   3.771670703345566*^9}, {3.7716707525986032`*^9, 3.7716707580657115`*^9}, 
   3.7716708885510335`*^9, {3.7725682357142763`*^9, 
   3.772568235867874*^9}},ExpressionUUID->"65c56447-9c48-4c90-9f20-\
a799d213c415"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCells", "=", 
   RowBox[{"Get", "[", 
    RowBox[{"HCRedTracksAllCellsFNs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771667421766527*^9, 3.771667432416176*^9}, {
  3.7716705914173775`*^9, 3.7716706042301598`*^9}, {3.7716710463545685`*^9, 
  3.7716710837966347`*^9}, {3.7724821044041605`*^9, 
  3.772482105531851*^9}},ExpressionUUID->"c87eb03b-01b5-4d05-b56d-\
f27376c18c21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HCRedTracksAllCells", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7716691178736916`*^9, 
  3.7716691194146185`*^9}},ExpressionUUID->"dc43848e-b743-499c-80bf-\
43ed7de0ae96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.771669125315364*^9, 3.771670470106185*^9, 
  3.7716710974780445`*^9, 3.772372437833399*^9, 3.772378846661028*^9, 
  3.7724820676110845`*^9, 3.7724821132562275`*^9, 3.7724823141608334`*^9, 
  3.772558820493142*^9, 3.7725626428481207`*^9, 3.7725682699189644`*^9, 
  3.7746210973504114`*^9},ExpressionUUID->"d17929e9-0712-41e6-a2d3-\
f9f7200494c5"]
}, Open  ]],

Cell["\<\
I am defining cells that might have had different imaging intervals below, \
usually don\[CloseCurlyQuote]t need to use this code; you will partition the \
HCRedTracksAllCells into two lists or more\
\>", "Text",
 CellChangeTimes->{{3.7794703153541718`*^9, 
  3.779470376793686*^9}},ExpressionUUID->"d8ff044c-9f7b-4cde-b1e4-\
8180c5fdc679"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HCRedTracksAllCells1", "=", 
   RowBox[{"HCRedTracksAllCells", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HCRedTracksAllCells2", "=", 
   RowBox[{"HCRedTracksAllCells", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", "5"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774621072861703*^9, 3.774621105539098*^9}, {
  3.774621267276846*^9, 
  3.7746212696997967`*^9}},ExpressionUUID->"e2146957-ef5e-4dca-a735-\
6186f3802e26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies1", "=", 
   RowBox[{"SpeciesPlotDataFN", "[", 
    RowBox[{"HCRedTracksAllCells1", ",", "5", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies2", "=", 
   RowBox[{"SpeciesPlotDataFN", "[", 
    RowBox[{"HCRedTracksAllCells2", ",", "5", ",", "3"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7725589811397295`*^9, 3.772558993243971*^9}, {
   3.7725590313275137`*^9, 3.772559032296517*^9}, 3.7725590674136486`*^9, 
   3.772559239452609*^9, 3.7725593834216547`*^9, 3.772568932740918*^9, {
   3.7746211101649323`*^9, 
   3.774621118027359*^9}},ExpressionUUID->"7ea9f0ba-69ba-4fc5-9677-\
70952f8d51a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies1"}]], "Input",
 CellChangeTimes->{{3.7725591777230186`*^9, 3.7725591787504478`*^9}, 
   3.7725592260824194`*^9, {3.7746212843879304`*^9, 
   3.7746212857469625`*^9}},ExpressionUUID->"5ce7e2cc-a540-4c1b-8acf-\
8cbb86cfacc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"114", ",", "11", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.77255917937366*^9, 3.7725592264568205`*^9, 
  3.7725592657712708`*^9, 3.772559311235821*^9, 3.7725685545178194`*^9, 
  3.772569017069543*^9, 3.772569192198102*^9, 
  3.7746213323523445`*^9},ExpressionUUID->"5f4fbc7a-a755-4eae-ae07-\
8df9b3356dfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"(", 
   RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies1"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.772568973410221*^9, 
  3.7725689764256315`*^9}},ExpressionUUID->"cc5215ef-8f8b-4dc5-a8ac-\
526a2f1d9621"],

Cell[BoxData["136"], "Output",
 CellChangeTimes->{3.7725690172871656`*^9, 3.7725691922928505`*^9, 
  3.7746213324616947`*^9},ExpressionUUID->"0cee0828-b645-4593-836c-\
d18b54d35e20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies2"}]], "Input",
 CellChangeTimes->{{3.772559170366715*^9, 3.7725591714265428`*^9}, 
   3.7725592221627474`*^9},ExpressionUUID->"bd7ff16c-9a5e-42f2-85a4-\
f1171e92265e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"329", ",", "10", ",", "3", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.772559172019344*^9, 3.7725592226473484`*^9, 
  3.7725594361279545`*^9, 3.772568554619548*^9, 3.7725689213297462`*^9, 
  3.772569017177841*^9, 3.772569192387597*^9, 
  3.7746213325398006`*^9},ExpressionUUID->"032b6017-9a10-431e-bb4d-\
361590609bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772569766486311*^9, 
  3.772569772764415*^9}},ExpressionUUID->"74509835-e59a-4566-bc7a-\
ffe04a7f994f"],

Cell[BoxData["443"], "Output",
 CellChangeTimes->{3.772569773230813*^9, 
  3.77462133264915*^9},ExpressionUUID->"0ec252aa-b09f-4c59-9d7c-aab3d16cbf0a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "All"}], "]"}], "]"}]}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.772569252306101*^9, 3.7725693249638824`*^9}, {
  3.7725695356893177`*^9, 3.7725695627769384`*^9}, {3.7725695943189273`*^9, 
  3.7725696948457127`*^9}, {3.772569786911812*^9, 3.772569825404396*^9}, {
  3.7725698787755775`*^9, 3.772569912002131*^9}, {3.7725699944418087`*^9, 
  3.7725700541983166`*^9}, {3.7725700934595327`*^9, 
  3.7725701058471828`*^9}},ExpressionUUID->"1867a164-36e8-464a-95a3-\
1613bb8aa952"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies"}]], "Input",
 CellChangeTimes->{{3.7725701136749177`*^9, 
  3.7725701149413795`*^9}},ExpressionUUID->"ab66ac41-86d4-4ce0-8fc7-\
dcad2ca216a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"443", ",", "21", ",", "8", ",", "18"}], "}"}]], "Output",
 CellChangeTimes->{3.772570115503615*^9, 
  3.7746213327897425`*^9},ExpressionUUID->"c82c1841-9c31-4011-bb58-\
a9d93c307b1e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exporting Out Excel With Intensities", "Subsection",
 CellChangeTimes->{{3.772454151912381*^9, 
  3.7724541576942983`*^9}},ExpressionUUID->"23b06f33-6b49-45c6-a056-\
91f669147d90"],

Cell["This is making the labels for the excel sheet here", "Text",
 CellChangeTimes->{{3.779470297274138*^9, 
  3.779470305145588*^9}},ExpressionUUID->"0bc3889a-213f-4b92-8669-\
70304d4ed4b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mylabel", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Cell_#\>\"", ",", "\"\<Spot_#\>\"", ",", "\"\<Time_(sec)\>\"", ",", 
     "\"\<R_GaussianInt\>\"", ",", " ", "\"\<R_95Conf\>\"", ",", 
     "\"\<G_GaussianInt\>\"", ",", "\"\<G_95Conf\>\"", ",", 
     "\"\<B_GaussianInt\>\"", ",", "\"\<B_95Conf\>\"", ",", 
     "\"\<Predicted_Species\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQzeIarBt46rWji3aNBYjWWRkirXj2teORtoOyIHrl
une7w6+9dmT/bL0XRE8/W7Tg+fvXjhkhaStAtKBOcfgLIP3ddX00iF6/eH8S
iP7W/zMVRN9/f2nTOyCdHdW4GUSLMFufqWJ+4/jE4u5ZEN178/UVEG0QmHoV
RG8KDX0Dopsk5D+AaDe5E19B9KW4qh8g+l7KQoVqIM3qfwRMh27xT+sG0ncS
CsH0mbA7PSB6x8uPYPr14X/zQbTbEa+FIDqDoXoViP427etqEN317c1ZEN33
xeEciHbQzVqUJP3GsVqzYR2I5hX6sjMVSOe5mO8G0QsPKLwH0Rprl34C0RLK
jKZpQLqowhVMAwAfXK6D
  "],ExpressionUUID->"abce38e6-845d-459d-9cce-394374b8c688"],

Cell["This sorts the cells and spots into an excel format", "Text",
 CellChangeTimes->{{3.7794703930656166`*^9, 
  3.779470413977813*^9}},ExpressionUUID->"bcdc23d7-c32a-4e6a-8930-\
bb0536e71fdb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myXLSdata", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
             RowBox[{"[", 
              RowBox[{"species", ",", "track", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Length", "@", 
             RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
             RowBox[{"[", 
              RowBox[{"species", ",", "track", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"Length", "@", 
             RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "1", ",", "All", ",", 
             "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "1", ",", "All", ",", 
             "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "2", ",", "All", ",", 
             "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "2", ",", "All", ",", 
             "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "3", ",", "All", ",", 
             "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "3", ",", "All", ",", 
             "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"species", ",", 
            RowBox[{"Length", "@", 
             RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}]}]}], 
           "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"species", ",", "1", ",", 
         RowBox[{"Length", "@", "myHCRedTracksAllCellsSpecies"}], ",", "1"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"track", ",", "1", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", "species", "]"}], "]"}]}], ",", "1"}], "}"}]}], "]"}],
      ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.749660209589438*^9, 3.749660294369785*^9}, 
   3.749671966324031*^9, 3.749673005906926*^9, {3.7599208225686803`*^9, 
   3.7599208575103045`*^9}, {3.759954742532348*^9, 3.759954743399576*^9}, {
   3.7599550505242443`*^9, 3.759955051437952*^9}, 3.759955194086593*^9, 
   3.7599555420063477`*^9, {3.7599555768168535`*^9, 3.7599555832785854`*^9}, {
   3.7724542674435053`*^9, 3.772454284028864*^9}, 3.7724606870949526`*^9, {
   3.772460798245269*^9, 3.772460848287587*^9}, {3.772461041440253*^9, 
   3.772461115691059*^9}, {3.772571479087079*^9, 3.772571486055784*^9}, {
   3.7725715703722987`*^9, 3.772571572815467*^9}, {3.77257163710266*^9, 
   3.772571650255706*^9}, {3.7725717644397087`*^9, 
   3.7725717917696686`*^9}},ExpressionUUID->"55b7adfa-5ec4-441d-a8ca-\
0c8604dcd771"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myXLSdataThread", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "@@", "#"}], "&"}], "/@", "myXLSdata"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.772571749673997*^9, 3.772571862550685*^9}, {
   3.772571961665813*^9, 3.772571964753851*^9}, 
   3.7765495056942024`*^9},ExpressionUUID->"a07ce7e9-91dc-4a69-ba6b-\
3c88102fdbac"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mylabelandXLSdata", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "mylabel", "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"myXLSdataThread", ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.75995555157301*^9, {3.7599555906397734`*^9, 3.7599555947255683`*^9}, {
   3.7724543718597655`*^9, 3.772454381238779*^9}, {3.772460697197296*^9, 
   3.7724607019144*^9}, {3.772460733947005*^9, 3.7724607425016365`*^9}, 
   3.772571913035043*^9, 
   3.7725719695037823`*^9},ExpressionUUID->"2b30d3cc-f02c-4b37-b2c9-\
0a35986c242f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylabelandXLSdata", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.772482550879939*^9, 
  3.772482551832724*^9}},ExpressionUUID->"75765033-c1c7-4938-914b-\
5275787308f3"],

Cell[BoxData["6489"], "Output",
 CellChangeTimes->{
  3.772482552363804*^9, 3.7725701309253364`*^9, 3.772571531878706*^9, 
   3.7725715750179987`*^9, {3.7725716271570015`*^9, 3.7725716541068926`*^9}, 
   3.772571710486582*^9, 3.772571919330225*^9, 3.77257197523059*^9, 
   3.7735680693499565`*^9, 3.774622009052677*^9, 3.776556489500802*^9, 
   3.776785857853194*^9, 3.7777204139181633`*^9, 3.777720834479637*^9, 
   3.778280035690029*^9, 3.7783259422038746`*^9, 
   3.7783297223801804`*^9},ExpressionUUID->"f988d581-e87f-45b6-ad0e-\
5c36c83ab8f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mylabelandXLSdata", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.731425527744526*^9, 3.731425532252339*^9}, {
   3.731425618578373*^9, 3.7314256213345823`*^9}, {3.7314256788789406`*^9, 
   3.731425689115365*^9}, {3.7362559540330524`*^9, 3.7362559566092005`*^9}, {
   3.736256239330371*^9, 3.7362562401774197`*^9}, 3.741013860473031*^9, 
   3.748089655325256*^9, 3.7496581014526386`*^9, {3.7496592960985994`*^9, 
   3.749659299159046*^9}, 3.7496594531687813`*^9, {3.749659513812601*^9, 
   3.7496595441842203`*^9}, {3.749659678956129*^9, 3.749659679070837*^9}, {
   3.749660246529481*^9, 3.7496602612994165`*^9}, {3.7496709045254803`*^9, 
   3.749670924205082*^9}, {3.7496709784851837`*^9, 3.7496709824505963`*^9}, 
   3.7599208651767855`*^9, {3.7599221523781033`*^9, 3.7599221533309994`*^9}, {
   3.759954748964026*^9, 3.7599547498858166`*^9}, {3.7599550554537663`*^9, 
   3.7599550565650244`*^9}, {3.772460705987834*^9, 3.7724607229744315`*^9}, {
   3.7724825557671757`*^9, 3.7724826026252217`*^9}, 3.7725377071627903`*^9, {
   3.7725707552208004`*^9, 3.7725707721814604`*^9}, {3.772570841068262*^9, 
   3.7725708587031217`*^9}, {3.772570931789529*^9, 3.7725709422406006`*^9}, {
   3.772571064115486*^9, 3.772571115846696*^9}, {3.772571166377205*^9, 
   3.7725711689058456`*^9}, {3.772571939913036*^9, 
   3.7725719447378464`*^9}},ExpressionUUID->"22531bb8-dc20-415c-b6bb-\
0962f78a340f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Cell_#\"\>", "\<\"Spot_#\"\>", "\<\"Time_(sec)\"\>", \
"\<\"R_GaussianInt\"\>", "\<\"R_95Conf\"\>", "\<\"G_GaussianInt\"\>", \
"\<\"G_95Conf\"\>", "\<\"B_GaussianInt\"\>", "\<\"B_95Conf\"\>", \
"\<\"Predicted_Species\"\>"},
    {"1", "1", "2", "0.013751988891131215`", "0.0042947157714443305`", 
     "0.10125066593980855`", "0.027836378268292085`", 
     RowBox[{"-", "0.0009870256915497548`"}], "0.0019242667903006196`", "1"},
    {"1", "1", "12", "0.012890955733828908`", "0.003791424114404429`", 
     "0.10734550304923914`", "0.028754123621311408`", 
     RowBox[{"-", "0.0010342828671661198`"}], "0.0023417701627395605`", "1"},
    {"1", "1", "22", "0.011260144207847024`", "0.003993413305841161`", 
     "0.09824626233431807`", "0.028832567115228667`", 
     RowBox[{"-", "0.00166692310650648`"}], "0.0022687016369869416`", "1"},
    {"1", "1", "32", "0.01159337053623875`", "0.002973103923604313`", 
     "0.09220341330274666`", "0.026474844498779546`", 
     RowBox[{"-", "0.0006468129758803839`"}], "0.0020152209316346968`", "1"},
    {"1", "1", "42", "0.011046962904543947`", "0.002769097855114872`", 
     "0.10556207118447303`", "0.030951849069358876`", 
     "0.0004797836441040227`", "0.001904221419262246`", "1"},
    {"1", "1", "52", "0.010801482401339074`", "0.003090427002307405`", 
     "0.10501283959558255`", "0.027638679689866774`", "0.002328177347647512`",
      "0.0022682400438450833`", "1"},
    {"1", "1", "62", "0.012505668567661636`", "0.0031521546215801614`", 
     "0.09539135600736222`", "0.031719056256554364`", 
     "0.0019334694123139414`", "0.0018829089238654477`", "1"},
    {"1", "1", "72", "0.015526915938307198`", "0.0029193290741500394`", 
     "0.10938735854735018`", "0.03587228256304989`", 
     RowBox[{"-", "0.0015857357149152902`"}], "0.002178896296386022`", "1"},
    {"1", "1", "82", "0.013825415899866756`", "0.0031309864258001444`", 
     "0.12182625502489153`", "0.032531777291117794`", 
     RowBox[{"-", "0.00129022298423337`"}], "0.0019031108960335778`", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7367707324566946`*^9, 3.741883420839083*^9, 3.7418836222756047`*^9, 
   3.749415169673113*^9, 3.749578543402894*^9, 3.7495826580228105`*^9, {
   3.749593315140524*^9, 3.7495933343642282`*^9}, {3.749659292600521*^9, 
   3.7496592995789394`*^9}, 3.749659398088788*^9, {3.749659471148951*^9, 
   3.7496594819687915`*^9}, {3.7496595144286623`*^9, 
   3.7496595506852903`*^9}, {3.749659675716565*^9, 3.7496596796831408`*^9}, 
   3.74965974140127*^9, 3.7496598011236706`*^9, {3.749660254654272*^9, 
   3.749660296969406*^9}, 3.749661310671708*^9, 3.7496618408338165`*^9, {
   3.749670890943482*^9, 3.749670934442072*^9}, 3.7496709831195097`*^9, 
   3.749671449681003*^9, 3.7496715291137404`*^9, 3.74967196883941*^9, 
   3.7496730273325825`*^9, 3.7599216549121695`*^9, {3.7599216852570453`*^9, 
   3.759921688200177*^9}, {3.759922139113125*^9, 3.759922154315146*^9}, 
   3.7599536428811502`*^9, 3.759955600373714*^9, 3.7600409921802635`*^9, 
   3.76045331932522*^9, 3.7605321030130014`*^9, {3.772460724157648*^9, 
   3.7724607448039784`*^9}, {3.77246112051807*^9, 3.7724611290179977`*^9}, 
   3.7724614868673754`*^9, {3.7724825414616947`*^9, 3.77248260354834*^9}, 
   3.7725377074862723`*^9, 3.7725701323930664`*^9, {3.7725706074487715`*^9, 
   3.772570626952263*^9}, {3.7725707609843683`*^9, 3.772570772839699*^9}, 
   3.772570850161954*^9, {3.7725709356611943`*^9, 3.77257094269436*^9}, {
   3.7725710652460036`*^9, 3.7725710702826614`*^9}, 3.772571116703187*^9, 
   3.7725711694274406`*^9, 3.7725714987061315`*^9, 3.772571533849718*^9, 
   3.772571576674818*^9, {3.7725719337872972`*^9, 3.772571944990063*^9}, 
   3.772571975917937*^9, 3.7735682875797534`*^9, 3.774622010146171*^9, 
   3.7765564903443527`*^9, 3.776785861493001*^9, 3.7777204151216555`*^9, 
   3.7777208355731287`*^9, 3.7782800362055273`*^9, 3.7783259431124496`*^9, 
   3.7783297225051165`*^9},ExpressionUUID->"276067b3-d0b9-4f4c-9ead-\
6047ab1b6007"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myDataFileName", "=", "\"\<20190920_smFLAG-KDM5B\>\""}], " ", ";", 
  StyleBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["(",
       FontColor->RGBColor[1, 0.5, 0.5]], 
      StyleBox["*",
       FontColor->GrayLevel[0]]}]], 
    RowBox[{
     StyleBox["Change",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[" ",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox["this",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[" ",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox["name",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[" ",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[
      RowBox[{"first", "!"}],
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox["*",
      FontColor->GrayLevel[0]], 
     StyleBox[")",
      FontColor->RGBColor[1, 0.5, 0.5]]}]}],
   FontSize->24]}]], "Input",
 CellChangeTimes->{{3.778329407419142*^9, 3.7783294716873283`*^9}, 
   3.7783297157600975`*^9},ExpressionUUID->"b78fad86-b8cf-4650-a2e2-\
40538d448a4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
    "\"\<D:\\\\Dropbox\\\\Work Folder\\\\CSU Graduate Work\\\\Stasevich Lab\\\
\\Paper Work\\\\Frameshift\\\\Figures\\\\_Mathematica\\\\munsky_data\\\\\
Multiplex_FCS\>\"", "<>", "\"\<\\\\\>\"", "<>", "myDataFileName", "<>", 
     "\"\<.xls\>\""}], ",", "mylabelandXLSdata", ",", "\"\<XLS\>\""}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Need", " ", "to", " ", "name", " ", "this", " ", "correctly", " ", 
    "before", " ", 
    RowBox[{"export", "!"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7724611436913133`*^9, 3.772461167049985*^9}, {
   3.772461257394133*^9, 3.772461281097823*^9}, {3.7724614323043356`*^9, 
   3.7724614407480354`*^9}, {3.772570148107783*^9, 3.772570192440937*^9}, {
   3.77257063485015*^9, 3.772570648542541*^9}, {3.772570798398366*^9, 
   3.7725708017194843`*^9}, {3.7725708728034325`*^9, 3.772570908519889*^9}, {
   3.7725709553445683`*^9, 3.772570994318164*^9}, 3.7725711403785257`*^9, {
   3.772571179083581*^9, 3.7725712114567947`*^9}, {3.7725713857989397`*^9, 
   3.772571404908318*^9}, {3.7725715215333667`*^9, 3.772571523455594*^9}, {
   3.7725719902229905`*^9, 3.7725719905918255`*^9}, {3.77356803008321*^9, 
   3.7735680658649178`*^9}, {3.774622019467615*^9, 3.7746220245152435`*^9}, {
   3.7765564976915493`*^9, 3.7765565013599215`*^9}, {3.7767937012473755`*^9, 
   3.7767937039359264`*^9}, {3.7777204288265514`*^9, 3.777720456173109*^9}, {
   3.7777208422472305`*^9, 3.7777208445923223`*^9}, {3.778280047037236*^9, 
   3.7782800507745237`*^9}, {3.7783259752606525`*^9, 
   3.7783259771374846`*^9}, {3.7783293985495176`*^9, 3.778329399606881*^9}, {
   3.778329447550417*^9, 
   3.778329458029941*^9}},ExpressionUUID->"911606e9-9293-4d06-8f0f-\
c34a081061a1"],

Cell[BoxData["\<\"D:\\\\Dropbox\\\\Work Folder\\\\CSU Graduate \
Work\\\\Stasevich Lab\\\\Paper \
Work\\\\Frameshift\\\\Figures\\\\_Mathematica\\\\munsky_data\\\\Multiplex_FCS\
\\\\20190920_smFLAG-KDM5B.xls\"\>"], "Output",
 CellChangeTimes->{3.778325986279167*^9, 3.7783295909148135`*^9, 
  3.7783297304353733`*^9},ExpressionUUID->"28ee183c-3e59-4a1e-a35c-\
56ae1ba1c593"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Making Average Trims From  (*May need to do this later after hand \
categorizing*)\
\>", "Subsection",
 CellChangeTimes->{{3.717792623569831*^9, 3.7177926650643053`*^9}, {
  3.771103393891865*^9, 3.7711034033088675`*^9}, {3.771103458862124*^9, 
  3.771103471776307*^9}, {3.7711035281225777`*^9, 
  3.771103538951401*^9}},ExpressionUUID->"962bcd22-6bd1-458a-b4f3-\
02cb8c711d56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myCombineMaxRedDelta", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Max", "@@", 
    RowBox[{"Differences", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOR"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYR"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWR"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPR"}]}], ")"}]}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730668192827387*^9, 3.7306682141864457`*^9}, 
   3.7306684236231766`*^9, {3.7306685007372117`*^9, 3.730668650281299*^9}, 
   3.73067196237479*^9, {3.7306719950350747`*^9, 3.7306719976736865`*^9}, {
   3.730731052855708*^9, 3.730731053089709*^9}, {3.730834879797772*^9, 
   3.7308349024077663`*^9}, {3.7308349384931726`*^9, 3.730834943966652*^9}, {
   3.7308351029633794`*^9, 3.7308351073815985`*^9}, {3.7308354529438753`*^9, 
   3.7308354567350793`*^9}, {3.731865332899798*^9, 3.7318653334598303`*^9}, {
   3.731865393115242*^9, 3.731865400514665*^9}, {3.7324645731870265`*^9, 
   3.732464573744201*^9}, {3.732464607049323*^9, 3.7324646273515916`*^9}, {
   3.7324646618660164`*^9, 3.732464702967209*^9}, {3.732464797294425*^9, 
   3.7324647995582423`*^9}, {3.7324648748025074`*^9, 
   3.7324649666243773`*^9}, {3.7324650860052433`*^9, 3.732465086423814*^9}, 
   3.73246522956487*^9, {3.7324655691983504`*^9, 3.7324655732141924`*^9}, {
   3.771103416495285*^9, 
   3.771103418130373*^9}},ExpressionUUID->"dbe50712-a290-4284-afab-\
9d352cccf248"],

Cell[BoxData["0.004253420978784561`"], "Output",
 CellChangeTimes->{3.7324650328214064`*^9, 3.732465088812688*^9, 
  3.7324652394687185`*^9, 3.732465579484082*^9, 3.7324658434422455`*^9, 
  3.733487146147445*^9, 3.7568414701759415`*^9, 3.7568415161305704`*^9, 
  3.756841569299611*^9, 3.7568417764294586`*^9, 3.7568418596632195`*^9, 
  3.7568419412978888`*^9, 3.7568419914927597`*^9, 3.7568420970067945`*^9, 
  3.7568421983505907`*^9, 3.756842273460887*^9, 3.756842325352855*^9, 
  3.756842427104675*^9, 3.756842463954097*^9, 3.7568425847769623`*^9, 
  3.756842622147806*^9, 3.7568426718798275`*^9, 3.7568430475221844`*^9, 
  3.756843153311212*^9, 3.7568431894904904`*^9, 3.7571691508169866`*^9, 
  3.757169850120389*^9},ExpressionUUID->"6306e293-c46b-449a-bb33-\
a3c456b75a9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myCombineMaxGreenDelta", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Max", "@@", 
    RowBox[{"Differences", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOG"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYG"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWG"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPG"}]}], ")"}]}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730668805183886*^9, 3.7306688204965177`*^9}, {
   3.730672000820094*^9, 3.730672004486902*^9}, {3.7307310703933506`*^9, 
   3.7307310914898033`*^9}, {3.7308349556371155`*^9, 3.730834979305104*^9}, 
   3.730835113686971*^9, {3.730835458008852*^9, 3.730835460731509*^9}, {
   3.731865402799796*^9, 3.731865412004322*^9}, {3.7324646380253763`*^9, 
   3.7324646388337884`*^9}, {3.732464707892567*^9, 3.7324647465080748`*^9}, {
   3.732464919592424*^9, 3.7324649218481827`*^9}, {3.732464971536436*^9, 
   3.732464994484026*^9}, 3.73246523198402*^9, {3.7324655612686157`*^9, 
   3.732465565539256*^9}},ExpressionUUID->"5b7ec886-dcbe-429c-a70e-\
fcb2a034e5a4"],

Cell[BoxData["0.0389166995882988`"], "Output",
 CellChangeTimes->{
  3.730668823113926*^9, 3.730668877931452*^9, {3.7306691343787556`*^9, 
   3.730669161354622*^9}, 3.7306701964674153`*^9, {3.730731035377867*^9, 
   3.7307310952872143`*^9}, 3.730734807349923*^9, 3.7307371155105705`*^9, 
   3.730739140769064*^9, 3.7307393223315196`*^9, 3.7308163678443966`*^9, {
   3.7308349834361534`*^9, 3.7308349919430404`*^9}, {3.7308350876366634`*^9, 
   3.730835114506992*^9}, 3.730835212942072*^9, 3.7308355511574955`*^9, 
   3.730835748434123*^9, 3.73117289361024*^9, 3.731865466971466*^9, 
   3.7324650948850365`*^9, 3.7324652417199855`*^9, 3.732465581797659*^9, 
   3.7324658440734377`*^9, 3.733487147260849*^9, 3.7568414708029776`*^9, 
   3.756841517596654*^9, 3.756841570479679*^9, 3.756841777257506*^9, 
   3.7568418627283945`*^9, 3.7568419427839737`*^9, 3.7568419931388535`*^9, 
   3.75684209938393*^9, 3.7568421996816673`*^9, 3.756842275505004*^9, 
   3.756842326469919*^9, 3.756842427605898*^9, 3.7568424648034983`*^9, 
   3.756842585849023*^9, 3.756842622829608*^9, 3.756842673804433*^9, 
   3.756843048319786*^9, 3.756843154682415*^9, 3.7568431903348923`*^9, 
   3.757169152719095*^9, 
   3.757169852081501*^9},ExpressionUUID->"a4cdac20-44d1-471e-ba81-\
3970829b431a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myCombineMaxBlueDelta", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Max", "@@", 
    RowBox[{"Differences", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOB"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYB"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWB"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPB"}]}], ")"}]}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7306688506067863`*^9, 3.730668875208646*^9}, {
   3.7306720089579163`*^9, 3.730672011707922*^9}, {3.730731075836562*^9, 
   3.730731088283595*^9}, {3.7308350035891433`*^9, 3.7308350640242167`*^9}, 
   3.7308351170972404`*^9, {3.7308354610458326`*^9, 3.730835462945532*^9}, 
   3.7318654182446795`*^9, {3.731865493797001*^9, 3.7318654988032875`*^9}, {
   3.732464757382781*^9, 3.732464779919185*^9}, {3.732464922085493*^9, 
   3.732464926256487*^9}, {3.732465001306808*^9, 3.7324650262136974`*^9}, 
   3.7324652346739273`*^9, {3.7324655493586435`*^9, 
   3.732465554670537*^9}},ExpressionUUID->"810941a7-f464-4ed1-a60a-\
7aef4577ceea"],

Cell[BoxData["0.04328025132417679`"], "Output",
 CellChangeTimes->{
  3.730668875834647*^9, {3.730669134394356*^9, 3.7306691613858213`*^9}, 
   3.730670196483015*^9, {3.730731035393467*^9, 3.7307310953652143`*^9}, 
   3.7307348073655233`*^9, 3.7307371155105705`*^9, 3.730739140771064*^9, 
   3.7307393223627195`*^9, 3.7308163678846664`*^9, {3.7308350654570436`*^9, 
   3.7308350876707244`*^9}, 3.730835117708885*^9, 3.730835212977168*^9, 
   3.730835551183839*^9, 3.7308357484631996`*^9, 3.73117289362584*^9, 
   3.7318654678815184`*^9, 3.7318655021554785`*^9, 3.7324650988885455`*^9, 
   3.732465243954452*^9, {3.7324655578798723`*^9, 3.732465584140112*^9}, 
   3.7324658446184216`*^9, 3.733487148350054*^9, 3.7568414714460144`*^9, 
   3.756841519081739*^9, 3.756841571650746*^9, 3.7568417781255555`*^9, 
   3.75684186580457*^9, 3.7568419442600574`*^9, 3.756841994785948*^9, 
   3.756842101767067*^9, 3.7568422010117435`*^9, 3.756842277553121*^9, 
   3.756842327588983*^9, 3.7568424281313114`*^9, 3.7568424656725006`*^9, 
   3.756842586920085*^9, 3.756842623538411*^9, 3.756842675736237*^9, 
   3.7568430491641874`*^9, 3.756843156072818*^9, 3.7568431912114935`*^9, 
   3.7571691546332045`*^9, 
   3.757169854038613*^9},ExpressionUUID->"1c11d94d-82ce-4411-985b-\
4049837a5e67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "@", "myYellowAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", "myYellowParametersSplit"}], ">", "0"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myYellowAvgImg", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc1", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimYR", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYR"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYR"}]}]}], "+", 
                    "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<RNA\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc2", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"myTrimYG", "//", "Flatten"}], "//", "Mean"}], "//", 
                RowBox[{
                 RowBox[{"ImageAdjust", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYG"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYG"}]}]}], "+", 
                    "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
              ",", "\"\<0 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc3", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimYB", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYB"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYB"}]}]}], "+", 
                    "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<-1 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ColorCombine", "[", 
               RowBox[{"{", 
                RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], 
               "]"}], ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}], 
      ")"}]}], ";", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"myTrimYR", ">>", 
       RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.dat\>\""}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.m\>\""}], ",", 
        "myTrimYR"}], "]"}], ";", "\n", 
      RowBox[{"Import", "@", 
       RowBox[{"(", 
        RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.m\>\""}], ")"}]}]}], 
     "*)"}], " ", 
    RowBox[{"(*", 
     RowBox[{
     "Can", " ", "work", " ", "either", " ", "way", " ", "to", " ", "export", 
      " ", "the", " ", "actual", " ", "movies"}], "*)"}], "\n", 
    RowBox[{"myTrimYR", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimYG", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimYG.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimYB", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimYB.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"myTrimYR", ",", "myTrimYG", ",", "myTrimYB"}], "}"}], "]"}], ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myYellowRGBTrims.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimRed", "=", 
     RowBox[{
      RowBox[{"myTrimYR", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimRed.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimRed.tif\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimGreen", "=", 
     RowBox[{
      RowBox[{"myTrimYG", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimGreen", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimGreen.m\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimGreen", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgYellowTrimGreen.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimBlue", "=", 
     RowBox[{
      RowBox[{"myTrimYB", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimBlue.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimBlue", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgYellowTrimBlue.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", "myYellowAvgImg"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.716050956291523*^9, 3.7160509799448423`*^9}, {
   3.7160513545357556`*^9, 3.716051369246228*^9}, {3.7160537527593803`*^9, 
   3.716053777182626*^9}, 3.716057320641185*^9, {3.716306413281352*^9, 
   3.7163064210853662`*^9}, 3.7163064633556423`*^9, {3.716306506582719*^9, 
   3.7163065423237877`*^9}, {3.716306829679681*^9, 3.716306854934526*^9}, 
   3.71630860898346*^9, {3.716308666487749*^9, 3.716308668998893*^9}, 
   3.7163124316431036`*^9, {3.717509320786038*^9, 3.717509321191639*^9}, 
   3.7265136593235435`*^9, {3.726525613870813*^9, 3.726525618789484*^9}, {
   3.7265909067373314`*^9, 3.7265909709620047`*^9}, {3.726591765174431*^9, 
   3.726591768802639*^9}, {3.7271056909922047`*^9, 3.727105694188707*^9}, {
   3.727107334217054*^9, 3.7271073468722486`*^9}, {3.727979741928464*^9, 
   3.7279797453830214`*^9}, {3.7279798759943624`*^9, 
   3.7279798812459955`*^9}, {3.7279799680722256`*^9, 3.727980025501054*^9}, {
   3.732465208600317*^9, 3.732465242559874*^9}, {3.7324653007029533`*^9, 
   3.732465307296912*^9}, {3.732465359193899*^9, 3.7324653717693577`*^9}, {
   3.732465458784148*^9, 3.7324654700115404`*^9}, {3.732465752453321*^9, 
   3.732465756739064*^9}},ExpressionUUID->"bfaba94d-79ab-40fa-90a0-\
b5c962165f43"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjWtME3YcRYFOrKDgBEkFJdmGuFFgrDom8L+/BhQRcOM15CUhBenQgEA7
KnU1MnnjWEPFYnlUGAFbuoIKIgOCScFogrK2Y2wxaCSQiYtOFhUH3dw02Yd7
kpPz4b6TXZgodrCzs5NyXyNRdDxcIhHJkxzfSK4of6cg/010/X/HNnzPvC1c
OPZvROD1zSi9uhvCwh24YqjCE1MO9nUfQGxoIVZMB3BDUgZlSije96/EAK8d
5z/5nB2Wq8JaEgQwf7wb854pWFLmw7ZVBb/ZAfBzW1Ah7sEpvRIFASXw+UMF
6/YG9KzW4/W1ne20P1v60AnzGbEwTJ8B054Dr7ceaQ+smJFbcKuoAaapi+B3
9GEooA05KVrMZOSCeyyaxa2/wKIfzbKZh/Voi7sJQ8Mihue2UO+Jt0j8/G0K
Vt/CrLIDfnNnEfm0GT6D1fAr34MRtR9zqtEx/cJjpvbSoMV/HDbJdrI1HaGy
kwepxCmCCsTbKCb2CX7/7Vs4/5CHTI4G8UYHyF6Whq3uckXIlf1IqjMiI5RH
dzWpZFXr6Jr4Z7puvkxBvumk0P6Niq9/weq7o9C7lKAirhIGcQKbKxxnIWne
SPniV8xr+ORh6aLl8s1CjmOUMLDBTVi2qCF7rYBGk+7gReM47qk02Nh0BIfD
1CzuZRKbe3gUyfHXENr3EcnkE9TpBuGXVrlQJyHhN5wxuiSPJEHOOhJMT0L9
WR1IV4fBAg57DDd0m75CdvAwwg+9Rw8k7eTB3yIUeScLTzXzhPZcLa0JF5Dm
5nPs6DdBxq9Fz1Mpsna64OCGu8xRshVT6T3ge6yjoyN7SRSgp9S+SSof05Fx
SUTlMg/KC1pGf6gZYcVNuOdUhU6vEIz8kwyLJB3PghpxQWHCq2F3alTFU8/E
cUo0p5HhkDcZnFcQpbyPgKQJhG26iryiDmSeeMSqKybZi4VY9HZpsaZLicml
CXgNPYP7bQca/8mReqsXMWW+jBjFKOaNpzH9qRHO5lYku9YxBVnZHV42YoIv
sfOl+xG52Ixul1r4/jkGu8HbuGj7Dm2BOpyV6+Ez1w6vTVI0+oowVDnANDe8
YNl1ny1keaIzyxcRbsVg/RqscGoRLW3FB/+W48dXVfjLR4chyCEbr0Tf2kCo
DJGoiVAwF044PGtsLFqZjpPFEZByazB6Zhvs1+/FYmIqoriZcB+pwrKsFftc
EmApCsF/LomFHA==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -194.4}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk2tMkwcYhatTKtYABmUEBgTJROWq4KT0O+9XKlRbGRVxSISQ1AVdXWkD
0yCgwOi4TaHcHFCFVamSIS2QLIqChaaMIiCZsgCRzJm5JWNFJ07IwIwOk/04
J3ly/j3J8T+hPnJyLYfD+WLDah2R58RkZ8tzk5zeQYZcGbFH+W50/T9LAXGw
iaJRrVDj9K5ClL4tgVxYiruiFrAyHXZdroWXoxzqyXy08RV4/WQ3pt7sQMJH
x3FxhwzZFz/BaFIWaoNrYY8qQojaBG/vR1D59+PpXC98267jRpMGepUKc9YU
GJa9Ie/9GFx7MGQDMmwQnoYH9wYSLdWw5VtQnfAXYtLn8Ll2EDV3BnHOVI+9
C7dgDtHA45tT6CliYB4Gzlq/QkdLHuoXTPCa7IdP+zymu9bT45nNVKNzIlHH
S3g192BT7Pco12ghHyuGYF0YPj2fi+dGLczLV9CxdRpLvs40MxlCUUYRSSxJ
xLsmJo31feLp/oGFP45/p/Twv1CHo5oIpB3OxCtS4qHwAQbOvES8MZjOzuYT
L72TuOOD1BjYRDxDLCVzXKhs0zwiCq1ocbmKvfeVWNOiwlJnPS6d12OUv46M
I0dpm62TusN9WUmfiP1l0ZVtKNRSqzSUbKZXkHX/COmDRjiOZyLv/kmULBjg
oezFWBGPQpcOUJXQQn2VLMvhFLG3nMVsXfMA/d5zkByz75Gv4ikGcpuwO+cM
DAc0eD1ahUClGYJ2LjVuCSO3rHrKCfVgswJj2emgbWzMMSOtfCehtHA/cn8+
Btu5SjxJjgeZxGh4Vg73/qtIy3iIlBEncuqSUmV2DVW3Wunr7V20ZbGEitv5
NBziTofFZvhLy5EsdTA/NXtCtu8g/h6qgC+/FjU+L1BgWIY41YVcKiKpZIGl
6bDt5PelK2VH30PIsXKsrD+EmMgZxmVjJ3NhaifiZz7DwNpGvPhTh6FgAxar
rOh1+xmSITvuCYZRSTcR5V0M67wEElEE1B9YmYKJ24JYzDLFbQJkVOxB6+ZD
KFDF4m33qntdF5RrehB/rRr6D6swESTEXHQiRA5nBEyYmdU7cAbL7jBi/mPm
kfYPZiWUB39PV4TaE2Hvk+LZ7RQ4tJlwNebAM06BuNZUyIJOIKB0nPnBjcOU
6f2YLmUDs09Xyv92Vse8+fUKk3B3hLlp4kJRJ8HlvP0QVp7Cb5Fl2BieinSf
Quj3b8V/+2GD/g==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -583.2}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox[
       RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjH1M1HUcx09TRDi500kIR4cYWBhgEDeE3+f9PXwKZIXkCbljPBmPF40D
ZGgpT22ix4P8BkKCYnccnmhhPERKEosBRfLghaDRGiUwSOxQ40EYYrr1x/u1
vfba3o6Hkw/ErRQIBGnmL3AgOmNnamr0MYXZS4mNTnrHM+llFP2/Fev9SP13
OkkWn+1wv97NqcJ0vhfnnbmLogBOoVZw005hXPFNRuZVAlIey6GGNVqKNN6m
z3h3GizbSrqSHfTiRpC/3cDlX9tEwmHet5/xXGPiCS7SxZIbzRDTrlQhlYsT
qOV3KVU99aBOP1Bf33mqUXT4nl+Y9929uIWT1aRznRY+1L1vGy3G1lGvvoAm
7BzIGMqTcTqAEuozKEWhoHBtHQllldwVNxfqf8uL++OLL31719qS21guPZnL
pfDMFHJU8VRyq5CCn3SQ4vEkueXep15PHbl4fEVFVo70KKyU02RXcA5/XuKi
htbSzZAuKk2bopwlVwzqxfA/IsZMuBBXttog3V8Cs55HFNQ+Q+0aG1o47Upd
LV7U1l5JpbHX6PHwJPVq1mNqIgibVXJYnN2L+qb3kfDX60jm30T58gKJ7afp
+Xgxd308jHhNKA3Eael+twW+3ibHbPNBHDacQ9QHV8Fv1wN5FzCeXYT4sTgc
tfJB5tAK4EEoKWVRJLyRRXF235Pa2xqrG2Mgnb2MPa1zaMy1ZP1lm5l1pJSl
mVuxhaq7UH2TgVuJdpA0VpNaoqc7Q79Q8+cmSn9jPzp7NGjZ8ACa6beZNvM4
k6bUsu8c21jS6jLW1EjsZ9tW/OOtxIL3Q+KXB0jUukyi7Bm65HIITFaOd38w
Y6bnUcz1eBcrNNrLZztd5CPVSyxrF89e0a1h6qqTeJo6ScaNHrC2cIX2YykO
ZgWjuUMPO+M6Zq06wUYm51jHXiZfpd4jj84SyuNltWzfxBbWJzoFH40ZThsm
yJ/c0Sf2RNeZCPQ2lEBaPoN/oWR1G39iiSY7eVCErXzUfIoJ+ovY5WYnFiM7
hwDnWBrl88lQYInZ/a8hpyMMDXeUqPm0CSHzlmxDjJo5j2iZKdnAzhScYvmp
AWzsyDO4VWfj9reHqCUwggY3XaXdQSuh7ZIgoMIPdSFZMPukFks6E45+ZMsu
/GbPkubEbNhpEnkDFahThkDV70A/BgbSw3vv0brCNrLpWYW8egHuzkjwa20k
vMqLcVZTixvBLXh1ogknP6yESRePe30W+A+/2Iww
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {Center, Center}, {360., 360.}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
SuNJuyj+C8GOhR8=
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->RGBColor],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> Automatic, Interleaving -> False],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -1360.8000000000002}, {
      Center, Center}, {360., 359.9999999999998}], 
     TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {Center, Center}, {360., 359.9999999999998}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->100,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.733487153527465*^9, 3.756841472319064*^9, 
  3.7568415209268446`*^9, 3.7568415726928053`*^9, 3.7568417789746037`*^9, 
  3.7568418679226913`*^9, 3.7568419452871165`*^9, 3.7568419957190013`*^9, 
  3.756842105808298*^9, 3.756842202247814*^9, 3.756842280419285*^9, 
  3.7568423292060757`*^9, 3.7568424287563295`*^9, 3.7568424664409027`*^9, 
  3.7568425878821397`*^9, 3.7568426241960135`*^9, 3.756842679070444*^9, 
  3.7568430503205895`*^9, 3.756843158264822*^9, 3.756843193042697*^9, 
  3.7571691599495087`*^9, 
  3.7571698597559395`*^9},ExpressionUUID->"f6a87907-9256-40e1-a98f-\
059f936b4da6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "@", "myWhiteAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", "myWhiteParametersSplit"}], ">", "0"}], ",", 
   RowBox[{
    RowBox[{"myWhiteAvgImg", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc1", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimWR", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWR"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWR"}]}]}], "+", 
                    "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<RNA\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc2", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"myTrimWG", "//", "Flatten"}], "//", "Mean"}], "//", 
                RowBox[{
                 RowBox[{"ImageAdjust", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWG"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWG"}]}]}], "+", 
                    "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
              ",", "\"\<0 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc3", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimWB", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWB"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWB"}]}]}], "+", 
                    "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<-1 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ColorCombine", "[", 
               RowBox[{"{", 
                RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], 
               "]"}], ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}], 
      ")"}]}], ";", "\n", 
    RowBox[{"myTrimWR", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimWR.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimWG", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimWG.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimWB", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimWB.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"myTrimWR", ",", "myTrimWG", ",", "myTrimWB"}], "}"}], "]"}], ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myWhiteRGBTrims.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimRed", "=", 
     RowBox[{
      RowBox[{"myTrimWR", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimRed.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimRed.tif\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimGreen", "=", 
     RowBox[{
      RowBox[{"myTrimWG", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimGreen", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimGreen.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimGreen", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimGreen.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimBlue", "=", 
     RowBox[{
      RowBox[{"myTrimWB", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimBlue.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimBlue.tif\>\""}]}],
     ";", "\[IndentingNewLine]", "myWhiteAvgImg"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7157380248592215`*^9, 3.715738030921033*^9}, {
   3.7157383984023046`*^9, 3.715738413575532*^9}, {3.7157387694639835`*^9, 
   3.715738820926676*^9}, {3.715739895055627*^9, 3.71573990242484*^9}, {
   3.7157399415205116`*^9, 3.715739963532353*^9}, 3.715740508677746*^9, {
   3.715964895648266*^9, 3.7159649032922792`*^9}, {3.716051399174573*^9, 
   3.71605143786915*^9}, {3.7163134091460133`*^9, 3.7163134262809935`*^9}, {
   3.7163134580738125`*^9, 3.716313460296939*^9}, {3.7265133708152246`*^9, 
   3.72651337262407*^9}, {3.7265134408834305`*^9, 3.726513442927814*^9}, {
   3.7265135262781677`*^9, 3.7265135639030867`*^9}, {3.726513802109948*^9, 
   3.726513818516664*^9}, {3.726517424212894*^9, 3.7265174251493397`*^9}, 
   3.7265175714225597`*^9, {3.7265255678516636`*^9, 3.7265255713357215`*^9}, {
   3.726590979298482*^9, 3.726590990483122*^9}, {3.7265919570764074`*^9, 
   3.7265919613956547`*^9}, 3.7271057074666176`*^9, 3.7279800304207664`*^9, {
   3.732465271617139*^9, 3.732465277855397*^9}, {3.7324653149830303`*^9, 
   3.7324653203246756`*^9}, {3.7324654044915743`*^9, 3.732465411222539*^9}, {
   3.7324654902201557`*^9, 3.7324654980149508`*^9}, {3.732465757553295*^9, 
   3.7324657598953457`*^9}},ExpressionUUID->"fbe64d2d-54bf-4579-8599-\
586f0d898b4b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "@", "myPurpleAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", "myPurpleParametersSplit"}], ">", "0"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"myPurpleAvgImg", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc1", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimPR", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPR"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPR"}]}]}], "+", 
                    "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<RNA\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc2", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"myTrimPG", "//", "Flatten"}], "//", "Mean"}], "//", 
                RowBox[{
                 RowBox[{"ImageAdjust", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPG"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPG"}]}]}], "+", 
                    "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
              ",", "\"\<0 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc3", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{"myBlue", "=", 
                  RowBox[{
                   RowBox[{"myTrimPB", "//", "Flatten"}], "//", "Mean"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPB"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPB"}]}]}], "+", 
                    "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<-1 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ColorCombine", "[", 
               RowBox[{"{", 
                RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], 
               "]"}], ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}]}], 
     ")"}], ";", "\n", 
    RowBox[{"myTrimPR", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimPR.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimPG", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimPG.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimPB", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimPB.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"myTrimPR", ",", "myTrimPG", ",", "myTrimPB"}], "}"}], "]"}], ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myPurpleRGBTrims.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimRed", "=", 
     RowBox[{
      RowBox[{"myTrimPR", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimRed.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimRed.tif\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimGreen", "=", 
     RowBox[{
      RowBox[{"myTrimPG", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimGreen", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimGreen.m\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimGreen", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimGreen.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimBlue", "=", 
     RowBox[{
      RowBox[{"myTrimPB", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimBlue.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimBlue", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimBlue.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", "myPurpleAvgImg"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.717502006755875*^9, 3.7175020115656843`*^9}, {
   3.717502171096034*^9, 3.717502176501446*^9}, {3.726513596821008*^9, 
   3.7265136036145315`*^9}, {3.726513693421671*^9, 3.72651369429016*^9}, {
   3.7265137279895988`*^9, 3.726513733131876*^9}, {3.7265137816309195`*^9, 
   3.726513786792752*^9}, 3.7265175852422566`*^9, {3.7265255775882263`*^9, 
   3.726525585092105*^9}, {3.726590999058612*^9, 3.726591013698449*^9}, {
   3.726591966819965*^9, 3.726591970195158*^9}, 3.7279801922265263`*^9, {
   3.732465285549534*^9, 3.7324652944285192`*^9}, {3.7324653244754744`*^9, 
   3.732465330609195*^9}, {3.7324654181020603`*^9, 3.7324654248129005`*^9}, {
   3.7324655038812237`*^9, 3.7324655124499335`*^9}, {3.732465760787833*^9, 
   3.7324657630282564`*^9}},ExpressionUUID->"d21b96e1-4e51-4496-900c-\
8b3653b915c5"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjn9Qk3UAxl/njfila3IuElkMkZLjLJnKau/zfYNobMND2oQQRFvmAONE
pFweVDs0yCVDwKSQ3xOJkSFgOeUgBA8RcR0Sc+MGWpfAYccPb8NmLcK7/vg8
d597/vkI3s9WqFkUReV6Lo9CpYk6ckR1TOnxTA6osoQRWc9Ozv/Yh1YRjXUD
cboiyLgmjdRKgkj4wUeYdK8kHTOlaOmeBuvLBYS9YIKz4xh8/vGF8WYA3W9g
oJNFoSzEjTrGgjmHC2r5fVxvdkAa+wPO21vQJBrAp+p5PNhSimLzelB7tyFa
Z6ad5u3gSEZoduAVuArakFHUjzCmBo+/rseh6EVUD5lxi/InkvtT4GdlYzmT
8qkX0peOZoJ943OYbnhCY2rD1hM90PrUYYNCDzfnHFyJ0xi40wf/qxXIsRkQ
0x+K5v5T+GzPR3inpQIhqa34ZPZFrBOchby6AY7eJIgbatGk7MQrPTOYaHmT
JCm5RLbrHsKrykHJDiKR+wf82814WGNHio2H/FNadHqJ8Fv8eSRHTuBwlZjw
youJ3d1DWH2lJNgPZF+hBMlxd/GqrwdZzZ9D624Ldjw8A6vjMi4PO1B4egr1
Oi8yozhMhjLWMiVLYG6fZjObLQVk4pEHYRUOY2PjSewaHcFrVA/u7l+F3dfO
YUnWB/fCJLaPCUnb+i5ynSdmKErLtKljmK88y0m6nktWXGhC/MaL4KdbYHhc
hKREHj7OK1tuqIEzjEVEcStIcLeW/J25krkyHccIDngz3EUtIUt+pOp3I4zG
bhwq80VjYDXeTQtFsmqS7nBWovqXt3HV2ADeGQ4pSC0iCRN95KmkkjyYkZKp
sT8hk48jIbcEP3pmYZ6di9FmPygNnbQ0JQ4J2UV4avkClalTmG1ZRKQ/l4xt
iyKxXrNIr6OIfnAQdUcrUGKVY42rECl2DoSbttDfHRfiOD8b/H0xuPVvGXJD
biJq5x2ktj+Bfe8wWD+3w9tLC0tvDeLfGqFfKl6HfIUE1g9kdMZgPT4M34za
/JPIuSeG4LlGPP/TRRjGT0CapoN3owa2IAMEwrW4xHPRabFsfP9Go3i08hrd
bIpG5KIIqUs7ELzpWyzovsF8TjFe7uqET4AOXU9U0P/VQC/og3HBNwVZe0Jx
W9RJ/7rVKlb2mujeuX5x7utyrI7YjyDbWfTJqyDPUyPvvTLE7tQh09YOulWK
gcA1CEjm4D931Y0I
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -194.4}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk31MFHQcxo/XOBQ4DJFTBOFOvCMQCCS4+z1fAwU9dyiT95usToOLSTKg
C1xKFxOJGIHEEAQ8QJHMjQjGi5CszTTvQt4iKs4X8IjyDw+Jt0CJcOuP59k+
e7bPf4/H8YyjqeYcDifbZr2OKnPCsrKUp2OsX0GKMj3wzfRXo8P/aU8TEifQ
lkYGeTQf4kBb5Bwy+5hHLYf+RUD0HLT9z3BJ1Ifp1CUcOnILF+vG4afXwkYX
Bae9PPr1rD/pLDbTpIBPGfvEFK8WkIuJS8pvLGhz+iyClsagYCU4aT2IUtMM
xrnXsGhTidB/eHRMEUoXusRk1cGnL4XedMBXRgd/PkIrC8/gNWBJswvPkWBr
xLHvptA3M4+27k5ETrTDt0BEpYpkGo6S0LhRQF4Ne8jr9Emq4cso80QoLTyw
p7seQ9AF3kKvdgK3LeYRLzXh8PZGfCXbQX83RtCqIJgO1AjoeYSIirZLyOfU
2+SQvJNmz7uQa7gtFUb3w3zfInqrRtCTM4aXV1pR2OVJt6sdyL1HRJN1HtT1
PY+uFrxBS7ytNB03C6u2TfRk0oMuZ1uRm3EGtTduYllfjISYEsiz/MnvwevE
TeORQ64rzf21ArHbKqoarKkq+CUMv/Eps5xPWflreKtvGLloh/pGBRzNP4Ak
KYgOhj+FUh5EZz9bQcfTAcQP6VCYMoQ9zIrs3/sB/iU6+Ba2QiW5jl3NWvTf
VMPLbyOSdi2gsnEF3q4GjN6Zw+dfG6EKMyAvfhROjno4v9aExMg2XElSo6il
HipuLv64PM6Kik3shZRDpsAXmEh+hAAXIzS7tahPrIbftjZ4CytxccsJLB/O
xHC+Hcq8NsClPBozeU3sz6By5im+j747nTB9WIagum6UrmnARPUYXRXD0jpy
3eWMycRVFmVpj8cFG/HFOTOEunOhV/ugM7YaY4vXsLbDgmSxGdgfF41Wjj3u
+YRgW7c5nlRIkL2fj+beC/DNDcAZJsOlT35h86mxbJp/DyGd7bBL3ouwq+cx
ZPcpoiRiGBIkUJj9zmqdA6COOQ53/jnI/fOxWybEiFswfnLskXoMLuJdYQMM
OgWaAqZYzfuncCYvBfrBMLR0J6JiayZUHcusRiNHXGwxc/pogoU7ljHPhxo2
sGEEHdLr4N5vRtpgBDSCDDzMzcHaOwn4cUqFb1W+kDf1sk2P21ltVz9T3d3J
1u/HMXEeSf8D+ll7CQ==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -583.2}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox[
       RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk38w1ncAxx9mdDMkbYyp3BqPH48VxnZ9X58nOmVWcZhfHfXoGEN+hfxo
5yES8jAmzc/VNpQs9uPG4dkKGbvarD+y62bqrJUfZbYjl0x3++P9vnvd+5/X
P2+bqKSAGF2ZTJa2bq0CVJmeqamqrED9ZxCtSnB1SXg2mvyf7DtG4s8lKzHy
9wuiKbUW6/v1dM5WYXS9kTKfCh4XaPD0bCTv9Ffc5SnHgx3E6pie8O/qw7p3
lv4PZrCd+4OD8zVUphbyS20zR8abMLVXM3vnBGN27ZT0XUYepC9+DF4vzKdG
mEo5T9Pxc3yz5xr5RRWM7y1i3yedhE6cxWi6BtPCVuKtKmjzLWDr4zOMpn/O
SmMvM6tVrJaEoTUvhgdvo81N4NypJEyjcqnb0UO67UUWHl5hs/wz9qZcYvhe
EzEhhSj085iRFfBh2nZ6DkTh0X2I+4oCgnfWUL2tjt7OAaqzDER5/SLTtkt4
Wf5LZsgVqnfXEi4V4G3ggIG0GQP1fpqX38U2toiI1z/CXV/L0Vf0RFWDm1hz
FXPl4SLDeqeYS7IU3kMjtGz1wcc7nCPPWfBxYDQJSXvQqcoizF/DSvoC9jf9
RMHAbaE89prSxOeJaP+hTCQHeAidyus8Co3ji15b2hw24nX+KB0XfJDn59Os
/ImwyGUit2uE65KjUibLU87mKpSV+eViZW6LyF5uJ+n5Y5jIY8lRhfGWRyz6
vwcw1dVEsWELbRlP2XUvT/heNFa+k+2pdDOeFV3f+wvHn8ewitbQlJuIrmca
Nkt+FPW/yeTVYN4wb6UhZoivb2v5bcJCLKjyRWxQvRj69LCYVD9itvsC1nMa
6lOyWLdJhVTqhO61ABQdNZy4NcSN7/pYPNSK5b4B/tq9wpnAGbxuDaNJ7OCS
ZTz7tZmsDkeSpvVjy6g7PX4d1J3q5NucGd7f1c10Xgfq+HLGzJMoPKCmLDWB
+YhCKlMUvOcsZ5vRvFRsZ8EDu5cYcaojJ7mFDflXcXuxi0ETDQMNGfT4lDA4
AmNyBV16YRgnuLDxVV3iGi0ZVLtKPU4HpcsZajKcs2jR19CQrKK/zoubL9tj
XxqC2SYXku0duTFiRuhZC8Yffik1jwZJKXG+0qCJasfgyfUsB+kwsbwoWe1U
8M8GCw4nWtA3GoHN3UC8nH+VSr30sFs0RGU2KQWc7JbW7iczfOIu/QfBjYSh

          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {Center, Center}, {360., 360.}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtlnk41QkXxy+iJFuLLBGRLZQI8fueG5Ut4UW2UqnJMilJoknNRShlN1rs
JKEUWixRk5ItlcoghRbaXClLTPLe3uc9z3O2v8/nfM9R2uHv4MXPYrECZ/GC
g2ew6f79nocchX41uzz99Fb6CfBK8f/7r7q7RZTKfVXoj9eiFNyhTCy92dT/
XY5GJ1ZS2yMJavo6m14Ge9CIkThl7T+DLHNFWmjDIvkP6dD6/RP4DktQ6WAy
+qcEqMT6J0RbM1H+MRG69t9wyjIBxbXvkdUyiImIePAfH8Y59VqYmmZCc2EF
+r3GwYktx2j5IVjb1eANfkLkxxyczujCEWdNKnogxyxvysJ02wyqz2NjVuNG
2JfVIMbKFPPZEiR/axBJKlP458gKqv39M7LZ7WgUWECq3F4MjUygT1mGtg2n
wsu6B/5rNShxfyT+LhyBc5AyPTmTDUuLEkhzhWlvZxbOdxfD84oASWqEocCo
AQv8hjH4+hiOeH2B/ng72tQuoVc3Ee5MLGJqriK2dRF2Cz2CupMQsbauQjx3
CI3OEmQW08p0CV/AwndNGG01wNisVLwLyIO4+VNm9XcJyjqSC0H5m9jivpqu
WzzARHgpEm9qUHhUAnyi6yF4XYY6baKgyc5EsoombTxXiq9/5cBC24pce85i
r9kYLJ/akeinVGS0tGJydBCSkRfRyJIm1dYZtFsuAeY9Axge/YJC6wgo+PnD
ZfYbqEycBm/crC233qI5KB8iOXpM7dAIpjJv4epBX5RV3MDn6WQI3vsT5r3l
mI5xQ8W9WdCOVKfbC48juKIU8e4ehI+roX/sDp5sNKbboX7giGSj640y5Z7w
h7JDHFRzVpHkjlBMiadB9dBuSjOpwsSm90iTsaIg1WI0PKxDwM7V9G3oLqQr
T2O0W4wWq59HQGce6pUewybgMtbVq6JRrwYNA1korD+F6qxeeLlE4uiWA6gT
GIG2EAf/KT4NZxMuPrMioLL5Cmzlc3E0UBchXBlctFKkqs07IKuUiq+568mw
cjusM3IxpWxAH7QjMHLXGRZpyuS8JhUmuVn4sl6dUlakocCxGifkjelW6T2o
3/kIrb1rKOXQTHpVvIbEPZZSXPo4nB0laThKmj6pfoeV0z9YZDabzGRHoZWe
jGj7FgS73AXL6nfwrx1DivkZbJJ8i+ozbTxuIiBd1oqq4Hasn6mJd5nd+JF3
FTOZxXDvlEL0zSU0M8wWoac4qDsrTtmTG1AtbITFVeqk6hOFPtvz6MtQIo+l
SXA1fIWbdyTIQOg29qWb0PnIZXRAZgZJJcfSuIQsJWfoU/fUHerfNPyLAeKv
SyTBsrnEjXOnJfNAr/uU6KD8GtoWZY7MQEHi+suS64Y2KLwZwvr6JiyfI0Tp
xZUoULGEmMIQJppOwnK9O664tcPFMRZ7BaRh8y4FNvtX0F+Ou9Axcg3Lu+eR
n78Frj0ZgbCvBPElH0JUwgDEQxaRm308cmKE6dv7SUwFfcNHh32koTAFjWd2
1OKzgH0mR4gi7nVT/DTYZwx+gB2izG5OEGS/6JAhccsfpNMeTgFJMnTp71P0
6pMQ7Q+fxj4HQ+KPegLD2ifgS2zF0vwTCEE5vrj6wun5UwQVp+DCLVWsYN2B
JP8eFGrOR9tOURi76ZNZ3gG4VaXB0uwDSoosMW1VB08bfVIPD8fUcD+OHJ/k
aUkLDLr06PqHVrhtnUTpohpyftyIrbrx9LeUCTt612PofV/GZrE47FWMIP3K
pV7r2GK/3cNgqDb75KxkWhHbiMTwOPKOkyTt6KuY4ioS34UCeBsX4o/JS7Bd
ehlqBVnwFwyBgnc7WiqDIK7ug7yv0VBdPgeHPd3gvEkKbmqjMDL0QdDhJKTm
TkLolQNvFjwNXfQC78qyMKrJT8/uf8NxkQIYbeCjmKI3KDz4E0tqOeRt+gJr
Bzj0r68A+6jzM1gXi7Fvvt/Ani/ZBKs/TNlKu2azpWbmQ19skCTHOORqXoay
O/ZE0/Mozy0Iyx63If11EU6UZENuVzyKimrhLRyCrNA92Js0h8dxF8NvGoh8
+QycOMlllL7bwcVDFf+asCiqdhVcPfsZrt6/6KtzRvnoOfR6vMLyhReR8Wg9
dKXfIMOrHpVFueDoZOFa921IpfDYdz2Lrh5pCt8cTcvlyvDNM5zsX9WRpkoq
fJzSadL8HJ1euBP1OTup96MlTdgGoC/sCwa6PuNJuCgGK4tgZf0SCaoikOfG
wz4wHtJJ9kgPOITrs/wwdDSfmaXgiS+CgRjQT2KYk1p4XjgPSzQegv+BAxzz
qpna+zegXZIKS/cN4B5IwLGOetj7R0M/owKPKmow2R6J+GkOxrdfxLnNA2DU
syG78R64xWN4NqWB9+ZTMJSWpBlC5jjt+Bldq0yJoyMFs44GWAhz0ec6xcTv
KYF3Nos2zhDDZdndiGtqQk/kHNjeDkb2wdOIO8aH6YatiO+wxurFwgi8bYe5
E1FoCtKCYrMB3LvFccPpLKrsSqCnocu0j11A2olSXIzQw7SiAN04/BkRCv48
nfKH99pKKGxbh3Wb7PGJU4LGn0m4yhJD2O44BKo8QIOWEdoW+sPU7iHkKvgR
uTkMm8vG8TrFGKf2+6F76xMErpPBsEck+G+XoaA6EYkB2pgtzIF2iC426aij
/W4mQhkrrBAdZmzXPmXO/fmcOa4mjcWxshjxcmI+qi1AqIM5+mUa0KSVho7f
rBijG+U4vK8APk05EPVgY254HXZr6cD0fBT055TxODuBx6JhuC8ej4B/TLDR
WAP3Mg5CicfsCxdjVFnGQOLGZbjzdTL3m4C8l8eQLqWLNnVtWHrEIMhxB8pm
uGF2fjAWyxyDmN9KdCrmwWZFOOYv4oeS3gLoWKnAN1MWV6UmmDYFA9wP02M8
LATRLFllUqW1jblknG+i9GiMdyfD8PxcFbNdJQcHdQ6hsMIMLxrdUSAUD8Mx
I+TrvmUy9nli87QN0nz2ojbNjMfUWYQe3YVnUhoYjjmDpkem0Djpgi8BsSip
cMU8hZVQq6lGimwA9mksg4hcDLyvTzCPmuahZtwTaRwbuJ6VRtz3XGaT00mm
c+gKMxy3BPMP9jLZzU7MhTnuMJNMYAJ8rRm/LapY8pLD3Bf3NGk2qmZaRdpw
P1oCz/Q7TK6bFGLSiQ+OdysY4YcF6JkcZ+4O1Zv48vZQbo02Aldbg6Psj5G5
0hBbuRMvQ4Kxc480FDtTMb3NBTXNHqizTseDt95QeuMI68NeKPXWhpnOU+bw
9iTY5FczJ81mwMIuBnN7yhm1cRH4dpYh/WYL4zmvj2GuWMK7finjEF3JNMjP
/d8v8svkXMXBZb0yEflhwPwXIwV8hw==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->RGBColor],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> Automatic, Interleaving -> False],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -1360.8000000000002}, {
      Center, Center}, {360., 359.9999999999998}], 
     TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {Center, Center}, {360., 359.9999999999998}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->100,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.7568431588908234`*^9, 3.756843193464898*^9, 
  3.757169861476038*^9},ExpressionUUID->"b88f0e62-41ff-498b-af57-\
d5a927d01028"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"myRedOnlyAvgImg", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempc1", "=", 
             RowBox[{"ImageAdjust", "[", 
              RowBox[{
               RowBox[{"myRed", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TrimRed", "[", 
                   RowBox[{"[", "myRedTracks", "]"}], "]"}], "//", 
                  "Flatten"}], "//", "Mean"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "@", "myRed"}], ",", 
                 RowBox[{"Max", "@", "myRed"}]}], "}"}]}], "]"}]}], ",", 
            "\"\<RNA\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempc2", "=", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"TrimGreen", "[", 
                 RowBox[{"[", "myRedTracks", "]"}], "]"}], "//", "Flatten"}], 
               "//", "Mean"}], "//", 
              RowBox[{
               RowBox[{"ImageAdjust", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", "myGreen"}], ",", 
                   RowBox[{"Max", "@", "myGreen"}]}], "}"}]}], "]"}], 
               "&"}]}]}], ",", "\"\<0 Frame\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempc3", "=", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"TrimBlue", "[", 
                 RowBox[{"[", "myRedTracks", "]"}], "]"}], "//", "Flatten"}], 
               "//", "Mean"}], "//", 
              RowBox[{
               RowBox[{"ImageAdjust", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", "myBlue"}], ",", 
                   RowBox[{"Max", "@", "myBlue"}]}], "}"}]}], "]"}], 
               "&"}]}]}], ",", "\"\<-1 Frame\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorCombine", "[", 
             RowBox[{"{", 
              RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], "]"}], 
            ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
     RowBox[{
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7157382765748796`*^9, 3.715738282947692*^9}, {
   3.7157383777610674`*^9, 3.71573839027069*^9}, {3.7157400053360295`*^9, 
   3.71574003286528*^9}, {3.7157401831391506`*^9, 3.7157403053393717`*^9}, 
   3.7157404871315045`*^9, {3.7159649251121187`*^9, 3.71596493175773*^9}, {
   3.716051452198821*^9, 3.7160514949942355`*^9}, {3.7160575254201293`*^9, 
   3.716057527830534*^9}, 3.7160576280829616`*^9, {3.71605769191789*^9, 
   3.7160576968684998`*^9}, 3.7160578261529665`*^9, {3.7160585332961645`*^9, 
   3.7160585364865704`*^9}, {3.7161412082977123`*^9, 3.7161412575276012`*^9}, 
   3.716225662329816*^9, 3.7163165875910287`*^9, 
   3.726505127473242*^9},ExpressionUUID->"ad2029b1-e5d3-4147-8eac-\
41ad0f6fbc09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "@", "myRedOnlyAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"myRedOnlyAvgImg", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tempc1", "=", 
           RowBox[{"ImageAdjust", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"myTrimOR", "//", "Flatten"}], "//", "Mean"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "@", 
                RowBox[{"Mean", "@", 
                 RowBox[{"Flatten", "@", "myTrimOR"}]}]}], ",", 
               RowBox[{
                RowBox[{"Min", "@", 
                 RowBox[{"Mean", "@", 
                  RowBox[{"Flatten", "@", "myTrimOR"}]}]}], "+", 
                "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
          "\"\<RNA\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tempc2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"myTrimOG", "//", "Flatten"}], "//", "Mean"}], "//", 
            RowBox[{
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "@", 
                  RowBox[{"Mean", "@", 
                   RowBox[{"Flatten", "@", "myTrimOG"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"Min", "@", 
                   RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimOG"}]}]}], "+", 
                  "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
          ",", "\"\<0 Frame\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tempc3", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"myTrimOB", "//", "Flatten"}], "//", "Mean"}], "//", 
            RowBox[{
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "@", 
                  RowBox[{"Mean", "@", 
                   RowBox[{"Flatten", "@", "myTrimOB"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"Min", "@", 
                   RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimOB"}]}]}], "+", 
                  "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
          ",", "\"\<-1 Frame\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ColorCombine", "[", 
           RowBox[{"{", 
            RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], "]"}], 
          ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}]}], "\n", 
 RowBox[{
  RowBox[{"myTrimOR", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myTrimOR.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTrimOG", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myTrimOG.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTrimOB", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myTrimOB.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"myTrimOR", ",", "myTrimOG", ",", "myTrimOB"}], "}"}], "]"}], ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myRedOnlyRGBTrims.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimRed", "=", 
   RowBox[{
    RowBox[{"myTrimOR", "//", "Flatten"}], "//", "Mean"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimRed", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimRed.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimRed", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimRed.tif\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimGreen", "=", 
   RowBox[{
    RowBox[{"myTrimOG", "//", "Flatten"}], "//", "Mean"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimGreen", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimGreen.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimGreen", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimGreen.tif\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimBlue", "=", 
   RowBox[{
    RowBox[{"myTrimOB", "//", "Flatten"}], "//", "Mean"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimBlue", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimBlue.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimBlue", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimBlue.tif\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7157382765748796`*^9, 3.715738282947692*^9}, {
   3.7157383777610674`*^9, 3.71573839027069*^9}, {3.7157400053360295`*^9, 
   3.71574003286528*^9}, {3.7157401831391506`*^9, 3.7157403053393717`*^9}, 
   3.7157404871315045`*^9, {3.7159649251121187`*^9, 3.71596493175773*^9}, {
   3.716051452198821*^9, 3.7160514949942355`*^9}, {3.7160575254201293`*^9, 
   3.716057527830534*^9}, 3.7160576280829616`*^9, {3.71605769191789*^9, 
   3.7160576968684998`*^9}, 3.7160578261529665`*^9, {3.7160585332961645`*^9, 
   3.7160585364865704`*^9}, {3.7161412082977123`*^9, 3.7161412575276012`*^9}, 
   3.716225662329816*^9, {3.716316539602732*^9, 3.716316563639383*^9}, 
   3.726513627093198*^9, {3.726525591306312*^9, 3.726525600876374*^9}, {
   3.7265910210098677`*^9, 3.7265910374418077`*^9}, {3.7265919755074615`*^9, 
   3.726591979250676*^9}, 3.727980204294412*^9, {3.7324653398567195`*^9, 
   3.7324653474619875`*^9}, {3.732465433626086*^9, 3.732465440643173*^9}, {
   3.7324655181112795`*^9, 3.7324655255499554`*^9}, {3.7324657636882567`*^9, 
   3.7324657657234936`*^9}},ExpressionUUID->"43da155f-847b-47c5-83ad-\
249435050418"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk3tM1AUAx3mccAfykAMhUlAOcOSJQAyt+35/ByqvvDJAlk4hUQJRTJ6m
ExHsAehFnYhz5wxGikVQHogOaAyGTl5hhA9eQsBknOQFrtHpoIKtPz7f7bvP
vn9+1+4/Gp1kZmJikilejOiET0IyMhJOxFgslY8SUt8MSF2Sdv+TFjIBfV0Z
WoZrsFF/GS8M9gzdbcnH1S+xvNmOCzJbyhtNOX7EnbYaa/7SJmbD5HNEtIq4
5Yt/kX29CXvT7fjN5Xm0yfWoUU1BqTbnyM9ujIqXsC2sG5JNUo4bx7HG6MBv
He7jsMUUHvSIGDxpTq3TILTpVrx0wJom+mX89J11HN26miUjgYz/cgWdDROw
n7agNHgIreonOFQyjLTjMqZlSngzeSVfVczB196XQ9INnN9+iPcLM+nWlMj8
N2LplOPPPbE2XNp771vArs5WGCpc6fXChXVVctZMuLJg1IN7t2toKrtBseM9
GmN17M06S2l7IJ91SqgbMmV/kClTdg1Ba7Rm0h+r2DkWyCOjscxtPc1NPb9S
4x0plJrlCwdPqYTv9V3cOvkxD2gDmHPUg7/fNuX85AjK1/oxpt2HEe1KHitN
4uacSqZECUJz+ICgK3pNaTs7KvwoekuY8dOyx/AB820sKN8hYnxzH86vllD/
cCUvzkaS1imc+a2Dc8YsId3PWSnZuUc5u9xZWZ29XwhWN1Hj4cmIZHPe1fYj
r6UW61V2FLmsYYEilOrEw6xTt/CSKEzotBgWova9rryaMCYEjUAIr9Twc5kj
N8eNw7HdH81ndBhViem7Yhlt7Dz5vMmHHkVnWbN7kDsb3hMSrfOFDS4hwhZV
Hy3Nd3Dh3hOUltcjSxaI2aGDCLnbB/cLi2zsgEP336gyxvHWyeOsKajl07Qu
qp5VUzqbyNuDbnQKncX1+VqEVpXB63TO2zcqyjHySgvb0i5IM8x4wcOdZ+DN
EnkMbT+LYtydMBYPr2KL7xVUFHfg60IJq3RGBWIj8TLvK7g2dOOplQ6VcTPw
7H6Irnox+x/Z8JbTVejjxnDeMABpQD8Kk6cxtT4SJzRlisRTDxTagVwMBv2J
4NpGXCyvg1X2P1in6ca14jbkPq5A17F6PAr7Dl5zg9jmcA1zvXI0qqcVrTYG
RWxLCTReV6Cw/AFZyeWQyUZx5/1zOPnuTwj3OYfoD3uROl8H8V/psCrKQ9dN
f8W2OissXtDkP1YMhAM=
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -194.4}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk2lM0wcchhu2CIgMxlUch0PLnAQaOVoL/9/7d60VgtmQFeOOTC4HAzkG
aEKcsFXQULSGWtrBVuXosJYjCgisEwzHkIECMpEpbIUBYZvgJiBEhKnTZB/e
J3nyfH694j+XJVpwOJzDVi8gi8sWZ2XFHY1a91IS4lIDA1JfRrv/p2vV4Yv7
VRAu6xHpW4cw/1okdVVjg00VnndeRO76Ovi0XYBhqB4lX2pQ+qgEFjwlivKU
8G3VwniqFKrt1dhXU4uHyZUgbh3WQi5AHl0H6YmLGNhRi2d8E+7a6GFbWAoX
Rw0aM5UIu3kao5YaJB0pQ399DUSkx7U0I4Ya6jDGacYqpx5Vwit4z98Ec64e
PQtlCC7WIpajxa8nTiGeOYfp0TKkJBmhZZvRXdCB+zvvYHa8FaNPTPDxbwT3
9XJ4yHR4t1eB3s1nwYSko1RQgN19pxFsqUdTWBse7BjG7OgyFuefIuDKOAyv
NYEbboDVmh7TdA5/7z2D+Izj2CuUw5ubBt6qHAe6avBY+D00Riu2a5MXG/H+
FrbEYhUhMzcxtlQDJ/vzSJQoMPJqNtr/jIFpcQ8cZqLwb7cCAq0C1aIhBM1b
s7uX/diRQwxrELmyOT4/ouV6GZz0SjTIs3H5+kf41IZF4FEB2t8ORaM6BQ2y
k5Dym+CQ/xfmlzzZnu/cWf88a5a7vwstwd/gTc9sZM0eAO/gdvj1i1HRz0d+
RxAyuj/G2GAMpj8pQob4Gg6W30P7yTmsjx1AAO8SMo3ZyL0XgyiDG7xzGNg0
bcXGY14I/swOdp4sIr+KwO8PDqG/UgWPvK9RLCmHRKOD2bcAP4xEI9Y/FLKd
XAjt34A2coKO2dyl/huu+C00CLwaIcbcWOQsSfCUn4DBzkyokvdh6B0JbicG
QnVkE2qvbkDFrlcw+tYYPU/pITeaIPWNf2jbB4vUabZFsdgFJvVWmAa2YK45
EFOTPnDiO8CqwBaPWybol1sd1Dv+Lf1UmU996iIKcjIS06Ig5swzUgvukGFh
ig6ftYaH7xS18m7Rxj/aqHDPbcpyVJLdVAI5ph+nkLl4GrZqYn5+5Efyzc6U
JtJQQm40CVakNMmvopn0boqarCDzukFKK0umbVIeda6JaU7uSqkWUfTiShz3
2VhmwT5JpFKLGed2M+PiLaCrT1Q003yeLPcXkvTSZVpxD6fwhx+SdljP9Dnr
GHPECvMfJR2OHQ==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -583.2}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox[
       RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjX1Q0wUch3cbB5QGKJDKmghCgQjqKKB9P78RyEug1zheh5gDjsFQZLCd
0KJ0grzl2Fi8bMkfYErALpggC4W6QTnlggtlolJ6RllWZnEK4iVhetcfn+fu
ueePj0+uPDmfzWKxlM7PkJxTHqVQ5KhSHJ+LNKcolF/0PLr+v9Z+Zwy6DJPn
5Uv0HmeR9vEzUWbnIes8B6q+IKzI0rG0VYRCFGM6XIx1CzXoVXZgt+I49ppu
0zdbztL4ISPdX7ZRIqIQgwhskgSiKZyLI+07ccukRZabEH6pBXALVmL3Wh1c
Dxnx7JoVll5PruoFwWxbFz0sX49jb2/DxIFYXNpbgQ8m61BVdAQ3XfLhny1E
g1mKoYFSyFLroVOPCjKLHKl6D4tCbkrI/Q0nSC5w0WQ9ALb4Q1THFeOMVxqu
y8oh1ath8lDj2yQths8dxtPRWJL2+FLQeCh9VX2WZrl2+sgjGvNuCjQbj6L5
Wh5+ttbiyo4KbN/QhJUdcYjJfgeNqgxUJTkJRKdLiBLF1J95meLnnLAtJA3z
8gJcf5KLyM80+GT5MGx3NbjPL4BsMAOTcwehbd+Fk+dd6X2uI4kFizS+eom6
domgelgHu7kdS8MmWJvb4ck5gXssEaZ1eZgzb0Xhk5dAv/JQ97k/+eQZKDbw
JBke52J0WIsx00UE6qbQN/0Unr0cZvXULMYeaaCMC0NhWi6CRx1QdOUf2jNQ
SnbOKgRKI/Gg/i2YHfToTJ4BL2sjk74pkal9OZpZa3mBCWjpB5tnALfODx0d
D6ik5y+K0g4J+L7D9G+XA/K2h8NVpoa14A4siTFMsmU/E0tpjO33ICZePo3N
Plos5CfgakUUJiJ8ELvmFXIua6O23x7TTu8ANBwtRNeNG2hkvJmA7lRmyD+E
ec2+kZGq76HF0gdFpBpZkhJ80emHzUJHEhkldLDyF+qd76fGryPAzdEjm22D
sMSZWXZ5hHU1Mzj14gTmfuxE/IlivOpYiepPE9Atixb8MVJGqmNt9GeoklLv
uqOnhY9z4v346Y4G37vpwDp1Ghe69Wg1NCAj2wDvNVWI0/Ax4g8ybwgjedMW
4tr6KOUHwGvKA6WtGfjOtxzWfUlIaEuBOycTZ5RJkKyvxUpVDUpu5eH1gUXB
xd5BAZqPvxnMvirw5PHRc20V/jaOEG/GB5YxPnz1fvhY7oUK6bsQptVg8ksZ
blfW4j8gnHaF
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {Center, Center}, {360., 360.}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
AEykeHo=
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->RGBColor],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> Automatic, Interleaving -> False],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -1360.8000000000002}, {
      Center, Center}, {360., 359.9999999999998}], 
     TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {Center, Center}, {360., 359.9999999999998}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->100,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7265138378839417`*^9, 3.7265140403210335`*^9, 3.7265141123925924`*^9, 
   3.7265142737273808`*^9, 3.726514342132637*^9, 3.726514430497733*^9, 
   3.726514528273715*^9, 3.726514595172801*^9, 3.7265173429013805`*^9, 
   3.7265176325257225`*^9, 3.726517690518758*^9, 3.726517803369321*^9, 
   3.7265251594631295`*^9, 3.726525226590114*^9, 3.7265252650275292`*^9, 
   3.7265253533360443`*^9, 3.7265254982415886`*^9, 3.726525640426422*^9, 
   3.726526028132743*^9, 3.726526061127495*^9, 3.726526102848234*^9, {
   3.726590275482226*^9, 3.726590298612549*^9}, 3.72659073397645*^9, {
   3.726590773940736*^9, 3.726590798400135*^9}, 3.7265910604541235`*^9, 
   3.7265913006758633`*^9, {3.7265913954252825`*^9, 3.7265914311783276`*^9}, 
   3.7265914902667074`*^9, 3.72659158419508*^9, {3.7265920024800043`*^9, 
   3.7265920476795893`*^9}, 3.726597369634988*^9, 3.726597546752119*^9, 
   3.7265976440296826`*^9, 3.726597763548519*^9, 3.7265978091601276`*^9, 
   3.72659790256847*^9, 3.72659795414142*^9, 3.726598044665598*^9, 
   3.7265981220020213`*^9, 3.726598309557749*^9, 3.726600327664178*^9, 
   3.7266006100253277`*^9, 3.726600896125692*^9, 3.7266009858198223`*^9, 
   3.7266011560295577`*^9, 3.726601235375096*^9, 3.7266012730792522`*^9, 
   3.726601335576827*^9, 3.7266013979683957`*^9, 3.7266014549096527`*^9, 
   3.726601498120124*^9, 3.72660153038997*^9, 3.7266015718403406`*^9, 
   3.7266016160328684`*^9, 3.726601694933381*^9, 3.7266017334415836`*^9, 
   3.726601770303692*^9, 3.7266018580667114`*^9, 3.726601923371447*^9, 
   3.726602037735988*^9, 3.7266020916730733`*^9, 3.7266021329554343`*^9, 
   3.7266023456055975`*^9, 3.7266024436142035`*^9, 3.7266025369075394`*^9, 
   3.7266028123082914`*^9, 3.726602914633144*^9, 3.726603006916422*^9, 
   3.7266030502298994`*^9, 3.726603137719904*^9, 3.726603205049755*^9, 
   3.7266033031333647`*^9, 3.7266034224501896`*^9, 3.7271046107866383`*^9, 
   3.7271057324069753`*^9, 3.7271074055524173`*^9, 3.7279788844025345`*^9, 
   3.7279789564484425`*^9, 3.7279791537255135`*^9, 3.727979212205663*^9, 
   3.72797926513217*^9, 3.7279793252447557`*^9, 3.727979400818308*^9, 
   3.727979463538962*^9, 3.7279794974797497`*^9, 3.7279795531022973`*^9, 
   3.727980220467798*^9, 3.7279803235033617`*^9, 3.727980446546909*^9, 
   3.727980501282436*^9, 3.727980567680085*^9, 3.7279806740347595`*^9, 
   3.7279811096102004`*^9, 3.727981602005185*^9, 3.727981659521139*^9, 
   3.727981730705536*^9, 3.727981881443534*^9, 3.727981933546461*^9, 
   3.7279819885205407`*^9, 3.7279821191081843`*^9, 3.7279821509181356`*^9, 
   3.7279821943283806`*^9, 3.7279822534387755`*^9, 3.7279824010434437`*^9, 
   3.7279824981331353`*^9, 3.7279825722562313`*^9, 3.7279826871288548`*^9, 
   3.7324639063419857`*^9, 3.7324639835052767`*^9, 3.7324656172982283`*^9, 
   3.732465782852126*^9, 3.732465847308528*^9, 3.7334871683385077`*^9, 
   3.756841474963216*^9, 3.7568415273732133`*^9, 3.756841577477079*^9, 
   3.756841782520807*^9, 3.7568418819134917`*^9, 3.756841952036503*^9, 
   3.7568420030164185`*^9, 3.7568421160678844`*^9, 3.7568422088411913`*^9, 
   3.7568422887737627`*^9, 3.7568423342813654`*^9, 3.756842431433956*^9, 
   3.756842470746316*^9, 3.7568425922203875`*^9, 3.7568426277260637`*^9, 
   3.7568428515904045`*^9, 3.7568430538309965`*^9, 3.756843163933033*^9, 
   3.7568431963715034`*^9, 
   3.757169868167421*^9},ExpressionUUID->"bc81fe8a-63d2-4a32-bac0-\
3ac17f6901b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myYellowAvgImg", ",", "\"\<Yellow\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"myWhiteAvgImg", ",", "\"\<White\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"myPurpleAvgImg", ",", "\"\<Purple\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"myRedOnlyAvgImg", ",", "\"\<Red\>\""}], "}"}]}], "}"}], "}"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715738434145571*^9, 3.7157385642380056`*^9}, {
  3.717506682945863*^9, 
  3.717506691148878*^9}},ExpressionUUID->"6646bf9a-7aa9-4091-a41b-\
68bab8ece118"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[{{}, {{InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjWtME3YcRYFOrKDgBEkFJdmGuFFgrDom8L+/BhQRcOM15CUhBenQgEA7
KnU1MnnjWEPFYnlUGAFbuoIKIgOCScFogrK2Y2wxaCSQiYtOFhUH3dw02Yd7
kpPz4b6TXZgodrCzs5NyXyNRdDxcIhHJkxzfSK4of6cg/010/X/HNnzPvC1c
OPZvROD1zSi9uhvCwh24YqjCE1MO9nUfQGxoIVZMB3BDUgZlSije96/EAK8d
5z/5nB2Wq8JaEgQwf7wb854pWFLmw7ZVBb/ZAfBzW1Ah7sEpvRIFASXw+UMF
6/YG9KzW4/W1ne20P1v60AnzGbEwTJ8B054Dr7ceaQ+smJFbcKuoAaapi+B3
9GEooA05KVrMZOSCeyyaxa2/wKIfzbKZh/Voi7sJQ8Mihue2UO+Jt0j8/G0K
Vt/CrLIDfnNnEfm0GT6D1fAr34MRtR9zqtEx/cJjpvbSoMV/HDbJdrI1HaGy
kwepxCmCCsTbKCb2CX7/7Vs4/5CHTI4G8UYHyF6Whq3uckXIlf1IqjMiI5RH
dzWpZFXr6Jr4Z7puvkxBvumk0P6Niq9/weq7o9C7lKAirhIGcQKbKxxnIWne
SPniV8xr+ORh6aLl8s1CjmOUMLDBTVi2qCF7rYBGk+7gReM47qk02Nh0BIfD
1CzuZRKbe3gUyfHXENr3EcnkE9TpBuGXVrlQJyHhN5wxuiSPJEHOOhJMT0L9
WR1IV4fBAg57DDd0m75CdvAwwg+9Rw8k7eTB3yIUeScLTzXzhPZcLa0JF5Dm
5nPs6DdBxq9Fz1Mpsna64OCGu8xRshVT6T3ge6yjoyN7SRSgp9S+SSof05Fx
SUTlMg/KC1pGf6gZYcVNuOdUhU6vEIz8kwyLJB3PghpxQWHCq2F3alTFU8/E
cUo0p5HhkDcZnFcQpbyPgKQJhG26iryiDmSeeMSqKybZi4VY9HZpsaZLicml
CXgNPYP7bQca/8mReqsXMWW+jBjFKOaNpzH9qRHO5lYku9YxBVnZHV42YoIv
sfOl+xG52Ixul1r4/jkGu8HbuGj7Dm2BOpyV6+Ez1w6vTVI0+oowVDnANDe8
YNl1ny1keaIzyxcRbsVg/RqscGoRLW3FB/+W48dXVfjLR4chyCEbr0Tf2kCo
DJGoiVAwF044PGtsLFqZjpPFEZByazB6Zhvs1+/FYmIqoriZcB+pwrKsFftc
EmApCsF/LomFHA==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -194.4}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk2tMkwcYhatTKtYABmUEBgTJROWq4KT0O+9XKlRbGRVxSISQ1AVdXWkD
0yCgwOi4TaHcHFCFVamSIS2QLIqChaaMIiCZsgCRzJm5JWNFJ07IwIwOk/04
J3ly/j3J8T+hPnJyLYfD+WLDah2R58RkZ8tzk5zeQYZcGbFH+W50/T9LAXGw
iaJRrVDj9K5ClL4tgVxYiruiFrAyHXZdroWXoxzqyXy08RV4/WQ3pt7sQMJH
x3FxhwzZFz/BaFIWaoNrYY8qQojaBG/vR1D59+PpXC98267jRpMGepUKc9YU
GJa9Ie/9GFx7MGQDMmwQnoYH9wYSLdWw5VtQnfAXYtLn8Ll2EDV3BnHOVI+9
C7dgDtHA45tT6CliYB4Gzlq/QkdLHuoXTPCa7IdP+zymu9bT45nNVKNzIlHH
S3g192BT7Pco12ghHyuGYF0YPj2fi+dGLczLV9CxdRpLvs40MxlCUUYRSSxJ
xLsmJo31feLp/oGFP45/p/Twv1CHo5oIpB3OxCtS4qHwAQbOvES8MZjOzuYT
L72TuOOD1BjYRDxDLCVzXKhs0zwiCq1ocbmKvfeVWNOiwlJnPS6d12OUv46M
I0dpm62TusN9WUmfiP1l0ZVtKNRSqzSUbKZXkHX/COmDRjiOZyLv/kmULBjg
oezFWBGPQpcOUJXQQn2VLMvhFLG3nMVsXfMA/d5zkByz75Gv4ikGcpuwO+cM
DAc0eD1ahUClGYJ2LjVuCSO3rHrKCfVgswJj2emgbWzMMSOtfCehtHA/cn8+
Btu5SjxJjgeZxGh4Vg73/qtIy3iIlBEncuqSUmV2DVW3Wunr7V20ZbGEitv5
NBziTofFZvhLy5EsdTA/NXtCtu8g/h6qgC+/FjU+L1BgWIY41YVcKiKpZIGl
6bDt5PelK2VH30PIsXKsrD+EmMgZxmVjJ3NhaifiZz7DwNpGvPhTh6FgAxar
rOh1+xmSITvuCYZRSTcR5V0M67wEElEE1B9YmYKJ24JYzDLFbQJkVOxB6+ZD
KFDF4m33qntdF5RrehB/rRr6D6swESTEXHQiRA5nBEyYmdU7cAbL7jBi/mPm
kfYPZiWUB39PV4TaE2Hvk+LZ7RQ4tJlwNebAM06BuNZUyIJOIKB0nPnBjcOU
6f2YLmUDs09Xyv92Vse8+fUKk3B3hLlp4kJRJ8HlvP0QVp7Cb5Fl2BieinSf
Quj3b8V/+2GD/g==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -583.2}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox[
             RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjH1M1HUcx09TRDi500kIR4cYWBhgEDeE3+f9PXwKZIXkCbljPBmPF40D
ZGgpT22ix4P8BkKCYnccnmhhPERKEosBRfLghaDRGiUwSOxQ40EYYrr1x/u1
vfba3o6Hkw/ErRQIBGnmL3AgOmNnamr0MYXZS4mNTnrHM+llFP2/Fev9SP13
OkkWn+1wv97NqcJ0vhfnnbmLogBOoVZw005hXPFNRuZVAlIey6GGNVqKNN6m
z3h3GizbSrqSHfTiRpC/3cDlX9tEwmHet5/xXGPiCS7SxZIbzRDTrlQhlYsT
qOV3KVU99aBOP1Bf33mqUXT4nl+Y9929uIWT1aRznRY+1L1vGy3G1lGvvoAm
7BzIGMqTcTqAEuozKEWhoHBtHQllldwVNxfqf8uL++OLL31719qS21guPZnL
pfDMFHJU8VRyq5CCn3SQ4vEkueXep15PHbl4fEVFVo70KKyU02RXcA5/XuKi
htbSzZAuKk2bopwlVwzqxfA/IsZMuBBXttog3V8Cs55HFNQ+Q+0aG1o47Upd
LV7U1l5JpbHX6PHwJPVq1mNqIgibVXJYnN2L+qb3kfDX60jm30T58gKJ7afp
+Xgxd308jHhNKA3Eael+twW+3ibHbPNBHDacQ9QHV8Fv1wN5FzCeXYT4sTgc
tfJB5tAK4EEoKWVRJLyRRXF235Pa2xqrG2Mgnb2MPa1zaMy1ZP1lm5l1pJSl
mVuxhaq7UH2TgVuJdpA0VpNaoqc7Q79Q8+cmSn9jPzp7NGjZ8ACa6beZNvM4
k6bUsu8c21jS6jLW1EjsZ9tW/OOtxIL3Q+KXB0jUukyi7Bm65HIITFaOd38w
Y6bnUcz1eBcrNNrLZztd5CPVSyxrF89e0a1h6qqTeJo6ScaNHrC2cIX2YykO
ZgWjuUMPO+M6Zq06wUYm51jHXiZfpd4jj84SyuNltWzfxBbWJzoFH40ZThsm
yJ/c0Sf2RNeZCPQ2lEBaPoN/oWR1G39iiSY7eVCErXzUfIoJ+ovY5WYnFiM7
hwDnWBrl88lQYInZ/a8hpyMMDXeUqPm0CSHzlmxDjJo5j2iZKdnAzhScYvmp
AWzsyDO4VWfj9reHqCUwggY3XaXdQSuh7ZIgoMIPdSFZMPukFks6E45+ZMsu
/GbPkubEbNhpEnkDFahThkDV70A/BgbSw3vv0brCNrLpWYW8egHuzkjwa20k
vMqLcVZTixvBLXh1ogknP6yESRePe30W+A+/2Iww
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
           TagBox[InsetBox[
             RowBox[{
              RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {
             Center, Center}, {360., 360.}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1: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
SuNJuyj+C8GOhR8=
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> Automatic, Interleaving -> False],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -1360.8000000000002}, {
            Center, Center}, {360., 359.9999999999998}], 
           
           TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {
             Center, Center}, {360., 359.9999999999998}],
            "InsetString"]}}, {}},
        ContentSelectable->True,
        ImageSize->100,
        PlotRangePadding->{6, 5}], ",", "\<\"Yellow\"\>"}], 
      "}"}], {194.4, -189.}, {Center, Center}, {360.00000000000006, 360.}], 
    InsetBox[
     RowBox[{"{", 
      RowBox[{"myWhiteAvgImg", ",", "\<\"White\"\>"}], 
      "}"}], {583.2, -189.}, {Center, Center}, {360.00000000000006, 360.}], 
    InsetBox[
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[{{}, {{InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjn9Qk3UAxl/njfila3IuElkMkZLjLJnKau/zfYNobMND2oQQRFvmAONE
pFweVDs0yCVDwKSQ3xOJkSFgOeUgBA8RcR0Sc+MGWpfAYccPb8NmLcK7/vg8
d597/vkI3s9WqFkUReV6Lo9CpYk6ckR1TOnxTA6osoQRWc9Ozv/Yh1YRjXUD
cboiyLgmjdRKgkj4wUeYdK8kHTOlaOmeBuvLBYS9YIKz4xh8/vGF8WYA3W9g
oJNFoSzEjTrGgjmHC2r5fVxvdkAa+wPO21vQJBrAp+p5PNhSimLzelB7tyFa
Z6ad5u3gSEZoduAVuArakFHUjzCmBo+/rseh6EVUD5lxi/InkvtT4GdlYzmT
8qkX0peOZoJ943OYbnhCY2rD1hM90PrUYYNCDzfnHFyJ0xi40wf/qxXIsRkQ
0x+K5v5T+GzPR3inpQIhqa34ZPZFrBOchby6AY7eJIgbatGk7MQrPTOYaHmT
JCm5RLbrHsKrykHJDiKR+wf82814WGNHio2H/FNadHqJ8Fv8eSRHTuBwlZjw
youJ3d1DWH2lJNgPZF+hBMlxd/GqrwdZzZ9D624Ldjw8A6vjMi4PO1B4egr1
Oi8yozhMhjLWMiVLYG6fZjObLQVk4pEHYRUOY2PjSewaHcFrVA/u7l+F3dfO
YUnWB/fCJLaPCUnb+i5ynSdmKErLtKljmK88y0m6nktWXGhC/MaL4KdbYHhc
hKREHj7OK1tuqIEzjEVEcStIcLeW/J25krkyHccIDngz3EUtIUt+pOp3I4zG
bhwq80VjYDXeTQtFsmqS7nBWovqXt3HV2ADeGQ4pSC0iCRN95KmkkjyYkZKp
sT8hk48jIbcEP3pmYZ6di9FmPygNnbQ0JQ4J2UV4avkClalTmG1ZRKQ/l4xt
iyKxXrNIr6OIfnAQdUcrUGKVY42rECl2DoSbttDfHRfiOD8b/H0xuPVvGXJD
biJq5x2ktj+Bfe8wWD+3w9tLC0tvDeLfGqFfKl6HfIUE1g9kdMZgPT4M34za
/JPIuSeG4LlGPP/TRRjGT0CapoN3owa2IAMEwrW4xHPRabFsfP9Go3i08hrd
bIpG5KIIqUs7ELzpWyzovsF8TjFe7uqET4AOXU9U0P/VQC/og3HBNwVZe0Jx
W9RJ/7rVKlb2mujeuX5x7utyrI7YjyDbWfTJqyDPUyPvvTLE7tQh09YOulWK
gcA1CEjm4D931Y0I
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -194.4}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk31MFHQcxo/XOBQ4DJFTBOFOvCMQCCS4+z1fAwU9dyiT95usToOLSTKg
C1xKFxOJGIHEEAQ8QJHMjQjGi5CszTTvQt4iKs4X8IjyDw+Jt0CJcOuP59k+
e7bPf4/H8YyjqeYcDifbZr2OKnPCsrKUp2OsX0GKMj3wzfRXo8P/aU8TEifQ
lkYGeTQf4kBb5Bwy+5hHLYf+RUD0HLT9z3BJ1Ifp1CUcOnILF+vG4afXwkYX
Bae9PPr1rD/pLDbTpIBPGfvEFK8WkIuJS8pvLGhz+iyClsagYCU4aT2IUtMM
xrnXsGhTidB/eHRMEUoXusRk1cGnL4XedMBXRgd/PkIrC8/gNWBJswvPkWBr
xLHvptA3M4+27k5ETrTDt0BEpYpkGo6S0LhRQF4Ne8jr9Emq4cso80QoLTyw
p7seQ9AF3kKvdgK3LeYRLzXh8PZGfCXbQX83RtCqIJgO1AjoeYSIirZLyOfU
2+SQvJNmz7uQa7gtFUb3w3zfInqrRtCTM4aXV1pR2OVJt6sdyL1HRJN1HtT1
PY+uFrxBS7ytNB03C6u2TfRk0oMuZ1uRm3EGtTduYllfjISYEsiz/MnvwevE
TeORQ64rzf21ArHbKqoarKkq+CUMv/Eps5xPWflreKtvGLloh/pGBRzNP4Ak
KYgOhj+FUh5EZz9bQcfTAcQP6VCYMoQ9zIrs3/sB/iU6+Ba2QiW5jl3NWvTf
VMPLbyOSdi2gsnEF3q4GjN6Zw+dfG6EKMyAvfhROjno4v9aExMg2XElSo6il
HipuLv64PM6Kik3shZRDpsAXmEh+hAAXIzS7tahPrIbftjZ4CytxccsJLB/O
xHC+Hcq8NsClPBozeU3sz6By5im+j747nTB9WIagum6UrmnARPUYXRXD0jpy
3eWMycRVFmVpj8cFG/HFOTOEunOhV/ugM7YaY4vXsLbDgmSxGdgfF41Wjj3u
+YRgW7c5nlRIkL2fj+beC/DNDcAZJsOlT35h86mxbJp/DyGd7bBL3ouwq+cx
ZPcpoiRiGBIkUJj9zmqdA6COOQ53/jnI/fOxWybEiFswfnLskXoMLuJdYQMM
OgWaAqZYzfuncCYvBfrBMLR0J6JiayZUHcusRiNHXGwxc/pogoU7ljHPhxo2
sGEEHdLr4N5vRtpgBDSCDDzMzcHaOwn4cUqFb1W+kDf1sk2P21ltVz9T3d3J
1u/HMXEeSf8D+ll7CQ==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -583.2}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox[
             RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk38w1ncAxx9mdDMkbYyp3BqPH48VxnZ9X58nOmVWcZhfHfXoGEN+hfxo
5yES8jAmzc/VNpQs9uPG4dkKGbvarD+y62bqrJUfZbYjl0x3++P9vnvd+5/X
P2+bqKSAGF2ZTJa2bq0CVJmeqamqrED9ZxCtSnB1SXg2mvyf7DtG4s8lKzHy
9wuiKbUW6/v1dM5WYXS9kTKfCh4XaPD0bCTv9Ffc5SnHgx3E6pie8O/qw7p3
lv4PZrCd+4OD8zVUphbyS20zR8abMLVXM3vnBGN27ZT0XUYepC9+DF4vzKdG
mEo5T9Pxc3yz5xr5RRWM7y1i3yedhE6cxWi6BtPCVuKtKmjzLWDr4zOMpn/O
SmMvM6tVrJaEoTUvhgdvo81N4NypJEyjcqnb0UO67UUWHl5hs/wz9qZcYvhe
EzEhhSj085iRFfBh2nZ6DkTh0X2I+4oCgnfWUL2tjt7OAaqzDER5/SLTtkt4
Wf5LZsgVqnfXEi4V4G3ggIG0GQP1fpqX38U2toiI1z/CXV/L0Vf0RFWDm1hz
FXPl4SLDeqeYS7IU3kMjtGz1wcc7nCPPWfBxYDQJSXvQqcoizF/DSvoC9jf9
RMHAbaE89prSxOeJaP+hTCQHeAidyus8Co3ji15b2hw24nX+KB0XfJDn59Os
/ImwyGUit2uE65KjUibLU87mKpSV+eViZW6LyF5uJ+n5Y5jIY8lRhfGWRyz6
vwcw1dVEsWELbRlP2XUvT/heNFa+k+2pdDOeFV3f+wvHn8ewitbQlJuIrmca
Nkt+FPW/yeTVYN4wb6UhZoivb2v5bcJCLKjyRWxQvRj69LCYVD9itvsC1nMa
6lOyWLdJhVTqhO61ABQdNZy4NcSN7/pYPNSK5b4B/tq9wpnAGbxuDaNJ7OCS
ZTz7tZmsDkeSpvVjy6g7PX4d1J3q5NucGd7f1c10Xgfq+HLGzJMoPKCmLDWB
+YhCKlMUvOcsZ5vRvFRsZ8EDu5cYcaojJ7mFDflXcXuxi0ETDQMNGfT4lDA4
AmNyBV16YRgnuLDxVV3iGi0ZVLtKPU4HpcsZajKcs2jR19CQrKK/zoubL9tj
XxqC2SYXku0duTFiRuhZC8Yffik1jwZJKXG+0qCJasfgyfUsB+kwsbwoWe1U
8M8GCw4nWtA3GoHN3UC8nH+VSr30sFs0RGU2KQWc7JbW7iczfOIu/QfBjYSh

                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
           TagBox[InsetBox[
             RowBox[{
              RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {
             Center, Center}, {360., 360.}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1: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
/d8v8svkXMXBZb0yEflhwPwXIwV8hw==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> Automatic, Interleaving -> False],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -1360.8000000000002}, {
            Center, Center}, {360., 359.9999999999998}], 
           
           TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {
             Center, Center}, {360., 359.9999999999998}],
            "InsetString"]}}, {}},
        ContentSelectable->True,
        ImageSize->100,
        PlotRangePadding->{6, 5}], ",", "\<\"Purple\"\>"}], 
      "}"}], {972., -189.}, {Center, Center}, {360., 360.}], InsetBox[
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[{{}, {{InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk3tM1AUAx3mccAfykAMhUlAOcOSJQAyt+35/ByqvvDJAlk4hUQJRTJ6m
ExHsAehFnYhz5wxGikVQHogOaAyGTl5hhA9eQsBknOQFrtHpoIKtPz7f7bvP
vn9+1+4/Gp1kZmJikilejOiET0IyMhJOxFgslY8SUt8MSF2Sdv+TFjIBfV0Z
WoZrsFF/GS8M9gzdbcnH1S+xvNmOCzJbyhtNOX7EnbYaa/7SJmbD5HNEtIq4
5Yt/kX29CXvT7fjN5Xm0yfWoUU1BqTbnyM9ujIqXsC2sG5JNUo4bx7HG6MBv
He7jsMUUHvSIGDxpTq3TILTpVrx0wJom+mX89J11HN26miUjgYz/cgWdDROw
n7agNHgIreonOFQyjLTjMqZlSngzeSVfVczB196XQ9INnN9+iPcLM+nWlMj8
N2LplOPPPbE2XNp771vArs5WGCpc6fXChXVVctZMuLJg1IN7t2toKrtBseM9
GmN17M06S2l7IJ91SqgbMmV/kClTdg1Ba7Rm0h+r2DkWyCOjscxtPc1NPb9S
4x0plJrlCwdPqYTv9V3cOvkxD2gDmHPUg7/fNuX85AjK1/oxpt2HEe1KHitN
4uacSqZECUJz+ICgK3pNaTs7KvwoekuY8dOyx/AB820sKN8hYnxzH86vllD/
cCUvzkaS1imc+a2Dc8YsId3PWSnZuUc5u9xZWZ29XwhWN1Hj4cmIZHPe1fYj
r6UW61V2FLmsYYEilOrEw6xTt/CSKEzotBgWova9rryaMCYEjUAIr9Twc5kj
N8eNw7HdH81ndBhViem7Yhlt7Dz5vMmHHkVnWbN7kDsb3hMSrfOFDS4hwhZV
Hy3Nd3Dh3hOUltcjSxaI2aGDCLnbB/cLi2zsgEP336gyxvHWyeOsKajl07Qu
qp5VUzqbyNuDbnQKncX1+VqEVpXB63TO2zcqyjHySgvb0i5IM8x4wcOdZ+DN
EnkMbT+LYtydMBYPr2KL7xVUFHfg60IJq3RGBWIj8TLvK7g2dOOplQ6VcTPw
7H6Irnox+x/Z8JbTVejjxnDeMABpQD8Kk6cxtT4SJzRlisRTDxTagVwMBv2J
4NpGXCyvg1X2P1in6ca14jbkPq5A17F6PAr7Dl5zg9jmcA1zvXI0qqcVrTYG
RWxLCTReV6Cw/AFZyeWQyUZx5/1zOPnuTwj3OYfoD3uROl8H8V/psCrKQ9dN
f8W2OissXtDkP1YMhAM=
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -194.4}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk2lM0wcchhu2CIgMxlUch0PLnAQaOVoL/9/7d60VgtmQFeOOTC4HAzkG
aEKcsFXQULSGWtrBVuXosJYjCgisEwzHkIECMpEpbIUBYZvgJiBEhKnTZB/e
J3nyfH694j+XJVpwOJzDVi8gi8sWZ2XFHY1a91IS4lIDA1JfRrv/p2vV4Yv7
VRAu6xHpW4cw/1okdVVjg00VnndeRO76Ovi0XYBhqB4lX2pQ+qgEFjwlivKU
8G3VwniqFKrt1dhXU4uHyZUgbh3WQi5AHl0H6YmLGNhRi2d8E+7a6GFbWAoX
Rw0aM5UIu3kao5YaJB0pQ399DUSkx7U0I4Ya6jDGacYqpx5Vwit4z98Ec64e
PQtlCC7WIpajxa8nTiGeOYfp0TKkJBmhZZvRXdCB+zvvYHa8FaNPTPDxbwT3
9XJ4yHR4t1eB3s1nwYSko1RQgN19pxFsqUdTWBse7BjG7OgyFuefIuDKOAyv
NYEbboDVmh7TdA5/7z2D+Izj2CuUw5ubBt6qHAe6avBY+D00Riu2a5MXG/H+
FrbEYhUhMzcxtlQDJ/vzSJQoMPJqNtr/jIFpcQ8cZqLwb7cCAq0C1aIhBM1b
s7uX/diRQwxrELmyOT4/ouV6GZz0SjTIs3H5+kf41IZF4FEB2t8ORaM6BQ2y
k5Dym+CQ/xfmlzzZnu/cWf88a5a7vwstwd/gTc9sZM0eAO/gdvj1i1HRz0d+
RxAyuj/G2GAMpj8pQob4Gg6W30P7yTmsjx1AAO8SMo3ZyL0XgyiDG7xzGNg0
bcXGY14I/swOdp4sIr+KwO8PDqG/UgWPvK9RLCmHRKOD2bcAP4xEI9Y/FLKd
XAjt34A2coKO2dyl/huu+C00CLwaIcbcWOQsSfCUn4DBzkyokvdh6B0JbicG
QnVkE2qvbkDFrlcw+tYYPU/pITeaIPWNf2jbB4vUabZFsdgFJvVWmAa2YK45
EFOTPnDiO8CqwBaPWybol1sd1Dv+Lf1UmU996iIKcjIS06Ig5swzUgvukGFh
ig6ftYaH7xS18m7Rxj/aqHDPbcpyVJLdVAI5ph+nkLl4GrZqYn5+5Efyzc6U
JtJQQm40CVakNMmvopn0boqarCDzukFKK0umbVIeda6JaU7uSqkWUfTiShz3
2VhmwT5JpFKLGed2M+PiLaCrT1Q003yeLPcXkvTSZVpxD6fwhx+SdljP9Dnr
GHPECvMfJR2OHQ==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -583.2}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox[
             RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjX1Q0wUch3cbB5QGKJDKmghCgQjqKKB9P78RyEug1zheh5gDjsFQZLCd
0KJ0grzl2Fi8bMkfYErALpggC4W6QTnlggtlolJ6RllWZnEK4iVhetcfn+fu
ueePj0+uPDmfzWKxlM7PkJxTHqVQ5KhSHJ+LNKcolF/0PLr+v9Z+Zwy6DJPn
5Uv0HmeR9vEzUWbnIes8B6q+IKzI0rG0VYRCFGM6XIx1CzXoVXZgt+I49ppu
0zdbztL4ISPdX7ZRIqIQgwhskgSiKZyLI+07ccukRZabEH6pBXALVmL3Wh1c
Dxnx7JoVll5PruoFwWxbFz0sX49jb2/DxIFYXNpbgQ8m61BVdAQ3XfLhny1E
g1mKoYFSyFLroVOPCjKLHKl6D4tCbkrI/Q0nSC5w0WQ9ALb4Q1THFeOMVxqu
y8oh1ath8lDj2yQths8dxtPRWJL2+FLQeCh9VX2WZrl2+sgjGvNuCjQbj6L5
Wh5+ttbiyo4KbN/QhJUdcYjJfgeNqgxUJTkJRKdLiBLF1J95meLnnLAtJA3z
8gJcf5KLyM80+GT5MGx3NbjPL4BsMAOTcwehbd+Fk+dd6X2uI4kFizS+eom6
domgelgHu7kdS8MmWJvb4ck5gXssEaZ1eZgzb0Xhk5dAv/JQ97k/+eQZKDbw
JBke52J0WIsx00UE6qbQN/0Unr0cZvXULMYeaaCMC0NhWi6CRx1QdOUf2jNQ
SnbOKgRKI/Gg/i2YHfToTJ4BL2sjk74pkal9OZpZa3mBCWjpB5tnALfODx0d
D6ik5y+K0g4J+L7D9G+XA/K2h8NVpoa14A4siTFMsmU/E0tpjO33ICZePo3N
Plos5CfgakUUJiJ8ELvmFXIua6O23x7TTu8ANBwtRNeNG2hkvJmA7lRmyD+E
ec2+kZGq76HF0gdFpBpZkhJ80emHzUJHEhkldLDyF+qd76fGryPAzdEjm22D
sMSZWXZ5hHU1Mzj14gTmfuxE/IlivOpYiepPE9Atixb8MVJGqmNt9GeoklLv
uqOnhY9z4v346Y4G37vpwDp1Ghe69Wg1NCAj2wDvNVWI0/Ax4g8ybwgjedMW
4tr6KOUHwGvKA6WtGfjOtxzWfUlIaEuBOycTZ5RJkKyvxUpVDUpu5eH1gUXB
xd5BAZqPvxnMvirw5PHRc20V/jaOEG/GB5YxPnz1fvhY7oUK6bsQptVg8ksZ
blfW4j8gnHaF
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
           TagBox[InsetBox[
             RowBox[{
              RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {
             Center, Center}, {360., 360.}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1: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
AEykeHo=
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> Automatic, Interleaving -> False],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -1360.8000000000002}, {
            Center, Center}, {360., 359.9999999999998}], 
           
           TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {
             Center, Center}, {360., 359.9999999999998}],
            "InsetString"]}}, {}},
        ContentSelectable->True,
        ImageSize->100,
        PlotRangePadding->{6, 5}], ",", "\<\"Red\"\>"}], 
      "}"}], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->800,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7157384563512125`*^9, 3.7157384859538655`*^9}, {
   3.715738534566353*^9, 3.715738552756386*^9}, 3.715740403866352*^9, 
   3.7157404631880617`*^9, 3.7159651981193705`*^9, 3.715965235362839*^9, 
   3.716051515843933*^9, 3.7160573541531315`*^9, 3.716058647795999*^9, 
   3.7162255491285944`*^9, {3.716225652638397*^9, 3.716225668284828*^9}, 
   3.716316639103138*^9, 3.7163166935504456`*^9, 3.7163168299930277`*^9, 
   3.7171829276307135`*^9, 3.7172568149112463`*^9, 3.7172578016002955`*^9, 
   3.71725802898167*^9, 3.717264297745609*^9, 3.7173253078080125`*^9, 
   3.71732867222649*^9, 3.7173359896695194`*^9, 3.717502640355558*^9, {
   3.7175066697252383`*^9, 3.71750669210048*^9}, 3.717507373100255*^9, 
   3.717507460887819*^9, {3.71750893398813*^9, 3.717508950186761*^9}, 
   3.717510292116826*^9, 3.7175153972751074`*^9, 3.717768190819954*^9, 
   3.7177922897312317`*^9, 3.7177927138265944`*^9, 3.717792776107705*^9, 
   3.7177928525814447`*^9, 3.718653457915475*^9, 3.7213986625068703`*^9, 
   3.722950097995965*^9, 3.722958179518202*^9, 3.726514043018947*^9, 
   3.726514121811667*^9, 3.726514275258191*^9, 3.7265143520525665`*^9, 
   3.7265144370880413`*^9, 3.7265145487903805`*^9, 3.7265145978791013`*^9, 
   3.7265173444337025`*^9, 3.7265175933532953`*^9, 3.726517633814187*^9, 
   3.7265176937526627`*^9, 3.7265178055169964`*^9, 3.726525160909924*^9, 
   3.726525228716528*^9, 3.7265252660998545`*^9, 3.7265253553743973`*^9, 
   3.726525499753408*^9, 3.7265256419365435`*^9, 3.7265260295746098`*^9, 
   3.726526063142827*^9, 3.7265261052015376`*^9, {3.7265902759362516`*^9, 
   3.726590299448597*^9}, 3.72659073519952*^9, {3.726590775011797*^9, 
   3.7265907995311995`*^9}, 3.726591062062216*^9, 3.7265913017279234`*^9, {
   3.726591396985372*^9, 3.726591433116439*^9}, 3.726591491051752*^9, 
   3.726591586018184*^9, {3.726592003114041*^9, 3.7265920496527023`*^9}, 
   3.726597373036183*^9, 3.726597560114883*^9, 3.726597658953536*^9, 
   3.726597774688156*^9, 3.726597812138298*^9, 3.7265979075937576`*^9, 
   3.726597958653678*^9, 3.726598056866296*^9, 3.726598132407616*^9, 
   3.7265983203313646`*^9, 3.7266003325144553`*^9, 3.7266006239681253`*^9, 
   3.726600909522458*^9, 3.7266009970804663`*^9, 3.726601157487641*^9, 
   3.7266012370821934`*^9, 3.7266012790085917`*^9, 3.7266013408091264`*^9, 
   3.726601401469596*^9, 3.726601459827934*^9, 3.7266015009092836`*^9, 
   3.726601534312194*^9, 3.726601577650673*^9, 3.726601621416176*^9, 
   3.726601701922781*^9, 3.7266017393459215`*^9, 3.7266017719477863`*^9, 
   3.726601864186062*^9, 3.726601932006941*^9, 3.7266020500746937`*^9, 
   3.7266020935831823`*^9, 3.726602136499637*^9, 3.726602351433931*^9, 
   3.7266024546828365`*^9, 3.7266025515783787`*^9, 3.726602815797491*^9, 
   3.7266029194674206`*^9, 3.726603022124292*^9, 3.726603053259073*^9, 
   3.72660315322379*^9, 3.726603215082329*^9, 3.7266033324620423`*^9, 
   3.726603426701432*^9, 3.727104612633853*^9, 3.727105735607487*^9, 
   3.727107407052611*^9, 3.7279788887221975`*^9, 3.7279789615203676`*^9, 
   3.727979158782467*^9, 3.7279792149644194`*^9, 3.727979276814238*^9, 
   3.727979336790319*^9, 3.72797941703408*^9, {3.7279794738648186`*^9, 
   3.7279795008647594`*^9}, {3.7279795629669304`*^9, 3.727979586844288*^9}, 
   3.7279802323048844`*^9, 3.7279803391536565`*^9, 3.727980463145296*^9, 
   3.7279805182637696`*^9, 3.727980578630931*^9, 3.727980685946229*^9, 
   3.727981135031227*^9, 3.7279816178966627`*^9, 3.7279816688221474`*^9, 
   3.7279817371988735`*^9, 3.727981891489867*^9, 3.727981942393964*^9, 
   3.7279820037563815`*^9, {3.7279821294200025`*^9, 3.727982152900758*^9}, 
   3.7279821993300953`*^9, 3.7279822634970694`*^9, 3.727982412992633*^9, 
   3.7279825078990784`*^9, 3.7279825815116367`*^9, 3.727982698971241*^9, 
   3.7324657959288282`*^9, 3.732465851100711*^9, 3.733487171353516*^9, 
   3.756841477451358*^9, 3.7568415330995407`*^9, 3.7568415820103383`*^9, 
   3.75684178571999*^9, 3.7568418927501116`*^9, 3.7568419572458005`*^9, 
   3.75684200916477*^9, 3.756842122892275*^9, 3.7568422131724386`*^9, 
   3.756842295529149*^9, 3.756842337874571*^9, 3.756842433375244*^9, 
   3.7568424738121243`*^9, 3.75684259628062*^9, 3.756842630512473*^9, 
   3.7568428674154406`*^9, 3.7568430569252033`*^9, 3.756843168606843*^9, 
   3.75684319928051*^9, 
   3.7571698849603815`*^9},ExpressionUUID->"4d2189a7-d996-4a1a-9d0f-\
154361fb8ff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedOnlyParametersSplit"}]], "Input",
 CellChangeTimes->{{3.7175090066544633`*^9, 
  3.7175090246144958`*^9}},ExpressionUUID->"ec81324f-d638-4217-9f75-\
5bc221822f39"],

Cell[BoxData["236"], "Output",
 CellChangeTimes->{
  3.7175090255348973`*^9, 3.717515406706736*^9, 3.717768190866754*^9, 
   3.7186534627222834`*^9, 3.7213988264962497`*^9, 3.7229512246374054`*^9, 
   3.722958180653267*^9, 3.726514043051565*^9, 3.7265141218372364`*^9, 
   3.7265142752827935`*^9, 3.7265143520881987`*^9, 3.7265144371221304`*^9, 
   3.7265145488445234`*^9, 3.7265145979011602`*^9, 3.7265173445069027`*^9, 
   3.726517633839255*^9, 3.7265176937797556`*^9, 3.7265178055566015`*^9, 
   3.726525160960557*^9, 3.7265252287551312`*^9, 3.7265252661291933`*^9, 
   3.7265253554265385`*^9, 3.726525499786501*^9, 3.726525641966593*^9, 
   3.7265260296126885`*^9, 3.7265260631759224`*^9, 3.7265261052411127`*^9, {
   3.726590275953253*^9, 3.7265902994645977`*^9}, 3.726590735215521*^9, {
   3.726590775025798*^9, 3.726590799549201*^9}, 3.726591062079217*^9, 
   3.7265913017439246`*^9, {3.7265913970013733`*^9, 3.72659143313544*^9}, 
   3.7265914910737534`*^9, 3.726591586038185*^9, {3.7265920031280413`*^9, 
   3.726592049670704*^9}, 3.7265973730531836`*^9, 3.726597560128884*^9, 
   3.7265976589735374`*^9, 3.726597774711157*^9, 3.726597812152299*^9, 
   3.7265979076087584`*^9, 3.72659795867968*^9, 3.7265980568832965`*^9, 
   3.726598132421617*^9, 3.726598320350366*^9, 3.7266003325344563`*^9, 
   3.726600623989126*^9, 3.7266009095464597`*^9, 3.7266009970974674`*^9, 
   3.726601157508642*^9, 3.7266012370991945`*^9, 3.7266012790265923`*^9, 
   3.726601340826127*^9, 3.7266014014875965`*^9, 3.7266014598449345`*^9, 
   3.726601500929285*^9, 3.7266015343321953`*^9, 3.726601577669674*^9, 
   3.726601621432177*^9, 3.7266017019477825`*^9, 3.7266017393659225`*^9, 
   3.726601771968787*^9, 3.726601864208063*^9, 3.7266019320219417`*^9, 
   3.726602050094695*^9, 3.726602093599183*^9, 3.726602136514638*^9, 
   3.7266023514629326`*^9, 3.7266024546988373`*^9, 3.726602551593379*^9, 
   3.7266028158154917`*^9, 3.7266029194814215`*^9, 3.726603022141293*^9, 
   3.726603053275074*^9, 3.7266031532417917`*^9, 3.72660321510133*^9, 
   3.7266033324800434`*^9, 3.7266034267214336`*^9, 3.727104612672449*^9, 
   3.727107407068206*^9, 3.72797888877985*^9, 3.7279789615669913`*^9, 
   3.727979158830597*^9, 3.727979215037137*^9, 3.727979276986768*^9, 
   3.727979336949242*^9, 3.727979417247647*^9, {3.727979474107345*^9, 
   3.7279795009932575`*^9}, 3.7279795631138153`*^9, 3.7279802323469944`*^9, 
   3.7279803391872473`*^9, 3.7279804631733713`*^9, 3.7279805182843246`*^9, 
   3.727980578676051*^9, 3.727980685967286*^9, 3.727981135059825*^9, 
   3.7279816179192533`*^9, 3.727981668841675*^9, 3.7279817372193985`*^9, 
   3.7279818915224514`*^9, 3.7279819424225473`*^9, 3.7279820037909727`*^9, {
   3.727982129439556*^9, 3.727982152923318*^9}, 3.727982199366192*^9, 
   3.727982263518115*^9, 3.7279824130166907`*^9, 3.727982507923643*^9, 
   3.7279825815387096`*^9, 3.7279826990013204`*^9, 3.732465803892829*^9, 
   3.7324658511257772`*^9, 3.7334871749481263`*^9, 3.756841477466359*^9, 
   3.756841533119542*^9, 3.7568415820233393`*^9, 3.7568417857329903`*^9, 
   3.7568418927661123`*^9, 3.756841957259801*^9, 3.756842009179771*^9, 
   3.756842122908276*^9, 3.7568422131884394`*^9, 3.75684229554615*^9, 
   3.756842337891572*^9, 3.7568424333922453`*^9, 3.7568424738277245`*^9, 
   3.7568425962946205`*^9, 3.756842630528073*^9, 3.7568428774858637`*^9, 
   3.7568430569408035`*^9, 3.7568431686224427`*^9, 3.75684319929611*^9, 
   3.757169884980383*^9},ExpressionUUID->"3aef8fea-b168-4768-9c3d-\
3a2318d152d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myWhiteParametersSplit"}]], "Input",
 CellChangeTimes->{{3.7175090569953547`*^9, 
  3.7175090631769657`*^9}},ExpressionUUID->"bcf42281-95a8-44d8-8870-\
e119cbd06c75"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.717509064222168*^9, 3.7175154073951373`*^9, 3.717768190866754*^9, 
   3.7186534627690835`*^9, 3.7213988265542526`*^9, 3.722951225500455*^9, 
   3.722958181182297*^9, 3.726514043074627*^9, 3.726514121862301*^9, 
   3.726514275300318*^9, 3.7265143521142364`*^9, 3.7265144371446686`*^9, 
   3.726514548874604*^9, 3.7265145979237547`*^9, 3.7265173445279655`*^9, 
   3.726517633857803*^9, 3.726517693802647*^9, 3.726517805583709*^9, 
   3.7265251609862986`*^9, 3.7265252287756915`*^9, 3.7265252661542597`*^9, 
   3.726525355451913*^9, 3.7265254998090286`*^9, 3.726525641990658*^9, 
   3.7265260296421604`*^9, 3.726526063200981*^9, 3.7265261052782135`*^9, {
   3.726590275962253*^9, 3.726590299474598*^9}, 3.7265907352245216`*^9, {
   3.7265907750347986`*^9, 3.7265907995592012`*^9}, 3.7265910620952177`*^9, 
   3.7265913017539253`*^9, {3.7265913970113735`*^9, 3.7265914331444407`*^9}, 
   3.726591491082754*^9, 3.7265915860461855`*^9, {3.726592003132042*^9, 
   3.7265920496827044`*^9}, 3.726597373061184*^9, 3.726597560136884*^9, 
   3.7265976589835377`*^9, 3.7265977747211576`*^9, 3.7265978121602993`*^9, 
   3.726597907618759*^9, 3.72659795868568*^9, 3.726598056893297*^9, 
   3.7265981324286175`*^9, 3.726598320363367*^9, 3.7266003325464573`*^9, 
   3.7266006240041275`*^9, 3.72660090956046*^9, 3.726600997110468*^9, 
   3.726601157523643*^9, 3.726601237111195*^9, 3.7266012790385933`*^9, 
   3.7266013408421283`*^9, 3.7266014014985976`*^9, 3.7266014598569355`*^9, 
   3.7266015009422855`*^9, 3.7266015343441963`*^9, 3.726601577688675*^9, 
   3.726601621445178*^9, 3.7266017019727836`*^9, 3.726601739379923*^9, 
   3.726601771980788*^9, 3.7266018642190638`*^9, 3.7266019320349426`*^9, 
   3.726602050107696*^9, 3.7266020936141844`*^9, 3.726602136527639*^9, 
   3.7266023514769335`*^9, 3.726602454710838*^9, 3.72660255160638*^9, 
   3.7266028158274927`*^9, 3.726602919493422*^9, 3.7266030221622944`*^9, 
   3.726603053287074*^9, 3.726603153254792*^9, 3.7266032151133304`*^9, 
   3.7266033324940443`*^9, 3.7266034267334347`*^9, 3.727104612689494*^9, 
   3.7271074070838575`*^9, 3.7279788887948933`*^9, 3.7279789615820303`*^9, 
   3.7279791588446603`*^9, 3.7279792150656433`*^9, 3.727979276997797*^9, 
   3.727979336963278*^9, 3.7279794172787304`*^9, {3.7279794741334133`*^9, 
   3.727979501023394*^9}, 3.727979563125848*^9, 3.7279802323625374`*^9, 
   3.7279803392118397`*^9, 3.727980463186407*^9, 3.7279805182988667`*^9, 
   3.727980578694149*^9, 3.7279806859878445`*^9, 3.727981135081355*^9, 
   3.727981617937272*^9, 3.7279816688577175`*^9, 3.7279817372314296`*^9, 
   3.727981891538494*^9, 3.727981942445602*^9, 3.727982003816541*^9, {
   3.727982129470645*^9, 3.727982152937357*^9}, 3.727982199374714*^9, 
   3.7279822635336313`*^9, 3.7279824130347404`*^9, 3.7279825079386835`*^9, 
   3.727982581556757*^9, 3.7279826990217056`*^9, 3.7324658039414587`*^9, 
   3.732465851146834*^9, 3.7334871749949265`*^9, 3.7568414774763594`*^9, 
   3.7568415331305428`*^9, 3.75684158203434*^9, 3.7568417857449913`*^9, 
   3.756841892777113*^9, 3.756841957270802*^9, 3.7568420091917715`*^9, 
   3.7568421229182763`*^9, 3.7568422131994405`*^9, 3.756842295556151*^9, 
   3.7568423379015727`*^9, 3.756842433403246*^9, 3.7568424738433247`*^9, 
   3.756842596305621*^9, 3.7568426305436726`*^9, 3.756842877501464*^9, 
   3.7568430569564033`*^9, 3.7568431686224427`*^9, 3.75684319929611*^9, 
   3.7571698849973836`*^9},ExpressionUUID->"4c306fb0-72cb-477e-8b91-\
ce055b989f2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myYellowParametersSplit"}]], "Input",
 CellChangeTimes->{{3.717509068580576*^9, 
  3.717509073089385*^9}},ExpressionUUID->"2cc16347-9252-4142-b0b8-\
e7537a716984"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{
  3.717509074118986*^9, 3.717515408362339*^9, 3.717768190882354*^9, 
   3.7186534627846837`*^9, 3.7213988265672536`*^9, 3.722951226669522*^9, 
   3.7229581817593303`*^9, 3.726514043094178*^9, 3.7265141218858624`*^9, 
   3.7265142753217325`*^9, 3.7265143521408024`*^9, 3.7265144371682267`*^9, 
   3.7265145488971634`*^9, 3.726514597951294*^9, 3.7265173445555177`*^9, 
   3.7265176338813667`*^9, 3.726517693827712*^9, 3.7265178056052513`*^9, 
   3.726525161013871*^9, 3.726525228801284*^9, 3.7265252661793303`*^9, 
   3.7265253554754705`*^9, 3.7265254998391085`*^9, 3.7265256420152235`*^9, 
   3.7265260296702223`*^9, 3.7265260632255464`*^9, 3.726526105301276*^9, {
   3.726590275971254*^9, 3.726590299484599*^9}, 3.726590735233522*^9, {
   3.7265907750437994`*^9, 3.726590799568202*^9}, 3.7265910621072183`*^9, 
   3.7265913017629256`*^9, {3.726591397019374*^9, 3.7265914331534405`*^9}, 
   3.726591491092755*^9, 3.7265915860551863`*^9, {3.726592003138042*^9, 
   3.726592049695705*^9}, 3.7265973730701847`*^9, 3.726597560146885*^9, 
   3.7265976589925385`*^9, 3.7265977747311583`*^9, 3.7265978121692996`*^9, 
   3.7265979076267595`*^9, 3.726597958704681*^9, 3.7265980569022975`*^9, 
   3.7265981324626193`*^9, 3.726598320375367*^9, 3.7266003325584574`*^9, 
   3.7266006240181284`*^9, 3.726600909572461*^9, 3.7266009971234684`*^9, 
   3.7266011575356436`*^9, 3.7266012371221957`*^9, 3.726601279051594*^9, 
   3.7266013408581295`*^9, 3.7266014015115986`*^9, 3.726601459867936*^9, 
   3.7266015009562864`*^9, 3.726601534357197*^9, 3.726601577701676*^9, 
   3.7266016214581785`*^9, 3.7266017019927845`*^9, 3.726601739391924*^9, 
   3.7266017719937887`*^9, 3.7266018642300644`*^9, 3.7266019320489435`*^9, 
   3.7266020501216965`*^9, 3.726602093626185*^9, 3.7266021365396395`*^9, 
   3.726602351489934*^9, 3.7266024547228384`*^9, 3.7266025516183805`*^9, 
   3.7266028158384933`*^9, 3.726602919504422*^9, 3.7266030221822953`*^9, 
   3.7266030533000755`*^9, 3.7266031532667933`*^9, 3.7266032151263313`*^9, 
   3.726603332506045*^9, 3.726603426746435*^9, 3.7271046127075415`*^9, 
   3.7271074070994825`*^9, 3.7279788888114343`*^9, 3.7279789615950656`*^9, 
   3.7279791588586693`*^9, 3.7279792150947514`*^9, 3.7279792770083246`*^9, 
   3.727979336977315*^9, 3.727979417286751*^9, {3.727979474163995*^9, 
   3.727979501061997*^9}, 3.7279795631378856`*^9, 3.727980232377616*^9, 
   3.7279803392308927`*^9, 3.7279804632004433`*^9, 3.7279805183144045`*^9, 
   3.7279805787257576`*^9, 3.7279806860048857`*^9, 3.7279811350963964`*^9, 
   3.72798161795582*^9, 3.7279816688762712`*^9, 3.7279817372444935`*^9, 
   3.727981891553034*^9, 3.7279819424666686`*^9, 3.7279820038365955`*^9, {
   3.7279821294801626`*^9, 3.727982152955864*^9}, 3.72798219938626*^9, 
   3.7279822635501766`*^9, 3.7279824130557957`*^9, 3.727982507953027*^9, 
   3.7279825815758157`*^9, 3.7279826990447702`*^9, 3.732465803958331*^9, 
   3.7324658511663876`*^9, 3.7334871750105267`*^9, 3.75684147748736*^9, 
   3.7568415331415434`*^9, 3.75684158204434*^9, 3.7568417857569923`*^9, 
   3.756841892790114*^9, 3.7568419572808027`*^9, 3.7568420092017727`*^9, 
   3.7568421229292774`*^9, 3.7568422132094407`*^9, 3.756842295567151*^9, 
   3.7568423379125733`*^9, 3.7568424334142466`*^9, 3.7568424738589244`*^9, 
   3.756842596317622*^9, 3.756842630559273*^9, 3.7568428775170636`*^9, 
   3.7568430569564033`*^9, 3.7568431686380424`*^9, 3.75684319931171*^9, 
   3.7571698850103846`*^9},ExpressionUUID->"0373321f-de82-4824-a32e-\
1f597d9ac3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myPurpleParametersSplit"}]], "Input",
 CellChangeTimes->{{3.7175091085520487`*^9, 
  3.7175091128630576`*^9}},ExpressionUUID->"b7ad9afb-3141-4791-845f-\
cbbc78b5317d"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.717509113518259*^9, 3.7175154097123423`*^9, 3.717768190882354*^9, 
   3.718653462800284*^9, 3.7213988265782547`*^9, 3.7229512277375827`*^9, 
   3.722958182545375*^9, 3.7265140431202517`*^9, 3.726514121913436*^9, 
   3.726514275343292*^9, 3.7265143521638985`*^9, 3.7265144371898108`*^9, 
   3.7265145489207263`*^9, 3.7265145979813876`*^9, 3.726517344574049*^9, 
   3.726517633904912*^9, 3.726517693850151*^9, 3.726517805624302*^9, 
   3.726525161045455*^9, 3.726525228825818*^9, 3.726525266206901*^9, 
   3.7265253555000114`*^9, 3.7265254998646774`*^9, 3.72652564204182*^9, 
   3.7265260296978106`*^9, 3.7265260632566376`*^9, 3.726526105325347*^9, {
   3.726590275980254*^9, 3.7265902994925995`*^9}, 3.726590735244523*^9, {
   3.7265907750527997`*^9, 3.7265907995782022`*^9}, 3.726591062118219*^9, 
   3.7265913017739267`*^9, {3.7265913970293746`*^9, 3.7265914331634417`*^9}, 
   3.726591491101755*^9, 3.726591586064187*^9, {3.726592003142042*^9, 
   3.726592049715706*^9}, 3.7265973730791855`*^9, 3.7265975601548853`*^9, 
   3.7265976590045395`*^9, 3.7265977747411585`*^9, 3.7265978121773*^9, 
   3.7265979076357603`*^9, 3.7265979587096815`*^9, 3.726598056914298*^9, 
   3.7265981324686193`*^9, 3.7265983203883677`*^9, 3.7266003325694585`*^9, 
   3.7266006240321293`*^9, 3.7266009095854616`*^9, 3.7266009971354694`*^9, 
   3.7266011575496445`*^9, 3.7266012371351967`*^9, 3.7266012790655947`*^9, 
   3.7266013408691297`*^9, 3.726601401524599*^9, 3.7266014598799367`*^9, 
   3.7266015009702873`*^9, 3.726601534369197*^9, 3.7266015777156763`*^9, 
   3.726601621470179*^9, 3.726601702012786*^9, 3.726601739404925*^9, 
   3.7266017720087895`*^9, 3.726601864242065*^9, 3.726601932063944*^9, 
   3.726602050136698*^9, 3.726602093640186*^9, 3.7266021365516405`*^9, 
   3.726602351503935*^9, 3.726602454735839*^9, 3.7266025516323814`*^9, 
   3.726602815849494*^9, 3.726602919516423*^9, 3.7266030221982965`*^9, 
   3.726603053312076*^9, 3.7266031532797937`*^9, 3.726603215138332*^9, 
   3.7266033325180454`*^9, 3.7266034267594357`*^9, 3.7271046127255917`*^9, 
   3.727107407115083*^9, 3.7279788888284845`*^9, 3.7279789616070986`*^9, 
   3.727979158872739*^9, 3.7279792151233106`*^9, 3.7279792770223618`*^9, 
   3.727979336987342*^9, 3.7279794172937703`*^9, {3.727979474171014*^9, 
   3.727979501068531*^9}, 3.7279795631484137`*^9, 3.727980232393117*^9, 
   3.7279803392484083`*^9, 3.72798046321349*^9, 3.7279805183339567`*^9, 
   3.7279805787478137`*^9, 3.7279806860219307`*^9, 3.727981135117953*^9, 
   3.7279816179803877`*^9, 3.727981668895317*^9, 3.7279817372595015`*^9, 
   3.7279818915685744`*^9, 3.7279819424842052`*^9, 3.7279820038541403`*^9, {
   3.727982129493701*^9, 3.727982152974906*^9}, 3.7279821993932657`*^9, 
   3.727982263568725*^9, 3.727982413074297*^9, 3.7279825079804974`*^9, 
   3.7279825816008625`*^9, 3.727982699073331*^9, 3.732465803975377*^9, 
   3.732465851187454*^9, 3.7334871750261264`*^9, 3.7568414774983606`*^9, 
   3.756841533152544*^9, 3.7568415820563407`*^9, 3.7568417857679925`*^9, 
   3.756841892801114*^9, 3.7568419572918034`*^9, 3.756842009212773*^9, 
   3.756842122942278*^9, 3.756842213220442*^9, 3.7568422955771523`*^9, 
   3.756842337923574*^9, 3.756842433427247*^9, 3.7568424738589244`*^9, 
   3.756842596328623*^9, 3.756842630574873*^9, 3.756842877532664*^9, 
   3.7568430569720035`*^9, 3.7568431686536427`*^9, 3.75684319932731*^9, 
   3.7571698850303855`*^9},ExpressionUUID->"4db6ac30-56f7-41c6-b2e8-\
b88c3a083389"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1858, 1034},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 208, 4, 67, "Section",ExpressionUUID->"0d48e6fe-312e-4d0d-93a8-fe874ba1ea17"],
Cell[791, 28, 644, 14, 67, "Input",ExpressionUUID->"a68e3fbb-5456-422b-b54e-0eab970bb121"],
Cell[1438, 44, 227, 5, 28, "Input",ExpressionUUID->"9577663b-f55c-4a0c-907b-ba69abff9d57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1702, 54, 217, 4, 67, "Section",ExpressionUUID->"5f6835cc-6f4d-4d46-8e51-e1c87bb2f7c1"],
Cell[CellGroupData[{
Cell[1944, 62, 184, 4, 53, "Subsection",ExpressionUUID->"d4e39c81-409e-4e1c-9e7e-e2d51c135c19",
 InitializationCell->True],
Cell[2131, 68, 703, 19, 327519375, "Input",ExpressionUUID->"fa2d8201-0333-4c2a-a0b2-8538927e3b11",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2859, 91, 216, 5, 203767234, "Input",ExpressionUUID->"f2e83eda-932f-4730-a1b7-dc377adc16f1"],
Cell[3078, 98, 2734, 39, 70, "Output",ExpressionUUID->"0c8937e6-3af3-4708-ae89-c783882af871"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5861, 143, 157, 3, 37, "Subsection",ExpressionUUID->"b4483ac1-6dfa-447c-b5b1-4d84eff233c3"],
Cell[6021, 148, 1641, 45, 2147483647, "Input",ExpressionUUID->"3921df9c-2eac-4a9c-a5bb-3f7d37ab20e9"],
Cell[7665, 195, 51112, 845, 2147483647, "Input",ExpressionUUID->"5784cad0-7202-455e-a48e-de80b758a1c3"]
}, Closed]],
Cell[CellGroupData[{
Cell[58814, 1045, 253, 4, 37, "Subsection",ExpressionUUID->"635d5ea5-174b-49f7-bf7a-c8130ec663cb"],
Cell[59070, 1051, 4634, 101, 278308, "Input",ExpressionUUID->"86e1ff3d-9329-4cb1-91bc-3104488369e5"],
Cell[63707, 1154, 3500, 70, 191614, "Input",ExpressionUUID->"34faea4e-11e2-42c4-8fe3-1eddcc12a5d7"]
}, Closed]],
Cell[CellGroupData[{
Cell[67244, 1229, 398, 8, 37, "Subsection",ExpressionUUID->"76b0322d-79d9-4095-a459-b2d01e4d853f"],
Cell[67645, 1239, 12015, 227, 2147483647, "Input",ExpressionUUID->"8b39f68e-7d9f-4b2f-8f7e-5f7dfc3763ea"]
}, Closed]],
Cell[CellGroupData[{
Cell[79697, 1471, 426, 8, 37, "Subsection",ExpressionUUID->"a7992e61-107b-446f-a339-02e4f4f9fbd6"],
Cell[80126, 1481, 3361, 68, 453193, "Input",ExpressionUUID->"13f24dc0-80b6-4efc-b428-8d033c82bc0b"],
Cell[83490, 1551, 5179, 125, 540511, "Input",ExpressionUUID->"4e9bff81-2394-4e0a-9c6c-3b6b0df3eb2c"]
}, Closed]],
Cell[CellGroupData[{
Cell[88706, 1681, 292, 4, 37, "Subsection",ExpressionUUID->"fde97955-e3bf-42de-aeef-f83f879b3d8b"],
Cell[89001, 1687, 2418, 54, 365938, "Input",ExpressionUUID->"5ee4fd1c-51ae-46a8-ad04-5ada17530553"],
Cell[91422, 1743, 1286, 36, 104412, "Input",ExpressionUUID->"ab7ff017-5dfe-4aa0-849a-b5497591167e"],
Cell[92711, 1781, 8873, 204, 918819, "Input",ExpressionUUID->"c86dec83-dd46-449a-975c-ed8cb61a3664"]
}, Closed]],
Cell[CellGroupData[{
Cell[101621, 1990, 259, 4, 37, "Subsection",ExpressionUUID->"6c31186f-6439-4489-b08d-b37d5660ed7c"],
Cell[101883, 1996, 4215, 96, 16690, "Input",ExpressionUUID->"210ecdde-bd5a-484c-a6e5-dd349c6264fd"]
}, Closed]],
Cell[CellGroupData[{
Cell[106135, 2097, 161, 3, 37, "Subsection",ExpressionUUID->"7e08c79f-f0ad-4524-a0c0-47b296a4da6f"],
Cell[106299, 2102, 487, 11, 45202, "Input",ExpressionUUID->"bea03014-025f-44f9-83c7-206a2b9c8f20"],
Cell[106789, 2115, 3848, 97, 424234, "Input",ExpressionUUID->"108d940e-44fa-4e0b-92a9-4a4df6170aba"]
}, Closed]],
Cell[CellGroupData[{
Cell[110674, 2217, 159, 3, 37, "Subsection",ExpressionUUID->"fc32cd9a-81c2-4b9c-b97f-7e36f8d5fe60"],
Cell[110836, 2222, 494, 10, 45202, "Input",ExpressionUUID->"55227ad0-6f64-483f-a4ee-8ee464f3b45a"],
Cell[111333, 2234, 13254, 295, 1587561, "Input",ExpressionUUID->"5a6a82e1-747e-4124-9620-e2ae0544bff1"],
Cell[124590, 2531, 421, 11, 45202, "Input",ExpressionUUID->"02381558-17b7-41f0-9a6c-367595350ec5"]
}, Closed]],
Cell[CellGroupData[{
Cell[125048, 2547, 165, 3, 37, "Subsection",ExpressionUUID->"1d154053-3314-4c35-885f-b5e9e82543ab"],
Cell[125216, 2552, 643, 12, 2922, "Text",ExpressionUUID->"bca9aaac-2123-45b6-a7a0-46c70793f2c1"],
Cell[125862, 2566, 2492, 53, 6597, "Input",ExpressionUUID->"d6c02d79-a4cb-43f8-8e60-5aa6b3e9ff7c"],
Cell[128357, 2621, 12741, 274, 25966, "Input",ExpressionUUID->"274c7f76-3f9b-4de1-a0a6-04085d9b9973"],
Cell[141101, 2897, 13614, 290, 26665, "Input",ExpressionUUID->"97a56191-40dd-46a0-b8b9-b781748def7a"],
Cell[154718, 3189, 14942, 313, 28741, "Input",ExpressionUUID->"20c0c442-373c-45ac-8e7e-b608e7aec81e"]
}, Closed]],
Cell[CellGroupData[{
Cell[169697, 3507, 162, 3, 37, "Subsection",ExpressionUUID->"7af4ee72-494c-45c1-ba14-b56f8a4c1509"],
Cell[169862, 3512, 6848, 163, 2010767007, "Input",ExpressionUUID->"4ed19f10-5e0c-400c-be4d-a6180a6d50ff"],
Cell[176713, 3677, 1867, 48, 852927265, "Input",ExpressionUUID->"44982f9b-1b8d-45ba-9e31-ab49eef25c4e"],
Cell[178583, 3727, 1941, 47, 942083452, "Input",ExpressionUUID->"d581b615-8ee9-4476-8e54-44a53bd6d777"],
Cell[180527, 3776, 1780, 45, 852927265, "Input",ExpressionUUID->"e6631662-8c9a-402f-ace5-54cf55e5cc0a"]
}, Closed]],
Cell[CellGroupData[{
Cell[182344, 3826, 424, 8, 37, "Subsection",ExpressionUUID->"0324cca3-7e73-4d2a-9f07-c96e3f788d23"],
Cell[182771, 3836, 5504, 132, 2602, "Input",ExpressionUUID->"204407ee-2493-444b-93d6-5d47f6322a14"]
}, Closed]],
Cell[CellGroupData[{
Cell[188312, 3973, 312, 7, 37, "Subsection",ExpressionUUID->"3f6f0af3-63b7-4bf3-b020-ddcf46ccbd0e"],
Cell[188627, 3982, 2510, 52, 52451127, "Input",ExpressionUUID->"b9bfcdd0-1767-4cf9-ac8c-c4c480acb09c"]
}, Closed]],
Cell[CellGroupData[{
Cell[191174, 4039, 438, 8, 37, "Subsection",ExpressionUUID->"483f2053-b61e-4863-ae46-fdebf03e20ef"],
Cell[191615, 4049, 4380, 90, 118007095, "Input",ExpressionUUID->"90157c3c-4eed-48d5-86a1-aad6ac41f511"]
}, Closed]],
Cell[CellGroupData[{
Cell[196032, 4144, 306, 5, 37, "Subsection",ExpressionUUID->"29cf71c6-3878-4abd-b4b1-bde85aae40dc"],
Cell[196341, 4151, 14337, 315, 11035, "Input",ExpressionUUID->"32a5d40a-f29e-43ad-a4ce-5e5096caefbe"],
Cell[210681, 4468, 8554, 202, 6322, "Input",ExpressionUUID->"e1ef8606-e639-4ac6-aa5e-afc3fb1acc51"],
Cell[219238, 4672, 3596, 86, 4345, "Input",ExpressionUUID->"dbb834f6-fc5f-4411-abfa-c210bb52b8b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[222871, 4763, 253, 4, 37, "Subsection",ExpressionUUID->"b24f19eb-5178-45dc-93a6-0667abbd32b2"],
Cell[223127, 4769, 1589, 37, 675619678, "Input",ExpressionUUID->"3a728b62-234e-4237-837c-5cb98b8da533"],
Cell[224719, 4808, 1918, 44, 675619678, "Input",ExpressionUUID->"e00b925c-229a-49f6-b9b7-58a165ecf1f8"],
Cell[226640, 4854, 6744, 155, 1921036150, "Input",ExpressionUUID->"16fc7f51-9c6b-49d8-83f0-e68c41c10803"]
}, Closed]],
Cell[CellGroupData[{
Cell[233421, 5014, 158, 3, 37, "Subsection",ExpressionUUID->"6c7e2434-42df-4bf2-bc2c-27dcee1663fc"],
Cell[233582, 5019, 602, 12, 230272237, "Input",ExpressionUUID->"63e126cb-cd7a-4855-ac87-3dc698313573"],
Cell[234187, 5033, 8940, 200, 2147483647, "Input",ExpressionUUID->"f02746ea-e599-436d-a217-328fce35d95f"]
}, Closed]],
Cell[CellGroupData[{
Cell[243164, 5238, 171, 3, 37, "Subsection",ExpressionUUID->"06ba5028-9bd0-4ff8-b38d-82b2eb8b35a6"],
Cell[243338, 5243, 7632, 176, 23364660, "Input",ExpressionUUID->"535b2327-0786-4778-996a-67742db55958"]
}, Closed]],
Cell[CellGroupData[{
Cell[251007, 5424, 242, 6, 37, "Subsection",ExpressionUUID->"2585b4ca-456a-4878-a846-796da85a0f9c"],
Cell[251252, 5432, 1592, 40, 6666894, "Input",ExpressionUUID->"4d24b4c0-6a7f-4b7d-a9bb-be7743017502"],
Cell[252847, 5474, 1717, 42, 6666894, "Input",ExpressionUUID->"0781a658-1fdd-4452-b978-27aa7bf80266"]
}, Closed]],
Cell[CellGroupData[{
Cell[254601, 5521, 241, 4, 37, "Subsection",ExpressionUUID->"1afe7705-f4ae-4a0d-ada1-a550cb4ea16b"],
Cell[254845, 5527, 1353, 37, 3092994, "Input",ExpressionUUID->"67a59e8e-3198-4781-b822-c7f97bc9c890"]
}, Closed]],
Cell[CellGroupData[{
Cell[256235, 5569, 231, 5, 37, "Subsection",ExpressionUUID->"37665852-9515-4cef-b039-03638770767d"],
Cell[256469, 5576, 4554, 101, 13587, "Input",ExpressionUUID->"a9b119c5-4438-4627-9262-609cd3b0129a"],
Cell[261026, 5679, 4363, 95, 13587, "Input",ExpressionUUID->"c1b50967-d5f1-466f-aed4-017cb1bb709e"]
}, Closed]],
Cell[CellGroupData[{
Cell[265426, 5779, 204, 3, 37, "Subsection",ExpressionUUID->"f858624d-8b17-4631-a44f-81b076742f79"],
Cell[265633, 5784, 5373, 141, 811, "Input",ExpressionUUID->"f9e640f7-e3a3-4f62-8553-8c83e316675a"]
}, Closed]],
Cell[CellGroupData[{
Cell[271043, 5930, 342, 7, 37, "Subsection",ExpressionUUID->"33440c58-3a13-48d1-9824-c5165b818633"],
Cell[271388, 5939, 23770, 581, 35043, "Input",ExpressionUUID->"aab6a5e2-44be-49c4-94ab-6bf5c37ef4e6"]
}, Closed]],
Cell[CellGroupData[{
Cell[295195, 6525, 213, 3, 37, "Subsection",ExpressionUUID->"6a402888-a476-442e-bccc-eaad2904372b"],
Cell[295411, 6530, 6267, 143, 801, "Input",ExpressionUUID->"97f317fe-51cd-4bef-b470-194f247a6dbb"],
Cell[301681, 6675, 128, 3, 93, "Input",ExpressionUUID->"ba13489a-8620-4360-aab0-8ff2e8e46bee"]
}, Closed]],
Cell[CellGroupData[{
Cell[301846, 6683, 282, 6, 37, "Subsection",ExpressionUUID->"a21f0844-85ab-4092-b22d-10c07527d548"],
Cell[302131, 6691, 5794, 147, 482215, "Input",ExpressionUUID->"dafbf9f3-4954-44e3-b3fd-e66c464e026b"],
Cell[307928, 6840, 2969, 71, 278308, "Input",ExpressionUUID->"edbdee73-ca7c-4718-9c33-87fb488c09dd"]
}, Closed]],
Cell[310912, 6914, 172, 3, 37, "Subsection",ExpressionUUID->"fff8efca-8997-4f22-a255-839e90e3afa0"],
Cell[CellGroupData[{
Cell[311109, 6921, 178, 3, 37, "Subsection",ExpressionUUID->"15d41bf2-98fb-47a0-8cf1-fd1ce8507405"],
Cell[311290, 6926, 5725, 148, 972, "Input",ExpressionUUID->"678926b6-063b-4409-8cfd-1696f864444b"],
Cell[317018, 7076, 4312, 114, 972, "Input",ExpressionUUID->"cdb335bb-53f1-4cf8-b2f0-f5173541c9b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[321367, 7195, 296, 4, 37, "Subsection",ExpressionUUID->"586cf469-dcce-471e-b42e-28aaecf4db50"],
Cell[321666, 7201, 1641, 45, 189, "Input",ExpressionUUID->"c6538116-bd5d-4e6b-ac17-79ffe3414d36"],
Cell[323310, 7248, 51112, 845, 82, "Input",ExpressionUUID->"12afe874-5c84-4ec1-8454-1cc2240d40ca"],
Cell[374425, 8095, 4634, 101, 124, "Input",ExpressionUUID->"a246bf0a-d850-4ffd-908d-0f5b3c1b33ab"],
Cell[379062, 8198, 3500, 70, 86, "Input",ExpressionUUID->"cb059fa4-7f63-4834-b91c-071dc2be42eb"],
Cell[382565, 8270, 592, 10, 56, "Text",ExpressionUUID->"5d6bff52-6ced-4b84-b0af-516fbf68e401"],
Cell[383160, 8282, 480, 13, 28, "Input",ExpressionUUID->"9fe357c6-ca7f-4fa1-a153-880f6436c41a"],
Cell[383643, 8297, 14101, 311, 605, "Input",ExpressionUUID->"f7a7cda7-7a3d-4fb3-b2d1-ffbf58ccb07f"],
Cell[397747, 8610, 15712, 347, 712, "Input",ExpressionUUID->"c7ef53d0-b7fd-4a36-8b9f-2bec594fb7cc"],
Cell[413462, 8959, 13217, 316, 712, "Input",ExpressionUUID->"5d7fa163-c2ae-4e94-b68e-b454dcc8a42f"],
Cell[426682, 9277, 9889, 228, 352, "Input",ExpressionUUID->"95885b5a-5702-4c2b-b527-f7a4d0333ef3"],
Cell[436574, 9507, 14516, 316, 605, "Input",ExpressionUUID->"837552d6-6355-4313-93ca-844d02fd6bf2"],
Cell[451093, 9825, 15968, 350, 712, "Input",ExpressionUUID->"b34a6868-a422-40a3-81b9-193f371e993c"],
Cell[467064, 10177, 16799, 365, 712, "Input",ExpressionUUID->"3ce4fe93-8ab4-48ae-b5d9-0f506f312750"],
Cell[483866, 10544, 2936, 66, 143, "Input",ExpressionUUID->"90c6ba49-526e-48c3-99d8-60b351857292"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486839, 10615, 160, 3, 53, "Subsection",ExpressionUUID->"fee8d20b-42bb-4e72-8c3a-813684f8c01b"],
Cell[487002, 10620, 3472, 98, 291, "Input",ExpressionUUID->"6f0b6d32-b602-486b-a64f-89311c8880b2"]
}, Closed]],
Cell[CellGroupData[{
Cell[490511, 10723, 301, 4, 37, "Subsection",ExpressionUUID->"7353d79f-b778-4d01-9534-6c3b004f0138"],
Cell[490815, 10729, 4225, 110, 522, "Input",ExpressionUUID->"ba54da75-3992-4642-9f0a-6fe835d7a119"]
}, Closed]],
Cell[CellGroupData[{
Cell[495077, 10844, 190, 3, 37, "Subsection",ExpressionUUID->"608a76ed-e77e-4854-ba22-68db3e957192"],
Cell[495270, 10849, 4156, 107, 124, "Input",ExpressionUUID->"8b365fb4-00ee-4691-ac89-24a40bae15f6"],
Cell[499429, 10958, 4248, 109, 124, "Input",ExpressionUUID->"640c0fb6-e9db-43d2-a5dc-761bd906f9cd"],
Cell[503680, 11069, 5869, 145, 184, "Input",ExpressionUUID->"e3aef6ea-65f7-4105-b06c-ce7a62084753"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509586, 11219, 312, 7, 53, "Subsection",ExpressionUUID->"232578f9-4a21-4704-b292-e418ec341918"],
Cell[509901, 11228, 6600, 157, 184, "Input",ExpressionUUID->"964302f6-fdd2-4b3c-8f6f-e3bd24572a6c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516538, 11390, 218, 5, 53, "Subsection",ExpressionUUID->"10884ae8-510f-4ab8-b229-bea13d0e2e69"],
Cell[516759, 11397, 4583, 119, 492, "Input",ExpressionUUID->"7058afc7-8c5b-4fbb-9476-4f796ab8a1f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[521379, 11521, 309, 6, 37, "Subsection",ExpressionUUID->"2cedf0ed-be45-46c4-ae6d-d527ff15465b"],
Cell[521691, 11529, 5659, 144, 556, "Input",ExpressionUUID->"12ee99a2-9777-40f9-8fe2-a55f7cbfdf9e"]
}, Closed]],
Cell[CellGroupData[{
Cell[527387, 11678, 218, 4, 37, "Subsection",ExpressionUUID->"09645c52-1503-45f4-ab7f-2d42664ef53b"],
Cell[527608, 11684, 4570, 108, 200, "Input",ExpressionUUID->"7e9e887a-6d55-4981-b194-85afb4b5fced"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532215, 11797, 164, 3, 53, "Subsection",ExpressionUUID->"b1ece991-4722-4115-938c-afe25bca5bed"],
Cell[532382, 11802, 1191, 34, 32, "Input",ExpressionUUID->"0eb85cf7-3557-4fcf-ab75-342e51921296"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533610, 11841, 350, 7, 53, "Subsection",ExpressionUUID->"0e8edc81-f560-43be-8e58-f0d36cc1ffe4"],
Cell[533963, 11850, 8764, 219, 1, "Input",ExpressionUUID->"718d344c-8f3f-4434-884e-da7f151fe001"],
Cell[542730, 12071, 8019, 207, 0, "Input",ExpressionUUID->"a04c632a-20e4-4880-a9ef-20fd5927f3e8"]
}, Closed]],
Cell[CellGroupData[{
Cell[550786, 12283, 207, 3, 37, "Subsection",ExpressionUUID->"84d9f2a1-4790-4a1b-b18e-2b35f96dcc09"],
Cell[550996, 12288, 6157, 143, 200, "Input",ExpressionUUID->"4e3b3c92-05d6-439e-909a-710ea4bd5de7"],
Cell[557156, 12433, 7877, 181, 238, "Input",ExpressionUUID->"dc9fd740-e1fe-4647-98b1-9d5fd9a2cc50"],
Cell[565036, 12616, 6484, 164, 238, "Input",ExpressionUUID->"3066f3af-6beb-4312-a537-53b75cb37198"],
Cell[571523, 12782, 6430, 148, 200, "Input",ExpressionUUID->"8de62135-d597-47ab-af2f-7f45c9a5e2c4"],
Cell[577956, 12932, 354, 8, 28, "Input",ExpressionUUID->"e2609b6e-cdf0-485c-a83d-ca0e1c8758b5"],
Cell[578313, 12942, 469, 9, 28, "Input",ExpressionUUID->"942d1b5b-37b5-4537-aa96-4ba645406af4"],
Cell[578785, 12953, 1219, 34, 67, "Input",ExpressionUUID->"5cf83643-d33a-46b3-a818-7bf33516f1c0"],
Cell[580007, 12989, 182, 4, 28, "Input",ExpressionUUID->"3b30e546-c9df-426f-b575-75540296413e"],
Cell[580192, 12995, 335, 7, 28, "Input",ExpressionUUID->"4d68e1dd-974c-46c1-83c9-7ee3a29ace8e"],
Cell[580530, 13004, 3445, 92, 86, "Input",ExpressionUUID->"f5c5d5e9-f084-4f14-aafa-c7cfef8b5e22"],
Cell[583978, 13098, 207, 4, 28, "Input",ExpressionUUID->"ad1128b2-70fe-4bf9-ba45-ade3f42040cf"],
Cell[584188, 13104, 367, 11, 28, "Input",ExpressionUUID->"e3d09b4d-c09d-411b-847e-c85510c888ae"],
Cell[584558, 13117, 492, 14, 28, "Input",ExpressionUUID->"5518a18b-311f-4cef-9ef7-f698ae385e6d"],
Cell[585053, 13133, 219, 5, 28, "Input",ExpressionUUID->"6dedae5f-d702-4cdd-b6ac-5d481ee78e48"],
Cell[585275, 13140, 528, 15, 28, "Input",ExpressionUUID->"01c32e7e-baae-4700-b1bc-04f607a43057"],
Cell[585806, 13157, 3562, 95, 86, "Input",ExpressionUUID->"10418ce5-7bff-4357-8e92-679ce96dfc73"],
Cell[589371, 13254, 183, 4, 28, "Input",ExpressionUUID->"35683191-d4da-45b6-b4d4-a6558ffe6c50"],
Cell[589557, 13260, 222, 5, 28, "Input",ExpressionUUID->"99637fa1-d56f-473d-9b69-30bcb5afc077"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[589828, 13271, 157, 3, 53, "Section",ExpressionUUID->"695efa60-10a1-4711-a763-a62af2c5b398"],
Cell[CellGroupData[{
Cell[590010, 13278, 475, 7, 53, "Subsection",ExpressionUUID->"fc889988-50c3-47a3-8b58-7f048afd8549"],
Cell[CellGroupData[{
Cell[590510, 13289, 625, 12, 28, "Input",ExpressionUUID->"fc4159d6-b67d-4791-8c90-66b700a6ccff"],
Cell[591138, 13303, 448, 10, 44, "Output",ExpressionUUID->"1b086bdb-f041-4ed4-9767-e42304738c8d"]
}, Open  ]],
Cell[591601, 13316, 254, 6, 34, "Text",ExpressionUUID->"328d44f7-a36a-4cab-aed5-f755436641f3"],
Cell[591858, 13324, 1692, 51, 86, "Input",ExpressionUUID->"99d09a31-5936-41fa-b136-bfd628c9d02b"],
Cell[593553, 13377, 218, 5, 34, "Text",ExpressionUUID->"6ea85afc-fd78-4670-a379-4ae1fe52f30f"],
Cell[593774, 13384, 848, 23, 86, "Input",ExpressionUUID->"1a065ae7-3afa-43bb-b523-dd282c81c676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594659, 13412, 335, 5, 53, "Subsection",ExpressionUUID->"ccf14e31-c0ed-473b-bb58-1f460cdfeafa"],
Cell[594997, 13419, 229, 5, 34, "Text",ExpressionUUID->"46882a4f-d4b3-4632-8eae-27a9d597e205"],
Cell[595229, 13426, 1043, 29, 67, "Input",ExpressionUUID->"ec9681ed-19ae-4e20-a311-f2c389ea8482"],
Cell[596275, 13457, 387, 8, 34, "Text",ExpressionUUID->"f9cf6894-2e4b-454f-9589-17feab33f8eb"],
Cell[CellGroupData[{
Cell[596687, 13469, 543, 11, 28, "Input",ExpressionUUID->"d8da2366-e72e-47ae-ac4f-12ff0387465d"],
Cell[597233, 13482, 443013, 7267, 529, "Output",ExpressionUUID->"dbf8b6a0-84df-4a1b-9853-2eb596bcc804"]
}, Open  ]],
Cell[1040261, 20752, 202, 3, 34, "Text",ExpressionUUID->"b41c6f03-0e3c-4217-907f-207aba7c392a"],
Cell[1040466, 20757, 3738, 68, 134, "Input",ExpressionUUID->"6e4762f2-896b-4508-8c40-56e6ae295529"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1044241, 20830, 344, 7, 53, "Subsection",ExpressionUUID->"fbc1f047-2bfc-4344-a4a4-3a31c5535177"],
Cell[1044588, 20839, 290, 8, 28, "Input",ExpressionUUID->"83ba9313-a312-4e02-be32-fd076948e659"],
Cell[1044881, 20849, 2280, 55, 124, "Input",ExpressionUUID->"0935b445-fd79-430e-91ac-36a65abe00e0"],
Cell[1047164, 20906, 2100, 49, 105, "Input",ExpressionUUID->"e26d1601-8c67-4f77-a85d-b7c5edbc340b"],
Cell[CellGroupData[{
Cell[1049289, 20959, 2014, 43, 67, "Input",ExpressionUUID->"c10728c6-f957-4d6b-993a-0b24851d3917"],
Cell[1051306, 21004, 1805, 27, 32, "Output",ExpressionUUID->"75d9c320-c648-4a8d-a52b-11bf941ea66f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1053148, 21036, 2766, 56, 86, "Input",ExpressionUUID->"97eb1b14-5102-4bac-ac45-dcf3a432b5f8"],
Cell[1055917, 21094, 400, 9, 44, "Message",ExpressionUUID->"ffb6e575-0cd4-45e2-959d-faaca337de7d"],
Cell[1056320, 21105, 400, 9, 24, "Message",ExpressionUUID->"aa304745-b9f0-41b6-907b-f38d95cedd2d"],
Cell[1056723, 21116, 400, 9, 44, "Message",ExpressionUUID->"323c0688-c340-419f-a4ca-bfafb08cc925"],
Cell[1057126, 21127, 403, 9, 21, "Message",ExpressionUUID->"478161f9-367e-4206-a9d1-6023a44e7a5d"],
Cell[1057532, 21138, 3321, 67, 354, "Output",ExpressionUUID->"89582868-b7b6-4088-96f7-0069321d4064"]
}, Open  ]],
Cell[1060868, 21208, 278, 7, 28, "Input",ExpressionUUID->"40989a75-87c4-43a7-96d2-93085f09d702"],
Cell[1061149, 21217, 179, 4, 28, "Input",ExpressionUUID->"4cd80e42-06e4-4a13-b5d5-cb3c20a2bdb9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1061365, 21226, 434, 8, 53, "Subsection",ExpressionUUID->"f743aeb4-469a-453b-a5ba-79bf05690df0"],
Cell[1061802, 21236, 2416, 58, 86, "Input",ExpressionUUID->"3bf28e00-a76c-40cd-9c7b-81c7e758eec4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1064255, 21299, 184, 3, 53, "Subsection",ExpressionUUID->"1ef6a2c0-01ce-47ca-9f73-afd665781551"],
Cell[1064442, 21304, 1062, 26, 556, "Input",ExpressionUUID->"2f0ebc76-9d71-42ae-9081-16fa03037457"],
Cell[1065507, 21332, 1985, 47, 880, "Input",ExpressionUUID->"095f9840-cd50-495b-85b9-d847b530c2c5"],
Cell[CellGroupData[{
Cell[1067517, 21383, 1712, 39, 556, "Input",ExpressionUUID->"0b944e34-1bec-44e2-956d-8fb2511e507f"],
Cell[1069232, 21424, 561, 9, 232, "Output",ExpressionUUID->"8acfa498-b868-4af7-b01c-e3fbf8a9ab8e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1069842, 21439, 348, 5, 37, "Subsection",ExpressionUUID->"fb8a47fd-6da4-4bd6-a227-5c9fd8364fd1"],
Cell[1070193, 21446, 1026, 28, 48, "Input",ExpressionUUID->"1dcbdac5-4bef-403d-a1f2-1db00ed03ac4"],
Cell[CellGroupData[{
Cell[1071244, 21478, 410, 10, 28, "Input",ExpressionUUID->"dc84fcc4-1460-47e0-988d-250acd3a0578"],
Cell[1071657, 21490, 461, 9, 21, "Message",ExpressionUUID->"52f2c0fa-d963-4b60-9708-e5c35a56651d"]
}, Open  ]],
Cell[1072133, 21502, 515, 12, 28, "Input",ExpressionUUID->"cd3a86f1-4c3c-47a9-a543-0c5797c13513"],
Cell[CellGroupData[{
Cell[1072673, 21518, 324, 9, 28, "Input",ExpressionUUID->"3a1d404a-9293-4e5e-9560-50b066a643a4"],
Cell[1073000, 21529, 137, 3, 32, "Output",ExpressionUUID->"c70db2e7-290a-4a7f-b72f-e9b9965f3c72"]
}, Open  ]],
Cell[1073152, 21535, 277, 7, 28, "Input",ExpressionUUID->"0ff34014-0a5e-4ec4-9f9b-8e4f2a2d5f58"],
Cell[1073432, 21544, 179, 4, 28, "Input",ExpressionUUID->"d6fd1693-b025-424e-ad51-b08f9b81b136"],
Cell[1073614, 21550, 304, 9, 28, "Input",ExpressionUUID->"2b92866b-8c10-43b1-91a7-36668309d539"],
Cell[1073921, 21561, 314, 9, 28, "Input",ExpressionUUID->"97a8fa9c-041f-473e-a520-bb71c230a432"],
Cell[1074238, 21572, 312, 9, 28, "Input",ExpressionUUID->"3394fbd5-bddc-42fa-af4e-1703fc5e73f9"],
Cell[1074553, 21583, 263, 6, 28, "Input",ExpressionUUID->"d2dd280a-03bd-4cc9-8f49-49d362d71cfc"],
Cell[1074819, 21591, 263, 6, 28, "Input",ExpressionUUID->"15fc0a6b-52a7-4ae9-8945-d0cf33253bf5"]
}, Closed]],
Cell[CellGroupData[{
Cell[1075119, 21602, 296, 6, 37, "Subsection",ExpressionUUID->"74092ba4-b9e9-4e9c-b1da-bdd3d77af0d9"],
Cell[1075418, 21610, 567, 16, 28, "Input",ExpressionUUID->"1de773a5-6098-41ac-89a5-38a4ebdfd215"],
Cell[1075988, 21628, 180, 3, 34, "Text",ExpressionUUID->"171954f8-5bdc-4460-8707-56d0a33b07d3"],
Cell[1076171, 21633, 1393, 40, 67, "Input",ExpressionUUID->"d63b4c24-125b-4bbb-a0e9-748f03ae5837"],
Cell[1077567, 21675, 249, 6, 34, "Text",ExpressionUUID->"0d8d2386-1da6-47fc-a0ab-9c1955c5a836"],
Cell[1077819, 21683, 5210, 125, 143, "Input",ExpressionUUID->"ad5aac45-29f0-46e1-8509-d6223f3775b2"],
Cell[CellGroupData[{
Cell[1083054, 21812, 3022, 56, 48, "Input",ExpressionUUID->"c1c20ab6-1a66-42a9-8e2b-c99d2440be88"],
Cell[1086079, 21870, 1276, 23, 32, "Output",ExpressionUUID->"90ad8aaf-6cef-4995-8a82-2fa2d86d39ae"]
}, Open  ]],
Cell[1087370, 21896, 1276, 28, 28, "Input",ExpressionUUID->"dc4889ed-ddff-4d0d-9648-82ac7a77e081"],
Cell[1088649, 21926, 253, 6, 34, "Text",ExpressionUUID->"435ac3ee-042a-49e5-86ac-dd46b650c88f"],
Cell[1088905, 21934, 1939, 47, 67, "Input",ExpressionUUID->"edf53add-5087-481b-b83f-56ca39777f66"],
Cell[1090847, 21983, 198, 3, 34, "Text",ExpressionUUID->"5bdc333d-dfbd-4717-a7e6-d9c8fddc7019"],
Cell[CellGroupData[{
Cell[1091070, 21990, 526, 12, 28, "Input",ExpressionUUID->"6755a142-98f4-4af9-875b-5dead15e34aa"],
Cell[1091599, 22004, 6389, 112, 247, "Output",ExpressionUUID->"8860aaa2-12a8-4910-a40f-94427579f90f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1098037, 22122, 372, 6, 53, "Subsection",ExpressionUUID->"f613f007-eadb-43f8-9a88-2721b84b678a"],
Cell[1098412, 22130, 545, 10, 34, "Text",ExpressionUUID->"4b7f20bb-30dc-46e0-b098-9c08dd2a7193"],
Cell[1098960, 22142, 995, 16, 48, "Input",ExpressionUUID->"c8e6f53f-5935-4d16-9942-f44861f8cc23"],
Cell[CellGroupData[{
Cell[1099980, 22162, 1819, 33, 48, "Input",ExpressionUUID->"c272c36d-7049-4368-a7c3-590c086115e2"],
Cell[1101802, 22197, 2929, 43, 32, "Output",ExpressionUUID->"4cf8b8b8-79ed-46cf-84ca-b2a0b70d0b30"]
}, Open  ]],
Cell[1104746, 22243, 268, 7, 28, "Input",ExpressionUUID->"4824c533-30b6-46a0-8a38-ff3bbe52a29c"],
Cell[1105017, 22252, 278, 6, 34, "Text",ExpressionUUID->"b76c640d-905d-4b2d-80e8-6709266bba4c"],
Cell[1105298, 22260, 996, 16, 28, "Input",ExpressionUUID->"1989ea12-a9e6-4397-a441-a003a1e42714"],
Cell[CellGroupData[{
Cell[1106319, 22280, 1200, 28, 48, "Input",ExpressionUUID->"d8359c56-31d5-4b14-be48-db5834cd739a"],
Cell[1107522, 22310, 3413, 50, 32, "Output",ExpressionUUID->"f10646c4-8a18-441b-8e2b-04aef422aee2"]
}, Open  ]],
Cell[1110950, 22363, 843, 19, 28, "Input",ExpressionUUID->"bbd416d9-d127-4c56-ad65-2020b477d8f4"],
Cell[1111796, 22384, 1240, 34, 28, "Input",ExpressionUUID->"0012e2c7-b807-4f99-9cd2-3b943674a1f1"],
Cell[CellGroupData[{
Cell[1113061, 22422, 482, 11, 28, "Input",ExpressionUUID->"f1ce8062-eb86-41fb-9f42-915bb0faf71f"],
Cell[1113546, 22435, 4904, 90, 253, "Output",ExpressionUUID->"331f196f-55d8-460a-9649-796e6b035cc0"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1118499, 22531, 264, 5, 53, "Subsection",ExpressionUUID->"7d36ebe7-ba97-42cc-92d6-4e9326e9594a"],
Cell[1118766, 22538, 1360, 31, 86, "Input",ExpressionUUID->"adc2c87b-5ba9-44e3-a610-c565a850aee6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1120163, 22574, 240, 4, 53, "Subsection",ExpressionUUID->"83575452-74dc-4a93-a8cf-984c737fbc0c"],
Cell[1120406, 22580, 1356, 28, 48, "Input",ExpressionUUID->"dfd1c965-6f96-468f-9b5b-aa9bac82ea21"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1121811, 22614, 342, 7, 70, "Section",ExpressionUUID->"8b969bb7-de50-4747-8b20-d0bfb79596c6"],
Cell[CellGroupData[{
Cell[1122178, 22625, 171, 3, 44, "Subsubsection",ExpressionUUID->"36641862-8797-46b6-8625-0d7513d744ec"],
Cell[1122352, 22630, 325, 9, 48, "Input",ExpressionUUID->"3e9a71fb-f24c-421c-91d6-2d762eb141d1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1122714, 22644, 282, 4, 44, "Subsubsection",ExpressionUUID->"d8f4059f-e734-4066-b40c-b8d7f9a0e539"],
Cell[1122999, 22650, 290, 6, 34, "Text",ExpressionUUID->"0eac7cad-021a-483c-8afd-4bad9d5d0cb0"],
Cell[CellGroupData[{
Cell[1123314, 22660, 1252, 23, 28, "Input",ExpressionUUID->"3da0bf30-ce33-4429-9edd-0bc1302d3ba4"],
Cell[1124569, 22685, 561, 11, 21, "Message",ExpressionUUID->"89092371-c53b-48d5-9fde-b6ddb18c5cfa"],
Cell[1125133, 22698, 559, 11, 21, "Message",ExpressionUUID->"0a06434c-6ad6-4f7a-ad47-7f37ac010cd3"],
Cell[1125695, 22711, 560, 11, 21, "Message",ExpressionUUID->"a2f5ff61-6d4c-424d-ba4c-aa18655ec553"],
Cell[1126258, 22724, 604, 11, 21, "Message",ExpressionUUID->"edb7274b-e024-4250-ad63-0cfc7e6f6bf0"]
}, Open  ]],
Cell[1126877, 22738, 401, 10, 28, "Input",ExpressionUUID->"b06e4f95-5311-4047-b0f2-acc26c891124"],
Cell[1127281, 22750, 526, 14, 28, "Input",ExpressionUUID->"97375092-868a-471e-a859-bb74d9e36f7c"],
Cell[1127810, 22766, 889, 21, 48, "Input",ExpressionUUID->"c6f4f233-9414-4908-97f5-e5b35722bbef"],
Cell[1128702, 22789, 1958, 35, 105, "Input",ExpressionUUID->"068b6466-5aef-4838-b702-8427b4454386"],
Cell[1130663, 22826, 1243, 23, 48, "Input",ExpressionUUID->"613a1ee2-88ff-444b-a567-d74f296d70a5"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1131955, 22855, 327, 4, 67, "Section",ExpressionUUID->"b3c8d124-1246-43a1-bd08-90d36dfdb631"],
Cell[1132285, 22861, 336, 7, 34, "Text",ExpressionUUID->"443a2ff7-e478-4f90-9a01-bd46101548aa"],
Cell[CellGroupData[{
Cell[1132646, 22872, 254, 6, 28, "Input",ExpressionUUID->"554cd8b3-fe0a-43aa-8a9f-b449c14afd7f"],
Cell[1132903, 22880, 3548, 53, 44, "Output",ExpressionUUID->"2b1cd64b-96b4-4344-b7f2-72a3569ad6e0"]
}, Open  ]],
Cell[1136466, 22936, 350, 7, 34, "Text",ExpressionUUID->"9f01826a-9037-419e-893d-7c0bc84aeb74"],
Cell[1136819, 22945, 506, 14, 28, "Input",ExpressionUUID->"f29fde18-787f-451b-afb9-4e2f8dcf202e"],
Cell[1137328, 22961, 1518, 41, 67, "Input",ExpressionUUID->"33054578-a81f-415e-9107-6f9231a2c478"],
Cell[CellGroupData[{
Cell[1138871, 23006, 183, 3, 53, "Subsection",ExpressionUUID->"7849efa8-c72c-4903-8f89-411c95b03127"],
Cell[1139057, 23011, 183, 3, 34, "Text",ExpressionUUID->"d331c456-46cf-4c75-802f-8b8c2a67a98b"],
Cell[1139243, 23016, 1791, 45, 105, "Input",ExpressionUUID->"0779d8cf-0ad1-48b8-b341-d1b68f91560f"],
Cell[1141037, 23063, 4406, 105, 238, "Input",ExpressionUUID->"d0ea488c-3273-4ad4-beb0-86da14af9d52"],
Cell[1145446, 23170, 4042, 109, 124, "Input",ExpressionUUID->"f05cab2e-427e-487d-9ebb-2d689da04d8b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1149525, 23284, 231, 5, 53, "Subsection",ExpressionUUID->"9ad25d9d-e3b5-429f-931a-919345216acf"],
Cell[1149759, 23291, 537, 15, 48, "Input",ExpressionUUID->"91873b3b-05c1-4dbd-91e7-dc0b08657373"],
Cell[1150299, 23308, 5423, 120, 257, "Input",ExpressionUUID->"b55008f2-f7b2-47c2-9f55-74e52483e6b1"],
Cell[1155725, 23430, 381, 10, 28, "Input",ExpressionUUID->"8fa90a2e-a7f9-4f0e-9f8f-64e980827daf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1156143, 23445, 229, 4, 53, "Subsection",ExpressionUUID->"7e3a4dff-86d4-48f8-b19a-5774a5e2dc7e"],
Cell[1156375, 23451, 339, 7, 34, "Text",ExpressionUUID->"1a7c6f11-5dc4-4a89-a14f-74d2b1807f8f"],
Cell[1156717, 23460, 2229, 45, 48, "Input",ExpressionUUID->"a5d61cb3-c7e4-4918-ad18-29ce2e6c9784"],
Cell[1158949, 23507, 227, 5, 34, "Text",ExpressionUUID->"4cdc4ac0-8ef3-450e-88f7-0773955c2a76"],
Cell[CellGroupData[{
Cell[1159201, 23516, 545, 15, 28, "Input",ExpressionUUID->"c64b6023-04c8-4048-b871-907c039a5703"],
Cell[1159749, 23533, 1075, 17, 32, "Output",ExpressionUUID->"b6564973-0e6c-4fe8-988a-7f274147fb07"]
}, Open  ]],
Cell[1160839, 23553, 259, 6, 34, "Text",ExpressionUUID->"6db059dd-d435-42b7-9928-1494f9b767b3"],
Cell[1161101, 23561, 2771, 60, 67, "Input",ExpressionUUID->"8824dcf5-5268-4f86-a3d7-f150cc166025"],
Cell[1163875, 23623, 304, 7, 34, "Text",ExpressionUUID->"62ea1ba6-dbc3-4200-8e4f-089d7c3490c2"],
Cell[CellGroupData[{
Cell[1164204, 23634, 206, 4, 28, "Input",ExpressionUUID->"dcfc6636-1a36-4ce8-a8a2-5b8f3f44bd60"],
Cell[1164413, 23640, 545, 8, 32, "Output",ExpressionUUID->"a0cb3287-5a71-4755-8507-fa9bc39b747d"]
}, Open  ]],
Cell[1164973, 23651, 329, 7, 34, "Text",ExpressionUUID->"b7281770-3d24-4e09-a7ea-7b5d3456c69a"],
Cell[CellGroupData[{
Cell[1165327, 23662, 417, 8, 28, "Input",ExpressionUUID->"b89636a4-6ee0-4380-8ba7-2f8ad0134a11"],
Cell[1165747, 23672, 2122, 31, 52, "Output",ExpressionUUID->"256c2586-f5fb-4f32-a002-de83c6cab2fd"]
}, Open  ]],
Cell[1167884, 23706, 218, 5, 34, "Text",ExpressionUUID->"7c6df42d-0726-42c7-ba84-35398c1c3f46"],
Cell[1168105, 23713, 671, 14, 28, "Input",ExpressionUUID->"7fcc051b-cba3-4a7f-bf1b-4b2cbbd91c73"],
Cell[CellGroupData[{
Cell[1168801, 23731, 956, 20, 28, "Input",ExpressionUUID->"da8b2529-d919-479b-829b-27ebf7a6091a"],
Cell[1169760, 23753, 1749, 27, 52, "Output",ExpressionUUID->"85e07baf-126c-4523-a73e-d50c1d676bac"]
}, Open  ]],
Cell[1171524, 23783, 257, 6, 34, "Text",ExpressionUUID->"bc16b327-170d-469a-942e-45b7ffe88863"],
Cell[CellGroupData[{
Cell[1171806, 23793, 207, 4, 28, "Input",ExpressionUUID->"62ec8a2f-0c44-4836-8a60-10ae69d2c124"],
Cell[1172016, 23799, 499, 8, 32, "Output",ExpressionUUID->"d9486067-c272-4e93-8df1-679a70c048c3"]
}, Open  ]],
Cell[1172530, 23810, 1991, 47, 105, "Input",ExpressionUUID->"4e43e1b1-192e-415d-82b8-fee4afd4d128"],
Cell[1174524, 23859, 998, 26, 28, "Input",ExpressionUUID->"b30f9adf-4193-41a5-9ce2-f9775c891c12"],
Cell[1175525, 23887, 602, 13, 34, "Text",ExpressionUUID->"78ac9bca-865f-4ad3-a73b-751eecf28d8f"],
Cell[1176130, 23902, 1037, 28, 67, "Input",ExpressionUUID->"d346251c-e489-425d-a76a-7750a6207d0b"],
Cell[1177170, 23932, 273, 4, 34, "Text",ExpressionUUID->"ffb0092e-cf87-4e0b-8ec0-3443add7a785"],
Cell[1177446, 23938, 485, 11, 34, "Text",ExpressionUUID->"4ae156a1-d88c-49c6-926e-7ab0b7687d1c"],
Cell[1177934, 23951, 1192, 27, 28, "Input",ExpressionUUID->"5bf94cf4-a0c4-42a6-a1cd-56a54bea52a0"],
Cell[1179129, 23980, 381, 10, 28, "Input",ExpressionUUID->"53c51c74-aa3d-42ed-adde-c73cdd0bd5c9"],
Cell[1179513, 23992, 260, 6, 34, "Text",ExpressionUUID->"32803bff-4df4-4ff7-a720-2acb46b34b71"],
Cell[CellGroupData[{
Cell[1179798, 24002, 263, 5, 28, "Input",ExpressionUUID->"7eeaa05c-9f9c-43f9-913a-d6e19b266896"],
Cell[1180064, 24009, 590, 9, 32, "Output",ExpressionUUID->"7ecbd717-27ea-42ae-a56b-1b81c18dd75c"]
}, Open  ]],
Cell[1180669, 24021, 327, 7, 34, "Text",ExpressionUUID->"b974caec-090b-4378-9f9d-95d99f037b78"],
Cell[CellGroupData[{
Cell[1181021, 24032, 449, 9, 28, "Input",ExpressionUUID->"7473c9fb-6ca4-44c8-be2b-adde3e08345d"],
Cell[1181473, 24043, 1789, 27, 52, "Output",ExpressionUUID->"d3651f72-e8b1-4be2-bb42-8c053d33811d"]
}, Open  ]],
Cell[1183277, 24073, 319, 7, 34, "Text",ExpressionUUID->"58fae28c-ce9b-4285-b0dd-db7302afc8f4"],
Cell[1183599, 24082, 14095, 272, 390, "Input",ExpressionUUID->"3454127d-547e-4b27-9c9f-8f83b09fad0a"],
Cell[1197697, 24356, 473, 13, 37, "Input",ExpressionUUID->"eb89260c-eddd-4149-87c1-6a6d486c7777"],
Cell[1198173, 24371, 2213, 45, 107, "Input",ExpressionUUID->"1ff76deb-c12d-4a7b-8ae4-e5b01fb2b0ff"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1200423, 24421, 465, 11, 53, "Subsection",ExpressionUUID->"f93355cc-de06-48e5-8a30-a9ce504001d9"],
Cell[1200891, 24434, 411, 8, 34, "Text",ExpressionUUID->"08d08f04-4f69-4936-8aaa-319981a4d3ca"],
Cell[1201305, 24444, 765, 14, 28, "Input",ExpressionUUID->"1dc0698b-e013-4015-bd17-e170f6246154"],
Cell[1202073, 24460, 1710, 26, 28, "Input",ExpressionUUID->"92542dee-bd67-4bdf-913b-928d770b666d"],
Cell[CellGroupData[{
Cell[1203808, 24490, 173, 3, 28, "Input",ExpressionUUID->"a773bdbc-91a5-4690-84f9-894c67246191"],
Cell[1203984, 24495, 589, 10, 32, "Output",ExpressionUUID->"96e2b561-10bc-4793-8ce3-189e1a313486"]
}, Open  ]],
Cell[1204588, 24508, 473, 10, 28, "Input",ExpressionUUID->"4a85f69b-a2c4-4907-ab6b-a97baa54c856"],
Cell[CellGroupData[{
Cell[1205086, 24522, 207, 4, 28, "Input",ExpressionUUID->"9ebddaaf-b237-40a5-b1dd-0afad7eb8e3b"],
Cell[1205296, 24528, 801, 13, 32, "Output",ExpressionUUID->"a40e699f-ef1a-48cf-a47a-89c0d5951898"]
}, Open  ]],
Cell[1206112, 24544, 519, 9, 56, "Text",ExpressionUUID->"8f757ce7-48d1-40fd-a69c-46935fbde953"],
Cell[1206634, 24555, 870, 15, 28, "Input",ExpressionUUID->"41df7aa9-6bf7-4f4d-b55f-6a753dcad743"],
Cell[CellGroupData[{
Cell[1207529, 24574, 208, 4, 28, "Input",ExpressionUUID->"5ac57887-6e2c-4102-a44c-2adbff19aac1"],
Cell[1207740, 24580, 370, 7, 32, "Output",ExpressionUUID->"017ae3e4-975f-46c0-b6ef-7b08f8ca116e"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1208159, 24593, 440, 10, 53, "Subsection",ExpressionUUID->"d081328d-2e8e-4853-8fa3-28fdb3bf7d6b"],
Cell[1208602, 24605, 401, 10, 28, "Input",ExpressionUUID->"17824144-8bf2-405c-8cef-62a7f1b9e865"],
Cell[1209006, 24617, 1710, 26, 28, "Input",ExpressionUUID->"65c56447-9c48-4c90-9f20-a799d213c415"],
Cell[1210719, 24645, 473, 10, 28, "Input",ExpressionUUID->"c87eb03b-01b5-4d05-b56d-f27376c18c21"],
Cell[CellGroupData[{
Cell[1211217, 24659, 207, 4, 28, "Input",ExpressionUUID->"dc43848e-b743-499c-80bf-43ed7de0ae96"],
Cell[1211427, 24665, 440, 8, 32, "Output",ExpressionUUID->"d17929e9-0712-41e6-a2d3-f9f7200494c5"]
}, Open  ]],
Cell[1211882, 24676, 350, 7, 34, "Text",ExpressionUUID->"d8ff044c-9f7b-4cde-b1e4-8180c5fdc679"],
Cell[1212235, 24685, 550, 14, 48, "Input",ExpressionUUID->"e2146957-ef5e-4dca-a735-6186f3802e26"],
Cell[1212788, 24701, 726, 16, 48, "Input",ExpressionUUID->"7ea9f0ba-69ba-4fc5-9677-70952f8d51a9"],
Cell[CellGroupData[{
Cell[1213539, 24721, 292, 5, 28, "Input",ExpressionUUID->"5ce7e2cc-a540-4c1b-8acf-8cbb86cfacc8"],
Cell[1213834, 24728, 365, 7, 32, "Output",ExpressionUUID->"5f4fbc7a-a755-4eae-ae07-8df9b3356dfd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1214236, 24740, 266, 7, 28, "Input",ExpressionUUID->"cc5215ef-8f8b-4dc5-a8ac-526a2f1d9621"],
Cell[1214505, 24749, 182, 3, 32, "Output",ExpressionUUID->"0cee0828-b645-4593-836c-d18b54d35e20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1214724, 24757, 236, 4, 28, "Input",ExpressionUUID->"bd7ff16c-9a5e-42f2-85a4-f1171e92265e"],
Cell[1214963, 24763, 367, 7, 32, "Output",ExpressionUUID->"032b6017-9a10-431e-bb4d-361590609bd9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1215367, 24775, 403, 10, 28, "Input",ExpressionUUID->"74509835-e59a-4566-bc7a-ffe04a7f994f"],
Cell[1215773, 24787, 151, 2, 32, "Output",ExpressionUUID->"0ec252aa-b09f-4c59-9d7c-aab3d16cbf0a"]
}, Open  ]],
Cell[1215939, 24792, 1907, 47, 86, "Input",ExpressionUUID->"1867a164-36e8-464a-95a3-1613bb8aa952"],
Cell[CellGroupData[{
Cell[1217871, 24843, 212, 4, 28, "Input",ExpressionUUID->"ab66ac41-86d4-4ce0-8fc7-dcad2ca216a7"],
Cell[1218086, 24849, 223, 5, 32, "Output",ExpressionUUID->"c82c1841-9c31-4011-bb58-a9d93c307b1e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1218358, 24860, 186, 3, 37, "Subsection",ExpressionUUID->"23b06f33-6b49-45c6-a056-91f669147d90"],
Cell[1218547, 24865, 192, 3, 34, "Text",ExpressionUUID->"0bc3889a-213f-4b92-8669-70304d4ed4b8"],
Cell[1218742, 24870, 893, 18, 28, "Input",ExpressionUUID->"abce38e6-845d-459d-9cce-394374b8c688"],
Cell[1219638, 24890, 195, 3, 34, "Text",ExpressionUUID->"bcdc23d7-c32a-4e6a-8930-bb0536e71fdb"],
Cell[1219836, 24895, 4357, 92, 219, "Input",ExpressionUUID->"55b7adfa-5ec4-441d-a8ca-0c8604dcd771"],
Cell[1224196, 24989, 370, 10, 28, "Input",ExpressionUUID->"a07ce7e9-91dc-4a69-ba6b-3c88102fdbac"],
Cell[1224569, 25001, 603, 14, 28, "Input",ExpressionUUID->"2b30d3cc-f02c-4b37-b2c9-0a35986c242f"],
Cell[CellGroupData[{
Cell[1225197, 25019, 197, 4, 28, "Input",ExpressionUUID->"75765033-c1c7-4938-914b-5275787308f3"],
Cell[1225397, 25025, 548, 9, 32, "Output",ExpressionUUID->"f988d581-e87f-45b6-ad0e-5c36c83ab8f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1225982, 25039, 1500, 23, 28, "Input",ExpressionUUID->"22531bb8-dc20-415c-b6bb-0962f78a340f"],
Cell[1227485, 25064, 4468, 73, 184, "Output",ExpressionUUID->"276067b3-d0b9-4f4c-9ead-6047ab1b6007"]
}, Open  ]],
Cell[1231968, 25140, 1274, 41, 37, "Input",ExpressionUUID->"b78fad86-b8cf-4650-a2e2-40538d448a4c"],
Cell[CellGroupData[{
Cell[1233267, 25185, 1774, 31, 48, "Input",ExpressionUUID->"911606e9-9293-4d06-8f0f-c34a081061a1"],
Cell[1235044, 25218, 373, 6, 32, "Output",ExpressionUUID->"28ee183c-3e59-4a1e-a35c-56ae1ba1c593"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235466, 25230, 388, 8, 53, "Subsection",ExpressionUUID->"962bcd22-6bd1-458a-b4f3-02cb8c711d56"],
Cell[CellGroupData[{
Cell[1235879, 25242, 2690, 63, 318, "Input",ExpressionUUID->"dbe50712-a290-4284-afab-9d352cccf248"],
Cell[1238572, 25307, 778, 11, 112, "Output",ExpressionUUID->"6306e293-c46b-449a-bb33-a3c456b75a9d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1239387, 25323, 2301, 57, 318, "Input",ExpressionUUID->"5b7ec886-dcbe-429c-a70e-fcb2a034e5a4"],
Cell[1241691, 25382, 1270, 19, 112, "Output",ExpressionUUID->"a4cdac20-44d1-471e-ba81-3970829b431a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242998, 25406, 2281, 57, 318, "Input",ExpressionUUID->"810941a7-f464-4ed1-a60a-7aef4577ceea"],
Cell[1245282, 25465, 1277, 19, 112, "Output",ExpressionUUID->"1c11d94d-82ce-4411-985b-4049837a5e67"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1246596, 25489, 7678, 173, 1843, "Input",ExpressionUUID->"bfaba94d-79ab-40fa-90a0-b5c962165f43"],
Cell[1254277, 25664, 14011, 250, 798, "Output",ExpressionUUID->"f6a87907-9256-40e1-a98f-059f936b4da6"]
}, Open  ]],
Cell[1268303, 25917, 7007, 154, 1555, "Input",ExpressionUUID->"fbe64d2d-54bf-4579-8599-586f0d898b4b"],
Cell[CellGroupData[{
Cell[1275335, 26075, 6637, 151, 1555, "Input",ExpressionUUID->"d21b96e1-4e51-4496-900c-8b3653b915c5"],
Cell[1281975, 26228, 13465, 242, 798, "Output",ExpressionUUID->"b88f0e62-41ff-498b-af57-d5a927d01028"]
}, Open  ]],
Cell[1295455, 26473, 3711, 90, 318, "Input",ExpressionUUID->"ad2029b1-e5d3-4147-8eac-41ad0f6fbc09"],
Cell[CellGroupData[{
Cell[1299191, 26567, 6471, 159, 1407, "Input",ExpressionUUID->"43da155f-847b-47c5-83ad-249435050418"],
Cell[1305665, 26728, 16798, 289, 798, "Output",ExpressionUUID->"bc81fe8a-63d2-4a32-bac0-3ac17f6901b5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1322500, 27022, 729, 19, 100, "Input",ExpressionUUID->"6646bf9a-7aa9-4091-a41b-68bab8ece118"],
Cell[1323232, 27043, 47744, 827, 796, "Output",ExpressionUUID->"4d2189a7-d996-4a1a-9d0f-154361fb8ff9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1371013, 27875, 207, 4, 100, "Input",ExpressionUUID->"ec81324f-d638-4217-9f75-5bc221822f39"],
Cell[1371223, 27881, 3504, 49, 112, "Output",ExpressionUUID->"3aef8fea-b168-4768-9c3d-3a2318d152d5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374764, 27935, 205, 4, 100, "Input",ExpressionUUID->"bcf42281-95a8-44d8-8870-e119cbd06c75"],
Cell[1374972, 27941, 3507, 49, 112, "Output",ExpressionUUID->"4c306fb0-72cb-477e-8b91-ce055b989f2f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378516, 27995, 202, 4, 100, "Input",ExpressionUUID->"2cc16347-9252-4142-b0b8-e7537a716984"],
Cell[1378721, 28001, 3536, 49, 112, "Output",ExpressionUUID->"0373321f-de82-4824-a32e-1f597d9ac3ad"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1382294, 28055, 206, 4, 100, "Input",ExpressionUUID->"b7ad9afb-3141-4791-845f-cbbc78b5317d"],
Cell[1382503, 28061, 3503, 49, 112, "Output",ExpressionUUID->"4db6ac30-56f7-41c6-b2e8-b88c3a083389"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

