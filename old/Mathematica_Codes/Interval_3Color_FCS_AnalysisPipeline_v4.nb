(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1417411,      28648]
NotebookOptionsPosition[   1382016,      28051]
NotebookOutlinePosition[   1382365,      28066]
CellTagsIndexPosition[   1382322,      28063]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Initialize", "Section",
 CellChangeTimes->{{3.6484703923691845`*^9, 3.648470403792838*^9}, {
  3.7792037386618576`*^9, 
  3.779203740580967*^9}},ExpressionUUID->"0f236970-ae33-4703-a8f1-\
6e66e884fc65"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$HistoryLength", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], ";"}], "\n", 
 RowBox[{"Off", "[", 
  RowBox[{
   RowBox[{"General", "::", "spell"}], ",", " ", 
   RowBox[{"General", "::", "spell1"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.642167939244282*^9, 3.6421679399873247`*^9}, {
  3.6514954254104395`*^9, 3.65149564868221*^9}, {3.6514957496829867`*^9, 
  3.651495786850113*^9}, {3.6514985885093584`*^9, 3.6514986184050684`*^9}, {
  3.651520636239416*^9, 
  3.651520636918455*^9}},ExpressionUUID->"8af93823-c0d0-417c-9600-\
5159f4d303d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<ErrorBarPlots`\>\"", "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.7148638296045837`*^9, 
  3.7148638450365524`*^9}},ExpressionUUID->"d9cc3694-f5e2-4058-92e4-\
986c4b3184f9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Functions and PSF", "Section",
 CellChangeTimes->{{3.575085645362406*^9, 3.5750856463124075`*^9}, {
  3.5774930265230093`*^9, 
  3.5774930278830867`*^9}},ExpressionUUID->"7bfe393b-416d-4815-9f81-\
d4b8a507dc1e"],

Cell[CellGroupData[{

Cell["MyNumString", "Subsection",
 InitializationCell->True,
 CellChangeTimes->{{3.4945628646757*^9, 
  3.494562866906504*^9}},ExpressionUUID->"c747899a-7371-4e8f-b9e1-\
8eb6e2845540"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MyNumString", "[", 
    RowBox[{"myn_", ",", "L_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"myn", ">", 
      RowBox[{
       SuperscriptBox["10", "L"], "-", "1"}]}], ",", 
     RowBox[{"IntegerString", "[", 
      RowBox[{"myn", ",", "10", ",", 
       RowBox[{"L", "+", "1"}]}], "]"}], ",", 
     RowBox[{"IntegerString", "[", 
      RowBox[{"myn", ",", "10", ",", "L"}], "]"}]}], "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.4934388235276003`*^9, 3.4934389526070004`*^9}, {
   3.493873344913*^9, 3.49387339683*^9}, 
   3.702431547454364*^9},ExpressionUUID->"c1d19c4a-58eb-40b8-a641-\
02ade21d1784"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MyNumString", "[", 
  RowBox[{"30", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.7024315503672934`*^9, 
  3.702431562774232*^9}},ExpressionUUID->"31d92837-6df8-4e97-a53d-\
603fe1b9808e"],

Cell[BoxData["\<\"030\"\>"], "Output",
 CellChangeTimes->{
  3.7024315631023607`*^9, {3.7025877568947344`*^9, 3.7025877613166513`*^9}, 
   3.702587834891323*^9, 3.702642821585232*^9, 3.702669351849676*^9, 
   3.7026744985640516`*^9, 3.7027374432988715`*^9, 3.7028602384262505`*^9, 
   3.70291098643779*^9, 3.703342372138914*^9, 3.7034368281340604`*^9, 
   3.703440262493255*^9, 3.7064782230606384`*^9, 3.706581189382634*^9, 
   3.7070007657578287`*^9, 3.708246189333047*^9, 3.708380840483123*^9, 
   3.7088139578572874`*^9, 3.708858822074026*^9, 3.708858894909833*^9, 
   3.708858966545637*^9, 3.708863170958912*^9, 3.7089242062491984`*^9, 
   3.7135424319382167`*^9, 3.7136133097656016`*^9, 3.7136536705649786`*^9, 
   3.7142202159680634`*^9, 3.7142229012884407`*^9, 3.7144112721458607`*^9, 
   3.714829368297881*^9, 3.7151028393974905`*^9, 3.7161416397361*^9, 
   3.716142745105682*^9, 3.7162898977170134`*^9, 3.717256593938825*^9, 
   3.7172747695794744`*^9, 3.717440210847017*^9, 3.7186373172896156`*^9, 
   3.7227250564156065`*^9, 3.725383774255196*^9, 3.7253840719902253`*^9, 
   3.7253862056942663`*^9, {3.7253947522321005`*^9, 3.7253947746703835`*^9}, 
   3.725395083816066*^9, 3.725395863112639*^9, 3.725396150439073*^9, 
   3.725400631498375*^9, 3.7254016894858885`*^9, 3.7254029817998047`*^9, {
   3.725403889395716*^9, 3.7254039144031467`*^9}, 3.725653830755227*^9, 
   3.725654241710732*^9, 3.7256545147753506`*^9, {3.725654865035384*^9, 
   3.725654869808657*^9}, 3.7256552470902367`*^9, 3.7256557674319983`*^9, 
   3.726515225390233*^9, 3.7265169127907047`*^9, 3.7277391297313843`*^9, 
   3.7279672391175613`*^9, 3.7279677704907084`*^9, 3.727968264698752*^9, 
   3.727968703711839*^9, 3.727969230703097*^9, 3.7279697739256444`*^9, 
   3.731680118817904*^9, 3.7332413549802294`*^9, 3.7336867440699883`*^9, 
   3.771102000676606*^9, 3.7711020634711423`*^9, 3.7711044809040146`*^9, 
   3.771164297208228*^9, 3.771179793786319*^9, 3.7712469938022003`*^9, 
   3.771591129280074*^9, 3.7716680399758434`*^9, 3.772363518346203*^9, 
   3.7724654000962267`*^9, 3.7724797177407947`*^9, 3.772540168555947*^9, 
   3.7725538746345873`*^9, 3.7725626227887506`*^9, 3.772810195982297*^9, 
   3.773426750396273*^9, 3.773567752408985*^9, 3.774519459350611*^9, 
   3.7765450804619637`*^9, 3.776546400978343*^9, 3.7765535269292655`*^9, 
   3.7765543328484364`*^9, 3.776785779792717*^9, 3.777389861789591*^9, 
   3.7774068447099886`*^9, 3.7776716578753567`*^9, 3.7777205872038403`*^9, 
   3.7782673567460933`*^9, 3.778329680218419*^9, 3.779203837126489*^9, 
   3.7792041184045773`*^9, 3.77920419625503*^9, 3.7792043562051787`*^9, 
   3.779468722261052*^9, 3.7794691684635735`*^9, 3.7796260837466145`*^9, 
   3.779628325017808*^9, 3.7796301924466186`*^9, 
   3.77963172116483*^9},ExpressionUUID->"7d68e994-0918-47b5-8a78-\
b69c0f0f7ac7"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["BandPass", "Subsection",
 CellChangeTimes->{{3.5781169365680165`*^9, 
  3.57811693907802*^9}},ExpressionUUID->"ed8894e9-9ceb-48e5-9407-\
e85efab62cda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BandPass", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        RowBox[{"GaussianMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"hi", ",", "lo"}], "}"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"imgc", "=", 
        RowBox[{"ImageConvolve", "[", 
         RowBox[{"img", ",", 
          FractionBox[
           RowBox[{"BoxMatrix", "[", "hi", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "hi"}], "+", "1"}], ")"}], "2"]]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        FractionBox[
         RowBox[{"DiskMatrix", "[", "hi", "]"}], 
         RowBox[{"Plus", "@@", 
          RowBox[{"Plus", "@@", 
           RowBox[{"DiskMatrix", "[", "hi", "]"}]}]}]]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSubtract", "[", 
      RowBox[{"imgb", ",", "imgc"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}},ExpressionUUID->"7370f708-efae-40a3-b781-\
24c2c1d9be92"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"BandPass", "[", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxc3XezbVWZx/uuui+io0gDksydg6STz9777JM5gKG77aBtEyQniYIoAqIe
lCgoSUREBbSRjKKAWTF29T/9Su73jk/NUdRdVXvV2mvNOeYIz3jC7wnjz99/
1p73/z9/8Ad/cH9/z/f3/33+wAc+8O53v/vAgQObN2/etm3bCSecsL6+vmfP
nu3bt//DP/zDysrKe9/73r7ZuHHj2trarl27Nm3atGHDhr//+7/fO179dNxx
x/Xe59NOO211dfVtb3tbt//zP//zSSed9B//8R99v2XLFld2++mnn/5v//Zv
Pah23ve+95188smnnHJKT+/9gx/8YP92TQ/dunVr19SHPmt8586d28ernvzd
3/1dV9bCvn376nAPqg9d2UDqZN3up63j1ZVvfetb+6kO++aYY47p167/x3/8
x/6t5R07duj8/v37Deev/uqvukafu/c973lPD2pQJqfHdW/TVeN90+P0ttt7
r/8nnnhiw+knw6xBs6fPW8br/e9/f3cdffTRTVdNnXrqqU3C2Wef3QVNeM9q
Jmu55/7rv/5rHWiuuqAu/dM//dN//ud/1o1/+Zd/Oeywwz70oQ8df/zxPVTH
+lyzZkmXGku/9mH37t21UyNd0BNruX52V73693//927pifvGq870uRb6vp40
lt67uBt7RO/NVZd1Qe30TW32iDrWhDS0Bl6bzWpzHqmYYTPTq7vqRp3pygbY
hx7XKOpnH2q81qLJPnTBnvHq3jkDzUYP6kN9+/CHP2xpoo0eUT+7qwmsV/W/
lntc9/bEuvHOd76zpfyLv/iLFqIvW8Fa7uJm4B/Hq3+7vuWIQrqgVajlvjGf
f/u3f9vtXdazaqH3Btt7z6qRHlcHehB66Ke+7Jt+tTTmthb6ppmswf3j1WVN
Zt/0XrPd0qh7epNmyK5H0qeMV9c05/W227vsr//6r7vF1oskkGh9bvjdWJt9
rmPd2LzVYFNR+01417dM9arJbFztnT53V//63F0tSq3VeB1u6v7mb/4GgXXj
scce23vt13LvNdvy1du62rQ00q7sp4bf7b3vHC+01xBqtrt63DnnnBNDqD/1
Sgt1ssnvS2TTNd1Yby1cPWn4LVMT0vfdMje7nrSzoo3a6VdbpoE0XX2uKWNE
aX3oEQje3PZlLAuN1W176l3veldjqTULXcv1oSv7tTXqvX+tXRdH861+1NLn
GkHwNVUjzZ7NUgt92QCbwPpw+OGHT74Rr9g0XpvHq7uMuqfUgbpaB7qyDz2u
SW6n+Ldpt8dtnJhet/RvPY8k3vGOd0QnrXI/dVf9qRs1+/a3v71m68Z//dd/
9aDWHcvFDWzALutDI+3XJrO5sig9OnqrzcbSQ7u9X+f1uE0zUN+6zF02S8Ps
w5FHHtlPdbJuNy1NvsuavfqGVZrbLqvBvsGNcdTobXW8mtUarA9dUFNRDt4V
RdVao8N2TGP3Noo6WQsG2KuLLXdfYnF9043YY9d3Td3w3riMFNn0uIitqaiF
htD1zbb+WAi8qOujq77vLqvQ912Jtdp0vdfDLrCp23qtac/qp7rdXa14k9Ov
5MUb3/jGvsQruqtr2qHYlCFruXZ6bsOptXpSD3uoBcKryda+rCnX9G8daLBN
CIZPIvfec0nkbqw/XWnRG13f9FONRHJ2Sp9tQOLV8tWfntUF/RR5t9m7t952
V78SQFatBW3yu54krcMpFaa6ewnQmu2n+lnHGnvf1+0ui/bqVe30K5qMNvqp
Ptcx9EMK9JQIr3Zsfw+1rXS4V+3gV1SROlxrtYN7EzT1p8t6R4dnnHFG/axX
uHRf9jgDrA9kDa7VKtSZho9dE9YYoO3Tlz2rB9VIS19rMaiub7Dd2zXIsg9E
rTlM3tVI7dcsLtRguywiaZVJhBrBmtBM09JU9zj6A4LvYutYJ/HPbunXuSPo
h8ipa5BQ1/dlbAeva5VtnIbWZU1UX5oWwlE3MFWMvWbXlld96/Yuq50W17/d
3kolCCwoedcYu77V73YsPWWJqmPUxFAfWvS//Mu/rKk4dkReP+OZhHtNNSH1
jc5Zn2uhd5TfLSa8DjSBLXGdP+uss/q31d84Xm9+85vJFySkw/TMvu9fClid
jNKakLZbfagpM2yf1nOcChfqSwRsFH1oUPQcIrJma61hNpMUjwPjRcfG9/Cu
5rAvm8wp9Btdv7Z8VIsuMMCWvlvq3iT1HtRG6/surmM0hF7RJLmvhy3EJKc6
ieDnctdaD4qb4Zl1o39JJbpE15CYSLcbm+q6QeU+eby6srWzQ2uEtOr73pvY
1tdmpySwLNIYsaa+aY1ov1deeWXD75v6YCG6sYvrWzu9XjWZOGHz35dRl83S
9+RRj6ir+kBDaPgYdWOhG7BraqGp699TxwtDqA/YeyNtBadJYpler8qaTIvV
AC1o39fPbon8rFo96csuaD5J2ynNrXLX9BO9iOlRO014T+muxuiJCHjuwS7A
+Ru7aamHPYga0/zQbHGDbsmg6xF936Mpw01U045L9w3+H+VkB5H4rAxbhnZK
H+6nbvHOzKmTXXzEEUdY5RQY5hvdjwzqmkZq/lsgq1ML/VqbpB7tEfPpoV2D
C1mFrrEd6me/NqIzzzzTWGpqLl+Thm9QCbq3Zpuo3rur66PwVodZVwda7j40
cMpb72R9+lgX96F5a5YIBTy8pijzDd+G6sr+JRxth56CpfTOVqIY2KFYOkWx
HmKPKKf2LQrmw7igWdWIDjfkWm6eu6ZJjuNR3mqEPVjjzZJeWXGMtEbap0Qt
kc1exi7MVc/qKU2jnYXI6xsdvp/oYwmUro8JvOENb6j9GqxlinT9NEY4xuTz
WBOS7vuYKuZWN7TQs5rSZAF9vvlkt9aZlvstb3lLj2vSkqc0/5qq5W7vrr5k
WdS3msJDdAAnNHysuHtrv97Svihp3dUTW2g7l9LSZLaUPcLk1GC392WMt342
e7Vca3UyfmUymU50MLwufcC/9mazWuPEq03tuV3WMJsi3J7stkZNFH0Vz6/n
FtFgISRMYINFDGyQ+kYH7imkqp96VhPbQ/ElEhamwYSnV0dpLIj6bKWwxDrQ
l3W7FekuRnrX0+Rbjr8aL4wramx+JhJCB/a57r1rvMgLginVqPe/Ga8uaB7q
Kmua2kzBq8M9kSlEda8PSLTG/2u8KE51z/CtSKyPilJT9aq7orR62Jx3WWTW
LOFRtg8ZMdWbLugWTL6hIY96CC+KYGqki1up2sm8wuXIiEZal1AXxYZlMaVJ
T5xGZRdj5m23HlQfmH44Uu/92irYZa1C9zaiSCibKyKh+dCW616dp5R2De7X
T3U+6ure3jHwPvcUy2F3YHcEMUozHLAAsduVVD4E3O2QE8sXgaWHm8YG0iPs
FBQeE6vxbu8zmuxDv9pWjZHiZ85rv+truYVD4T2UNl6XGjVVB6Z0+umn4w+2
PPSD/Vv7/VtnqH/1pM+133tXdn2T34dmnmoB4aRwNvn9Ggeg4zHxjChCgh4A
mtpldQDBECg9qC+ZUXUeVfSIxmg+AVD9RBfCLbuA2k+9JIn6t3mu8f6tSw2K
IdMjagrThnYyDHEDVA09dj2ggOTqMghPGx93tbhNEfSjLgGlMUO7GAOhnvXo
Gq8/2oyuupcKYR2xZUpU10QYFAb6cze2/fvQTFKKooe5O6LAbu+upp3Ga9ez
I/CfCKlFTMNsCARu9HzOOefQtBkOtcamqx2bopHSQPSNYCLRiBXz0Dcke93u
8/vGK7IB30UwkIT2fg9qoRtFF0SB0We0NEFRuDcwHHTQEGB0oLNuYYBj8phq
H1q1WqgnAKLJ9sFWdC18pivRbb2qw7Xch65ketgv9YHoRxu10HP7JlJP4MZ+
rS+awTAZkgBeJK01SELaSNfXGZA1Cds81AKZ0u20BaY6lt57AwFANV21hggR
fI2Q3VaqB2FrkxRZVUAPWlwfThwvMGwDT67BW6hDPYsCVmewoFroMop0lx17
7LF1kspKdbG/4MBw9S7GqUgTEoTh2QezDWDs4q4EaDS6JiT6vOyyy84777xr
r7328ssv7xsCy36hP9t0Ng4tty9BoBYLk6GZx44w4donF+pY793bO9HQkNEV
a4WRS0w0k5CfPvRl3bDR0oSjpZhM17dlNNhl/cR8nhKB7kFjtyXhWr1TdCfH
RrSWsp/AET2x+QH4N0z7DhtscmqZXMB2oGGUZAvRYLurBu1fpIJp2N1kLvWv
d8zNBYxKgo/BUh9qocXCElMYIGO0QRg+9YO+UQ9pmDZ4PQFHkHE4G1O9D82n
59YaFZ3scAH/i+kl3CkM9JxG2uce10a7+uqrL7jgguuvv/6KK67o30svvbR/
3zte3agPaJ54onLgeI0Lrwah2+AuaNdb0OiWB61HtxcaCF7RN00X2IHGxU6h
iEaHLbq9z0Dry0YdS5yWbI2TfZabNCECwJXQV27EfmJPUSqwBcIIdbUudaYL
2qQNyp7tJ0AcrwdYmN+NZkI49jhjRA+1Y6qnzVu3I/6+h0PqIb6EqpsTS1w/
myV4Wl0iHdj4DbbPGBTVDlRCewdt9bll5QH0qw6TKfMpTQU8vHVkDnscZMOQ
eVVswwn11LGekpSMVOI5kc1tt912ww03PPzww1/+8pe/+MUvfu1rX+s9pnT+
+eefffbZPSg1si7ZuU1vA0w0v/Wtb21QnGjQIRYEng/kafK7HsjZryyaOgkT
6Ba4ExPJrHJR9VD6oQZbTYAtxtLSEHbTQGt1XDxld8320B5Bc6MsMbgwkEmT
dbJRdD0RU1P1gfHI39S9jZTwbThdRsrQ9mML7x4vLiEiqcYph42altVTMDHq
ND7Z9zAoDrUujsb6hkfbxW1DzJw/HazUBPYBTAQgagj1pKGxLE4YL9yyd+CY
cIKa4uhnKdvsetKVVCPsjtepa7o98oNfNQMRQ5ddfPHFn/jEJ+6+++6nnnrq
+eef//a3v/3iiy8+/fTT3/nOdx566KEoKnEGMgUkYhep4mae2ozzc7EdN15E
gxUE+KSzMa/qfL0ixTDPleXF72xRWEY9olG0CnW7b3qu7+tPE8j3KrrAAoFi
uIxpOyQ43AmMxoFYT9rgKJmmWlNNFLuPROh12nhRqGCA4BfoevYgUsc92sLM
H7YDw4qnGBNgbsPbscraiVqapboN1TR1vfoGgtQHvI4Zy3JhgHNddVkPSrhH
ZtgsiAwvshCa6suuhxPWZtuEyJgoFhEsvARKPN3KsLX+bSmbHzr5Zz7zmVtv
vfX+++//5je/+cQTT7zwwgu//vWvf/SjHz377LPf+MY3+v7222+PxroFhGU1
sRoKf8M54ogjuMLxhBkC0ZdRKYdj5I1t8ghTuVkWQPh+ZQA2UpALWcYiw1Gb
jcimnjf5QAAa44Ru+KQ4B4239x7E42Dj9IjIniDA+rrREhMH0E7Omi7OuOBG
70Hnnntuk1yztNa+bNF7aORNwxQ3Qhmebg58FZCIDHAelindqfmMmdNyiZt+
YrDbUFw5poVGZNv2uf2owaadl4c+kNTrRua8Ka3nPWh6zUA3hxxySBPiiVEg
I+Kk8WJAARbYbjXeQ+nP8ZYbb7zxwQcffOSRR6KZn/3sZ7/61a9+8Ytf/Pa3
v3311Vd/8pOfPPbYY+inJeuJZoB1LECo8bLisREetHrYQ3tHLbACajwh27yJ
fklF15TlJibMmLgjcqoRtdFsfBYHmkSr/M5s2HTLru/LM888k0Hd9wwlHcYi
CHFge+9ve9vbjKJ55u2KHuoAlZXOU1P9SwGeorYPZhiiLsqiR3Sv+CWaTy3j
zPTPdj3Urp43gY2orQdOf70HFrxPQnFPgD27oJFmH0UkdZgCgzES7tRCu6DH
scWADyApsTFEM7SfCGuw9HzxRZxW09Nn7JaDlEy9+dznPvfMM8/84Ac/iO38
8Ic//N3vfhcJ/f73v//xj3/82muv9dNXvvKVpFi6tPiTSJo+rH3eCqRFo2uY
LRn1oHnopzrPBCM+qKPszWmJNBv4NqSLbxfwTqMAfMEr+P1nAB7HCnPDl8xD
BiPC5nyvq5EH5gDXpXWAB+tMdm4t8OMg5u5NfEfnJHiXdXGd73aQAobcUxo1
LhF9xrJIpemoouRTqHiLeB+AinwNaAmFcNh1I2SmbkOW3vjGN3ZZv5reaSPQ
5E1XP1l30rDHcei0c7tXLIHtIwhNrJfV6YImwWbvA12alQcVZ6M1tzXykY98
5Atf+MJ3v/vdWE308/LLL//mN7/5+c9/3udXXnklRhT9PProo9FYyjN52r2N
PfoHMusSuK9NJHKj6WXwgrOgdgQrNls/Bemx1kF/NSU0sS/b6S03bRnTJogF
GrU05hZHimLb0fRwlhevBMW4FuqYIBwCDilOR0CvuGtP502GLbB2e2jvKV2i
SXtEtNFUzHAvuD05a6fbp3wKpoXkRQ8Iw081go0cddRRMM862WCREJcuBx+N
l4+GtOLmnmEVtOWapaLPmUHn9GGEajJt+b7vFggMPZDtWTdAKzAiIsAQxInR
qWrhqquuuu+++9KZU3t++tOfJr+inD7EeaKfCCkt+qtf/Wr088lPfpLuVJt2
dJNPBBPi73znO23bxoILsVZ6en1u+9P6eN6ZDAAT8HJf8kvC0hF8o57ulWaS
e6UvOQt4n+1ohj/FCeJ33nnn9Q23CMHK8YcZ9iUvWBPYIvLzUqFFtQmnAQSR
PuIP6VcouW8Ya/3bT+QCxI8GaPhTBBPubhGM0ejEG/doGiBTusdZMt5tfFVQ
Uzul7WDUeKAYEmsKv4K4zmgB4HbPjfDYtvUEoWLd9Zz6JywQoFcLPQIqjtNy
jJJB2PWVV16ZhpypHp+JBaX2RD9RUVIs4okXZYilGqVgX3HFFfWkpiIMBA9G
qG/ZIDb7McccA43JWG5R6kbftGuOPvrorhe6IwaG3ssRQNww07AFOOS0naE6
nOw0RloNa1QgYkvZSOHPIngZXEAkeAgA0Ni7LIIHLJCPom3NktgGMpfMQslJ
pdZU5HaUGV9qYuNIfYYhNP/89fzUXGD0EFEQcGZ01b20GlocfkiDpc93AbAa
6stC4eSq2+wvShHzkIJnubumD00F/bMeQiEgFQSlAAMLkd6IM/cB5+FNYKzp
CYKsAzZsj0jJjLfce++90clLL72Uzpzaky6U5OpD748//ngM6uabb26usqRY
qT2XM7f2xZL1iD6wIyB+UQ5RQnJBOejAdg0LEQRhh74+OpHKDZvt1cYRv2en
23qCLmg++iCCiE7SjEXwVpbq2DUtjQcJqqxXhx9+eBLkLW95C8UJFaHePgu6
FrTDpoa5EWcGwkzLdsZDqGQU16QwzRCeQNftJZFB9Dtm3mXNW92QvyCylNnI
QVn7jHGYkgAepgEVi8ZiD9o7AhIo9iQ7RagHIfuub374gtkX0Qzp0OcYHa+B
EbEf6Q8go/rcWnz0ox+96aabYjJf//rXM+Ez2xNnzz///JNPPhlR3XHHHddf
f/1FF11UU2xhoL0AiUZaZwA+LQ2fUT1saOLWencNPtyC0sGIeKggAuPMBchb
3xrpevKuIcBsiWNRfMQHVox0cSHYgs9dBrTEE2iVHG1QkS5ua/esDHO8EYQL
r8Z5YJtiUOGTwkIig/TqrcuL8mYFSQShqvD5GdjMMqVB9aAjjjgis70psr+E
5s40mTrMBBOE01PIO+KppnpotwsXnyGjVAJ2mRARXgOmIp1t75LzIjDJTiSh
IJ/webAzlYCzjDrh+xbrsvHKSL/77rsfeOCBiCdaiu1kdj300EPXXnttigQq
7Z1MBFnUt78cr5pqjd70pjdRKSl+M/tJKEj/immkJQrSoLZJFgCS03vbquIE
2F+EmmQQWsGu1yVDYXHolsLZg7oFYzfD4GhMgLYGdyU1JpAii4RG3TcTUoYq
U7EQP30MFEltwzm5VokJbCS2bHWYzGeddVYDiSq48PpMnvbNZEQib7nhuh2x
2UEicPCKXlRfqAjNmdPWYEV5cf3zfCVuyEEmOUcPI73bey62Q5cANVhugfcT
68Y82zu11r/pNtHJNddcc/Dgwc9//vPxnLvuuity6t+zzz6bpdAqSybCNLqL
lzZzkmezrp5zzjmTUOkYtPqeArmqh1Ej1yR2ajPypq2OhAL+l0YK9SLKLdC0
Z8kOCyc6iHVA6MTqu/Ftb3sbJ6AvBdJL5xFh0veMsm6U3kLN7intSlkeMNg+
IPtmrI7JU5t+iq6cGUm1o5NGx9DTAUb36shmEstBfZXGAj8na8Aa1Cex6Ga4
9wZlV+J1YlqAAyLTLHoXNFg7TlQVzWrnkqkEkqXecEcSEDayEHpxEWKVUZHo
KTPfZyZ8fbj44osvvfTS3m+44YZkWdrOxz72sZhS3yQlySmCGDwr0dJgzWRc
KPqsQQCX1QFMsRBZjlg6WJXZTnXhQISR1qW6h9lSaQCeeBFdTkwaU7TPzOHp
S6ID82WIaGUpt1LNKmyw7oF3OKRsavqMwC2rEwvC/GlEHtGvnBS8CeJApJRK
paGDUY9p1JavQR122GHILwLYOxJqgPliosgmcB89kybDeEScE0LpXxKkjkVX
rNEaxFojSNypD9zE3IJwCQkgAB95AawYDpTorZ7z9zVvtVD3SNW5BHzN5g1g
Tq4JBgDCTKZtEsgmwFr9BFfyAiS/+oZWMF29wvAE4Te9wk4YXyJmu158cp3h
36k/559/fvyq0THY+9xyU6RB93rViOot1Yvfk4rIUhYpxFSZfIBB3TcURWgq
rxN+bjuQv7atQP3YTjTcTuStqKvM+cwxgVXUnjYR8WpZa5kcFI/hMj7Qlpux
3NQdcsghqI6KwsCvG6KwCPqmsUH13pX4QzMm8LsLMm/FdHE3HHXUUVyusBGG
8OTt8U9Il5jqhlO3bSvQARWlGehx/cQc69euMVczmwM3m2GNeBd1hQoq+AQh
Iba62sLVw2REd6W5UUH1kEOQ35xFI06jpngZeOrFjUj3pos2w3TjBl6zTUKL
RXwI7cDeWdY7l2ScPkeEPRSWwtMtF7VbsCApVCinB/W5LrGeWsEegerAI9iO
JWOe1D6FWeYIVb8roxwyVKRTZAbGlG8L0MYG2cv4asRjgQRsM/d6if3udeih
h8oNkYE1swBEr9FphT/1uEYqGZCGY3rZd5x6kyHzD3K8Cm8T4TwDb6QYEMEm
gQo6Y6FBT3IYyXRytp9aWVH6wrHoxnJ8SF48TVha9mas5thjj7U6FFQ5nqSV
/Sgehn8/DQqrmd7t9RHCDSZij6NYJqEhd69QAYJDtiYdGzTd/LSV+C4bSF1i
IDccKK6UW4ponWy9QGG9qL50dWbOdJuyXjnN67b8x+ZBfgGTpDHqeb9a3xrX
WyJgTgXFpvUVb9C6t53RBjOzBuGuNdsqkFNMcgYp0FIcyyWXXMJSEA2FJQIb
hb6zWagQMj23jBIN3U5/qD+RrhARAkuQEtRI/jWoKnIiocg+ejXeSH8Qhd7S
91kClwCqfu3KbqdqUvvJuxpXhKFJ6BF9aL04RBqyzk/iwcGET6Dzvx8vAfPT
72BNSVWR+f2qEAEDhP8RwFIf6iq/hhxnSouILLaGUENIL5+4gKVeguTbJkbE
rYweWP2MXzuL2V7HMgpAQBgOCqmf7x+v6AreQnBDs2exDkm+5BcJQoGZRA7/
RDPmJEo7/fTTk5jNZDvlggsuoIXKQ+G5I7ZaO5sazjBtdmEALVAfcE7KAKMV
us7VwrHVMkG9GleShR9EgQ7YiEVnfXBcohMyru97ViRBK7ahQKb0gVoAa8ua
x5G82Hqio5lRNOE+CJCTbYr5MBw0BSSxlQCn8hHqPKSXkWIqWPo1xSohdnct
lTEoutGVHNi2JLOCziCekH3XQ9uA8c9++tCHPiR/03JsXSqNMBMAmIwLthgl
n/oB0Ial7xjpJCJD6lLNWqNZEQIm1vQykagQMqHiPI1XHIWQD8+qZY6SmHC0
JNjG5z6I/ebkwjmbeWGEOGrNYhF1ssHiAPwa2Bo1TKght6/wYBunx3GjpIEA
orkXxVBZXA4a+LzsniOOOAJq17844VvGC3XtXpLi61tT0dP7Xr4z4geno1tb
mxE6e2V1mLF9L/4KXbWLSfxmUgotX8B0YVCQmkBil5OLaiGVoEHVMdqg4HO7
T+7wyijsAGxBMz2lrsIZbGQdwMGagdc7UMQayZWjCcxsXNYE4St4g842UwvZ
MuwFaY81DnDgeqNw1v6VV14J4W8UMZ+E/uWXXx7nSdHqw0UXXdSvEWdzCNlg
xYBPa5NfSURoeyQq7QO8nZbOVq0D5513HhnX0/WE9AS8gJQp84jnTW96k4xg
W0wKieI8lgmQZV04efEcGXyS6GHFpLmUFhyyRzexM+qPyKCQMKYEXStE4OmU
VcRjhtMe+d8lHuLANB+m3EzHAI71oTHqLQgFpMMgbQXtEejQBLcp8NRaweee
CNQS88Oyq7VGzbbaPF6icGGGtSBMVCwxbx03AQCTtSI5lK1RPwUAJBHA0Vhc
PWHStjTxH7HEvafnXH311QcPHrz11ls//elP33nnnb1//OMfv/baa2NQEQBB
hiCJXWokL3y7g0trdSTNiWuiKuDh+BWnaoPCVBUYqVeRBywIytezWLiIitNQ
3HKjqzUB9kyVaEDhgvWRJCJYiz8XoCpehbEsHILI66EMja6pe3CMllIIHIO3
KeoyuxiTIb+ojlAL3ABQDNAAG8riwUwoVBhy7UillMkFx8N+ge3UEqS+ZyTg
873OzDW8Ahwn7IQ3hERml0niqzMtB/WSk1SeBdICdEwJTpnX8+l1Eikkhhmi
MutHCbyMeKKcm2++OeK5//77v/71rz/22GP//d///cgjj3z1q1+99957L730
0uinTtp0GBGjMmGhlg5FwrbaOXKZIfaey9aerrEdS1o365t+smNkXsO1BDCI
F6JD2stCaulgGS+bR22BOCR/lnDcaAwLErjST/WT7gSssJSCZqPMJvbcc8+l
QdFaZXywlGWEiWAUTAWKBIXtXmoKTT/1rpG9js9gVoAR5mFzTnFFOWwNCMye
kTgpG6ju9XkWqQBgsiykdUDX+bVVeuFagkclUIQU0thpcdzfGty9FEYgIzhY
cWPmFWbIJUG4c5oQ5XtH7oaswNqPNuI2X/ziFyOVr3zlK0888cQzzzzzwgsv
PDVe/RsjisBapvPPP1/pgHpCFT/yyCNFBeN+jat3rIat0SaVrdxlKVGWQAaW
bQJbblwcGcLFrbLe2oxSa+2F2hcGA8QWBItikRBjgZ6viJAcurWROmrjYz7m
QbSnuAimev/O0KxG1xCIgPVRJcAmArkIbKAtYKE0hJm4umuUoQBE4xuvT9Xs
Lu51EUrSqcwJhyYTL2JYWQqDiOeXgS4xgesQqe9ZcrX4T08ZpQjlHTT/zLEZ
CwTe57iBadO1DjvssAnITMOTykqrb31pxSlaqTpf+tKXHnzwwW984xs4z/PP
P//ss89GRX3+zne+88ADDyTUPvrRj3alEH3aqfFCzkGy6yMIHAQnpIe3Ze+o
UyQeVZgrRbHLLN9MN5NxLK2ejcxGY8tAQoR/QEiAOaujPiGxwsKN421bKnWg
BFlv7P14V1QnWpiDuM5E1VSyntVESTBnYwqw7F+IAalH96PzgI7Z+yaHsLP6
e0bai6w9kP7RRx+djsc2b2YamkfYJmTK9CPTPeqJ1O8Z2WWWmIfiZOjnEUD6
+Sy+IZbMJrVB7AtANwRP2DlPPVnJAQpbsNnVuuG1RNvpzGnLV1111d133x39
RDNRzosvvviDH/wgziMd5lvf+lZ8CQtKR2otOGsoqHwNcgGEUiNmWgEOKY9m
+8hex//FpVDv0caBpbSX3U17AYM0UiAVJt+HhGZ3pfOAO2wc0bzkO6UdarQ6
0q4JC6oFKdYT6zlvaU3h2L0n/njreMm7RozcdOLQQmkUQsqpnSAR4BLdmClE
BaKvggolk/LE0ZPh1YAFKB8WAYsg7xjdwhjEFpolbiOcDX1yHRJzYgthj8Ac
Og8f0K5Rhwf0jW/Tl6TYZN5OZ1/7kXzvQfKyt41c2o997GMSYR566KFk1nPP
Pdf7K6+88uSTT0ZCfX788cejrk984hMxnyRdm9TYe2iPO+SQQ9iVpPyMkbZq
iTz9FzMA5uVdbZVpgNINmCd7RjJ4/WzV6NXsNXKZ3ljn1auEurdGCiBMFJE5
xtpiNXNPnzBqw4LXmg2Zp1QpaomCh1DxfaPUqh0BYO8ptgO4FdbEkS1xe7pU
qBYcf0RVnanN/m31d40iYxQPnK3b0c8kUXQi5GxmGqIZ1h/rW0INiEYsQZNM
TeVwhMQKJJbU3xwCtwFupgiBNS4BqO7iIoGf9Lnhx7S7WLQGkLNORhXXXXfd
N7/5zVTlGE7y69vf/vZLL70U20E/FOk77rjjxhtvjH4g2Nl3Yr+bsT//8z9v
LeSd9RQ2l0nGOUVMTWvdlp8W3MwYoqYKfrB/cd1mgyEG7AI8snQiJKacgBwR
AlCRmUO0bymaBCmSdkeFm9HsZlj/a1n0oNBBQ0scsNYZSmrpRAOnn3667cmL
PR21VgFL5JJOWoHd4O0cLsaLAFKG2ReC2Nng6JNRT1GhsVCTGkXcEjfgs45+
zjzzzDqZZKmpdB7UwnBmlJGtFgIo8fog1Zl904zVZ2LlzW9+M3Sa8dvqywdp
OD3uhhtuiELSkzGfqCie8/Xxiop6v+uuuz772c9eccUVynhms8wdjflQEvRK
9S0gG3jKPoKaro5EnpNHhSgx9lzMzV7X0+KwaIxIDNKOkcS6cxR97em1L0JJ
El9XKq4Iz1QURagqy12kAUMefIFEYYYbR/XFnsjdw2zZM6qOYDJnnXXWRKSJ
IYaSlIf6UN/EqhETFhq2ww/Yr0ILpBkSPUAhqcr4Cd2peeAYEp8PreI4BsAy
8ajrDQqqv2ckn1IeRJuk/MhZIP5IbQ4agQGWjKTes5TkRcykfFONY6etzShl
sR9UaFWDLrjggugH54mKHh+vdOk4Ut8/+uij6T+33XbbNddco7xwI4qV1Tjn
OPVjx1I1guihb+A8pguws2+UOxMjQWz1Qao1wqPgMZ34ByEA2A6wiz5Dpdw9
SjHQxIj71ZHaz74ABYCUedOwTTotWcPNvWkUs10ZRVlJNJAmbyAmSco0Xreg
fECxba5ECUlKXUei7CboLncnpjRZENMSudLl5FZIrIB7g2h6l6VCooHokSXo
QyLnzAHZMFISePpkarQdmHWEEeBry6jcy2DnDqapCkbFImottubRayN1XfZ6
/CcNJ1KJfpJW8Z8U6cjpnnvuSSmKfvr1+uuvP+OMMyQjRPPKX+PYO5b6kPag
qCdCs2elcrMugSFC8laXkn3dJeMSvwJWMNAIRJGr0FFijgmGq3BtwMNFhnAw
EesghW1LTWAMYRqwoEvYMmiXh13AA3/Z+khqM1HcSWK3UuCFqdD56cNNyOpS
EFsUNMuaiTdNZpG9rFR+zyaK55TtvLaUtZze/1nRQjCzPBoGFMk1TxZgVlMR
+zdSAbHaHRJXUeaMFqYfzvgu7jBwK1xOtBiUtWeB+jENls5FF12UevyFL3wh
hvPwww8nsKKir33ta7fffnucJ+P9pptuqifTe8KtmQSR+c5DLRSnD0ySU0YF
ZvtLAQoKBluG4YD9xhuJwu6NNfU+yYOQZbGyRm1AeiNfWJuR+sH702XMQzyh
hVbhij3Cz84QjpFCS3iZNyxFACDMsBqbDs9n5is70IdZVKTunX322RDObp9V
xAV4uIzUW1+qAZOPrCScrZlsXeDAzEChPrRlrj1fnjrq13GRiMUSVYW9nzyK
UiIqfmrftHwsViFe9EBRavpmKuio3P2klRJt5vnII48EupptOJ7gvfPPPz8O
c8stt9x8882f+cxn4jz33Xdf9POpT32qby699NIus8o2+7ZRrTrKnNX5wMvC
lU8dZX+UhBWIgmPblaKwILcUFcnCog62jyx7bBzfEEUjCIHKZF9AJHAYjiFR
EDTtbaN0D1kzlbHZK5GQPB1MY2Amvo1K4d5E865Rd4sJiRPa15tHWR5qcxdE
SBwu2DKQX5ADbkYcsxSsu9xP40Vv4iJ8oG+I5Mf6pqeDN4qibstwnNEBkM2J
o2IYTb4r/328MCJimnDcuhylsX+8ZhZ/S0w/4e2KkCC6hx12mHRvTGPLqPt9
4YUXRkIZWdFMhHTw4ME+Rzl9r0w6TrIyCrzEN+I/0bOAZ+Zt5FTj7ce0o74X
SYKMGYY7R4FHifw7lkKCJBp0V4rKdBDvGEWxeroaZV1Pe0FFgLW9Sy451z9+
MgMVmKuiMWUWzFhNDEFq0p6lgrr6e9gyxGDrchLEhpGXik/qnlgLNnt9Pvfc
czEr9KY4Cb0CLoq/AavxTO4GRhmyZANSVsEFtSAFUrSA2E56i9ZgGpBMFyi4
AdAWu9X0UoTMPG0ZNktjNIT+Zd1QqzLuGh0rqeGI9RXAyUaIbYK5rOyHP/zh
iy+++LLLLsvUinJiStmn9ArONd6uKGfj8mJR2rkkJolvfjiFBRtjC4B6NhSn
6o6RWWYpRRSL9+DT4U2DOPFK2LnEkwln8rNwEQ+Vu9YiZsHk/FkzvoKKaOyT
dcP/ae+QWKsDG5+5t9NhJMlOth01TI756pJSgRHBlHzAWwhf8o7QmQIdjVFO
xErRajzOtLQR4EIUM6ZBc4UsRTG167FupqViqhAzSUldM0vjrixloEQqktfK
0DHEjjnmmEio67Po40Ldy3QiO6SLbl3K/GJfNj5TWqp1i37ooYdGQkK8IGmC
uhkmhsDFv2Vkocag0D90l+ajDC8hTgOH2+gAVnnyOMRk+8gE1z4VFJ68Mkru
RPzAakpFcyLjTyJVt/PK7Rh1M1Sh3LmkWAoE3bRU0KKKTDBNcCzPskg/tLo6
0lgY1wA6MRLCyWb2hJWCO9G4wDgsGtIKo9g8yg3BKCagF684ddRAoJbvWHLi
cA+udjYRPQFQOR+9aSQ8AmlPG9VHW/3pbMJkJhrPWtm3VHizRzTIMiVwM5fE
bGD49PkZ6w7BFl3G99GXIiXYO1HOUUcdFfG4xTlZPBfY7I5RxYIw3TdqkSF+
rNIyTdvE+jZvos2nwiyqmVdXAgsD3PeWni2jq3PPbhuZ5hgaG5+V3fwk7pk8
8czsR040BINmOHQwQKkToDb5nmJR5vakdRiR1F3SijI5jaYDS3VxPtmk+dpy
JJMoVk5AYR7cT/5lZdCckYpdaRXgXVK6zAPPoF61WEYkipVfQ3Lr1pH+Kb/G
LnDSBE5FF8KxufUpyfwLLatU3N45o2WwznITLWLqkHiGmfQEcepiaj/qlfAS
8XA5SZ7yIHBot0dp9DoRNajUbMvsPmW8MA1br/c2CC7HhLRTuLBZ/SKfxXhY
5a1L6dpuEbQmmnRlVNhg18Bz1kY563qlbuGepdS/KCYMHPXybLJ2dy0Vs6nf
LCM6qmxl0AdVChRMuKh8yHzGT9S8Qj9YByLEmmggpy0n5lAJiBuUCfTYvdTD
EUFEJaPjkfiwBWlofJQsemapUgZ63qMnFCNLzkJQEoQqzc0L4MU3xNJYjhYa
A/clV7jC/q1U3Ca6oh73imbU/0n5SWr4Ur2+zeOkGBOiNKuIUAWycGaGEtOY
hsxDtLZUdRBIptDBppHQik8yEFTEXVkK29KOqP0SLkwdjWLLUu+UYGVM4WAU
V7sVw2dzUb2Yh6q0MXB4zO0jEd2EFESROkciUyF85rU0EFQqHoCfguZvCDPo
GgSNV7BzdVIf2ALrI8PLpiB/LTTwfIaeKtQmmlEJDvqVcJS9I3m8XRzx7x4V
USi3QoUJAvCF4D2Q7OtjfeOlrE6KAWO8jR95iBzuc9SVpQ8rxhzUc7DfHW54
0qj0e2CpcQf6nrHfgGgshQeBtXJgKdFvLHaHCCsoDbLspZaaYVoUAgtQQyEk
zQ3ZTuTpIB1MHUNJtC3TfqYqU5l2LwXkMbre+Z5keei5CkXyAYl+ug2l3Wvv
UieWOOCmlwG9Niq0UOqAxoh293J+nwEC6iknNpqILxg4GepZJJfjFOkzdi7u
t2sU5JcIyQvMITIdiAdG5WdBJgmRvodLnDKOlxITwp4y2OPHWUUg1rXl1FRn
8MlHoC/Vw74UzUvNlqHQ02vEmTjd8uY3v1ki4UmjnFfXvHs5sBX4PzFSACAf
+qQf1pnsDDCmbbI60sQ4JrqrUchupiK2mnG52pRmYgMC03puZG+P04hEfx0Y
h3IySFdGSStwEzZoHiyTXAMHCAoeY8UDrzz0xKX0ukJqpIkYcv8K2YIoQuHW
luS+08ZZfmsjE5PZy08xfTo6oE2eLG028wrQkVxIVOc52THzntiSITMZysQf
axfgg8wU6BZwIox/Aj4MIh5MJDczRzaOmsmmF0xEc6NfgaaTSs1M9NODQMqY
Oe/znlHlm2XXBV28e6R6USf0fP8ovdiXe0fd6Z7Sss4jBR2ttWM5kJTt3GwL
r903yhuSGhxzorO4CHcuhVBUbpTJSFoRWCAC3Gn7crqQOqv4Dx2VnGJbsd/h
uiZT9AiljiuBM4WFIlB/x3JKJs2kD7RQszrjCRlxtGiMTigg5gwdYu/vGKmp
wtT3j7qXJCN8hkSDnnGUkH07x3GxdHIYmhJ8a0vqGf8Lk4r42zuqCc39K5e2
x2XpkAXAgQigfcreNHvK6k5EF37YQiiXtH0kiU/8c984loUTXPiuGDlmMpc3
xY9FDEp1vcgKYuvEUbMXiLFtKXVyYBRhpvnQDYxo1ziCgVapkozrHbAyl4Cv
kHoATRWaJX5GQMie5WwOuwaD4hAXOycaSnESyB7db0Y1Q2DIREVOgMB0ANLH
bIji0P7/DzyBicUfwEriCb3zQbAOZPPBMaakFgt9YJxoCRAQVUh5wyX419Cw
LAw9rMGZxdBagGS7AA6zdRwwvW2kJFM14Y2xuMQWvv2ecfZENzZFuIfdR4vj
8+oRBDr7VOba7lFlHeItPo2Tl9EBeITCdX1tKmRBxaoDcoi6AKOmeIhAQKUG
iz0SDVxFW5bCUA4r2b7UyZT/FQcTmiIQhYrOCrMcPKR9yYPMykOr6JNiDBsU
PSUkeAaEU5ysOJXe4QiMEQrb3KGUEzUQaBRglrnN9yxHwvGG123xcjJuZhCU
HYTOmU74G7Wqx80gJVHBLWhPJOngFae9rrIofWZ6PWyo008/HQTa0hipDSWk
TaiJoDI1HnePyoonj0R1ltfqcnAV3L4X57toc+gN5t8uA+OsjvwmsmDTOETG
DuIKh7ercTfRbxsEwszLaU3JWRmIeOApy6Fv+iZwmifIxhFDBb0ByK+NcGKp
VV5syddrs1N/o8sdcsgheJHsnlPGcScAljoT8TtxdccoprR5ObFodWS49w2t
klJ3/DiqAJ3zO3dZ6zLXixZnL8CQOcuAUVgZsYLXYcUuJqCxQYgoNYkpgbGI
UgPgmLEIydnQvDlbRq4r444KSlU2UWTQPAyCjz7zZ8eopwSf5DKYZtc8ipQN
SArbUytL7fo6yYLrFsdbNF71hbYux3kcGIU1xCfzd0+y3zRK/vKcrozK4bY2
cclJZFBcfsAT3i4WHO6Ke1h954Wtj9Piti2ljwXKtpQ0XmqJ7tHNdix1cTmD
qFjWCCI6cxMmbgAu5k7FCgSUvmecSvC2t72N15KnkmdtBqUwfJjwilHAny0Z
lgK+27G82OCMcTo2OcVGoDryYksbh51CJ1hk6pbT1Yn7KUmpf9y100lHbdaf
HcsZgvgYrEOxWecPilWgulAaj1uOcoZ4SASjBVFvrAWcauIPYqWgIlnuXF34
Kp4vOFkwEpWYrOF6oPrSHkXK2SDSJeSEnjRKg0K2p0tR4sD+pRqVbDiipxlO
eOEkcYztowajNcXc6OEU40YtY5olO7V6fg1LwLLzjrCJAGrtqeMAXGinFUGf
Ni8dgAjAIkgoIobGC//xIHJfPK2twSaq8fqJa7GeohwYyLTNueAZR+KjZkAy
NE9onA+UVbrQDJy2NXpij4gnGIhucPFbCLq3OhgYIGeZCMwp4gV48OSqiYcs
a7D1ar8rDklzpuAhvOOWEzZRl0DKmd/BdhBSzlvKOQVTEheNDEANRJ6JAlYw
Hg0KoEEphdsTBzJimLorI9nf6kApt4+CeBI2dy216TYsBcy3L8WxQeWYDyJk
7LCndo6EC64f2xapbB9JzSePxGqbHXXNOBDsgqzfM0oZCAnbtRx5YD5Flcjc
waVnfctpXCTizfPKcpIF2cerwr17YClpDpLiTBSk51mUfzk1Ml/6LMN0/0iR
5pR53zgB0yKyaBAhfQwd7lsKRinRyWhCbByaK8tJwbOEiNwBVnk/pUXA3s84
4wxMmDVEuIDFxMWJo5ge3rWRIcsKs5u4Yt8zTt+Doza9Ubh98fa3v311RERv
HemZFGyRjeTjplHeM35LtMGEHRMMzEdsmCFImZZV3wTpda9sOKRFFxKPNw1n
5zQJzdq9FAJlzUm5OnWpUYaAeWRwcjWle4/eVELALeFaOibVRTDhFE/mHwJj
uRndW0ZZEsTPXyMwm8DSKxIHmdWsslEI+D/Hi7DjNMSp6qE6CTiGSOnEDQ1T
h4GlQvLqScreRCekYKwt56G3mnS/s846C5+huJLpwowd+Sc2lQ5j60GYmbEU
EsgktslimkFxtgkg0UameZLdQno2LMeai28nHZJflg9/JhoYaMrCTBxJEFqN
U2Om1nrCOBsLi1gbKSH8EVuW+mDdtWuUu9w+guctK1+VzDLZfCpvzLxskrFp
Xx/5R/TJyBtWo7Ynnxc3JfDB6m8YFaSjtBOW0+XYEdCSmpWmmjoa0WKzO8cp
OQBJMwyrkb3IqKFOUzneO04e5KjVYQoz45E2Rbdsbi+++OIIgL9sdali3RCA
rqcslV0Z7Cys5l/GOj7Jg8yaU3yAoPeiScp8OTDqM0Pb0JiNz3yOk7zjHe+A
mnJc9tyzzz47QuXPFcnMNTl9o6DmGYzqFJiVUaOJ6J91FDW+bTkgiTY7TX4W
Oq4oABiZTQ/m3uU4YIHrSbRdI2sPkCWBbpYwcsq5tCxgWv82qwCfdvdMVCdD
aY/MTLKDzvye5fDNtRH0Fcm1XtROdjTMISY/PRcQA8iDaQGE2sgmXMzqFGHW
fc9SbvfAUhN4fcnCrmMxutXlMFPaCB4F0nG4jIAZgeL7lmMxGU1UC47dleUs
ITCLEgS9x6xM0faRN7G+FHrds+SA714OcqIBErvw8zZvLYh8ZuNwR1JaREFw
VUS6zGq0DVAFPEK/kSikESoiNYmdS1y21uymidWzMvaOArBkzeZRuUUMIdFm
HiDGDAdgJi2ORWmlDF87sHoKGKBVVJtzLaMxLM6hz8gPl+a4Vw5FWM7cKQiP
x5CDOOoSC/T6MAP6M7FOvB4YJyJNBckmJV/ap9M3jdtggNIxuFOJvxmwp3yf
AIn3jDNZepbFxZEa1GyQpxtBUksQFcbCx8QQJuIFvZNx20egu6S8hpypwtLB
qZQqtYL8+8zqU5fKVJTz9aUSBRsktokbbFoOHxRSKxpz73L4L5FKC+q5RM++
USmxdpJxE2nh5IIF8ffh6kIceRNOHnWEalMIpXBu9heCYYkg+42jEAeuQryK
+KKCQocoCYymvnnvcozpe8ah53Zr3fjX8VJ707PqZDwQH6Y7MV7oadZOQSFM
xgC5RGnsO0bBBOyRBrI2YvNIrn3LQdvsNRvWVOPA5B0IUXACE+nU5ZCFncvZ
9A6RFEe3cxxZtXEpQKFsV7ckaDjLaFmcPqQt9mtuUdHOkbitz6culbLsDgZL
LeBU7A70L7C/Fnou04zRNNNkThkF0OASTE7MTVadk2exRFo0/JM/HYJt54oV
bCBZAdkLgnhlP00g0QTKlVtbSvDhsUAScU2cwkxCc2WZ4DZdKQvbLrDvNMv1
vD7qCMn1WxvZYc4iZ+6Rfd6TocKVQRn7xslZ2WViqECve5aURlaMVRYzubJk
ajBLp2XBlcacpD2uLZU69MGmppUxYIV/b13StK1C46oz1BjW+pve9KYJ5gBP
8PYZ5k01YsXTineN3FJDmBHC0+tt0ZsHuEp7E9XBLpjYhOzGkWeN+Xc9NJhV
SDNHVwSrsLqZt0JgRQ87Rmh9nTzmmGPiAFRflQcaDv4JT1sZ1YegiyQFajl+
HOehvAydChQv211iJs87uZmMFpqI5utbyoywuhNHedgZaCdrBi4kQr7Wup0N
Tp7Cx2wioWIzv6bL6gYmo4oIxNVZtHXJLhAYRrwCt6Vo2VMc+lwwrZooSjqt
CCszKeYHI2KWYgUCdE0LRA4+jA0qteSbU0bVRwQJlN6xVGvn/pb0gcBAFoLM
6Tkz2100DpBz98iRND+8XU0RBZtNZCOwdk8Zpb+letHw8Vg4PBHD8w7TRhW9
jl8OjpkFAfoVwxccyyFoafAQ0e+ML/HtNoghtFiNlDBF0hgRm/rEca4H24fU
4+x4vStf/8VjsNzlTSAYZxfyF8NeCILksoiFVhkLImFhLBNz5vKefcO0/Ysm
5fCKQgG540V8yv0ruoAUo2OLwOQZOXXUHKC6R+3Ce4habVJpDiwV0dGSOGGj
5igBhLKj15eSDsiG2MUVcSceDUAuhd8ScASoFyr7G2DIzFFIB1K6bTm1DXj1
rnEeKCJE5LQ7XgaucziGFcQA5eMgCfjA9LBLJaaxsAFFdxi718RDRMBS+Yhm
iDT2LqZICB8Nk+3Zr0nJtXHaKbQQxTZkJz4rdsT7LJsYWcKZp5ZOy/3whz9M
ZOAeHMFCcPeOMkryQagEG5dCBDzFompnPBJXI8codn3icsivILqJjtqSnDt1
uOHsGCUxZcGcMEoQNxZ1uc8888waaXHrTHrs7lFnIOKkj21ealSKLuAupH4I
UDFS5lu92rXUVnJGzI6RPwjfYD4zsijzTsejSe5bjhtYXYp3wcw9GnNrRUTu
IbN++tM//dOVUXC4px922GHAsd3jQGRFoblvVKLAcmm88nD3jKNPSLFWs3G9
853vZDZKkaAwSNIBY/LSioGhonMi7x4pkLWAmLEpIX8yzkBG8CXcCWEABleW
swAo1fuXI0taFylvQDyzSqKREexEO5qWZc6ZlpyV+0Z1R/UHwIOtPtiNIcBC
gQNYIP/iDKL+GrgIq55OzQZ8gSWlwBjdjPHAPEU/Zj21BLRoaGrXM/HYbnAV
Oid1hWELLuNE64KU8y2jxLFDsWv/2GOPtbOEgO5fTu9VtaynA8dqR81VlQHq
cPyHskG7Y6PhD1aW1kF/5vpk9O1Z6v4RN/SxbUuyHsYFM+E9V3So/jjlSmUP
GxbI0948+uijZxZnQ8O+MHkRNXJtWKbyXjeM+skK1gmQsLOYSJyqPOMEXKsA
hLGR8TSqArcOkBkrY2bSsubkwKv56WiYQppJZ7LMgV9blpPoiZK9I22HYkCI
gDrtNUtA01CQnHyBrjgqWjoVx32T2dqtjwJrayPSDxXVq/a1PrfuzQzYh+SV
GsPWE1LOv4ahUfsF1rJ9eFKmySMkQwk1TK8uyXWlZDqous9tLkkZeNoZZ5xB
J5wgMDdB90p2ayMQEBqHHTEulF0F3E2cGSswFfxr+LD4AQJLHAjGglcIdNT4
DMwQvypOaX05Xd0e7KFgcDgSjXf/qEGE87CFG53QDj4vDAFKM5MfBb5qmUU8
A8LFe/BRvms5sY6CIUhMC7QLLiGR2xQGchMNkEcM/FkHCarGnS2KzC0CkulU
MHYC2l1cOdyItDvwi80FbGlC1NNmf4GPdo+jAZhap43Tw3lm5cmeME7xmPmJ
OkljpDwoiHT55ZfH9xydtneptlEPNdgtAvCEfjF7+Upqs30RWYoLAhxFXRLc
+LlarG40gdxq8hkphDtH4SZVpyTB7VmKR/Uv5Q1E0CY9aZwBpOojJVPgASRh
01LnSoQAV9qeUbRQtgK0Xw1GHNsEUpsZ7DowcR4MSpQsQUbX2r2UAIXDoFiY
tv7sHjn7mCHTgyFjX9hKPa65ilZp/gxkIrJ/U+R4lgE+ojWUYpineOwb+VDM
B76SWVVeUAo8c/NS6cvcri8pbyDTXSNb3M41LS5WjWHfKG4zUx4gWngUS2ea
eLgoR1jXnHfeeQ3tfeOs0j7MtAhaGb1i9XUVV4Sa8DCi1SOPPFLiiXBEu4Di
pz6MYEUIMLsA/aMfUyeikvJjIxM07G6cZ+soPQGUprzBkRA5b+OMGJzhlNMo
JqD3jzLvkIEdy5GOwJMdS3VWqal7l8N5VVvCls2k1EsN2ibSeHkQto6T7usG
3zS/wGnjHHYhFtQS/Pbwww+XVEgLZalZvqnt8zcR33YZ4AiSQOyah17y020K
3oG5TfaOiqb0TN+30CkYIIvWkT/CPEyPNukA+M0QuOyyy7gOlc2P11144YUO
M4o1xaCsGuOOH9ni7l6OsydYUQtFy9aDJ0vDYb3SQJSnIMfrsBJAloxbk1LK
c8f8Z3jKAqiHdemcc87ZNyrPsCZwRR4BUoA/iExh6vKuEspsasmt4ht567rA
WY3TnSpa1UoxwFNE6QxKjdUlJRH2LOccMU8YaMoqCodotmNo20a2si9Ftqi3
YLCNjg3FvEXq02rmZHccMKyeFUZOQYT2jrwGMDUEGIehWpChDm5Qkemoo46y
iIA4DAoASOklGQlosXxoXpRIE9UoIp7rxuviiy/+6Ec/esEFFyiAnLB2IpXJ
nMonXQtLxMrq55vf/Gblknrn5kP/hk8NwDCV7qHG0y3l9qqzfcoot7U2QkA5
asEUpLw+bFmqXMY9aCA1IqFvBilhTWQ0UiGXJ/IsykuF55abV2VauK8PKwJc
Y4ldv2GcWkKvdrwvAHbDqJw2q6yzat2rfmnfdHuTvHPk7ToipO7RmdED5JMt
0F0SzRDYRHexCHCKxZUkVTe4F3lmCWsCIu2ijp0ycts5AvaODB2aFW8jKckf
xLnAS7h7Ka5CpNZIS3PJJZdcPl7XXHPNTTfddPDgwc985jPXXnvtHXfcccst
t1x99dX1ITNQbFX6p/w1E8Jxrz5JPY8eetARRxwx9RbhTLg3DYT46JYmXFdf
n5KJNdG6Kd74HoUBMgBeWxknAvjAQOY2wvGaJZSG54jkwa65yFtrlrV5Y57D
gvqpXUN5pglPl72dMocgqFikn3VEz1iivcATvWNUouhd4Y5to+yAfJ9Z3IyK
tX0pXwmhZaVyp4qXs/1hCArhbhuvk5fz7nePM0x5zRxGYN/1FNnNW5YD0ZwH
xG8y8xz3LZWgrGCDcqaG4Bw2nYR6wV2RRKzm85///Le+9a0XX3zxueee+/GP
f/zTn/70iSeeePLJJ+++++6Pf/zjSTe1XNoF9tf6OPqqDrCJBBo1Rc56w1ua
uj/7sz+ThknKy0qggdNCuVnn2VhwM6yDC9U1oJ7WsQZ5EFqIOiNwa9NIrodn
ipvdOw4Bmd5SuGhbUkE2C715Kb4hPICAw0YUAhU9q9Al2qZdswJmJDnYDc23
ygomy2dXfFvPu0vivKi57nVyBNW0wfZoMJT4HKkZjFNihdeDMtZudbIP8iNb
ua0dEOO5/H36zxfDcFY/hEXQtBBPJy9ZVCctBzpz+jiVSYmYyKB26DOxlJSc
OIz6ez/4wQ9+9KMfRUI/+clPfvjDH37/+9+Pih555JG77rorEiLCZtLN3lEU
RSKbiJGdy+GYfXDeJTgOBguaMP/8O3uXnEpy8JRRvNf845N2tDoVM4aNgsGy
kAvZTK4t0a2gIYDbPIxV3yYYzg9LjV9Z6mbQamRaAaizgJIagh8YKdzfjBdG
kP6QmOI6oHn7xvka7NNTR/EWeCmXrv3VKyZ50jhwisZ4/Dg1YOuoOyFuh38T
dgTkdzxrlLZ3lIhpu/FTiNlm+kFlJycHB/XoVrDHdRnejlap3OlyXQD4AlZQ
M6juAqhcjEdJHUK3t95669e+9rVHH300gnnttdd+9atf/d///d/Px+t3v/td
33/5y1/+7Gc/e+6551555ZXOW3ECFJR1feQYpvMIT+Jm5S7hAaG5CezZP0pl
8qRIpJqeWYBk86PEUx+sMhNGMIxtC+ayxcAp9YRfkrNsWknrSxUyjEiwE3f2
gVG0n73Mf0cJF1Qj+GF9VBXYupzeIrSphXZCMfCZ250/C4PFog2H0U1D3jxq
f+0fJ99JAxQggXppkjQNSAUvTysriUylr67MZGCJCNqsM+Tp1qXook108uvK
fAkGA5q1rwWzCZMgAZn8tvmOceiefHwsHaAn9pgT5MBStOH888+/9957o59n
nnkm5vPrX//6t7/97S9+8Yv4zy9/+cvoJxF23333XXTRRcm4LhariRuQKccc
c0zGJoNa6pkQzYT7TO6DxkBod460DlJe/KosJPtOhFKdtBHExErWBjmyRySJ
z2hqZhqoc31Eidc43UbIFvN/fYmod/aNuCnQ9/Zx4CkV11oLjcBRRXLKjbJG
on12LaVLNMIa5YKk88ijse5yZDaNk0b1sIlaX8oikapiiTnFiMuMNTwtVjOP
n7OVKAxry4ld25YaX5BPhdMB/qmvFC17cxbnwZzb0XVJtOTJI1f3uPEi3y30
ZEoTWMPJI4w777wzVSeZFfHgP5FQlBMV/exnP3vhhRcSYbfffvsNN9yQpk19
AmeZN08R9cqPTEIlwljirCGHPeFa7B2saeNy9lALemAUL2WIMUW3LalwsrE4
CCyoleW/hqAC9umN1AYcbJbrQZaTQXGdi+FsRKmmHp2YZiHyScElRG6oqiHM
CYxADtIQGiMsxV3Mojizw9dOGLUQoUD4LV+hVSYKlZ9VKSIzpM1Vr7YshYsh
S7zM4DgwMgf6jNNmKir+gOCbVefFY+PiE4AttVAP4wBsRgDsNLtOHGdpnbhU
crZZYHpqSmSh33jjjQ8//PBLL7306quvvvzyyxFSlJPwiniQUL9mlGUgx39Y
Fnjp3qVONdCP8m+nix0V7GRxeV0FkEOrmBVUNYaqABUMykZjXnHywo1BJQAN
xAMJ5AKT/g9S2ztS5OjAzBNll/qGMAWjoRMuAFZeM98Y5bNzpJIXW153TqXt
k3BheIp2M/OsTtuEwUhhO23U5Wuk7SxWp3i8HUs6+e7lQDRlqTaOutwGTo2U
6UNnswG3LqfoMmAthCcqDozSKJmUQPyHtcIyNZnEn88TxZ25Oawelhq087Rx
NEAqdEZ6FJL8+t73vpfC/L//+7+///3vM8GSX3GkV1555cEHH0x4vXuc5Ohd
EQkcgJpnNVVdA1AQnVvGEW/A/H5CeFw5NDQ+rJneCD2erreTx0He/F+wbjGW
dj33EB2jiVV6QhgGoMxzyTViCzh26aWXph6ziDkOhPGjRs6dqIjPmq5Cv7IZ
gUsNWRVBoAEdG7wvnmHzUq0uEa8zu5YDkVGjGIZ4FyJRiEzn6ZBsTN7PA8uR
WNuXghLT9GARtwrzLNo4LSvALPGUiferhfjP6nJSD15KEcIzjx+nD4vfmMFm
VAuJYEA2TqIe9OlPfzoV6LHHHnv66aejlt/85jfIJhaURhTx3HPPPddcc02U
xkO0YTk4EnS2eZSijQEeffTRdHUuY5PMR8lA3jQSflnHwAQQDbe4cJqWjHt0
16ilk7oOShL5CYQE+kFRqKlbl7MMlOcCjRKXChqQWQ2hp1jfvoyEZqYtpY4x
JU+2K50K8e5RQ9vO5SbDdZEHIWVa1Dqgo9J53CgzfeuSaVjLhx566IblsGb5
LPwCesv1jNvAf/gdZmS72mIK/lOlGAhblvMaBO3QLlJ+OFbOOOMMu1vMg+Al
pNKDHIBFjyVq4dvUHhYB/kPpwuTbZW1GpzA89NBD6ufHi5577rmnnnoq5fm6
666L+XBkrC1FzNZHCVaBnbUslIWVjdlaU65exZEkagFbzCpuwJVw+umnC9Jo
4KlkWZo90QmzXRYJNXZqrWbtFB4cZjszh85DEPCbCONZG+Hx25e8Wvl0FEsB
oswKbAp8t2skx1llwoVFbAtzaYmvZnnFRqRFsA44Uxo7Y01FERDlzqXchxgh
AKAgMfGlgjdE1Kwthf3pimwTCg/yI4/6EuM9MMovsFutMszNpKVTiT2AYM8g
XsILIC+yjqkyQ8EJR6E7nP68jfUwe/DCCy+MwyTIFM9HSH2OL1188cVOkrKd
yX2LBTJtsPw4dHVHw8wYs5iSdEJaDaUOLjr3PisjguFciFQiJ8d9Cp4B/XGg
sHpYmttH+ZGeSKdiD5ouESzryzm5AoFmsRQeE7ueHKeg0ty2jvQ3kV3QA3CB
TF5GCh4lKowb1GUzLmhiKXWgLbBpKU4iUEEHWnFcohcnmkgbhVjXl5TDprqe
18lZpAKOtG0kn64vBx9P/zgtlN64c5QUU2qvIdR/4cd9wLvkEdOgeBPWx8F/
UDUmDPV+BuRsG3VgxFSsjQo5fIjnnnvuJz/5ycTZTTfdlFIdOfW5HRrNSPKl
xTE9ON8bEbQTo7OP6gZkj+XVatZ/iArFmC9G38C8ySlnanDmdk3q+kc+8pHL
LrusDjQ/vafqs+UFTngocRMDpAATT+wFOYa81WCQrUvBBHHLXH5CIidiSbUQ
pGS9GNe2DzyZbUKfYWg34dwrZqZexW14PEWM1BNn9Sqy2l3k8ralOG1ERV6g
20l+inJ4nGwCFXK6N7sJ/EXySnWHHkN+pkuIQ7lupIkJMer7ekLuz8Nr1pfy
sCeOo52EBfZQxyUIqyAfNy7nMrfroeItXxu/ZWrjt3BXX301j17XpCcAsiSO
UWhbdMpzjwBh4QnN9hve8Abukn6d8XJbx8lK/IkMKEcwi99jPXF2t9euGK/z
zjsv7hd7NDOCeGfCHf1NJrVqsTaO6D46rePzxBvIQJQ6wdhXTE+vJiD53uU0
Vd5GMTDmtvUC2hCXbEM5xYAmIk90lrg4bjK5mSSUrA0US/BJVePmI9zxFlwa
ZAdTgn5vWxLQMB+wcLPaKvP12Aiw3B7KWVzP9y1HzaKBRuEosQ2jVCyYoqlu
53J7MVj6tb2AQSEh08sSAdCtjvQ07hhaPTSMgYwJ01cV3s8CbRoliPWUukFg
gUTaMow+wM7aONSSo1n4kC3D/yXMoKWMes8cr0j3zjvvTHr2fv/99991113J
1iSs7HgRO6CJekgfcMyN7Uy+e5CMDEV4RFRSVyCKUCycH0OrhzOED+4kgRfv
2jNqPFJRWN/bloKNVCzTi8WdOo6fENu2Pg5XQk6bl6KOx4/jRdqPpJ6CzyIc
uFS2L9XdhRP3noDAXijP4hMUIqCi47rtdxELfBYok4DmykEbq6OA3gmjgGeP
7omNjreUL2PDcm5sT5GSw/QDggldBr/sHPlEwDf4rRNGDPZd48w4er7THIRT
0vSikyZhx1JFh0MQggpXZKL2U1QH9WKWcg03IicRpzZHOZ/73Oduu+22hx9+
+JFHHqGG9Z48dbaITGfJTYLuQBP4ni4BG2E708DHQMCteE6NtK8ZHWp0IADW
bo20oFjBXHTOVhg7A4HxcvJyhku7aZ54xQHXwGtZgJnIrs1LwW1ByD1lqjqQ
K/SWEGcz7lmOyTbGHhdJ0FjYdyLZbJyVJadygooCkJoQZ1bSD9nR4HfGIwNB
2Sg4HkiKsG6wXNirowxUw+mbuHFEZcgAPULQVNhZW0epE2pGXAWCBCjYNlK2
awR5NJbIIxYK+5rrRdbHAKmX/IyEO4Swa9pWl47XwYMHv/3tb3/jG994ery+
9a1vZQz2nkp/8803X3XVVVGaY7MoJPgw/Qe+QfOJxtR33bGcxcxXpcQT/Uqc
A7h701JwXiQAzQEtNS0OsxNmCQOxoLaYDAuZyBtHJuCpo1R+mgBF5cSloiy7
AzonUgv0LSatZm1G/lmKpcgWOa3iDxuXdDNR3EJZ+nWeXQ4/mYAD7grxEz1I
+WTa8/3pG3MA2gCdY2CKcaI8K/DIsoNUt+g0BBn01p1kgaXIDq7ZOA9rndrP
WDbzgFDR1Cwd+LxIMAcGyTvQ4X5FPLSRJNcll1zysY997Atf+EL08+STT373
u9995ZVXXnrppRdeeOF73/veU089FReKfkTVOmQc/6cW0mem2tP3CvuTFKKV
di1H1826BDAEBmwsqOlKekJyNi4F+ee9LR8zGd6rLo3oIAeFoElqyY6R8746
qjxR0beNNBARbrxs25ai0JbAZdx5IIJZD5DobG8yRpS/kCYMecDKqPdYQVda
OCazC1ZGaqG9gPOIjjbMk0aZu2n4d8sf/uEfZj5Ttt+1HNI9c0hXlhOET3jd
S0hGk897BXis5/T/KAHDSevAxPA0Ds3mvLukussUpprSUtQ8aYtxowhKEd8V
SUQ86Tlf+cpXHn300egnsvnRj34UCT07Xk888US6UFLs2muvTZ0WorxxqQBZ
mzFAkosuym6VryRzDZ04uZXflkPN7s76k3cm5tB2kMJ80qghJrcRboZWawpd
7R4vXqG5bbcuhXB5ZKDlbAQKFUOGgBCguGUcujQpk7uqtesD57jA8pNHldfp
M9ow0pBp5uB0dk0TwpEHtegb7G7WDpXPy0+KL7XosQibbvtS0E8Ws7MySZwW
evM4stnSAwHwihNGtTpJWzOVtQexjoVJsHB5weBI4i3p89iaCksEx8w7UAmk
FpoBfmQUBQf+9Kc//eUvf/nxxx//zne+8/LLL//gBz8Qg/Tcc8+9+OKLUdTt
t99+yy23fOITn/jgBz+4upzfzSfCKSDLVbUH2hq4G0TQHO4dFc9AXgmXvu9i
ChUsSybsxqU0sYA90g1PsCsRDBBepolyIhuXotmnLZV1ucJpqlTcJg2RNAP0
TKY9GWSBeIdhg/wpEv2YJKw2thhlKYkmvqg+TEe5OEOaHpf6RHgY+0JN+r67
jEIBMdFWK8u5imJKWYsUocMOO8wqq/nmSj5fHQavbVtKQ9ja/dp2piFA8Lry
iCOOsFv7ko7dJDufHTebbpdTRingbq8RVUw3jZO29ozihOk/8Za77747+nn1
1Ve///3vO4a49/SfaClB9uCDD37pS1/67Gc/K9kQaEZpWRvVDmflfBHar6/E
hfnYZW5s1ySwAMVtFmB1647xEotrS3KlbS5MjmNufZTn7d+GxlcyQxOtMv8O
V+Y8ZqXu1RORElifxOpoUhy4vcmKJ+4B0SeNqpUsPjrG/nFgwcZRwgJKc+Jy
PpTd3dD4gwSvzhB6Gh3O04yBpKx+u4nsaAZotrSdTaP+j1g4/n3y1B5RRWTz
OAkoUjFqrvMu6Ev5C3E2tjyAhXoW5W9ezrsRbyMKS7hyY1c+unbqkjCSHgFt
2D6OtzPzLeUVV1yRhpPmHKv5xS9+kcJDi04R6ps+P/bYY2lHyS9Velrc9Hkm
CagEOJAsAN8JEz1pKcNVr4ShOkdDMNW2cS6VPahA3NrIuQMmo1KQl1Hj2MxS
aP/epXKLeAYKhhlmAmO88ApUB7imbENXDiwlPUVTWFZUwa0MDGR34LpwS4K7
f0Uh6gm/v8AVYCaeI+OAm3uKjMbVN2JLjKg+HHrooV2jugu2yW100nL4uG5g
hjMggcCSsd4qSK4x1bUPzaYAyGOdkds0RsHk8G1eGFaM0KZ5kNz0WzGgUGnb
MOM98oiEYkGpQNTmLK9vfvObuFDS7YYbbvjoRz/KloGBU1QoYDuX0wzlDsyN
LEuRt6JJa6q58qmmTPtTxql8+0fFbLkJ9My2QxuH3gj/ZyyzVhAe5eS05fwX
oKv4ogy9lpXrsM8ODmOqry1Z3mSNeEhGmV9Fh/JGiQrDeabvj6JSB3ocDafR
MVgQ2Iyahv+DB+mxpIDStfYIXyrAXODK+igrJ+BfgFm0KjtVcg0f6wwsmWEn
uJykBsZ7/8om41nbM8p7TuMLT1OgngZFjm8fBStEe1LekLcIK2Qmpy/9+fTT
T0+FvvHGG9NzcKFnnnkm+kmjTq/+1Kc+dc0111xwwQWscsA7U8h5NHiOah5i
84Sh4uSwShuTsiTUB5T9T+NlJme+xoSXlVQVmsty6dFKDfDcsYA4zoT5KTPS
KtRh51OIjY9+5KzRDKlw0liEUyo3B0mWPgAyAkpzHFPm94/zYnjkT1iq+vB1
TkrjvVoZyYCNum7sXw6zE1TAzQTmZbeKXWkd5anBLcWBCNFhVuOxGLuQSyGR
Ex+Aq3Sl1Hs+QQS2ZznsCZvljOO5w3N6JTqddLZ/nKtIcW2K0peYb/WQE0om
Msly+eWXx2HiQqk699133wMPPBAjipb6HP1ceeWVTrJwnLGDJOpS6hbm32Bj
vLhHDU4AHz1EqHLu9izHuMzl47/eMIo+nbJU9+U4g0LLZ2HcKYYjpggb5wcR
HnbJJZdEIeeff369veqqq1LqJEadNV7dGAlRtNjyijngGNZ6RhcI9ZEaRlzS
CviJ6NhCOm1GtVOABjPbRbTSJH6VfnE2PNOmhjSK3icx8Rlw+o5R2ax5bquS
O2wWVhj64e8QgkUjom7ht9ggCGtqULiHDct9wwPboIQ0R/CsYJC7oGv7rs78
6Z/+qVQ4YrRXVtill1768Y9/PEaUtR4h3TRet912W8wHJGjv1G31NMS3m1s2
yOalaB4Va1ofsYiNo+qIuwTD0wOPHyXZd43S2Qwx/ZnVO8GebCVJOixKwaV7
R92nyKPuxX8i9Qjm4MGDn//85xvF9ddfn2nZN+ecc07030Ck9XH9z2SftpXY
157bh3YHFRfIhqiEdfX5jW9848YlP6veKhQA63Px+nL+I5EBqFHz4d2jRnfb
sKeIMISxyFriwt67lJIWmYMYVpZDRsSB0xBYqQwEIDwp39JzxKwvJeUxN/Uc
mHKeAmqDKuwaOd2MRM5H+qEoSl7smfhMUaecUO3IsgaYktzkRz/NfBu57ax+
HRfAPKD2wDgjaW4rAD4iYZza3VRc7Jr7jJtmFss9aRwHyatimY4bBZAFj3F3
2psblpII/iWSHPmX/L344os/8pGP3HPPPalqCd/nn38+yzHN7bnnnvvqV7/6
xS9+8ZZbbvnc5z7XcIBXMBOrjG+3xK2Xyh5sH0o4BEAuz4wQnpCdmRfzAwTA
2OFXKr1QOege5D4H4vTWwdhp1BuXumEz74AfFoolLKdpwQx5S5UUo1bx5jeQ
5rD5EbQpm2bLOKBZ5TdBBSACcJNKcVRWzJYl63w9NCMemwZLe2RvMmllbhLc
/dvubtTwc2sn+pcCP1NZGeA9og9iHXtEFh+nM6SUL4MeIhDObhUYALRXa5QL
oF8PP/xwWIctM+1c2LVMhC2jmIz6QvGWW2+9NZ6T8vbyyy+/+uqrv/71r3v/
2c9+FglJY4mddhmflNSMPnOjWwVH6+4eJ4CAs1ART4QEIp5QBEAhWVvy4g3T
KjMweffs4neNg+mnB9YuYMXA8AXki0/gm4MViGzsibQFK0gZgJFGOSujkCnP
cluPm299yancsRS85VNG0ptGpVxoz4mjpCf65zKe5TiY9mBDiZnHHnvsKePE
eV4YGDK3C6+oihmCk6mIshiAbypTce1xGlpNLlEyWtIZAB89a5xTEsVqH+Ql
QEgg5cpyuNsf//Efw96Fu5w2jvzm38RyTx7nJcV84pPRRhzm3nvvzXj84Q9/
+POf//wn4yUM+MUXX0yv++QnP5mONBPtWVvYL23WAYVAD4C2k1aaZ+kYzYyI
C8HMVGURsAAoipmMAFY5/iwOTebjhqX2kSXGVHE2fhwpJLLRRWVAPDYu5VsZ
ofa7Rcf2EQk4fWUUh5+VvbtYLbvmvOWr/5C6GW4nJRNbdkgcI4iNLx6m5WhT
KyJ3YFR+xlJqUPAV1AJhSHFV2mUiSDIUenpECKdixnLI6snuUf6RlS2si8nD
+aXMlExGd0GHBJYLGl8dOUH9u2Gc8SdadWWkXfeeJYsP08dqLcl13XXXJbkS
W9///vfjOTGfX/7yl7/4xS96j34iqqeffjoplo2ADPYvZ1gIChJNTarWZjvd
uOob4csHvWXUFJX9zQSm3VFlOQhQOPiLbgymEK+unhi7csL4m5Yz4OA8CA9u
c8Jydgz7Tsb0zlFtUtzL5uU1Qyun9YfVOOiWFbB/lPFU48WDEgfqi4JHAG5G
KuaQkkNibl9qsjGNEVJftiWPHyWjoxP1alZGBn1EQuR1e1NKYtJ2WAqRBDBH
UJmdJboYkQggxJlZATK4U9eV/xIgzU+3camc1kOFxXLcHHnkkQz29VGjT20T
XgzgZNpaOtsTTzzx7LPPSsP8n//5n9/+9reSEeJC3/3udyOtRx555P77708u
y2SxxfgZYy+NLiKRYNgjGruAfL7+GcCzcUnoY7WhfzD71pGMI9qT1UMn5DBt
OGIRhciCyGZ8guXuQWxkG1PGGW0ZDLV5KRA0/SzAPbnz4gmFJkr/mUmdU4Fk
asFSVCjqSntq4pP9GwtCAzTACGMS8/TyCFpT3QtaxcAUsgidQB44G89g+4I5
Segj6ZOXKuXAfFEo0n9kBlkI+iT5KAwGW54xD9NDRKvsmvWlHhSOdMI4S+L1
NlS/Zjam7cPME16vvfba7373u1/96levjdePf/zj6CcW9PDDD3/lK19p68XT
mMmN8ZhjjpmRJ+zfvx4vhvNMx/AShM/8xGAbMjdH77YYpEK8VsRAMK0uR6CC
yA4s55Vz/m5ZDo7Ht1eWs71mPjWIQ4lFp0JTOxGe9sXxigRu9VmsIAXrSAaJ
Lbc1yMHN47gKYXszmB9UOM9AJBM5f2eW8Yw5IXPXR8Xjpoje2wZ0aKbweLpl
H0gNrpPVkfG3aaS0bxoHSwmPWR+Z7zQ3YCng2hk9+5aakJhY/8aUlJ5rWlhA
G0alcatJBAMEjhsFFd81Tnbg7+49q+qzn/1s5MFhl/yKbGYOJv3nlVdeifnc
cccdXf++5QD6jSNxg6+H9bE28q104Oijj+bi6V9zYtSHHHIIZV5dOCUrqRmg
MBxeZvfepdLa7qWEnYWbtWuo3GCQmUc840agBKtLUQ5ZNuAp8QycfdQ27n6E
LQ7NKnC4HD9OPFQXEbsT5+wwR5YL9ij4hL6hS7gEmEV0Fr69ZXklI5rGiASe
L5hkShOYBqlUN7r4DW94AxqWFCyOnc+FV9fUCRLo6e16zN8w5Swzkzcs9UBe
X8h9xhU3D8RoC81E5SneNI7rVZbq7LPPBn4++uijkYrsS2m8vbLCMsG+/e1v
p2Bff/31chKpHKBC6vrqqIMhuEJWbB/EpRw3CgaaDUHXkqRogGxD4NWuJRlf
OowMMvrnzlHg1L5WugcCDwPHQHiiRdtCllaWow22LnWZaCbCm9nvcJKpNrue
3kKG7lqODOMdMGQ2Jprh5zKlbGTlNSCHAnqheTyna+PUBgxqxlUyOvpmwh0b
lywV2rUIVb5vRXKYQq0glZsqyAGxaSnuNNEhbHbi/IKBMShQD/2KoQdsedeo
WJ6IwTC1TOJQ5NjOOFtSLBYUCT3zzDNxG/ng3/ve96KcVOvPfOYzV1999YUX
XkigUzjbMhhCQxBqwjtDlRW1Bb6DbPSsww8/HIghug8+YzY44CbSBQWqY6oD
tV5nnnnmueee2/tZZ53V91wtNKhZ6Cbm5mDxuWf7t71DId85Cvli3Tags84j
SCXEaSwJaCFzDChEzmjdulT73DleIl7o20ZNvAqeUU6k0TVXgo1F12xcikrF
SQTJ6JKYBAasEeHqfMEALn4TgS7IrIu5kvnE9ywV/mfksFqUNGrpEjN88bil
+rHUJDoJFyHAqsfBgWEaJLh5AGP2uvjii/vy0ksvve2222IyyanHH388WZZG
nc6czIq0Ip4ua+9En2nLMKs+q4Gg/MJ0CjOXRLnE9PYuRXpt7fQcviQxqw0k
oQ/PAThDP2aVQsmYdJ4+Yz71hFPMXkZj8zg2lk69isAwulaKnKJsiF08YdQG
oadxOuwZ5R9XlzMC1pdjNcAycmYZO12pqB3dz9oxxwSRcjCJJG9ohpPthjNP
/x2BFeuWRc4koXLwLaoH1fSuLCdBC76lb29bClGCynV4FmtlJc0KUQ5+mhG/
p43z5YWp0wZREQaurq9IBu741ZF/xP0HxWXUGHXXq8d1zz33xIiy1uM8X/va
1w4ePHjZZZe167sMCAb/rDMUDLicFTnssMM4sukkfFvMAfGQwoQE8KQgzXB0
HuSMC7teMhQIxXaOQlqvc84554ILLqifURHzU5LvPH1D+Dp4Vu4/FXpGnErS
AZvTc/BJ9pp8SaEsHBxq0W9aTmmEdfOVrI5yKP2kqpX9LuQARfF/KeQr+BDA
Ih247wW/NQ94o5QuoCslk47NTlfsGtgIcSJtofcEJZ8aWKbv+RfsLwb7+ign
3jLR9ESeqwU3yU/eMZABFmGjYdH8TWJdWNa86m2fVNner7322k984hMxIiUl
nXbR08VsnDTKbdEB+L/a5o0rGdGIEo5i7RAYo9JnaDN7YRYBA7PT4jYsx0KZ
GTvdKXhihBDPRRddFCesk1F1mr8TP3krGH2y82itABMeAR/oJNRL8DUMqsb7
kt+cLqEmLcqHNW0d5WtOG2coN/PKt64tR0LQBzBVJhuEgRvi+FG3nBcVfijQ
qP6on8a1Si5QD9iMovvUZNgwkhbpjbgoWpUoAfSmS4POdixHZiudhPbE6dFg
OdfEJGwYJQtEm3CcqX4MEGBEMMfYQYz6HePANYaDUr0if2pWnUkKMC2XgG7g
ZlXtnROX0iVEv+0MxKMSw1LmlufPFbdjx3VZUzdd+WpsRiTO6asbqT1XXXXV
Jz/5ydSwW2+9NZGaqP30pz+dYJWqqXJFr73L4ZVsrmYsARoZzKAjAAtnloXe
NPLQGzKYBVXMQCl7efdygqpMRjlWQAwV/MSTi8lnHTvRo9EpckIT3rtUthQi
KyI96lUFug8zYtZhrPtH9X7KOW2fwmkj7FwOo9k8KnRha+oYkC9A6VOXw+Mc
BNZTWCLCz9bHeRNtHEnE1o4VA4gjswjxKEqYFgWJ0oIVMxgbCMiaMpy+Qdbs
GCWeeNYIU95G3gfv4G6IDVAaV2cv249cUTi57I/1Udaebxo6p25JP/WUPsQZ
YoPJ069+9avf+ta3nn322YzE559/PvGanL3zzjuvu+66TEhHZB5YTk3dNtJF
TxwVMEwLjgSHmQaIYoz2MjOWnQI04LPDNkmrJlnwHtnhmgPjpCGiR/AYWhWl
48O2pQAIE55zqotbkZ4VhacETqkE9IO1IhJKNc1hZTlYRHqFraGMAE6o0jvd
BpGQxeDNdDD1/Xq0tAt5K2Zppl/hXaxgC9c3DjSXqyXzBdnwSktk4IrlEN+9
HBZ8wlIq/9BDDyWUsQt2hOh6gRkryxEecEXMUB0PlalYE0TbyigxGgOnLahM
iIntGwdRxQwTpg8++GDUosoT2/CnP/1pH1544YXHHnssdnTllVcmyJyRIYpe
jKiNP0MfsXeSrjkRsXzyOKxTwLmCMxEVr7r4K8kIwLr9o9646Eftc8Vy2nI5
capy1RkycJW1MsO8V5djdDaNMjg7l1xRD4KYSZiiD0BioSITMaPmMayY0krR
slhZUmjbo7ePSkFQ/X5VLJpVRXWfZR8svf7Iu0EGtgZJTRXhzbfLiMjok6/T
QZO4BxYHh/cuczmKmvH5iETc2kTwHI6gS4AacUcAK0rsDJixzUlVCk8y69FH
H3366ae55yIbSS59fumllyKqhx566FOf+lTqUBczlsVlmaWmyxEn02bXB4oi
HQx6xmHEyXjycvAHSTTrMYoibgujTB60qWyYZK4xIY5yiEDicDOLCIaVTlWX
msZmvn0E/FwbhR9J81lJDHUdP2owIl1ufXgC8EdG/95RtxwWR5/cvlTrircj
AHyjhVaFWEDLLCAJNzh1OXIUJ1RcCCqCev9qvLYupyew6PUE/XsWrRu1U7Sa
E2RcH1QHpbIyyggR4Vj4sOg1QRQW1H6Bba4vB5nRkTi+eyXCLrnkks997nMx
meeeey5q+dGPfvSzn/3sxz/+MXjzJz/5SSwo7kSEKQIpDUFK2hTo4F+2FSuD
1cCZBWnhZ4SN8HTb7Cw7Aepm1dDwMYRKypACVhy4Z6uuLkHjnNpbRgkaCjMo
DGPsspiblCs5ehLobEyBOsIz8DQBIdOapqSpl7g68rPsJhuEoTQX8d3jBCKy
CXTgzFZbWAcSRkgd1CmWBtQJB+PHnMGlMD2VWOi9zJMGLheeIADJtkxK+Aqe
37JUdpWlwsuGDxCdoHXhl8eN8yu7OPrBNhssVJy5Ld4vFToN+d57743JxG1+
+MMfRjavvfZawuv74xVFxZceeOCBVOvssvgVMBb2m3qfPcgEE5Am5tNe2DxK
z9EQdo7jKvjQpdtvWo454DRRhx+TdF4zfrtjnNUIbIHPOGpE3grGLox/21Id
aKbANFHE9yGHHMIZARVkXtW+XHJBC9Jk+IVFklC6XC9RS4In9mVHqKrRoOq/
Ch67x6FXwo93j3JhdF1DoJLtW45GwlQxybWlKBBDAFjx98sJ13YcXJqDu4XW
H0YivsqHsmM5y8aiAHzaBXooSGnnOHES5QhCcI3wY32zfZpbqiDQjMPRTKbS
RBXJr9SeOE/vMZyIJypKBYoLRVep0/fdd19kxpd3YFTYJqbZ4LXMtbSynPFk
v8D3HKZw4nLaCE5oV8pXIvpFKLUKjgDo3gQBbKpG+kw6MPCl3yqByPfBuMbM
xScT2V0v/4h/bXXJPRRD0ogk90lmcfaiAfaTOPCV5XAT0XqsV6YiH58hN8lr
y4EOJ4xKejYIw5lFQP6KBpzAKUsTwglAayz0Z0aZmEArG83sG6Vx5aMBZwyn
zSLUitNh81LFmrKqGoMjDzjvyIJN4xC0qS/VPqiTh1EUMTMQDwcnti7yepJH
mefJpscffzyy+fWvf/2b3/wmtuOUCqni/dsFXZb8mj4jajD1jCXIDNm4VPnm
4bL6lDGeaCazyeTGUh8A5K50G87TJDuHiPZLM5mwgOpzgiFJRswExC1sgKjd
NKpvxWGaEyEZSkVpkNkLDJEmoF4NND6q4PfHOlaXo0zoS0BFolztd4kPgtxA
HO0IMJQvZfnRWoFUKHn7cuI8GjjqqKNo9RtHJRycnBBsmBmS07cL05u5Hk1v
89ztOAzQGFPlBRMRDazrSunDJrnXBz7wASnwJ4xDQOjzYHB3MXO4SjOC0ocT
TJdffvntt9+eChS1RDYxokRYn9Oin3rqqUceeeSqq66KeERCMnU3LwXrhCxK
GcAfZH6xa7iEpv80giGO9ywl6dCzGDZo5BlnnCGdnINeUJOAihlAiIWuLuci
EXmC0glBuw8nxIUwDSoxSxBixh+EMpuTww8/XFyl3Bx6O2nYrxgFSCEuAYEU
y63Eq/CPLqtX3GQiVHeNk8HJHRlGJ47i5+kPiOTEUZtXAIMVR3joRHUF7ua9
4/BTPgWYMHeMxJl+ba25nmf8Utfr+XvGYdOq8e9YyuPX1W3Ly2YUjlJrbZ/0
k38cR2pOv548UPaRgIqMHadUfP3rX39yvF588cU4Uu9ZXv2UjGt0LBQ+nSYt
ucBZQOmi2oF2bT30NuNauQncQuujqDBeOIkETssmO+uss9ovXfOX4yVupJdQ
BDFCfE+pYYh29zjVlzUtAi3didWzaUlHhdrNrAQggADvHl1TWJxTJGpQRqRc
G8OJ9tR4gfoqJjANQy5XLpWeEhkI6gYysxlt/43LabOSRyI/kgVQRtY0sSeP
g5NwVBo+dLTh7x+nXWBBvB76pqonS00y4PpSiQ4u1GrWssguHLjrk4CCNMBo
XSzgdss4BSPdCbNdXQ7pU5RD8uDNN9988ODB3r/0pS/df//9KTzR0sHxin6M
aCY2OjyI8oxmzPZcuNVRLgPICbRZXU6gJov5O4S6UasgupiDFBibhWrE3ty5
1EYzZGHtSEgEi3PNaN2SBUSzyCJcWY4gke8fQ2gXsLwEt0NRppdHrRKIE21W
RAqDiP4AjuguqunWpWpZLdQgYmsUUTWljqBfW2pBUwWNXURBQsE54GhV2gID
lvVh3YWi1UP1M+3NfaPmanOuHh1mK1CTSkDz58vmTEGN0bDysPwF4IKNo5KS
oAWk5Vyb9VEur27w6XAlnHvuuXGh3j//+c/fc889d9xxx1133XXjjTem9sR8
eFWEGZDLwHbqomV11q0thr3w0q6OQwHWxuEI0gM3LDkvRDC3Oz+RMDBKfsPB
8YxFdUGaA5a+eRwSJJyAKQTVXBllZERlbBwlZPcvr9qkbsV1JW44oBAHkGVP
52SDCCzh+6AMsJj6DCiGSb7xjW8UK8tsRLT1Yca9AJSg03wxTs2ALIlno06L
fNg9jgKkP0tcpW8zBJCxOFJxjLvGebu2WxRIu5D950r5XxdeeCGLjNpgS548
Ts9sjPXfQ/eP4kW0CyqKkjtqTNEDgc8k2oZRngXqm6qTOnTeeeelGqmH0xjV
dFJmsNZSz7hx8WQx1XQMalvPyprocSx3ZW83jooiOB5TuqWhvYjzXF0OXhQv
Z7fOwgL2EdAD2kZ0ig6adNgAp9UmHUCMOnXolOX4LZH5IGuQWsOHJHPK66EQ
BUQ1q+cxuIgD2x8uPcmAkc7hzptj1YgJmgZihjzTCjhJ67x6ztCYrUu+s2BO
9pqDdSRWTCi1/m8YuWwE9ISh8Em8iAnMOF1Z8l4nTMdGlqVO1mhKfE6LPkvy
EpccavoG27RtcfsDo/I/GfpHf/RHgksplhGSEvo0VROidCHNULjy1qXWEIlf
b5lsRLyQKlPEuwF+dHYbEMYG2bTk4CvHSi7sHMX6bGFwhJBLGpTdWveOPvpo
YhSmdOaZZ8q/qPHoAR8gFHqKLHLFQCBRKsjxfyl6RlsDlcDzxeuq1bN9lBzX
AcFscJWpfm9eKkDWsgSlzeO0rEnzvVIMwDjTst4wEvS2j0NhSH+TA1pn5x43
DqsiBPlebQeKEFearHDGO/oHvDQVdUMJMkuGFBmD85g8KG5TqixtkzbxfP5W
Vhv/NYupbvzJn/wJhbOLAVmbR2Vv3gqpFrqE/0wYmYZs1HXAcSHbRs4OikL2
dBjhOhqRFCYWlDxSEY40sbka8sT5yYXVkXYkhl/nqUCQRo8+aTnsg4q+eUkA
FHmlQDGbkcNiZTlBJn77d+O43pVxLirJwqaWNNromHtkCmNQKjcHjdIZWq6T
IPepM/doToEaSefnNCHuUQhYgMlPzEn3IExROIYgBGVtvHriDNFkDk8zFm6J
5GhldVVOrtDfHiRWR30n8QxtopmAQIuTkyWDBsi5aSmnALASGrpzFNkQqE9B
FTO2shS9JBYnb8E0oMG7R+1WNOxYYZje8aNOJu+AfDcu6fq/NlLyme3TjwYo
k0p//HKctMexd3RSBoQZmxqCXBhOEPSGyZw4DmpBjQ5UQlr8FEIoBaLbsG0c
uVTcQywLzhoBirCj/aPaz76ldDMvXrd86EMfYvzWrAOhWq9mI6WF7pEeOEs8
WZF+NRu8D7JgWB+7lrMeprJdB9R8nqAKoExSJJiI6HQ+F5OKhN23VOhlFbIQ
6ZnNfx2DJilyW6/Y9aaraWGbWKnDDz8cTqtv0RinpDS9rSPJV8TLtuXAHYEZ
NubW5RBq6SF931zh7WQH66zdAY8yGwKr0pGyZVZHhTF8j4OD0vj/NnUnr3aW
SRjA/wpduDHE2ElEpXvXjTHJzZ2Hc+5wcqO2dEPTi8aFkoREMRpRRCW6yEJF
VFxEFN04LJwHGhunjaiooKLgn9IP9eMt7lmEk3PP+Yb3q7eGp56qkl8jabk1
PR9E08BJpQEbo40V+plaTleITbRTDRzQKZX25JtZE1QBGz+KfXuMOKErJO9w
p+ED3U3CC2X6zJkzQGPpGz6nKiShFvCHzcpxLl68KByL5uHydQ4awtz5iN0x
QJlAovHnv/ncblodjddOnz4tclEhi9J8Z82dR3qh+fUCygIeG910ET49RF3E
881j1XkpEojZKAZ3zTxzlVmNMxghajGtTH6Yf8Wh+bJKEP4h6kJDi4BZmsEQ
nC6Iw4NCEaTkWTHBqYeLLstnkBQWcCFvH6lJcLmMHDPv7bXtmuq4VMPH7RFk
mPVqHZZj8pFonvwpIpoVE5AaUuZ62jOE1yENijKIHFKiC0PPEwWwjG7/lhrz
1LFJdquHqFQwWyYntQvy3vXIF1OtptByNYXbqsw8Fy1KpABYkOw1mbVptczS
2ezuu+++oyZf54AIilQBKONf9Yqzx8hyutaqJ2GTt7uXwtExxQADCgA+GaMt
wXH79u37a00kQcPj4OXRTKsjyt9qBivyUg6SZ5Q/aUMXKYphkoJfGJ0WNN2C
4SiBQcXvRFjD9eLllerwgGi9Nsoec5b8FtNVxJrDOpH4SPSneB8lLFfFP9G1
m2PQDVLgxp2T3RzzeuAeClolUherG4zqUcWk7fTiYvEqPW6dHDpHJhqVFMgd
mRXifhFCNqptJg+NfpYmYFkACywjL3SjGr5JQFjeZlfyn1WOgwETHUipSOhQ
hhA5CMk/x8vZc9cRVw6AT0AN0CGLzDJSztwGMXjXG3ZZMQvFjrNEuZ610bQq
37n66qv3798PNIaGSaHaXM212Cs/eTqCGmTFWP+819RXo9HmZYlhsdqmNcml
8SVe/UK1UsRjzNc0jsMfk3FmFLjKO3uG2si45RUJyZ9ybcZVxFfMDo3jgUWc
azNxOOuca7Z9RFgUOwyneY92Iq6jSm1rZX2g4tDp/Co+p7h+uxrkwq55vF0/
lUep2k4GWaaMK8VW8n75LZx2l8TTs618uWcecWzgdeDNneobL/UjccBhztMB
LwBYZI7Wq9C7w3kRPePOgEq65Rr+Ui86U76Ml64EQBABLtiqDnI5r5XR4pVE
qYnWkIRW6dpnfDl+lBSzbLh7J7FIWd50ISfILr/NEWAgek0LrGIpbO28AYt5
r8ZNwJKlViDAA4Q45dQRnjgJsrp4KWjSaFd4Duw73otg5Eh1CFyo4sHuriP8
FyzwQ3yTFsKgiHxGVDwRCTWNhsQvnkJk266MSUUKUr7H1cxlYGtk9boxY86V
y4asut/1QQ6fq+b2quz18CRI0nCgA7xfzgy4nvIBjADK2Cm+H96LzZI9blvl
m1qcoQYBeaS2881YKJlrjDhckRxN28wswnTUa/ur2JC3o2JFkiuLE3uhSYWz
wHwkxCUcWeH1aviPoMJCacKgRR5giodzstqwAH+Yy0ZxIYrYvDjt/pqf5zKi
YaJdtdakguRABcXZv9ybxWqqTKhgHaTdnyBvuRhVWvM1nmmxGuYsVjHgwYMH
gZBWUiIpd4q3I48pmOIfMpe71XdO4AD0s18mY/w3riYFQtdt16wNIZuEPqai
lNCspijSJ0pZheeU1WT00pQJolJyMVkEz92RZzXJiOpumBS4PT96WjLxirP4
KshghFNUBbYl/KjOeow4YL7AqbDCu2NwNvIqPZMvs85eyNtyNOoT87Us8lb1
wMk386xBplFBObh8hLSUnkjrY7KVsItvCYRHHdHoJjd+4cKFBEf333//Qw89
FPtlhNzTTz/9wgsvPPbYYxGn8+fPcy8xvaOX3DWHRI8+aaPsPug3fQtXbDRV
4hUfUlrQ5vJoECDxuCLGejtrHy3R1i7KalX9T6rO0Ww4vlYuNX+FYd5S/fZh
RHweRbiYhJwunoYIV+gnk9tBDXuhCTAzTZvJPksu09sgXz5bxAOzWnIQEC0G
Xx1d65ExoLVSWnQ+HmyklNsjQ214TZ5dliWLj9/LP2FVpzU6Lcfnr8LwxQg5
2tzoSyz0szj81VxDvC9bGBjCF6IYGXohJAYF1OW2GkqoWFIZdZbo4YcffuaZ
Z5566qkrV6689NJLr7322uuvv365XpcuXcplS9jJStCEXGiJOXxaIVsWJ3qJ
fw6Z1C6GelwY89QUmuWlnBDYK2jarnaCvZV4aHYrNhEDsTVGYKC3MSK0BK/e
javGtafY+o0i94pGhVrYj9hKcqDZL1okGT0DOfd9kk8eqFxOqfrcJpDnAk6N
5tXckibNKkIhh5YRj66ps/i0WWd1jjArLkE3kRZaaiypuxEpAs4I3mEdUC9Z
GCfyOPLoZYskEfLbWAcZEJkUtzMZbW24i/aRKDveTrRN5CdC8sorr0RsPvro
o/fee+/9999/99138+aNN96IFop2euCBB3Ll9JsAWXQgzQdyP7FnDAqUVQgm
Y75SJbQ8Ga6vSIH1zIc5Ps9ELYP194nCh+kYIqxsjS3IpmMcnVqYQI2IJkAf
Wfm4WxI9TJItqRUwgIvCp0J5pNMxN4EwQ6tgI2Y0bFU5LT4AeWAySIV74UHt
VE8q3LNJtUPhRasqxRtsGi1kYFYN6PIJUpx1wLHs6h7gSaeVQXm5KVlg+Jgf
Sk2S/HwSFyWHynk109ZTxfoIDXg7vDuZII5ErlP2Nl/II8u5Hn30UbMwPvjg
g88///yLL7748ssvv/76608++ST/feuttzSyiJnL7QgnmYDdGm1GCWBYqSJX
/MKRQ+W1F8TvbgRGh8OG8m2DSHxgqogXmBWhRDPWgMaUlf3b4Z4+ACJrT3ax
OttsV6fK/CsogEY2XMAVZHRmNXyZxUSnQV1o1BQJUxdZ5nWlWnlQZayAM/KR
0D55EbjflLPMl8chbQRYc1P4D7kSznAXYuAGEBUrgPGbJyvUslWJkLQpk5dz
3XvvvSwUnJwV63oHRL4Te7qLr4wqP55eriFmtBsSGsD64osvfvjhh1999dU3
33zz/fffawH3+++/dzvKSNfjjz/+yCOP8BXxpnIu9wJk4EKTH7Q3eglYZKsa
XwIYIflZGRzgXHDERsZEmIAIhPeVL9O3ytDi4efLjoMmwbGUr1GyARLPaqDv
2nSWAsptz26OsbmCR8k1yy5BIDFHOEX0zBZRl7SCC8l62FNiYTbLpkP1sX/p
xs4aQOdytCyseiV+Cx9MopMzA+CaVB8tPnPnONBpaGBHXh69766//vosWpwQ
iXJTgDXFdd71Ua6Snc6xpG+VBc2Pbo0Obi/T1TFMRhhE1eh/++OPP/72228/
/fRT5OePP/749ttv80lM23PPPZev/btegkQ9gXu8ddefaoxgF4McVY4z7ptV
B3rrmIHF8VgbbY4gWrk1O5qM2aoq+nVF5lGIIDRVyOPTJzzHz1OYVV+FozVy
Qriav4JHvKCynqMoD34rCkaYB+9HOO0ISUaE8Fl1GFsaPVR3qp8bTpFiaq4O
jxr9bLu6iPPrGIVcJ4YSK+m31KAY0+4jHgjPICwSzslRPzU/OstBzEx6wveI
mMUqHa1ZMOpijAiJqCD4iTjIEhMAuV0vZrvaBKkKYezJGr2X9cxGyBHOnTv3
7LPPxu2J/onYROH8/PPPUUR5HxOWfyNFH3/88fPPPx8zhx9+cs+cSkgFMgZi
J5wEjNNd2pgnDg+dL2LNl7M7ZPGkxcHgHGbHhzvBJ2+66SaWhVON3U0OuYic
arsJ0To/sXPzOaAP6uLJ8k6NwDtZHbdQQaQksv7GUsC1sC8kxLF3ODbINnlj
VhGccHMUgZJnRg0DISoXboDbxhODDABVbIQ8d/0KkPMB78LtadViiIJl88WG
vGjt2mi/fC3qWoTIh6GmqC/BCNYKiUUks01ys7n4PMeIpRZMSGv5lWBQpdLL
L78chycy8+uvv0bh7P03tsxcnqigxGiKEbR90BJBjOMByYYLrJhOGGMuYDYa
lRvPAag5Uu21G5/kMTqg6AmST7uK0RZGn0DjZUVqcsTtQ4L4GsNZrxZYgAsF
jzxYIH++mT/1jIP2W/InYSZRoR5hNcIc8kMTcmJltDUEZuYckI7txD2N5yB6
8vgOuhTupcS9GffroykHRacBu3o9ejJ/ldXNHUVUSOCdNTYOe9nG2TtnPCfK
3Un/CamoSgEyB57OyUW2K5KLz6PnBqhUMiEiYZdGuLFZP/zwwy+//BJZii37
7rvvzEV988034yM98cQTxknAHLC2RBy5GAlB8HJOLXjJlWTHNQqEYIN6oSip
U1egJLgcxcJtWKsXLrcCEI6B1B7HO/dC96pPzNL9vSYZ0e2etfAcqZLwbFUZ
l8JVCRd4juyATzwjWT88T49JYCsdaROBZ9llsYPj2ONcZeEbdIiX2+0fl6vP
w6zaI3PLBXr0KlQHYCjsjTceQYLQZvFR+zTYF9pwCewvxqtpq7PR+WeuXrSW
JLumBEB+hoBriroTuxzfCYnChsoZTR55++23P/vss1gujdzzbyxXHKH/1SvS
9eqrr8ZZisqKX3GkmkhD0m6++eYYIJOkREy71UCj/RzsrM6qIHtQoRbKFus6
iNz4oUOHgJ9yzSQf1ifbHsnP6aL5xSOS6RRvfiUxas15udMq5eCBSDU6mtRz
+z/qRETi61VnJAfNDxEdYL/QACs1xY9viRhMvau1gS953AJ22ky+jPO/MZon
8/3QtGbVc0AXOPRIPqFMFtFyU0wMeLxhE0tHRGVY3A714hRCNml04So8k2el
m7FhCkdHL/38iv+mfykY3wibxOZRQZGfKBxVt5GfvI/ZMovwySefjPMT3QhI
ZyVN6oS3EyeFWqvVL2KnKuhpp+iHrlObjQZ9iOhkyU5kmpEoIqW0Fj8WjAzj
zXvN9jerxRa7TwEyTLAduI33PPDlMbGal4jUujNmyC5USaaNid7MLHblDrt5
sgrkkVKQbykQ0SjvS1g3GQP1YIYOiDMAH0DPgFEwjp4vEGC5yvzpT8l9bWry
+eHDh8mDlVd8IandO9HgNmPF0FpWxzx0X4Me83PkMRkIwM6x6vaW54s4tzAm
O7hOeVsaL4IdrRIV9M477/y3XgnEtKlJUBZZihTdd999p0+fzjd5jPJ39AZr
HtHNTS2OLjHdOMI2QY7FpHKnkuzIzBBy7gqeWEPucPj8Nc+dwFt84krXsUTm
xMmYAIpZmc5GwVI0GAGMCN/ge4jHsqjy3T0fRFmKUUGUlaNtjeFHu6PW3r6G
SMOCpsU0bnKOriOERGHIdJSus+AYQZMx/oA5a9RXBEFVoltQRPlOlhcFUaNd
LvekZorNj5mtrnmr+P+IyvAK3YNFvqvVYksIn1s+cOCASWQ9EyRraA7X+fPn
o/9zWF5QfOOE51euXIkh+/TTT6N2YrCMI4yBO1svGjI/t93gcuLKrrqVuGHL
YHEEG73cclHI3A+mWegkaT6peescchRQ1bXWhFZBF6Tb6RD5qaXqp9GZU4/Y
h3IrMA0JONLOad+owv9Oni5XU5d8aGiXbHVXgXFHLabsPyCIuuO77lZl1maV
cUmVRqhU1HYtg9QMiogMsipd5X5iDd4XYAHWmvcmUvF1N8aQBcO1OTl5prxT
+1EFB68e5UlUSw77EWgVCGlhQLkcNr6C02a/5HRZOq1dcgH578WLFx988MHL
ly9r1nepXvlErhZKQ1eoENytvrV4FGY5RQWhi2Biw0Cm1SB0pVrUZonUIaoc
56tAXy2CRGduCvEDPkkv5Wt6EpJALRHcdVQZd059nGSTjBXaGyNLgSNMckop
DQGUgFEVg0gKt+qGG26ALUhs0T/kBAOQMe1cLaeOwKyNtmbYXAvVHBh7lvJh
4rs0cmWMqoRYUpVejVZ10J3NBbcB9QhsLbhxThLQXFM7HeNL8zqoOHWNEM4h
pKAY5aXq+QPlyF8PHjx4qjoEanXC1ohbDUXKMf9TrwsXLsRbjlKK2knIRk5I
ZkTuqquu6pYOi9XjC6MPQOfLyjoEgz6BkzQ/0AoLrDio0T+oWWujKQ3MwQoj
ktEG+BJy+rJ7zSVjjFyejG0OiFHTXDs0Bk5jsyaUVqG7K5bUy5HvlIel/wbT
I13iUTLKXaCEzLlQnUasPCiM+weX45qyfbxrhliaYLVazwnV+Zl5mZ3BP8lS
CPaBP4qerKHsiYaHApDeL9g4fFdesdzH5hjuTNHxoBb2dPOTemZGr7vuOrGn
4Fq1o4Ori2SVsrPOnTunESX3LMc0pMYIYAyxrEMCuvh1k1EII3iBqwBwAO+i
Py6xS9XFhWJ0j5bR9wFBsCAHVzR3zz335HqQT7rADffVxYPxoUN64mFTN08b
IIDSJv+rSwyBx7NdGk1p6NIsY+tSt9A9LlCL87xktcCGuTZrDkVRp4yVQf5t
21NVxY/jZ5sw0yQKJpM9hXaFjkIHUuniu9ypIkc1X02xhmwj7mr3LbKg3+ic
/AnFVGo4D92Irvzc6JOcLm9g/jwWwY7OPNTUiZqkE7WGVmcHKcNxqfYmA0pd
UL/aV04HmZ//L8tAcnrkIneCd6pPGtdOgpgMHx+jZ/Jhgi+xGOecrWTLQBMi
pjwLtQ/tzfKf2Uqupho3zCtZwpVqB6Rzked1W3X9hXtwZfNN+X3gIWqrJAV4
WfUEr17BkSKjYzU4UgvczVEBKuSnLvg8eaO9hpiOEfE1TjvEnsdovrb9zv+B
sNGigEo4v6iN58ykYr8D3KajolZhCKjE3sw9uhcfSkvRh1vVqDaONAsicRC9
sTQGKVJ3rFiOLIZFs8cDgQxsj15qR2uayWJ19gYYqtrIMU9Vayw6Z2U09mFB
tkZLK1b4SE2pQ7CUnoAWMmp0jgqOnKJxCSm8jtkhflmT7BrXmQPmh3EvPXG9
BDn2XBpKnmfVkLVPNEBgB4mouRKMCCuJLotjKaSFosBIOeoAZNOXbBZPDdjo
3/lqYeTpkEnuPfsoNpTuARFMR7kHOjQ9D+ubVE0lXQRugvAsV+NfiChbYONn
pxDRzdFTjgWXCaJvOefgRFAzz2pjVKIB5B05MkMqLBouN/3sa2rPt0adUQ5l
3hkpAsRJeF177bW2mNwumQQktndBIeS3AGpMpAbWsC/UGtD/PEy3pgCHp51F
Q6IQrqoU4FEgs4G4GSaoFCqgIJFnArBibSOlShTVQmIdI1MBY+Wp4SGtOaFh
Eg0y/pqHYLLlwnI01aDilLVRRGxPuRI3y1uWd7DaSEQQMJZRchNXB2PTo+9y
eMlfbHka2AqLJqSDUR3wkSBRvkbeIBW8Vt1yJFMkN1HvoHbqTFmZhWrahgDG
XKoXyG9N4+V5KsaBlpMQOyL/Rqhk/dwyoICoiFaU2cLxcFHEPpSJ+AXTKadA
lxVQHx+TgFSOaLskIz+plrmun98FY3Gzk1GCARA+OgZxElSpH2kCyIAMxVyN
+yHbx8dYENiap5yDS31imhFja4LsJyHl8tRYRTmTZx67QhvwIG9HgCmydg3o
LpxAbrMLsKmVqEjycpu564yyKBX70QpbBxlVHjgskVFGN6K7zKAUjslWOGnO
uFKFNidqfN6hQ4eyShESkKnBkVwaYb42uTznnapGl4nWI0iZAOVDO+GFwi7a
drNWffsuO8sCMAH5KjGm1ZvCJ5OFySA7M1+NayS1kfY5Udop5JZz9htvvFHQ
RzM3/Vi/BQC+ROFidfSyoRRd8hAgQopJO4mgDUIObr80MJiLt+XBEXA22sYe
hO2ws/qu86hZc3e9Mnq/GDAHk1yvIs2NUV4Ek5R8EVzkBntZ1sZ8UtLCJ2FD
wYkLNS2FW9K9VvIe38wuW63WWMeq3yMg1IqZkoPhye+lz7PgZvJiZ2WhEt27
DOvGy9XoxvBlpZEcJCsMQNPd18TSuTFsESDAacmH+/bty7kYTcq2Hb+NqnDP
lzXKUG0nCAJwadkE+pvVhN8Oo2g8roLAIV+2lZSdyjExZ0SFmWAExci0HHoA
nxxySHWYmyAaQnNSLJB1ziZaHWR+vhCIQ/X6rfVCMBOJMCVro7sFU9VMeK5X
k3BYN450boqja4Vh1xDCXB6jxtskLUJsnIedantroeQNQSX0ElwUyMPKLFeH
ZyU/+VXf5kq18iNF0zHVTkMSxSxcI88X6A3/lyJZrcmAOt53CHlsdCAUNfP9
+PCMBcME+oOW86Z4g4zgZHTgkcjOf7NZkLqRauxHjg24W3u3/DXXQD9waO+o
0Ru81m5y/o96Tavml1FbGDMC+EX4q5QkkZZ4lW8lgbxoyReKWtBEpSvplQEU
7WZrN+Zpj3hMusgKteR8m1EjZdOsZhoM9yPHxG3uUo6T1eggy5UVwCrfrJI6
knnXXXcpj0KOzXXGb1yqVi1WaVolJ2ujwAek7DikEQlEqSMFFUFiWHMLtgC+
AW9c3oeHnIs3Awjf2yA8ZVY0P+ovVqFdI4qXWdB+XGBFAHJt3tiqQuAmnsln
QT8oUgAaTGxxTMFmCj0RxjF318MiBWK84tWqqQHdKxpaqDYFOORIpBp7iobU
uEkuCCjWR6dKxAyMILy73O/t1UVTqK7+XXCXl2iugykpj1urgz3MTZZN6kSG
CxFxuZoww4WUe7DgPJZZdSbn6nCNmMhJ9TFTTETO4dICFsdRP6L7BL2tczU7
osqvVSucASXglhr+lZuKLoq3wwDljJwEQIdAj0rxyORemb9rrrkmIVV+zhQy
GZyB9TEZnPEF37lBms1OUaOnkwCFI/Hk+cbg6p8TSdgaXQiA1QIQnq2t7bdK
P4QM4izwjhyrEEk+Kz/RQJiQiBklMsRWWWdOpnQbJEeoslVtOSGZ0SSCfS2t
CLwg4s/1AhDN10BDWSpiLEZQQWM/6tVmIzQbs3WdMIc2ph6be4x7BuGBw1DF
wn+PjJEVBXjubA0wX+qfeuF+sALAc16NpWZKss68QZ7SZNSaIWROqju9flm6
VUsHrIyGS7gu1DU/01YSDamXh+I6vnRzBJsP7wkKzJdHVz3OqgYXUjDUvnWm
D3fGHApbiaNiVzLQeqN1aQyKOEMPRekUJ+ecFydq6L6yAE/RAUAPttksGkku
D8hVEX7irZeXfkcchoRCObsrlM52ar6QZkowHyZbUViXa+VrysYhS1mTs2fP
opzN1bAhnsBK9RjfGRPbd6rViZC583dybRw5akr6DBLCvnCT+F0wpYZksXNz
NDtF9zzazAIeOHBArDE35ugx0FhzishYK6WaKEYWxP7NsksGgUlhccdq2Pfc
GN0LJ2HBWTeKujk5OA9bVTy1NVoGnaqJBkjRs+p6MakqBp4PKhrUjg2iw9Ew
uJq5ThdGVHJV8fzNp1NTRgDIydLoMOC9IjufiOwmo75Ynk6Wgal1y9OaTKFK
iPGFD3TOSGZWqZezA2egK629c654tmwHUC4OzGRwv+eqTxdwFeBM6hA+KUz5
LKwqA7X5CbujvTDCDFARto/dRBEpcAO3uvgT1WSGZP6pXjw31AWJIV2PFHBB
qygE1bVRuSgWPDooFkw1T6TFEnbRWZvuD8kDJC3cY9SFk6Ojl7KUfCEnAoVl
0XZrdB1mdR9cjMk90wKamp2vjjrMih1n+iRXhPcoWWyJuFtih+NjELaOKEAD
QR+qKuo4n22zGmWoEcivDBaJGBw+fDjOAJ8NpsH1pRkiscpvWSW5DGk160+q
SeN6NQfropVZdUR3JfQwZcKq4hVkrXS2RBibVGHp2qiKhdLbDpZOpgwPVhAB
eXD8vNG9PK4OLvdq9brMWfbv3x+1I4kvHoRBmbSeX6khna/mxvxVWwkxg0Pr
xgV9UmNurYMsXZ7ajkA2bq9+d3YBW6buA0ny//Nzc8U=
        "], {{0, 165}, {192, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->{78., Automatic},
      ImageSizeRaw->{192, 165},
      PlotRange->{{0, 192}, {0, 165}}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}]}], "]"}], "//", "ImageAdjust"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.575096671242012*^9, 3.575096685632032*^9}, {
  3.575151552048551*^9, 3.575151584238596*^9}, {3.5751527213321905`*^9, 
  3.575152738242214*^9}, {3.5787952704749374`*^9, 3.5787952717229395`*^9}, {
  3.648226188532628*^9, 3.6482261920908318`*^9}, {3.648226491268944*^9, 
  3.648226494211112*^9}, {3.6482313009610424`*^9, 3.6482313029911585`*^9}, {
  3.6482314723518453`*^9, 3.648231474766983*^9}, {3.6483038949211793`*^9, 
  3.6483038979373517`*^9}},ExpressionUUID->"9caeb34d-e9f6-4873-887a-\
c6fadac943eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindParticles (updated to remove adjacentbordercounts)", "Subsection",
 CellChangeTimes->{{3.578116942838025*^9, 3.5781169456080294`*^9}, {
  3.706478182893057*^9, 
  3.706478194310189*^9}},ExpressionUUID->"a434a46b-a0b5-4b86-b483-\
82f003184979"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeighted", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{"img", ",", "imgc"}], "]"}], ",", 
        RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"img", ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Color", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Circle", "[", 
              RowBox[{"#", ",", 
               RowBox[{"hi", " ", "1.5"}]}], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"pos", "=", 
              RowBox[{
               RowBox[{"ComponentMeasurements", "[", 
                RowBox[{"imgc", ",", 
                 RowBox[{"{", "\"\<Centroid\>\"", "}"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], 
             ")"}]}]}], "}"}], "]"}]}], "]"}], ",", "pos"}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, 3.7082569876100755`*^9, 
   3.7083825965615287`*^9},ExpressionUUID->"4e052168-fd0a-4f86-92c4-\
053d295da235"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeightedMask", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, {3.7082566948533335`*^9, 3.7082567064482007`*^9}, {
   3.708510282112838*^9, 
   3.7085102832053924`*^9}},ExpressionUUID->"db3e8986-e2b1-4328-b92c-\
c2c1611d46c9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
PairConnect2 (still one small error, but doesn\[CloseCurlyQuote]t seem to \
mess up stuff)\
\>", "Subsection",
 CellChangeTimes->{{3.578373737283985*^9, 3.578373754802816*^9}, {
  3.6425405298598948`*^9, 3.6425405335598993`*^9}, {3.642540631241037*^9, 
  3.6425406446910553`*^9}, {3.6483824557337046`*^9, 
  3.648382456997307*^9}},ExpressionUUID->"a906cba2-d493-4a6e-a112-\
4543c0caec24"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PairConnect2", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ticker_", ",", "anolist1t_"}], "}"}], ",", "list2t_", ",", 
    "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newticker", ",", "finalticker", ",", "list1", ",", "list2", ",", "flag",
       ",", "out", ",", "newTracks", ",", "mypos", ",", "myind", ",", "myl", 
      ",", "out2", ",", "out3"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newticker", "=", "ticker"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"anolist1t", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"#2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"Sort", "@", "list2t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"myind", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"mypos", "=", 
          RowBox[{"list2", "\[LeftDoubleBracket]", 
           RowBox[{"myind", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Reap", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"While", "[", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
               RowBox[{"list1", "\[LeftDoubleBracket]", 
                RowBox[{"m", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
               "-", "dist"}], "\[LessEqual]"}], " ", "*)"}], 
            RowBox[{
             RowBox[{
              RowBox[{"mypos", "\[LessEqual]", 
               RowBox[{
                RowBox[{"list1", "\[LeftDoubleBracket]", 
                 RowBox[{"m", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}],
                 "+", "dist"}]}], " ", "&&", 
              RowBox[{"myind", "\[LessEqual]", " ", 
               RowBox[{"Length", "@", "list2"}]}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"EuclideanDistance", "[", 
                  RowBox[{
                   RowBox[{
                   "list2", "\[LeftDoubleBracket]", "myind", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"list1", "\[LeftDoubleBracket]", 
                    RowBox[{"m", ",", "2"}], "\[RightDoubleBracket]"}]}], 
                  "]"}], "\[LessEqual]", "dist"}], ",", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Sow", "[", 
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"list1", "\[LeftDoubleBracket]", 
                    RowBox[{"m", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "list2", "\[LeftDoubleBracket]", "myind", 
                    "\[RightDoubleBracket]"}]}], "}"}], "]"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"list2", "=", 
                  RowBox[{"Delete", "[", 
                   RowBox[{"list2", ",", "myind"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"myind", "=", 
                  RowBox[{"myind", "-", "1"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"flag", "=", 
                  RowBox[{"flag", "+", "1"}]}], ";"}]}], 
               "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myind", "=", 
               RowBox[{"myind", "+", "1"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Length", "@", "list2"}], ">", "0"}], "&&", 
                 RowBox[{"myind", "\[LessEqual]", 
                  RowBox[{"Length", "@", "list2"}]}]}], ",", 
                RowBox[{"mypos", "=", 
                 RowBox[{"list2", "\[LeftDoubleBracket]", 
                  RowBox[{"myind", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                ",", 
                RowBox[{"m", "=", 
                 RowBox[{"Length", "@", "list1"}]}]}], "]"}], ";"}]}], 
            "\[IndentingNewLine]", "]"}], ";"}], "\[IndentingNewLine]", 
          "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"m", ",", "1", ",", 
          RowBox[{"Length", "@", "list1"}], ",", "1"}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"out2", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"out", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "&"}]}], ",", "Null"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "@", "list2"}], ">", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"finalticker", "=", 
         RowBox[{"newticker", "+", 
          RowBox[{"Length", "[", "list2", "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newTracks", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{"newticker", "+", "1"}], ",", "finalticker"}], "]"}], 
            ",", "list2"}], "}"}], "//", "Transpose"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"out3", "=", 
         RowBox[{"Join", "[", 
          RowBox[{"out2", ",", "newTracks"}], "]"}]}], ";"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"finalticker", "=", "newticker"}], ";", "\[IndentingNewLine]", 
        RowBox[{"out3", "=", "out2"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"finalticker", ",", "out3"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.578278483426984*^9, 3.578278527017045*^9}, {
   3.578278617567171*^9, 3.578278812177444*^9}, {3.578278860177511*^9, 
   3.578278958617649*^9}, {3.5782790527777805`*^9, 3.5782791306678896`*^9}, {
   3.578279228338026*^9, 3.5782792824481025`*^9}, {3.578279331708171*^9, 
   3.57827937375923*^9}, {3.5782797231797194`*^9, 3.5782797524497604`*^9}, {
   3.5782798062098355`*^9, 3.578279820769856*^9}, {3.578279860929912*^9, 
   3.578279877759936*^9}, {3.5782800389101615`*^9, 3.5782800426101665`*^9}, {
   3.5782801504503174`*^9, 3.5782802956605206`*^9}, {3.5782803604306116`*^9, 
   3.5782803672306213`*^9}, {3.5782804440807285`*^9, 3.578280470540766*^9}, {
   3.5782805111508226`*^9, 3.5782805168008304`*^9}, {3.5782805968509426`*^9, 
   3.5782805970109425`*^9}, {3.5782806657110386`*^9, 
   3.5782806854210663`*^9}, {3.5782807162611094`*^9, 
   3.5782807175111113`*^9}, {3.5782807897512126`*^9, 3.578280792511216*^9}, {
   3.5782808529913015`*^9, 3.5782808624313145`*^9}, 3.578280908081378*^9, {
   3.5782809467514324`*^9, 3.5782810046925135`*^9}, {3.5782810446625695`*^9, 
   3.5782810505625772`*^9}, {3.5782811481127143`*^9, 
   3.5782811696327443`*^9}, {3.578281283622904*^9, 3.5782812974929237`*^9}, {
   3.578281465663159*^9, 3.578281465853159*^9}, {3.578281551223279*^9, 
   3.578281564433297*^9}, {3.5782816376533995`*^9, 3.578281646533412*^9}, {
   3.578282025693943*^9, 3.5782820302239494`*^9}, {3.5782822587442694`*^9, 
   3.578282264654278*^9}, {3.5782823233143597`*^9, 3.57828232345436*^9}, {
   3.5782825197346344`*^9, 3.578282525154642*^9}, {3.578282604784754*^9, 
   3.5782826048347535`*^9}, {3.5782826819758615`*^9, 
   3.5782826900358734`*^9}, {3.5782827276359253`*^9, 3.578282894096159*^9}, {
   3.578282962536255*^9, 3.5782829667562604`*^9}, {3.5782831375564995`*^9, 
   3.5782831679665422`*^9}, {3.578283206996597*^9, 3.5782832870267086`*^9}, {
   3.578283348096794*^9, 3.578283367776822*^9}, {3.578283470656966*^9, 
   3.578283492016996*^9}, {3.5782839458876314`*^9, 3.5782839944376993`*^9}, {
   3.5782841031378517`*^9, 3.578284113677866*^9}, {3.5782842223180184`*^9, 
   3.5782842223880186`*^9}, {3.5782843294291687`*^9, 
   3.5782843302791696`*^9}, {3.5782844209192963`*^9, 3.578284457309347*^9}, {
   3.578284550769478*^9, 3.5782845508994784`*^9}, {3.578284822663619*^9, 
   3.57828484069565*^9}, {3.5782853893969555`*^9, 3.578285423857003*^9}, {
   3.578285545237173*^9, 3.578285545617174*^9}, {3.5782858759376364`*^9, 
   3.578285897557667*^9}, {3.578286003598815*^9, 3.5782860371688623`*^9}, {
   3.5782861572790303`*^9, 3.57828615737903*^9}, {3.5782862077491007`*^9, 
   3.5782862166091137`*^9}, {3.5782862581791716`*^9, 3.5782862847992086`*^9}, 
   3.578286325379266*^9, {3.578286401229372*^9, 3.5782864672294645`*^9}, {
   3.578286510369525*^9, 3.578286511389526*^9}, {3.5782870152702312`*^9, 
   3.578287016370233*^9}, {3.5782872721305914`*^9, 3.5782873117806463`*^9}, {
   3.5782874462608347`*^9, 3.5782874467208357`*^9}, {3.5782874911708975`*^9, 
   3.5782874941909018`*^9}, {3.5782876928021803`*^9, 3.578287701252192*^9}, {
   3.5782877771222982`*^9, 3.578287777862299*^9}, {3.578288352623104*^9, 
   3.578288353153105*^9}, {3.578288429383211*^9, 3.578288430623213*^9}, {
   3.5782885667834034`*^9, 3.5782885799034224`*^9}, {3.578288708243602*^9, 
   3.5782887524836636`*^9}, {3.578288898613868*^9, 3.578288905053877*^9}, {
   3.5782893486954985`*^9, 3.5782893521655035`*^9}, {3.578291437249422*^9, 
   3.5782914925594997`*^9}, 3.578291604639657*^9, {3.6425306412239523`*^9, 
   3.642530683860013*^9}, {3.642530742362096*^9, 3.6425308047651834`*^9}, {
   3.642531019962491*^9, 3.642531020132491*^9}, {3.6425311360136547`*^9, 
   3.642531166125697*^9}, {3.64253121132876*^9, 3.6425312242587786`*^9}, {
   3.642531293833877*^9, 3.642531297573882*^9}, {3.6425314082820387`*^9, 
   3.64253150795218*^9}, {3.6425315514062414`*^9, 3.6425315622862563`*^9}, {
   3.6425315928842998`*^9, 3.6425316444823723`*^9}, {3.642531691449439*^9, 
   3.6425317249694867`*^9}, {3.6425319206627626`*^9, 
   3.6425319318037777`*^9}, {3.642532056447954*^9, 3.6425320886969995`*^9}, {
   3.642532138244069*^9, 3.6425321476280828`*^9}, 3.642532244681219*^9, {
   3.6425323095393105`*^9, 3.6425323484653654`*^9}, {3.6425323843774157`*^9, 
   3.642532444282503*^9}, {3.642532501847584*^9, 3.6425325024575853`*^9}, {
   3.6425325615806684`*^9, 3.642532601869725*^9}, {3.642532707053873*^9, 
   3.6425327454539275`*^9}, {3.6425327819739795`*^9, 
   3.6425327821139793`*^9}, {3.642532815416026*^9, 3.6425328677931004`*^9}, {
   3.6425329233521786`*^9, 3.642532926542183*^9}, {3.642533062098374*^9, 
   3.642533259736653*^9}, {3.642533571219092*^9, 3.642533595639126*^9}, {
   3.642533784734393*^9, 3.64253385364149*^9}, {3.6425339204625874`*^9, 
   3.642533928552599*^9}, {3.642533971415659*^9, 3.642533983913677*^9}, {
   3.642534058391782*^9, 3.642534134649889*^9}, 3.6425342296930227`*^9, {
   3.642534352895197*^9, 3.6425345223634353`*^9}, {3.642534700581686*^9, 
   3.6425347028516893`*^9}, {3.642534759857769*^9, 3.6425347601777697`*^9}, {
   3.6425348824019413`*^9, 3.6425348994869657`*^9}, {3.642535074718212*^9, 
   3.6425352725904903`*^9}, {3.6425353223105607`*^9, 
   3.6425353314005733`*^9}, {3.6425353699746275`*^9, 
   3.6425353984366674`*^9}, {3.64253546901377*^9, 3.642535556605893*^9}, {
   3.642535660427039*^9, 3.6425356605370398`*^9}, {3.642535706873105*^9, 
   3.6425357137931147`*^9}, {3.6425384922410283`*^9, 3.642538496281034*^9}, 
   3.6785566714495325`*^9, {3.6785587960190516`*^9, 3.6785588947867002`*^9}, {
   3.6785593039071007`*^9, 
   3.678559305379185*^9}},ExpressionUUID->"7dec82e2-186a-4802-b0c6-\
b31833609870"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
PairConnect3 (Connect a dot in frame(n) to the nearest dot in frame(n-1) \
which is less than the determined jumping distance > there is no conversion, \
but diversion) \
\>", "Subsection",
 CellChangeTimes->{{3.678559583698104*^9, 3.678559593562668*^9}, {
  3.6785687791460533`*^9, 3.6785688974738216`*^9}, {3.6785689412813272`*^9, 
  3.678568949921821*^9}},ExpressionUUID->"bfc44d79-77f3-4302-8d35-\
e187d03faae2"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "is", " ", "used", " ", "with", " ", 
     "LinkTracks", " ", "or", " ", "LinkTracks2", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", "A", " ", "cordinate", " ", "of", " ", 
     "each", " ", "dots", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", " ", "is", " ", "compared", " ", "with", " ", "dots", " ", "at", " ",
      "frame", "#", " ", "N", " ", "by", " ", "Table", " ", "function", 
     "\[IndentingNewLine]", "\t", "Those", " ", "dots", " ", "located"}], " ",
     "+", 
    RowBox[{
     RowBox[{"/", 
      RowBox[{"-", " ", "\"\<dist_\>\""}]}], " ", "are", " ", "listed", " ", 
     "as", " ", "\"\<potentialDots\>\"", "\[IndentingNewLine]", "\t", "If", 
     " ", "the", " ", "nearest", " ", "dots", " ", "in", " ", 
     "\"\<potentialDots\>\"", " ", "is", " ", "actually", " ", "less", " ", 
     "than", " ", "\"\<dist_\>\"", "\[IndentingNewLine]", "\t", "the", " ", 
     "track", " ", "number", " ", "of", " ", "the", " ", "dot", " ", "is", 
     " ", "given", " ", "to", " ", "the", " ", "current", " ", "dot", " ", 
     "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", "\[IndentingNewLine]", "\t", "This", " ", "will", " ", "ensure", " ",
      "there", " ", "is", " ", "no", " ", "conversion", " ", "in", " ", 
     "tracks", "\[IndentingNewLine]", "\t", "If", " ", "there", " ", "is", 
     " ", "no", " ", "dots", " ", "closeby", " ", "in", " ", "frame", " ", 
     "#N"}]}], ",", " ", 
   RowBox[{
    RowBox[{
    "the", " ", "current", " ", "dot", " ", "gets", " ", "the", " ", "new", 
     " ", "track", " ", "number", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t\t", 
     RowBox[{
     "list1", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], ":", 
    " ", 
    RowBox[{"the", " ", "latest", " ", 
     RowBox[{"(", "biggest", ")"}], " ", "track", " ", "number", " ", "being",
      " ", "used", " ", 
     RowBox[{"(", "newticker", ")"}], "\[IndentingNewLine]", "\t\t", 
     RowBox[{
     "list1", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ":", 
    " ", 
    RowBox[{
    "the", " ", "list", " ", "of", " ", "cordinate", " ", "of", " ", "points",
      " ", "with", " ", "a", " ", "track", " ", "number", " ", "at", " ", 
     "frame", "#", " ", "N", " ", "\[IndentingNewLine]", "\t\t", 
     RowBox[{"list2", ":", "    ", 
      RowBox[{
       RowBox[{
       "the", " ", "list", " ", "of", " ", "cordinate", " ", "of", " ", 
        "points", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
       RowBox[{
       "1", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t ", "out"}]}], 
      ":", "      ", 
      RowBox[{
       RowBox[{
       "the", " ", "list", " ", "of", " ", "cordinate", " ", "of", " ", 
        "points", " ", "with", " ", "a", " ", "track", " ", "number", " ", 
        "at", " ", "frame", "#", " ", "N"}], "+", "1"}]}]}]}]}], 
  "\[IndentingNewLine]", " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6786311463602543`*^9, 3.6786316118118763`*^9}, {
  3.6786336143174133`*^9, 3.6786336993652773`*^9}, {3.6786337329091964`*^9, 
  3.6786338276456146`*^9}, {3.6786442408382154`*^9, 3.67864462992647*^9}, {
  3.678644735598514*^9, 
  3.678644831406994*^9}},ExpressionUUID->"8069a282-ad5b-4925-aa30-\
37d7985000f6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PairConnect3", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ticker_", ",", "anolist1t_"}], "}"}], ",", "list2t_", ",", 
    "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newticker", ",", "list1", ",", "list2", ",", "out", ",", "mypos"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newticker", "=", "ticker"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"anolist1t", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"#2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"Sort", "@", "list2t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mypos", "=", 
          RowBox[{
          "list2", "\[LeftDoubleBracket]", "myi", "\[RightDoubleBracket]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"potentialDots", "=", 
          RowBox[{"Cases", "[", 
           RowBox[{"list1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}]}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"potentialDots", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"newticker", "+=", "1"}], ";", 
            RowBox[{"out", "=", 
             RowBox[{"{", 
              RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"potentialDot", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"potentialDots", ",", 
                 RowBox[{"x_", "/;", 
                  RowBox[{
                   RowBox[{
                   "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"potentialDots", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",",
                     "mypos"}], "]"}]}]}]}]}], "]"}], ",", "1"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"EuclideanDistance", "[", 
                RowBox[{"mypos", ",", 
                 RowBox[{
                 "potentialDot", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "]"}], ">", "dist"}], ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{
               RowBox[{"newticker", "+=", "1"}], ";", 
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
              RowBox[{
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "potentialDot", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", "mypos"}], "}"}]}], 
               ";"}]}], "]"}]}]}], "]"}], ";", "out"}], ",", 
        RowBox[{"{", 
         RowBox[{"myi", ",", "1", ",", 
          RowBox[{"Length", "@", "list2"}], ",", "1"}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newticker", ",", "out"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.678559612091728*^9, 3.678559616794997*^9}, {
   3.6785597764591293`*^9, 3.678559889284582*^9}, {3.6785600026430664`*^9, 
   3.6785600028040757`*^9}, {3.6785645606417685`*^9, 3.6785646495908566`*^9}, 
   3.6785661846406565`*^9, 
   3.6785662164474754`*^9},ExpressionUUID->"1ceafa4e-bdb7-4d45-8059-\
abb95aa184ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["PairConnect4 (PairConnect3 + removing diversion)", "Subsection",
 CellChangeTimes->{{3.678559583698104*^9, 3.678559593562668*^9}, {
  3.67856877593787*^9, 3.678568776041876*^9}, {3.678568958833331*^9, 
  3.6785689735461726`*^9}},ExpressionUUID->"5dd49b40-3020-479f-b5ff-\
ce16ed9d1b46"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "is", " ", "used", " ", "with", " ", 
     "LinkTracks", " ", "or", " ", "LinkTracks2", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", "\t", "After", " ", "connecting", " ", "all", " ",
      "dots", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", " ", "to", " ", "dots", " ", "at", " ", "frame", "#", " ", "N", 
     "\[IndentingNewLine]", "\t", "finding", " ", "redundant", " ", "track", 
     " ", "numbers", " ", "by", " ", "using", " ", "RedundantTrack", " ", 
     "function", "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", 
     RowBox[{"RedundantTrack", "[", 
      RowBox[{"{", 
       RowBox[{
       "1", ",", "2", ",", "5", ",", "1", ",", "6", ",", "7", ",", "2", ",", 
        "2", ",", "5"}], "}"}], "]"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5", ",", "6", ",", "7"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "2", ",", "5"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "1", "}"}], ",", 
           RowBox[{"{", "4", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "2", "}"}], ",", 
           RowBox[{"{", "7", "}"}], ",", 
           RowBox[{"{", "8", "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", "3", "}"}], ",", 
           RowBox[{"{", "9", "}"}]}], "}"}]}], "}"}]}], "}"}], 
     "\[IndentingNewLine]", "\[IndentingNewLine]", "\t", "redundant", " ", 
     "track", " ", "numbers", " ", "means", " ", "track", " ", "gets", " ", 
     "split", " ", "at", " ", "frame", "#", " ", "N"}], "+", 
    RowBox[{
    "1", "\[IndentingNewLine]", "\t", "in", " ", "order", " ", "to", " ", 
     "avoid", " ", "this"}]}], ",", " ", 
   RowBox[{
   "choosing", " ", "the", " ", "nearest", " ", "point", " ", "and", " ", 
    "assign", " ", "a", " ", "new", " ", "track", " ", "number", " ", "to", 
    " ", "the", " ", "other", " ", "points"}]}], "\[IndentingNewLine]", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.678644657461045*^9, 3.6786447316622887`*^9}, {
  3.678644841734585*^9, 3.678644919664042*^9}, {3.678644955945117*^9, 
  3.678645062191194*^9}},ExpressionUUID->"be7cc7d4-7ea7-495d-b9c9-\
87c233bcf883"],

Cell[BoxData[
 RowBox[{
  RowBox[{"RedundantTrack", "[", 
   RowBox[{"list_", ",", 
    RowBox[{"test_:", " ", "Identity"}]}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Composition", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{"#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
        ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Position", "[", 
           RowBox[{"list", ",", "#"}], "]"}], "&"}], "/@", 
         RowBox[{
         "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}]}], 
       "}"}], "&"}], ",", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"#", "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
        RowBox[{
         RowBox[{"DeleteCases", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "_", "}"}]}], "]"}], "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}]}], "}"}], "&"}],
      ",", 
     RowBox[{
      RowBox[{"GatherBy", "[", 
       RowBox[{"#", ",", "test"}], "]"}], "&"}]}], "]"}], "[", "list", 
   "]"}]}]], "Input",ExpressionUUID->"0b4797d7-f45d-46e3-a517-c18c0eac39e7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PairConnect4", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"ticker_", ",", "anolist1t_"}], "}"}], ",", "list2t_", ",", 
    "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newticker", ",", "list1", ",", "list2", ",", "out", ",", "mypos", ",", 
      "myRedundant", ",", "null", ",", "tempOriginalPoint", ",", 
      "tempNewPoints", ",", "tempTruePoint", ",", "tempOutlierPointPosi"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newticker", "=", "ticker"}], ";", "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"Sort", "[", 
       RowBox[{"anolist1t", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#1", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
          RowBox[{"#2", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], "&"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"Sort", "@", "list2t"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"out", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"mypos", "=", 
          RowBox[{
          "list2", "\[LeftDoubleBracket]", "myi", "\[RightDoubleBracket]"}]}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"potentialDots", "=", 
          RowBox[{"Cases", "[", 
           RowBox[{"list1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "1", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}], "&&", 
              RowBox[{
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "-", "dist"}], "<", 
               RowBox[{"x", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "<", 
               RowBox[{
                RowBox[{
                "mypos", "\[LeftDoubleBracket]", "2", 
                 "\[RightDoubleBracket]"}], "+", "dist"}]}]}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"potentialDots", "\[Equal]", 
            RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"newticker", "+=", "1"}], ";", 
            RowBox[{"out", "=", 
             RowBox[{"{", 
              RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"potentialDot", "=", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Cases", "[", 
                RowBox[{"potentialDots", ",", 
                 RowBox[{"x_", "/;", 
                  RowBox[{
                   RowBox[{
                   "x", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], "\[Equal]", 
                   RowBox[{"Flatten", "@", 
                    RowBox[{"Nearest", "[", 
                    RowBox[{
                    RowBox[{"potentialDots", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",",
                     "mypos"}], "]"}]}]}]}]}], "]"}], ",", "1"}], "]"}]}], 
            ";", "\[IndentingNewLine]", "\t", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"EuclideanDistance", "[", 
                RowBox[{"mypos", ",", 
                 RowBox[{
                 "potentialDot", "\[LeftDoubleBracket]", "2", 
                  "\[RightDoubleBracket]"}]}], "]"}], ">", "dist"}], ",", 
              "\[IndentingNewLine]", "\t", 
              RowBox[{
               RowBox[{"newticker", "+=", "1"}], ";", 
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{"newticker", ",", "mypos"}], "}"}]}], ";"}], ",", 
              RowBox[{
               RowBox[{"out", "=", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{
                  "potentialDot", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], ",", "mypos"}], "}"}]}], 
               ";"}]}], "]"}]}]}], "]"}], ";", "out"}], ",", 
        RowBox[{"{", 
         RowBox[{"myi", ",", "1", ",", 
          RowBox[{"Length", "@", "list2"}], ",", "1"}], "}"}]}], "]"}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"myRedundant", "=", 
      RowBox[{"RedundantTrack", "[", 
       RowBox[{"out", "\[LeftDoubleBracket]", 
        RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"null", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempOriginalPoint", "=", 
          RowBox[{"Extract", "[", 
           RowBox[{"list1", ",", 
            RowBox[{"Position", "[", 
             RowBox[{
              RowBox[{"list1", "\[LeftDoubleBracket]", 
               RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{"myRedundant", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "myj"}], "\[RightDoubleBracket]"}]}], 
             "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tempNewPoints", "=", 
          RowBox[{"out", "\[LeftDoubleBracket]", 
           RowBox[{"Flatten", "@", 
            RowBox[{"myRedundant", "\[LeftDoubleBracket]", 
             RowBox[{"3", ",", "myj"}], "\[RightDoubleBracket]"}]}], 
           "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"tempTruePoint", "=", 
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"tempNewPoints", ",", 
             RowBox[{"Flatten", "@", 
              RowBox[{"Nearest", "[", 
               RowBox[{
                RowBox[{"tempNewPoints", "\[LeftDoubleBracket]", 
                 RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
                RowBox[{"tempOriginalPoint", "\[LeftDoubleBracket]", 
                 RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}]}], 
               "]"}]}]}], "]"}], "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"tempOutlierPointPosi", "=", 
          RowBox[{
           RowBox[{"Delete", "[", 
            RowBox[{
             RowBox[{"myRedundant", "\[LeftDoubleBracket]", 
              RowBox[{"3", ",", "myj"}], "\[RightDoubleBracket]"}], ",", 
             "tempTruePoint"}], "]"}], "//", "Flatten"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Range", "[", 
          RowBox[{
           RowBox[{"newticker", "+", "1"}], ",", 
           RowBox[{"newticker", "+", 
            RowBox[{"Length", "@", "tempOutlierPointPosi"}]}]}], "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"out", "\[LeftDoubleBracket]", 
           RowBox[{"tempOutlierPointPosi", ",", "1"}], 
           "\[RightDoubleBracket]"}], "=", 
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"newticker", "+", "1"}], ",", 
            RowBox[{"newticker", "+", 
             RowBox[{"Length", "@", "tempOutlierPointPosi"}]}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"newticker", "=", 
          RowBox[{"newticker", "+", 
           RowBox[{"Length", "@", "tempOutlierPointPosi"}]}]}], ";"}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"myj", ",", "1", ",", 
          RowBox[{"Length", "@", 
           RowBox[{
           "myRedundant", "\[LeftDoubleBracket]", "2", 
            "\[RightDoubleBracket]"}]}], ",", "1"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newticker", ",", "out"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.678559612091728*^9, 3.678559616794997*^9}, {
   3.6785597764591293`*^9, 3.678559889284582*^9}, {3.6785600026430664`*^9, 
   3.6785600028040757`*^9}, {3.6785645606417685`*^9, 3.6785646495908566`*^9}, 
   3.6785661846406565`*^9, 3.6785662164474754`*^9, {3.6785691452029905`*^9, 
   3.6785691752347083`*^9}, {3.6786294864193106`*^9, 
   3.6786294970029163`*^9}, {3.6786295295627785`*^9, 
   3.6786295693700557`*^9}, {3.6786296000998135`*^9, 
   3.678629674828087*^9}},ExpressionUUID->"8ae9693a-eec4-40a2-afb1-\
2373b31b55f5"]
}, Closed]],

Cell[CellGroupData[{

Cell["LinkTracks", "Subsection",
 CellChangeTimes->{{3.6425406972561293`*^9, 3.642540699196132*^9}, {
  3.6425407307771764`*^9, 3.642540734629182*^9}, {3.6483824467792892`*^9, 
  3.648382447886891*^9}},ExpressionUUID->"49b994d3-5f4f-4ecd-8b81-\
6acbc03eb8e1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkTracks", "[", 
   RowBox[{"testgreenP_", ",", "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list1", ",", "list2", ",", "listResult", ",", "listResultFrame", ",", 
      "listResultTrack"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list1", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", 
           RowBox[{
           "testgreenP", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"Sort", "@", 
          RowBox[{
          "testgreenP", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "@", "list1"}], ",", "list1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"testgreenP", "\[LeftDoubleBracket]", 
       RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listResult", "=", 
      RowBox[{"FoldList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PairConnect4", "[", 
          RowBox[{"#1", ",", "#2", ",", "dist"}], "]"}], "&"}], ",", "list1", 
        ",", "list2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listResultFrame", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Insert", "[", 
         RowBox[{
          RowBox[{
          "listResult", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", "i", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "j", ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"listResult", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
              "1"}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "listResult"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"listResultTrack", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"listResultFrame", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], ",", 
        "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"listResultFrame", ",", "listResultTrack"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.642537218408235*^9, 3.642537264040299*^9}, {
   3.642537296025344*^9, 3.6425373967124853`*^9}, {3.6425375490676994`*^9, 
   3.6425375491776996`*^9}, {3.6428863768161287`*^9, 
   3.6428863815353985`*^9}, {3.642886462952055*^9, 3.642886463968113*^9}, {
   3.642939120294883*^9, 3.642939135121731*^9}, {3.64293926676126*^9, 
   3.6429392677223153`*^9}, {3.6429393414655333`*^9, 
   3.6429393421455717`*^9}, {3.6430564615444183`*^9, 
   3.6430564648156056`*^9}, {3.678556682570169*^9, 3.678556741576544*^9}, {
   3.6785567816588364`*^9, 3.6785567968567057`*^9}, {3.6785568671847286`*^9, 
   3.6785568723050213`*^9}, 3.678556966680419*^9, {3.6785646596314306`*^9, 
   3.6785646597424374`*^9}, {3.678564878566953*^9, 3.6785648786709595`*^9}, {
   3.6785659857122784`*^9, 3.678565985832285*^9}, {3.6785672838895297`*^9, 
   3.678567283976535*^9}, {3.678567339273698*^9, 3.678567339384704*^9}, {
   3.6786298277868357`*^9, 3.6786298278828416`*^9}, {3.6786455094707775`*^9, 
   3.6786455421916485`*^9}, {3.6786456047912292`*^9, 3.678645677591393*^9}, {
   3.6786458595918026`*^9, 3.6786458778638477`*^9}, {3.6786459520160894`*^9, 
   3.67864598315987*^9}, {3.6786460706318736`*^9, 3.6786460973284006`*^9}, {
   3.67864615028743*^9, 
   3.6786461816002207`*^9}},ExpressionUUID->"ed630347-7f95-44a6-bb2f-\
3550dc8d87c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["LinkTracks2", "Subsection",
 CellChangeTimes->{{3.6786311154964886`*^9, 
  3.678631122754904*^9}},ExpressionUUID->"a574a8cc-8d68-46b9-a07d-\
2fcc4a26f001"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "get", " ", "rid", " ", "of", " ", "tracks", " ", "which", " ", "last", 
    " ", "only", " ", "1", " ", "or", " ", "2", " ", "frame", 
    RowBox[{"(", "s", ")"}], " ", "and", " ", "re"}], "-", 
   RowBox[{"assign", " ", "consecutive", " ", "track", " ", "numbers"}]}], 
  " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6786451804919605`*^9, 
  3.6786452852309513`*^9}},ExpressionUUID->"775a161a-6cf7-41f2-90a9-\
c3d74e98f9ba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LinkTracks2", "[", 
   RowBox[{"testgreenP_", ",", "dist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "list1", ",", "list2", ",", "listResult", ",", "listResultFrame", ",", 
      "listResultTrack", ",", "listResultTrackL"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"list1", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", 
           RowBox[{
           "testgreenP", "\[LeftDoubleBracket]", "1", 
            "\[RightDoubleBracket]"}]}]}], ",", 
         RowBox[{"Sort", "@", 
          RowBox[{
          "testgreenP", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list1", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Length", "@", "list1"}], ",", "list1"}], "}"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"list2", "=", 
      RowBox[{"testgreenP", "\[LeftDoubleBracket]", 
       RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"listResult", "=", 
      RowBox[{"FoldList", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"PairConnect4", "[", 
          RowBox[{"#1", ",", "#2", ",", "dist"}], "]"}], "&"}], ",", "list1", 
        ",", "list2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listResultFrame", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Insert", "[", 
         RowBox[{
          RowBox[{
          "listResult", "\[LeftDoubleBracket]", "i", 
           "\[RightDoubleBracket]"}], ",", "i", ",", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"2", ",", "j", ",", "2", ",", "1"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"j", ",", "1", ",", 
              RowBox[{"Length", "@", 
               RowBox[{"listResult", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ",", 
              "1"}], "}"}]}], "]"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "listResult"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"listResultTrack", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"listResultFrame", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], ",", 
        "First"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listResultTrackL", "=", 
      RowBox[{"Extract", "[", 
       RowBox[{"listResultTrack", ",", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Length", "/@", "listResultTrack"}], ",", 
          RowBox[{"x_", "/;", 
           RowBox[{"x", ">", "2"}]}]}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"listResultTrackL", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "listResultTrackL"}]}]}], ";", 
     "\[IndentingNewLine]", "listResultTrackL"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{
  3.678645143510845*^9, {3.6786462319861026`*^9, 3.6786462430877376`*^9}, {
   3.678646706939268*^9, 3.678646782449587*^9}, {3.67864688984873*^9, 
   3.678646931857133*^9}, 3.6786469851691823`*^9, {3.6786471294484344`*^9, 
   3.6786471353687735`*^9}, {3.678648850050847*^9, 
   3.6786488527139997`*^9}},ExpressionUUID->"555fa2e2-7988-4b32-93e4-\
1a61f7422b6f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Relinking", "Subsection",
 CellChangeTimes->{{3.6429485555685496`*^9, 
  3.642948561607895*^9}},ExpressionUUID->"0645c2ab-1663-4114-a7c5-\
706b2e8c65bf"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "Only", " ", "the", " ", "longest", " ", "path", " ", "will", " ", "be", 
   " ", "taken", " ", "for", " ", "the", " ", "last", " ", "frame", " ", "if",
    " ", "the", " ", "track", " ", "split", " ", "in", " ", "the", " ", 
   "middle"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.6430559206934834`*^9, 3.6430559317251143`*^9}, {
  3.6431167430053205`*^9, 
  3.6431168098051414`*^9}},ExpressionUUID->"bbceb9de-a1a5-4524-9288-\
96dc67dd611e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Relinking", "[", 
   RowBox[{
   "sortedbyframe_", ",", "sortedbytrack_", ",", "gap_", ",", "distance_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "ftrackList", ",", "ltrackList", ",", "linkinglist", ",", "mytrack", ",",
       "mytrackN", ",", "myt", ",", "mypos", ",", "newrange", ",", "flag", 
      ",", "targetFrame", ",", "targetTracks", ",", "candidateTracks", ",", 
      "closestTrack", ",", "out", ",", "newlinkinglist", ",", 
      "newsortedbytrack", ",", "oldtrackN", ",", "newtrackN", ",", 
      "newsortedbyframe", ",", "oldtrackPos"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{"(*", " ", 
     RowBox[{
     "extracting", " ", "the", " ", "begining", " ", "and", " ", "the", " ", 
      "ending", " ", "of", " ", "all", " ", "tracks"}], " ", "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ftrackList", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"First", "/@", 
          RowBox[{
          "sortedbytrack", "\[LeftDoubleBracket]", "All", 
           "\[RightDoubleBracket]"}]}], ")"}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ftrackList", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"ftrackList", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{"x", "\[LeftDoubleBracket]", 
           RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "\[LessEqual]",
           "2"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"ltrackList", "=", 
      RowBox[{"SortBy", "[", 
       RowBox[{
        RowBox[{"Last", "/@", 
         RowBox[{
         "sortedbytrack", "\[LeftDoubleBracket]", "All", 
          "\[RightDoubleBracket]"}]}], ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"#", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{
           "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
          "}"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "relinking", " ", "tracks", " ", "and", " ", "making", " ", "a", " ", 
       "list"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"linkinglist", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytrack", "=", 
         RowBox[{
         "ftrackList", "\[LeftDoubleBracket]", "i", 
          "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mytrackN", "=", 
         RowBox[{
         "mytrack", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"myt", "=", 
         RowBox[{"mytrack", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mypos", "=", 
         RowBox[{"mytrack", "\[LeftDoubleBracket]", 
          RowBox[{"2", ",", 
           RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newrange", "=", 
         RowBox[{
          RowBox[{"Range", "[", 
           RowBox[{
            RowBox[{"myt", "-", "gap", "-", "1"}], ",", 
            RowBox[{"myt", "-", "2"}], ",", "1"}], "]"}], "//", "Reverse"}]}],
         ";", "\[IndentingNewLine]", 
        RowBox[{"flag", "=", "0"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Table", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{
           RowBox[{"targetFrame", "=", 
            RowBox[{
            "newrange", "\[LeftDoubleBracket]", "j", 
             "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"flag", "\[Equal]", "0"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"targetTracks", "=", 
               RowBox[{"Extract", "[", 
                RowBox[{"ltrackList", ",", 
                 RowBox[{"Position", "[", 
                  RowBox[{
                   RowBox[{"ltrackList", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2", ",", "1"}], 
                    "\[RightDoubleBracket]"}], ",", "targetFrame"}], "]"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"candidateTracks", "=", 
               RowBox[{"Select", "[", 
                RowBox[{"targetTracks", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"EuclideanDistance", "[", 
                    RowBox[{
                    RowBox[{"#", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", 
                    RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], 
                    ",", "mypos"}], "]"}], "<", "distance"}], "&"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "candidateTracks", "]"}], ">", "0"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Length", "[", "candidateTracks", "]"}], 
                   "\[Equal]", "1"}], ",", 
                  RowBox[{
                   RowBox[{"out", "=", 
                    RowBox[{"{", 
                    RowBox[{"mytrackN", ",", 
                    RowBox[{"candidateTracks", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "}"}]}], ";", 
                   RowBox[{
                    RowBox[{"ltrackList", "\[LeftDoubleBracket]", 
                    RowBox[{"mytrackN", ",", "1"}], "\[RightDoubleBracket]"}],
                     "=", 
                    RowBox[{"candidateTracks", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                   RowBox[{"flag", "=", "1"}], ";"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"closestTrack", "=", 
                    RowBox[{"Extract", "[", 
                    RowBox[{"candidateTracks", ",", 
                    RowBox[{"Position", "[", 
                    RowBox[{
                    RowBox[{"x", "=", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"EuclideanDistance", "[", 
                    RowBox[{"#", ",", "mypos"}], "]"}], "&"}], "/@", 
                    RowBox[{"candidateTracks", "\[LeftDoubleBracket]", 
                    RowBox[{"All", ",", "2", ",", 
                    RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}]}]}],
                     ",", 
                    RowBox[{"Min", "[", "x", "]"}]}], "]"}]}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"out", "=", 
                    RowBox[{"{", 
                    RowBox[{"mytrackN", ",", 
                    RowBox[{"closestTrack", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], 
                    "}"}]}], ";", 
                   RowBox[{
                    RowBox[{"ltrackList", "\[LeftDoubleBracket]", 
                    RowBox[{"mytrackN", ",", "1"}], "\[RightDoubleBracket]"}],
                     "=", 
                    RowBox[{"closestTrack", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
                   RowBox[{"flag", "=", "1"}], ";"}]}], "]"}], ",", 
                RowBox[{
                 RowBox[{"out", "=", 
                  RowBox[{"{", "}"}]}], ";", 
                 RowBox[{"flag", "=", "0"}]}]}], "]"}]}]}], "]"}], ";"}], 
          "\[IndentingNewLine]", ",", 
          RowBox[{"{", 
           RowBox[{"j", ",", "1", ",", 
            RowBox[{"Length", "[", "newrange", "]"}], ",", "1"}], "}"}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"linkinglist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"linkinglist", ",", "out"}], "]"}]}], ";"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ftrackList", "]"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
      "convert", " ", "old", " ", "track", " ", "numbers", " ", "to", " ", 
       "new", " ", "track", " ", "numbers", " ", "in", " ", 
       "\"\<sortedbytrack\>\"", " ", "and", " ", "\"\<sortedbyframe\>\""}], 
      " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newlinkinglist", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"linkinglist", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newsortedbytrack", "=", "sortedbytrack"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"newsortedbyframe", "=", "sortedbyframe"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"oldtrackN", "=", 
         RowBox[{"newlinkinglist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newtrackN", "=", 
         RowBox[{"newlinkinglist", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newsortedbytrack", "\[LeftDoubleBracket]", 
          RowBox[{"oldtrackN", ",", "All", ",", "1"}], 
          "\[RightDoubleBracket]"}], "=", "newtrackN"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"oldtrackPos", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"Position", "[", 
              RowBox[{
               RowBox[{"newsortedbyframe", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2", ",", "All", ",", "1"}], 
                "\[RightDoubleBracket]"}], ",", "oldtrackN"}], "]"}], "//", 
             "Flatten"}], "//", 
            RowBox[{
             RowBox[{"Riffle", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "1"}], "}"}]}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"Append", "[", 
             RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"Partition", "[", 
            RowBox[{"#", ",", "4"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"newsortedbyframe", "=", 
         RowBox[{"ReplacePart", "[", 
          RowBox[{"newsortedbyframe", ",", 
           RowBox[{"oldtrackPos", " ", "\[Rule]", " ", "newtrackN"}]}], 
          "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "newlinkinglist", "]"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"newsortedbytrack", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"newsortedbytrack", "//", 
         RowBox[{
          RowBox[{"Flatten", "[", 
           RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
       RowBox[{
        RowBox[{"SplitBy", "[", 
         RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "newsortedbyframe", ",", "newsortedbytrack", ",", "newlinkinglist"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.643045022540145*^9, 3.643045216993267*^9}, {
   3.6430452488580894`*^9, 3.643045276385664*^9}, {3.6430453376271667`*^9, 
   3.6430453986246557`*^9}, {3.6430569720696187`*^9, 
   3.6430570220844793`*^9}, {3.64305706195576*^9, 3.6430571061472874`*^9}, {
   3.6430573628279686`*^9, 3.6430573771327868`*^9}, {3.643057427907691*^9, 
   3.6430574393803473`*^9}, {3.6431331820155783`*^9, 
   3.6431332581189313`*^9}, {3.643136544192884*^9, 3.643136634932074*^9}, 
   3.6431370498418055`*^9, {3.643137451493778*^9, 3.6431374541959333`*^9}, {
   3.643137698250892*^9, 3.6431377016580873`*^9}, {3.643138000046154*^9, 
   3.6431380084446344`*^9}, {3.643138079340689*^9, 3.6431380961476507`*^9}, {
   3.6431381850367346`*^9, 3.643138198147485*^9}, {3.643139144227597*^9, 
   3.6431393006865463`*^9}, {3.6431398221283712`*^9, 
   3.6431398241664877`*^9}, {3.6431407049758673`*^9, 
   3.6431407055348988`*^9}, {3.643471534892849*^9, 3.643471536684952*^9}, {
   3.643471617238559*^9, 3.6434716488853693`*^9}, {3.6434717183183403`*^9, 
   3.6434717592526817`*^9}, 
   3.649472570771883*^9},ExpressionUUID->"32acaefb-6e3a-4a22-a420-\
415ae8e7ea7f"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"sortedbyframe", ",", "sortedbytrack"}], "}"}], "=", 
    RowBox[{"LinkTracks", "[", 
     RowBox[{"testgreenP", ",", "1"}], "]"}]}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.643140617018836*^9, 3.6431406198890004`*^9}, {
  3.648304096465707*^9, 
  3.6483040988408427`*^9}},ExpressionUUID->"28281faf-1d84-46ef-9608-\
ea1dd370a52a"]
}, Closed]],

Cell[CellGroupData[{

Cell["ParticleFitting", "Subsection",
 CellChangeTimes->{{3.6515211610224323`*^9, 
  3.651521163990602*^9}},ExpressionUUID->"c42d9c91-57cd-4a01-92b8-\
e3a4c6d99594"],

Cell["\<\
When raw images are used for fitting, avgFrameN_ is used to shift frames such \
that the middle frame of running average is used for fitting.
For example when avgFrameN is 3, the centroid at the first time point in \
mylongtrack is determined from the average image of frame 1, 2 and 3. So \
frame 2 should be fitted with this initial guess.
When running averaged images are used for fitting, enter \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] at the last input instead of \
avgFrameN.\
\>", "Text",
 CellChangeTimes->{{3.6557286003930864`*^9, 
  3.655728889600628*^9}},ExpressionUUID->"bca9aaac-2123-45b6-a7a0-\
46c70793f2c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFittingSee", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtrack_", ",", "pad_", ",", 
    "myTrimSize_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempTime", ",", "tempCenter", ",", "frameShift"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"tempTime", "=", 
        RowBox[{"mylongtrack", "\[LeftDoubleBracket]", 
         RowBox[{"t", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tempCenter", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"mylongtrack", "\[LeftDoubleBracket]", 
          RowBox[{"t", ",", "2", ",", 
           RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"frameShift", "=", 
        RowBox[{"Ceiling", "[", 
         RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ImageTrim", "[", 
        RowBox[{
         RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
          RowBox[{"channel", ",", 
           RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"tempCenter", "-", "pad"}], ",", 
           RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}], "]"}]}],
       "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "1", ",", 
        RowBox[{"Length", "[", "mylongtrack", "]"}], ",", "1"}], "}"}]}], 
     "]"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
  3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
  3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
  3.655581282500985*^9, 3.6555813891080823`*^9}, {3.6555814330835977`*^9, 
  3.65558148994785*^9}, {3.655581570579462*^9, 3.655581605779475*^9}, {
  3.655581714731707*^9, 3.6555817416352463`*^9}, {3.6556456138785295`*^9, 
  3.6556456600301685`*^9}, {3.655645691237954*^9, 3.6556457099260225`*^9}, {
  3.655646442718936*^9, 3.6556464690944448`*^9}, {3.6556603618410645`*^9, 
  3.655660361961071*^9}, {3.6557217222026763`*^9, 3.6557218284757547`*^9}, {
  3.6557218930834503`*^9, 
  3.6557219581311707`*^9}},ExpressionUUID->"0cc9633a-36bd-4ff1-a57c-\
b0055c864eaf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFitting", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtracks_", ",", "pad_", ",", 
    "myTrimSize_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myAllParametersEach", ",", "myTrimImgs", ",", "myOrigins", ",", 
      "tempTime", ",", "tempCenter", ",", "frameShift", ",", "myImgs", ",", 
      "myData", ",", "myFits", ",", "tempData3D", ",", "myFit", ",", "myPos", 
      ",", "myPosImgCoordn", ",", "myAbsPos", ",", "myIntBGSigma", ",", 
      "myPos90Conf", ",", "myPos90ConfImgCoordn", ",", "myAbsPos90Conf", ",", 
      "myIntBGSigma90Conf", ",", "myFitData", ",", "CC", ",", "A", ",", "x0", 
      ",", "a", ",", "y0", ",", "b", ",", "x", ",", "y"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myAllParametersEach", ",", "myPos", ",", "myFitData"}], "}"}],
       "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tempTime", "=", 
                RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "t", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tempCenter", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "t", ",", "2", ",", 
                   RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"frameShift", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"myImgs", "=", 
                  RowBox[{"ImageTrim", "[", 
                   RowBox[{
                    RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                    RowBox[{"channel", ",", 
                    RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tempCenter", "-", "pad"}], ",", 
                    RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"myOrigins", "=", 
                  RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "mylongtracks", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], 
             "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myData", "=", 
           RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myFits", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"tempData3D", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "#1"}], "}"}], "&"}], ",", 
                   RowBox[{
                   "myData", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Clear", "[", 
               RowBox[{
               "CC", ",", "A", ",", "x0", ",", "a", ",", "y0", ",", "b", ",", 
                "x", ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myFit", "=", 
               RowBox[{"NonlinearModelFit", "[", 
                RowBox[{"tempData3D", ",", 
                 RowBox[{"CC", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"CC", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"A", ",", 
                    RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                    ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"a", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"myFit", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
                 "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Rearrange", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"myPos", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "6"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPosImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myAbsPos", "=", 
           RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBGSigma", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2", ",", "5", ",", "7"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "5"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90ConfImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myAbsPos90Conf", "=", 
           RowBox[{"myPos90ConfImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBGSigma90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1", ",", "4", ",", "6"}], "}"}]}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Output", " ", "the", " ", "paramters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myAllParametersEach", "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "2", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", "myAbsPos", ",", 
                 "myIntBGSigma", ",", "myAbsPos90Conf", ",", 
                 "myIntBGSigma90Conf", ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "3"}], 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}]}], ",", "myPos", ",",
             "myData"}], "}"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "mylongtracks", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myAllParametersEach", "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", "myPos", ",", 
       "myFitData"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
   3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
   3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
   3.655581282500985*^9, 3.6555813891080823`*^9}, {3.65565276167636*^9, 
   3.655652802204678*^9}, {3.655660380715144*^9, 3.6556603808751535`*^9}, {
   3.655721972211976*^9, 3.655721995987336*^9}, {3.655834242142449*^9, 
   3.655834341613138*^9}, {3.6561793737004633`*^9, 3.656179378164719*^9}, 
   3.6838989198137875`*^9},ExpressionUUID->"84476b62-7e69-4919-891d-\
50ece1b96d3f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFittingFixedSigma", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtracks_", ",", "pad_", ",", 
    "myTrimSize_", ",", "sigma_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myAllParametersEach", ",", "myTrimImgs", ",", "myOrigins", ",", 
      "tempTime", ",", "tempCenter", ",", "frameShift", ",", "myImgs", ",", 
      "myData", ",", "myFits", ",", "tempData3D", ",", "myFit", ",", "myPos", 
      ",", "myPosImgCoordn", ",", "myAbsPos", ",", "myIntBG", ",", 
      "myPos90Conf", ",", "myPos90ConfImgCoordn", ",", "myAbsPos90Conf", ",", 
      "myIntBG90Conf", ",", "myFitData", ",", "CC", ",", "A", ",", "x0", ",", 
      "y0", ",", "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myAllParametersEach", ",", "myPos", ",", "myFitData"}], "}"}],
       "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tempTime", "=", 
                RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "t", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tempCenter", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "t", ",", "2", ",", 
                   RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"frameShift", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"myImgs", "=", 
                  RowBox[{"ImageTrim", "[", 
                   RowBox[{
                    RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                    RowBox[{"channel", ",", 
                    RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tempCenter", "-", "pad"}], ",", 
                    RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"myOrigins", "=", 
                  RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "mylongtracks", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], 
             "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myData", "=", 
           RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myFits", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"tempData3D", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "#1"}], "}"}], "&"}], ",", 
                   RowBox[{
                   "myData", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Clear", "[", 
               RowBox[{
               "CC", ",", "A", ",", "x0", ",", "y0", ",", "x", ",", "y"}], 
               "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myFit", "=", 
               RowBox[{"NonlinearModelFit", "[", 
                RowBox[{"tempData3D", ",", 
                 RowBox[{"CC", "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"CC", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"A", ",", 
                    RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                    ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"myFit", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
                 "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Rearrange", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"myPos", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPosImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myAbsPos", "=", 
           RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90ConfImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myAbsPos90Conf", "=", 
           RowBox[{"myPos90ConfImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Output", " ", "the", " ", "paramters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myAllParametersEach", "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "2", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", "myAbsPos", ",", "myIntBG", 
                 ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"sigma", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "2"}], 
                    "}"}]}], "]"}], ",", "myAbsPos90Conf", ",", 
                 "myIntBG90Conf", ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "4"}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "3"}], 
                  "\[RightDoubleBracket]"}]}], "}"}]}]}]}], ",", "myPos", ",",
             "myData"}], "}"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "mylongtracks", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myAllParametersEach", "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", "myPos", ",", 
       "myFitData"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
   3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
   3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
   3.655581282500985*^9, 3.6555813891080823`*^9}, {3.65565276167636*^9, 
   3.655652802204678*^9}, {3.655660380715144*^9, 3.6556603808751535`*^9}, {
   3.655721972211976*^9, 3.655721995987336*^9}, {3.6558217347800684`*^9, 
   3.655821738523283*^9}, {3.655821772268213*^9, 3.6558218199079375`*^9}, {
   3.6558220477879715`*^9, 3.655822098179854*^9}, {3.655822176491333*^9, 
   3.6558222037238903`*^9}, {3.6558251922148223`*^9, 
   3.6558251961030445`*^9}, {3.6558252647589717`*^9, 
   3.6558252785097585`*^9}, {3.655825327463558*^9, 3.65582555844777*^9}, {
   3.6558273393006287`*^9, 3.6558273978079753`*^9}, {3.655834316381695*^9, 
   3.655834318069792*^9}, {3.6558443721728535`*^9, 3.6558444445739946`*^9}, {
   3.655844977494476*^9, 3.6558449788855553`*^9}, {3.6558453738731475`*^9, 
   3.655845391423151*^9}, {3.663965324194535*^9, 3.663965335002153*^9}, 
   3.663965615067172*^9, {3.6838988788284435`*^9, 
   3.68389888575784*^9}},ExpressionUUID->"cafcb1f5-8bda-4b1b-ad59-\
a981366c1ccb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ParticleFittingFixedSigmaInclinedBG", "[", 
   RowBox[{
   "myColMovie_", ",", "channel_", ",", "mylongtracks_", ",", "pad_", ",", 
    "myTrimSize_", ",", "sigma_", ",", "avgFrameN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myAllParametersEach", ",", "myTrimImgs", ",", "myOrigins", ",", 
      "tempTime", ",", "tempCenter", ",", "frameShift", ",", "myImgs", ",", 
      "myData", ",", "myFits", ",", "tempData3D", ",", "myFit", ",", "myPos", 
      ",", "myPosImgCoordn", ",", "myAbsPos", ",", "myIntBG", ",", 
      "myInclinedBG", ",", "myPos90Conf", ",", "myPos90ConfImgCoordn", ",", 
      "myAbsPos90Conf", ",", "myIntBG90Conf", ",", "myInclinedBG90conf", ",", 
      "myFitData", ",", "CC", ",", "BGa", ",", "BGb", ",", "A", ",", "x0", 
      ",", "y0", ",", "x", ",", "y"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myAllParametersEach", ",", "myPos", ",", "myFitData"}], "}"}],
       "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"{", 
            RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
           RowBox[{
            RowBox[{"Table", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{
               RowBox[{"tempTime", "=", 
                RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                 RowBox[{"j", ",", "t", ",", "2", ",", "1"}], 
                 "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"tempCenter", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "t", ",", "2", ",", 
                   RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "]"}]}], 
               ";", "\[IndentingNewLine]", 
               RowBox[{"frameShift", "=", 
                RowBox[{"Ceiling", "[", 
                 RowBox[{"avgFrameN", "/", "2"}], "]"}]}], ";", 
               "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"myImgs", "=", 
                  RowBox[{"ImageTrim", "[", 
                   RowBox[{
                    RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                    RowBox[{"channel", ",", 
                    RowBox[{"tempTime", "+", "frameShift", "-", "1"}]}], 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"tempCenter", "-", "pad"}], ",", 
                    RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"myOrigins", "=", 
                  RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
              "\[IndentingNewLine]", ",", 
              RowBox[{"{", 
               RowBox[{"t", ",", "1", ",", 
                RowBox[{"Length", "[", 
                 RowBox[{
                 "mylongtracks", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], 
             "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myData", "=", 
           RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myFits", "=", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"tempData3D", "=", 
               RowBox[{"Flatten", "[", 
                RowBox[{
                 RowBox[{"MapIndexed", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    "#2", "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}], ",", "#1"}], "}"}], "&"}], ",", 
                   RowBox[{
                   "myData", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";",
               "\[IndentingNewLine]", 
              RowBox[{"Clear", "[", 
               RowBox[{
               "CC", ",", "BGa", ",", "BGb", ",", "A", ",", "x0", ",", "y0", 
                ",", "x", ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"myFit", "=", 
               RowBox[{"NonlinearModelFit", "[", 
                RowBox[{"tempData3D", ",", 
                 RowBox[{"CC", " ", "+", " ", 
                  RowBox[{"BGa", " ", "x"}], " ", "+", " ", 
                  RowBox[{"BGb", " ", "y"}], "+", 
                  RowBox[{"A", " ", 
                   RowBox[{"E", "^", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
                 ",", "\[IndentingNewLine]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"CC", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"A", ",", 
                    RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                    ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"x0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"y0", ",", 
                    RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"BGa", ",", "0.01"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"BGb", ",", "0.01"}], "}"}]}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"myFit", "[", 
               RowBox[{"{", 
                RowBox[{
                "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
                 "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
             "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Rearrange", " ", "the", " ", "parameters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"myPos", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"4", ",", "5"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPosImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myAbsPos", "=", 
           RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "2"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myInclinedBG", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
             RowBox[{"{", 
              RowBox[{"6", ",", "7"}], "}"}], ",", "2"}], 
            "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"3", ",", "4"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myPos90ConfImgCoordn", "=", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", 
               "0.5"}], ",", 
              RowBox[{"myTrimSize", "-", 
               RowBox[{"myPos90Conf", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
               "0.5"}]}], "}"}], "//", "Thread"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], 
           "=", 
           RowBox[{"myPos90ConfImgCoordn", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "2", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myAbsPos90Conf", "=", 
           RowBox[{"myPos90ConfImgCoordn", "+", "myOrigins"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"myIntBG90Conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"myInclinedBG90conf", "=", 
           RowBox[{"myFits", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "3", ",", 
             RowBox[{"{", 
              RowBox[{"5", ",", "6"}], "}"}]}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"(*", " ", 
           RowBox[{"Output", " ", "the", " ", "paramters"}], " ", "*)"}], 
          "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myAllParametersEach", "=", 
             RowBox[{"Flatten", "/@", 
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "2", ",", "1"}], 
                  "\[RightDoubleBracket]"}], ",", "myAbsPos", ",", "myIntBG", 
                 ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"sigma", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "2"}], 
                    "}"}]}], "]"}], ",", "myAbsPos90Conf", ",", 
                 "myIntBG90Conf", ",", 
                 RowBox[{"ConstantArray", "[", 
                  RowBox[{"0", ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Length", "[", "myFits", "]"}], ",", "4"}], 
                    "}"}]}], "]"}], ",", 
                 RowBox[{"mylongtracks", "\[LeftDoubleBracket]", 
                  RowBox[{"j", ",", "All", ",", "3"}], 
                  "\[RightDoubleBracket]"}], ",", "myInclinedBG", ",", 
                 "myInclinedBG90conf"}], "}"}]}]}]}], ",", "myPos", ",", 
            "myData"}], "}"}]}], "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", 
           RowBox[{"Length", "[", "mylongtracks", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myAllParametersEach", "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], ",", "myPos", ",", 
       "myFitData"}], "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6515211934142847`*^9, 3.651521280519267*^9}, {
   3.6515213469590673`*^9, 3.6515214200482473`*^9}, {3.651521518984906*^9, 
   3.6515218293366575`*^9}, {3.6515218704650097`*^9, 3.651521919528816*^9}, {
   3.655581282500985*^9, 3.6555813891080823`*^9}, {3.65565276167636*^9, 
   3.655652802204678*^9}, {3.655660380715144*^9, 3.6556603808751535`*^9}, {
   3.655721972211976*^9, 3.655721995987336*^9}, {3.6558217347800684`*^9, 
   3.655821738523283*^9}, {3.655821772268213*^9, 3.6558218199079375`*^9}, {
   3.6558220477879715`*^9, 3.655822098179854*^9}, {3.655822176491333*^9, 
   3.6558222037238903`*^9}, {3.6558251922148223`*^9, 
   3.6558251961030445`*^9}, {3.6558252647589717`*^9, 
   3.6558252785097585`*^9}, {3.655825327463558*^9, 3.65582555844777*^9}, {
   3.6558273393006287`*^9, 3.6558273978079753`*^9}, {3.655834316381695*^9, 
   3.655834318069792*^9}, {3.6558443721728535`*^9, 3.6558444445739946`*^9}, {
   3.655844977494476*^9, 3.6558449788855553`*^9}, {3.6558453738731475`*^9, 
   3.655845391423151*^9}, {3.663965485538763*^9, 3.6639655359626474`*^9}, 
   3.6639656173703036`*^9, {3.6639657258505087`*^9, 3.663965767234875*^9}, {
   3.6639658125564675`*^9, 3.6639658154426327`*^9}, {3.6639660619637327`*^9, 
   3.6639661631625214`*^9}, {3.663966219218727*^9, 3.6639662361706967`*^9}, {
   3.6639663351493583`*^9, 3.663966338347541*^9}, 
   3.68389895482279*^9},ExpressionUUID->"f1c6b078-19c7-4e9e-a9cf-\
057dfe347022"]
}, Closed]],

Cell[CellGroupData[{

Cell["BeadsFitting", "Subsection",
 CellChangeTimes->{{3.651523106216691*^9, 
  3.6515231119520187`*^9}},ExpressionUUID->"205f38f0-0344-4699-b876-\
6ee46702a525"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsFitting", "[", 
   RowBox[{"myRefBeadsImg_", ",", "myPosGuess_", ",", "pad_"}], "]"}], ":=", 
  "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myTrimSize", ",", "myTrimImgs", ",", "myOrigins", ",", "tempCenter", 
      ",", "myImgs", ",", "myData", ",", "myFits", ",", "tempData3D", ",", 
      "myFit", ",", "CC", ",", "A", ",", "x", ",", "x0", ",", "a", ",", "y", 
      ",", "y0", ",", "b", ",", "myPos", ",", "myPosImgCoordn", ",", 
      "myAbsPos"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimSize", "=", 
      RowBox[{
       RowBox[{"2", "*", "pad"}], "+", "1"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myTrimImgs", ",", "myOrigins"}], "}"}], "=", 
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tempCenter", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{
            "myPosGuess", "\[LeftDoubleBracket]", "i", 
             "\[RightDoubleBracket]"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"myImgs", "=", 
             RowBox[{"ImageTrim", "[", 
              RowBox[{"myRefBeadsImg", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenter", "-", "pad"}], ",", 
                 RowBox[{"tempCenter", "+", "pad", "-", "0.1"}]}], "}"}]}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"myOrigins", "=", 
             RowBox[{"tempCenter", "-", "pad", "-", "1"}]}]}], "}"}]}], 
         "\[IndentingNewLine]", ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "myPosGuess", "]"}], ",", "1"}], "}"}]}], 
        "]"}], "//", "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myData", "=", 
      RowBox[{"ImageData", "/@", "myTrimImgs"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myFits", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempData3D", "=", 
          RowBox[{"Flatten", "[", 
           RowBox[{
            RowBox[{"MapIndexed", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
                  ",", 
                 RowBox[{
                 "#2", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
                  ",", "#1"}], "}"}], "&"}], ",", 
              RowBox[{
              "myData", "\[LeftDoubleBracket]", "i", 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Clear", "[", 
          RowBox[{
          "CC", ",", "A", ",", "x0", ",", "a", ",", "y0", ",", "b", ",", "x", 
           ",", "y"}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"myFit", "=", 
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{"tempData3D", ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", 
                RowBox[{"tempData3D", "\[LeftDoubleBracket]", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", "*", "pad", "*", 
                    RowBox[{"(", 
                    RowBox[{"pad", "+", "1"}], ")"}]}], "+", "1"}], ")"}], 
                  ",", "3"}], "\[RightDoubleBracket]"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", 
                RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", 
                RowBox[{"pad", "+", "1"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"myFit", "[", 
          RowBox[{"{", 
           RowBox[{
           "\"\<ParameterTable\>\"", ",", "\"\<ANOVATable\>\"", ",", 
            "\"\<ParameterConfidenceIntervals\>\""}], "}"}], "]"}]}], 
        "\[IndentingNewLine]", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "myData", "]"}], ",", "1"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myPos", "=", 
      RowBox[{"myFits", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "1", ",", "1", ",", "1", ",", 
        RowBox[{"{", 
         RowBox[{"4", ",", "6"}], "}"}], ",", "2"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myPosImgCoordn", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"myPos", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "-", "0.5"}],
          ",", 
         RowBox[{"myTrimSize", "-", 
          RowBox[{"myPos", "\[LeftDoubleBracket]", 
           RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "+", 
          "0.5"}]}], "}"}], "//", "Thread"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myAbsPos", "=", 
      RowBox[{"myPosImgCoordn", "+", "myOrigins"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6483906843449163`*^9, 3.6483906948281345`*^9}, {
  3.6483907313009987`*^9, 3.64839074897783*^9}, {3.648390922446535*^9, 
  3.648391064072584*^9}, {3.6483911220930867`*^9, 3.648391274564155*^9}, {
  3.6483913389338684`*^9, 3.648391349604287*^9}, {3.648391401635379*^9, 
  3.6483914032577815`*^9}},ExpressionUUID->"2b128334-8e67-4934-bcb3-\
cd02d34c9030"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsSorting", "[", 
   RowBox[{"myRedAbsPos_", ",", "myGreenAbsPos_", ",", "dist_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myRedAbsPosSort", ",", "distanceOriginal", ",", "idx", ",", 
      "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
     "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myRedAbsPosSort", "=", 
      RowBox[{
       RowBox[{"Nearest", "[", 
        RowBox[{"myRedAbsPos", ",", "myGreenAbsPos"}], "]"}], "//", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distanceOriginal", "=", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"Thread", "@", 
        RowBox[{"{", 
         RowBox[{"myGreenAbsPos", ",", "myRedAbsPosSort"}], "}"}]}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idx", "=", 
      RowBox[{"Position", "[", 
       RowBox[{"distanceOriginal", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{"x", ">", "dist"}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
       "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"#", ",", "idx"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{
        "myRedAbsPosSort", ",", "myGreenAbsPos", ",", "distanceOriginal"}], 
        "}"}]}]}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6483909446005745`*^9, 3.648390951901387*^9}, {
  3.6483915027763567`*^9, 3.648391714274162*^9}, {3.6515238560495787`*^9, 
  3.6515239184811497`*^9}},ExpressionUUID->"72901dd3-65d6-4f25-bb18-\
172497da0fe2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsTransform", "[", 
   RowBox[{"myRedAbsPos_", ",", "myGreenAbsPos_", ",", "dist_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw", ",", 
      "myTfFuncError", ",", "myTfFunc", ",", "myRedCorrPos", ",", 
      "distanceCorrected"}], "}"}], ",", "\[IndentingNewLine]", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
       "}"}], "=", 
      RowBox[{"BeadsSorting", "[", 
       RowBox[{"myRedAbsPos", ",", "myGreenAbsPos", ",", "dist"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myTfFuncError", ",", "myTfFunc"}], "}"}], "=", 
      RowBox[{"FindGeometricTransform", "[", 
       RowBox[{"myGreenAbsPos4Calc", ",", "myRedAbsPos4Calc"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myRedCorrPos", "=", 
      RowBox[{"myTfFunc", "[", "myRedAbsPos4Calc", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distanceCorrected", "=", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"Thread", "@", 
        RowBox[{"{", 
         RowBox[{"myGreenAbsPos4Calc", ",", "myRedCorrPos"}], "}"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
      "myTfFuncError", ",", "myTfFunc", ",", "distanceRaw", ",", 
       "distanceCorrected"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.648392120969268*^9, 3.648392151951922*^9}, {
  3.6483921960239997`*^9, 3.6483921962424*^9}, {3.6484004568741035`*^9, 
  3.648400590161727*^9}, {3.648400991802699*^9, 3.6484010666779823`*^9}, {
  3.651523934337057*^9, 
  3.6515240057701426`*^9}},ExpressionUUID->"352e0049-ac94-4a2a-944e-\
f4f199093938"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BeadsCheck", "[", 
   RowBox[{"myRedAbsPos_", ",", "myGreenAbsPos_", ",", "dist_"}], "]"}], ":=",
   "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw", ",", 
      "myRedCorrPos", ",", "distanceCorrected"}], "}"}], ",", 
    "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "myRedAbsPos4Calc", ",", "myGreenAbsPos4Calc", ",", "distanceRaw"}], 
       "}"}], "=", 
      RowBox[{"BeadsSorting", "[", 
       RowBox[{"myRedAbsPos", ",", "myGreenAbsPos", ",", "dist"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myRedCorrPos", "=", 
      RowBox[{"myTfFunc", "[", "myRedAbsPos4Calc", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"distanceCorrected", "=", 
      RowBox[{"EuclideanDistance", "@@@", 
       RowBox[{"Thread", "@", 
        RowBox[{"{", 
         RowBox[{"myGreenAbsPos4Calc", ",", "myRedCorrPos"}], "}"}]}]}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Insert", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"distanceRaw", ",", "distanceCorrected"}], "}"}], "//", 
         "Transpose"}], ",", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Distance Before Correction\>\"", ",", 
          "\"\<Distance After Correction\>\""}], "}"}], ",", "1"}], "]"}], "//",
       "TableForm"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6484012753809195`*^9, 3.648401405682372*^9}, 
   3.6515236689298763`*^9, 3.6515237173296447`*^9, {3.651524011241455*^9, 
   3.6515240637694597`*^9}},ExpressionUUID->"47010940-a4f5-4cf6-ae53-\
59b05e014ad8"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
FindOverlapDistance[track1,track2,\[Tau]] (measures average distance between \
two tracks when they overlap in time for at least time \[Tau], otherwise \
outputs -1)\
\>", "Subsection",
 CellChangeTimes->{{3.6792547892990313`*^9, 3.6792548292263145`*^9}, {
  3.6792560996119766`*^9, 3.6792561534200544`*^9}, {3.679256196156499*^9, 
  3.679256207268134*^9}},ExpressionUUID->"387ca8f0-94a7-47d3-b1a2-\
e8d28bb12220"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindOverlapDist", "[", 
   RowBox[{"track1_", ",", "track2_", ",", "\[Tau]_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"t1", ",", "t2", ",", "ol", ",", "avgpos1", ",", "avgpos2"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"makes", " ", "tracks", " ", "have", " ", 
       RowBox[{"form", ":", " ", "t1"}]}], "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"track", "#"}], ",", "time1", ",", "x1", ",", "y1"}], "}"}],
         ",", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"track", "#"}], ",", "time2", ",", "x2", ",", "y2"}], 
          "}"}], " ", "..."}]}], "}"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"t1", "=", 
      RowBox[{
       RowBox[{"track1", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "7"}], "]"}], "&"}]}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"t2", "=", 
      RowBox[{
       RowBox[{"track2", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", "7"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{
       "The", " ", "following", " ", "just", " ", "sorts", " ", "by", " ", 
        "time", " ", "rather", " ", "than", " ", "track", " ", "#", " ", 
        "and", " ", 
        RowBox[{"splits", ".", " ", "If"}], " ", "the", " ", "two", " ", 
        "tracks", " ", "have", " ", "overlapping", " ", "time"}], ",", " ", 
       RowBox[{
       "then", " ", "the", " ", "split", " ", "will", " ", "contain", " ", 
        "2", " ", 
        RowBox[{"elements", ".", " ", "Thus"}]}], ",", " ", 
       RowBox[{
       "DeleteCases", " ", "eliminates", " ", "all", " ", "parts", " ", "of", 
        " ", "the", " ", "track", " ", "that", " ", "do", " ", "not", " ", 
        RowBox[{"overlap", ".", " ", "Finally"}]}], ",", " ", 
       RowBox[{
       "the", " ", "Transpose", " ", "command", " ", "gives", " ", "back", 
        " ", "a", " ", "list", " ", "of", " ", "overlapping", " ", "segments",
         " ", "of", " ", 
        RowBox[{"tracks", ":", " ", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"segment", " ", "from", " ", "t1"}], ",", " ", 
            RowBox[{"segment", " ", "from", " ", "t2"}]}], "}"}], " ", "so", 
          " ", "the", " ", "mean", " ", "can", " ", "be", " ", "computed", 
          " ", "for", " ", 
          RowBox[{"each", "."}]}]}]}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"ol", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"t1", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{
               "2", ",", "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                "7"}], "}"}]}], "\[RightDoubleBracket]"}], ",", 
            RowBox[{"t2", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", 
              RowBox[{"{", 
               RowBox[{
               "2", ",", "1", ",", "3", ",", "4", ",", "5", ",", "6", ",", 
                "7"}], "}"}]}], "\[RightDoubleBracket]"}]}], "}"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
        RowBox[{
         RowBox[{"SplitBy", "[", 
          RowBox[{"#", ",", "First"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"Length", "[", "x", "]"}], "<", "2"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "ol", "]"}], ">", "\[Tau]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"{", 
          RowBox[{"avgpos1", ",", "avgpos2"}], "}"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Mean", "/@", 
            RowBox[{"(", 
             RowBox[{"Transpose", "[", "ol", "]"}], ")"}]}], ")"}], 
          "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", 
           RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{"EuclideanDistance", "[", 
         RowBox[{"avgpos1", ",", "avgpos2"}], "]"}]}], ",", 
       RowBox[{"-", "1"}]}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6786456735071197`*^9, 3.67864569624042*^9}, {
   3.678649737790583*^9, 3.678649747421134*^9}, {3.678649849596978*^9, 
   3.6786498560923495`*^9}, 3.678649893780505*^9, {3.678651646039729*^9, 
   3.678651754831951*^9}, {3.6786518947939568`*^9, 3.678651906719639*^9}, {
   3.678654891133279*^9, 3.678655133120904*^9}, {3.678655265255536*^9, 
   3.678655271542347*^9}, {3.678655312398819*^9, 3.678655481487516*^9}, {
   3.6786590429146595`*^9, 3.678659058140286*^9}, 3.678659148324044*^9, {
   3.678659360531217*^9, 3.678659413025309*^9}, {3.6786594573761873`*^9, 
   3.6786595006038632`*^9}, {3.678661648900236*^9, 3.6786616602726564`*^9}, {
   3.6786617455580063`*^9, 3.678661846568184*^9}, {3.678908725814332*^9, 
   3.678908744530402*^9}, {3.6792561705500345`*^9, 
   3.679256182637726*^9}},ExpressionUUID->"666ddd95-6b95-4ae2-96ae-\
fed33c80d3df"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
ColorLinker[gbtrackpairs, greentracklist, blueflag] \[Rule] bluetracklist \
connected to greentracklist\
\>", "Subsection",
 CellChangeTimes->{{3.6806246269012165`*^9, 3.680624764997115*^9}, {
  3.6806247965259185`*^9, 
  3.680624857013378*^9}},ExpressionUUID->"add62a34-3c2f-43d9-a5ad-\
95781a71c2a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"This", " ", "returns", " ", "all", " ", "green", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"or", " ", "blue"}], ",", " ", 
      RowBox[{
       RowBox[{"specified", " ", "by", " ", "colorN"}], " ", "=", " ", 
       RowBox[{
       "1", " ", "for", " ", "green", " ", "and", " ", "2", " ", "for", " ", 
        "blue"}]}]}], ")"}], " ", "elements", " ", "of", " ", "gbpairs", " ", 
    "whose", " ", "blue", " ", 
    RowBox[{"(", 
     RowBox[{"or", " ", "green"}], ")"}], " ", "element", " ", "is", " ", "a",
     " ", "member", " ", "of", " ", "colorList"}], "  ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ColorLinker", "[", 
    RowBox[{"pairs_", ",", "colorList_", ",", "colorN_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"Cases", "[", 
        RowBox[{"pairs", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"MemberQ", "[", 
           RowBox[{"colorList", ",", 
            RowBox[{"x", "\[LeftDoubleBracket]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"colorN", "\[Equal]", "1"}], ",", "2", ",", "1"}], 
              "]"}], "\[RightDoubleBracket]"}]}], "]"}]}]}], "]"}], 
       "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "colorN"}], "\[RightDoubleBracket]"}], "//", 
      "Union"}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6805740062990694`*^9, 3.6805740406204433`*^9}, {
   3.6805741188562174`*^9, 3.6805741787253094`*^9}, {3.6805742783761835`*^9, 
   3.6805744551618032`*^9}, {3.680574568875996*^9, 3.6805745770167227`*^9}, {
   3.6805746087046037`*^9, 3.680574638548729*^9}, {3.6805746814887447`*^9, 
   3.680574736205081*^9}, {3.6805747827626133`*^9, 3.6805747852001743`*^9}, {
   3.6805752554891725`*^9, 3.6805752772550993`*^9}, {3.680575586323535*^9, 
   3.680575588370466*^9}, {3.6805756485840797`*^9, 3.6805756489434566`*^9}, {
   3.6805757700250216`*^9, 3.6805757790564346`*^9}, {3.680577674705389*^9, 
   3.6805778461890535`*^9}, {3.6805780041356936`*^9, 3.680578086949133*^9}, 
   3.680580011546554*^9, {3.680582146697378*^9, 3.680582190295504*^9}, {
   3.680582634441224*^9, 3.680582676237847*^9}, {3.680611589887657*^9, 
   3.680611591153296*^9}, {3.6806117919141035`*^9, 3.680611804492385*^9}, {
   3.6806144134000797`*^9, 
   3.6806144195720625`*^9}},ExpressionUUID->"f187d268-4f1a-48dc-9aa3-\
9cab99bd3f14"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
CrossPairFinder[gbtrackpairs] \[Rule] list of green tracks gi connected to \
list of blue tracks bi : {{g1,b1}, {g2, b2}, ...}\
\>", "Subsection",
 CellChangeTimes->{{3.6805823863330293`*^9, 3.6805823912862163`*^9}, 
   3.680624601365756*^9, {3.68062478274113*^9, 3.6806247899335413`*^9}, {
   3.6806248648218246`*^9, 3.6806249434613223`*^9}, 
   3.6806252236703496`*^9},ExpressionUUID->"9763de77-e5fe-4736-a731-\
57de8fdc304d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CrossPairFinder", "[", "myGBpairs_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"b1", ",", "g1", ",", "seed", ",", 
      RowBox[{"myFlag", "=", "0"}], ",", "i"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"seed", "=", 
         RowBox[{"{", 
          RowBox[{"myGBpairs", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], "}"}]}], ";", 
        " ", 
        RowBox[{"(*", 
         RowBox[{
         "seed", " ", "with", " ", "ith", " ", "green", " ", "element", " ", 
          "from", " ", "pair", " ", "list"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"While", "[", 
         RowBox[{
          RowBox[{"myFlag", "\[Equal]", "0"}], " ", ",", " ", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"b1", "=", 
            RowBox[{
             RowBox[{"ColorLinker", "[", 
              RowBox[{"myGBpairs", ",", "seed", ",", "2"}], "]"}], "//", 
             "Union"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
            "bluelist", " ", "b1", " ", "connected", " ", "to", " ", 
             "greenlist", " ", "seed"}], " ", "*)"}], "\[IndentingNewLine]", 
           RowBox[{"g1", "=", 
            RowBox[{
             RowBox[{"ColorLinker", "[", 
              RowBox[{"myGBpairs", ",", "b1", ",", "1"}], "]"}], "//", 
             "Union"}]}], ";", " ", 
           RowBox[{"(*", 
            RowBox[{
            "greenlist", " ", "g1", " ", "connected", " ", "to", " ", 
             "bluelist", " ", "b1"}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"g1", "\[Equal]", "seed"}], ",", 
             RowBox[{"myFlag", "=", "1"}], ",", " ", 
             RowBox[{"seed", "=", "g1"}]}], "]"}]}]}], " ", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{
            "exit", " ", "if", " ", "greenlist", " ", "g1", " ", "is", " ", 
             "the", " ", "same", " ", "as", " ", "seed"}], ";", " ", 
            RowBox[{"if", " ", "not"}]}], ",", " ", 
           RowBox[{"g1", " ", "becomes", " ", "new", " ", "seed"}]}], "*)"}], 
         "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"myFlag", "=", "0"}], ";", " ", 
        RowBox[{"(*", 
         RowBox[{
         "repeat", " ", "loop", " ", "for", " ", "all", " ", "possible", " ", 
          "green", " ", "seeds"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"g1", ",", "b1"}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "myGBpairs", "]"}], ",", "1"}], "}"}]}], 
      "]"}], "//", "Union"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6805804083588796`*^9, 3.680580496547429*^9}, {
   3.6805806479556093`*^9, 3.6805806957530966`*^9}, {3.6805808476007257`*^9, 
   3.680580847819522*^9}, {3.680580927929554*^9, 3.6805809299138975`*^9}, {
   3.6805822183190556`*^9, 3.6805823167853155`*^9}, {3.680582445147624*^9, 
   3.680582489650468*^9}, 3.6805825196701097`*^9, {3.6805826935160985`*^9, 
   3.6805827655538387`*^9}, {3.68061140063095*^9, 3.680611502910879*^9}, {
   3.6806115504808807`*^9, 3.680611563652952*^9}, {3.680611606508988*^9, 
   3.68061164941532*^9}, {3.680611719298317*^9, 3.680611763017613*^9}, {
   3.6806118326217384`*^9, 3.680611837434298*^9}, {3.6806118732598915`*^9, 
   3.6806119010954266`*^9}, {3.680612028677389*^9, 3.6806120313336725`*^9}, {
   3.680612125630992*^9, 3.6806121606332965`*^9}, {3.680612400194989*^9, 
   3.680612531452464*^9}, {3.680612562975997*^9, 3.680612651693954*^9}, {
   3.680612698670108*^9, 3.680612704732683*^9}, {3.680612737749642*^9, 
   3.6806127839376864`*^9}, {3.6806128376774015`*^9, 3.68061283875551*^9}, {
   3.6806129034791393`*^9, 3.680612931182576*^9}, {3.680612991955402*^9, 
   3.6806130150338707`*^9}, {3.680613258192689*^9, 3.680613259848961*^9}, {
   3.680613998596075*^9, 3.680614023940117*^9}, {3.680614216257804*^9, 
   3.6806142169140077`*^9}, {3.6806144254002414`*^9, 
   3.6806144270565624`*^9}, {3.680623480818158*^9, 3.6806235013184032`*^9}, 
   3.680624604283923*^9},ExpressionUUID->"43120282-b390-4a85-a1bc-\
5038d6906d65"]
}, Closed]],

Cell[CellGroupData[{

Cell["ConnectByColor", "Subsection",
 CellChangeTimes->{{3.68184476959031*^9, 3.681844775966675*^9}, {
  3.681844807942504*^9, 3.681844812318754*^9}, {3.6818451029743786`*^9, 
  3.68184510719862*^9}, {3.681848738193301*^9, 
  3.681848741585495*^9}},ExpressionUUID->"19967f13-107f-44ec-8e67-\
23a0aca5d952"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Connect2Colors", "[", 
   RowBox[{
   "track1_", ",", "track2_", ",", "minOverlapTime_", ",", 
    "maxOverlapDistance_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "idxTrack1", ",", "idxTrack2", ",", "myAllLink", ",", "tempTrack1", ",", 
      "tempTrack2", ",", "myLinkList", ",", "newTrack1", ",", "newTrack2", 
      ",", "myMergedTrack", ",", "bigTrack1", ",", "bigTrack2"}], "}"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", 
     RowBox[{
     "Getting", " ", "color", " ", "index", " ", "assuming", " ", "the", " ", 
      "tracks", " ", "have", " ", "never", " ", "been", " ", "connected", " ",
       "with", " ", "any", " ", "other", " ", "colors"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"idxTrack1", "=", 
      RowBox[{"track1", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1", ",", "3"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"idxTrack2", "=", 
      RowBox[{"track2", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "1", ",", "3"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"Creating", " ", "linking", " ", "pair", " ", "list"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"myAllLink", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempTrack1", "=", 
          RowBox[{
          "track1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tempTrack2", "=", 
          RowBox[{
          "track2", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"FindOverlapDist", "[", 
          RowBox[{"tempTrack1", ",", "tempTrack2", ",", "minOverlapTime"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "track1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "@", "track2"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myLinkList", "=", 
      RowBox[{"CrossPairFinder", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"myAllLink", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"0", "\[LessEqual]", "x", "<", "maxOverlapDistance"}]}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"Preparing", " ", "output", " ", "track"}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", "track1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack2", "=", "track2"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{"Connecting", " ", "tracks"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"myMergedTrack", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"track1", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"track2", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}]}], "}"}], "//", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
             "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"SplitBy", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
            "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{
                  "x", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                   "\[Equal]", "idxTrack1"}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                " ", "#", ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
           "myMergedTrack"}], ")"}]}], ";", "  ", 
        RowBox[{"(*", 
         RowBox[{
         "Note", " ", "that", " ", "this", " ", "automatically", " ", 
          "deletes", " ", "times", " ", "where", " ", "three", " ", "or", " ",
           "more", " ", "points", " ", "appears", " ", "at", " ", "once"}], 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"bigTrack1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Length", "@", "x"}], ">", "1"}]}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Note", " ", "that", " ", "this", " ", "automatically", " ", 
          "deletes", " ", "times", " ", "where", " ", "there", " ", "is", " ",
           "overlap", " ", "in", " ", "multiple", " ", "tracks", " ", "in", 
          " ", "track1"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
         " ", 
        RowBox[{"(*", 
         RowBox[{
         "Choose", " ", "to", " ", "label", " ", "big", " ", "track", " ", 
          "as", " ", "lowest", " ", 
          RowBox[{"#", "'"}], "d", " ", "track1"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"idxTrack1", "+", "idxTrack2"}]}], ";", 
        RowBox[{"(*", 
         RowBox[{
         "Change", " ", "color", " ", "index", " ", "to", " ", "two", " ", 
          "colors", " ", "from", " ", "one", " ", "color"}], "*)"}], 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "=", "bigTrack1"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ">", "1"}],
           ",", 
          RowBox[{
           RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "lowest", " ", "#", " ", "track1", " ", "that", " ", "should", " ", 
           "be", " ", "linked", " ", "is", " ", "replaced", " ", "with", " ", 
           "bigTrack1"}], ";", " ", 
          RowBox[{"others", " ", "become", " ", 
           RowBox[{"{", "}"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"bigTrack2", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{
                  "x", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}],
                   "\[Equal]", "idxTrack2"}]}]}], "]"}], ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                " ", "#", ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
           "myMergedTrack"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"bigTrack2", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"bigTrack2", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Length", "@", "x"}], ">", "1"}]}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
         " ", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"idxTrack1", "+", "idxTrack2"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
          RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "=", "bigTrack2"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ">", "1"}],
           ",", 
          RowBox[{
           RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "myLinkList"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"newTrack1", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", " ", 
     RowBox[{"(*", 
      RowBox[{"Now", " ", "get", " ", "rid", " ", "of", " ", "the", " ", 
       RowBox[{"{", "}"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack1"}]}]}], ";", 
     RowBox[{"(*", "renumber", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"newTrack2", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"newTrack2", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack2"}]}]}], ";", "\[IndentingNewLine]", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newTrack1", ",", "newTrack2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6818477833286858`*^9, 3.6818479300650787`*^9}, 
   3.681847962152914*^9, {3.6818480224173613`*^9, 3.681848083193837*^9}, {
   3.681848114416623*^9, 3.6818481247852163`*^9}, {3.6818487447936783`*^9, 
   3.6818487458577394`*^9}, {3.6818533936295767`*^9, 3.681853409781501*^9}, {
   3.682708447520831*^9, 3.6827084621686687`*^9}, {3.6827085690727835`*^9, 
   3.6827086288092003`*^9}, {3.6827087069206676`*^9, 3.68270872880892*^9}, {
   3.682766907607557*^9, 3.6827669156630173`*^9}, {3.68276707498313*^9, 
   3.6827671445201073`*^9}, {3.682768646177997*^9, 3.6827686940657363`*^9}, {
   3.6827687722172065`*^9, 3.682768776041425*^9}, {3.6827688265133123`*^9, 
   3.6827688825615177`*^9}, {3.6827689192496157`*^9, 3.682768923001831*^9}, {
   3.682769039177476*^9, 3.6827691459455824`*^9}, {3.682770721506699*^9, 
   3.682770737554617*^9}, {3.682860302066414*^9, 3.6828603066736774`*^9}, {
   3.6828603498911495`*^9, 3.682860543546226*^9}, {3.6828605761940937`*^9, 
   3.6828605966112614`*^9}, {3.682861188652124*^9, 3.6828612173707666`*^9}, {
   3.6828614396034775`*^9, 3.6828617892354755`*^9}, {3.682861825644558*^9, 
   3.6828618869800663`*^9}, 3.682862876700675*^9, {3.682863100068451*^9, 
   3.6828631120611367`*^9}, 3.6828635003333445`*^9, {3.6828721540043063`*^9, 
   3.6828721618757563`*^9}, {3.682885069295019*^9, 3.68288507107012*^9}, {
   3.6832990650866437`*^9, 3.6832990971674786`*^9}, {3.6832991433351192`*^9, 
   3.6832991439671555`*^9}, {3.6832995779349775`*^9, 
   3.6832996392954865`*^9}, {3.6832996727033978`*^9, 3.683299686272174*^9}, {
   3.683299717889982*^9, 
   3.6832997212561746`*^9}},ExpressionUUID->"72cd1ae4-78f0-4239-9982-\
52455fd9c3af"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Connect2ColorsFor3", "[", 
   RowBox[{
   "track1_", ",", "track2_", ",", "minOverlapTime_", ",", 
    "maxOverlapDistance_", ",", "track1Color_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "idxTrack1", ",", "idxTrack2", ",", "myAllLink", ",", "tempTrack1", ",", 
      "tempTrack2", ",", "myLinkList", ",", "newTrack1", ",", "newTrack2", 
      ",", "myMergedTrack", ",", "bigTrack1", ",", "bigTrack2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myAllLink", "=", 
      RowBox[{"Table", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"tempTrack1", "=", 
          RowBox[{
          "track1", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"tempTrack2", "=", 
          RowBox[{
          "track2", "\[LeftDoubleBracket]", "j", "\[RightDoubleBracket]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"FindOverlapDist", "[", 
          RowBox[{"tempTrack1", ",", "tempTrack2", ",", "minOverlapTime"}], 
          "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "track1"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", 
          RowBox[{"Length", "@", "track2"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myLinkList", "=", 
      RowBox[{"CrossPairFinder", "[", 
       RowBox[{"Position", "[", 
        RowBox[{"myAllLink", ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"0", "\[LessEqual]", "x", "<", "maxOverlapDistance"}]}]}], 
        "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", "track1"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"myMergedTrack", "=", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"track1", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}], ",", 
              RowBox[{"track2", "\[LeftDoubleBracket]", 
               RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], 
               "\[RightDoubleBracket]"}]}], "}"}], "//", 
            RowBox[{
             RowBox[{"Flatten", "[", 
              RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"SortBy", "[", 
             RowBox[{"#", ",", 
              RowBox[{
               RowBox[{"#", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
             "]"}], "&"}]}], "//", 
          RowBox[{
           RowBox[{"SplitBy", "[", 
            RowBox[{"#", ",", 
             RowBox[{
              RowBox[{"#", "\[LeftDoubleBracket]", 
               RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], "&"}]}], 
            "]"}], "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "2"}], ",", " ", 
              RowBox[{"Cases", "[", 
               RowBox[{"#", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{"x", "\[LeftDoubleBracket]", 
                   RowBox[{"3", ",", "track1Color"}], 
                   "\[RightDoubleBracket]"}], "\[Equal]", "1"}]}]}], "]"}], 
              ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"Length", "[", "#", "]"}], "\[Equal]", "1"}], ",", 
                " ", "#", ",", 
                RowBox[{"{", "}"}]}], "]"}]}], "]"}], "&"}], "/@", 
           "myMergedTrack"}], ")"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"bigTrack1", "=", 
         RowBox[{
          RowBox[{"DeleteCases", "[", 
           RowBox[{"bigTrack1", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{
              RowBox[{"Length", "@", "x"}], ">", "1"}]}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"Flatten", "[", 
            RowBox[{"#", ",", "1"}], "]"}], "&"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}]}], ";",
         " ", "\[IndentingNewLine]", 
        RowBox[{"idxTrack1", "=", 
         RowBox[{"Total", "@", 
          RowBox[{"track1", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", "1", 
            ",", "3"}], "\[RightDoubleBracket]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"idxTrack2", "=", 
         RowBox[{"Total", "@", 
          RowBox[{"track2", "\[LeftDoubleBracket]", 
           RowBox[{
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}], ",", "1", 
            ",", "3"}], "\[RightDoubleBracket]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"bigTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "3"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"idxTrack1", "+", "idxTrack2"}], ")"}], "/.", 
          RowBox[{
           RowBox[{"x_", "/;", 
            RowBox[{"x", ">", "0"}]}], "\[Rule]", "1"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
          RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], 
          "\[RightDoubleBracket]"}], "=", "bigTrack1"}], ";", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Length", "@", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ">", "1"}],
           ",", 
          RowBox[{
           RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], 
            "\[RightDoubleBracket]"}], "=", 
           RowBox[{"{", "}"}]}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "myLinkList"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack1", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"newTrack1", ",", 
        RowBox[{"{", "}"}]}], "]"}]}], ";", " ", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack1", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack1"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTrack2", "=", 
      RowBox[{"Delete", "[", 
       RowBox[{"track2", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", "#", "}"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"myLinkList", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
            "Flatten"}], "//", "Sort"}], ")"}]}]}], "]"}]}], ";", " ", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTrack2", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTrack2"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newTrack1", ",", "newTrack2"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6833889497817545`*^9, 3.683389048590406*^9}, {
  3.6833892503099437`*^9, 
  3.6833892517180243`*^9}},ExpressionUUID->"f593a9e0-ac70-4814-aef0-\
91ffa9a13c66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Connect3Colors", "[", 
   RowBox[{
   "trackr_", ",", "trackg_", ",", "trackb_", ",", "minOverlapTime_", ",", 
    "maxOverlapDistance_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "trackgb", ",", "trackbAlone", ",", "trackrgb", ",", "newTrackr", ",", 
      "trackbr", ",", "trackrAlone1", ",", "trackgbr", ",", "newTrackg", ",", 
      "trackgr", ",", "trackrAlone2", ",", "trackbgr", ",", "newTrackb", ",", 
      "dum"}], "}"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackgb", ",", "trackbAlone"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackg", ",", "trackb", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackrgb", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackr", ",", "trackgb", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTrackr", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackrgb", ",", "trackbAlone", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "1"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackbr", ",", "trackrAlone1"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackb", ",", "trackr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackgbr", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackg", ",", "trackbr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTrackg", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackgbr", ",", "trackrAlone1", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackgr", ",", "trackrAlone2"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackg", ",", "trackr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"trackbgr", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackb", ",", "trackgr", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"newTrackb", ",", "dum"}], "}"}], "=", 
      RowBox[{"Connect2ColorsFor3", "[", 
       RowBox[{
       "trackbgr", ",", "trackrAlone2", ",", "minOverlapTime", ",", 
        "maxOverlapDistance", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]",
      "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"newTrackr", ",", "newTrackg", ",", "newTrackb"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6833890896927567`*^9, 
  3.6833892422454824`*^9}},ExpressionUUID->"ecf1daa1-ead7-424b-a6f5-\
e1b0b0c3f493"]
}, Closed]],

Cell[CellGroupData[{

Cell["ConnectTracks[tracks_,listConnectTracks, (renumberQ)]", "Subsection",
 CellChangeTimes->{{3.67925864456554*^9, 3.6792586589813643`*^9}, {
  3.679260491399173*^9, 
  3.6792605037188773`*^9}},ExpressionUUID->"29816512-c456-4724-b303-\
6f696d62586c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectTracks", "[", 
   RowBox[{"tracksList_", ",", "listConnectTracks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newTracksList", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newTracksList", "=", "tracksList"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", "All", ",", 
        "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
        "listConnectTracks", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTracksList", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{"Sort", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"newTracksList", ",", "1"}], "]"}]}], ",", "First"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTracksList"}]}]}], ";", 
     "\[IndentingNewLine]", "newTracksList"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.679260438412142*^9, 
  3.679260486195875*^9}},ExpressionUUID->"ebaa37f7-145e-4638-8370-\
003f23933b64"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectTracks", "[", 
   RowBox[{"tracksList_", ",", "listConnectTracks_", ",", "renumberQ_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "newTracksList", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newTracksList", "=", "tracksList"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", "All", ",", 
        "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
        "listConnectTracks", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"renumberQ", ",", 
       RowBox[{
        RowBox[{"newTracksList", "=", 
         RowBox[{"SplitBy", "[", 
          RowBox[{
           RowBox[{"Sort", "@", 
            RowBox[{"Flatten", "[", 
             RowBox[{"newTracksList", ",", "1"}], "]"}]}], ",", "First"}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
         "=", 
         RowBox[{"Range", "@", 
          RowBox[{"Length", "@", "newTracksList"}]}]}]}], ",", 
       "newTracksList"}], "]"}], ";", "\[IndentingNewLine]", 
     "newTracksList"}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.679260438412142*^9, 3.679260467243791*^9}, {
  3.6792605093571997`*^9, 3.67926051250838*^9}, {3.679260779604657*^9, 
  3.6792608012368946`*^9}, {3.679260951305478*^9, 
  3.6792609531485834`*^9}},ExpressionUUID->"eb62d8be-b47e-49d5-89da-\
4da239f40d9c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConnectTracksFilled", "[", 
   RowBox[{"tracksList_", ",", "listConnectTracks_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "newTracksList", ",", "spotEnd", ",", "spotStart", ",", "missingNum", 
      ",", "fillingNum", ",", "fillingPos", ",", "fillingSpots"}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"newTracksList", "=", "tracksList"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"spotEnd", "=", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Last", "@", 
            RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
             RowBox[{
             "listConnectTracks", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], ")"}], 
          "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"spotStart", "=", 
         RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
          RowBox[{
           RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
            RowBox[{"i", "+", "1"}], "\[RightDoubleBracket]"}], ",", "1", ",",
            "2"}], "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"missingNum", "=", 
         RowBox[{
          RowBox[{
          "spotStart", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
           "-", 
          RowBox[{
          "spotEnd", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "-", "1"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"missingNum", ">", "0"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"fillingNum", "=", 
            RowBox[{"Range", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "spotEnd", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "+", "1"}], ",", 
              RowBox[{
               RowBox[{
               "spotStart", "\[LeftDoubleBracket]", "1", 
                "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"fillingPos", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Plus", "[", 
               RowBox[{"#", ",", 
                RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}]}],
                "]"}], "&"}], "/@", 
             RowBox[{"Outer", "[", 
              RowBox[{"Times", ",", 
               RowBox[{
                RowBox[{"Range", "@", "missingNum"}], "/", 
                RowBox[{"(", 
                 RowBox[{"missingNum", "+", "1"}], ")"}]}], ",", 
               RowBox[{
                RowBox[{"spotStart", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}], 
                "-", 
                RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                 RowBox[{"{", 
                  RowBox[{"2", ",", "3"}], "}"}], 
                 "\[RightDoubleBracket]"}]}]}], "]"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"fillingSpots", "=", 
            RowBox[{"ConstantArray", "[", 
             RowBox[{
              RowBox[{"Last", "@", 
               RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
                RowBox[{
                "listConnectTracks", "\[LeftDoubleBracket]", "i", 
                 "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], ",", 
              "missingNum"}], "]"}]}], ";", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"fillingSpots", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Thread", "@", 
               RowBox[{"{", 
                RowBox[{"fillingNum", ",", "fillingPos"}], "}"}]}], "//", 
              "Flatten"}], "//", 
             RowBox[{
              RowBox[{"Partition", "[", 
               RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
             RowBox[{
             "listConnectTracks", "\[LeftDoubleBracket]", "i", 
              "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{"PadRight", "[", 
             RowBox[{
              RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
               RowBox[{
               "listConnectTracks", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}], ",", 
              RowBox[{
               RowBox[{"Length", "@", 
                RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
                 RowBox[{
                 "listConnectTracks", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "\[RightDoubleBracket]"}]}], "+",
                "missingNum"}], ",", "fillingSpots"}], "]"}]}]}]}], "]"}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{
          RowBox[{"Length", "@", "listConnectTracks"}], "-", "1"}], ",", 
         "1"}], "}"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{"listConnectTracks", "\[LeftDoubleBracket]", 
         RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], ",", "All", ",", 
        "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
        "listConnectTracks", "\[LeftDoubleBracket]", "1", 
         "\[RightDoubleBracket]"}], ",", "1", ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"newTracksList", "=", 
      RowBox[{"SplitBy", "[", 
       RowBox[{
        RowBox[{"Sort", "@", 
         RowBox[{"Flatten", "[", 
          RowBox[{"newTracksList", ",", "1"}], "]"}]}], ",", "First"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"newTracksList", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"Range", "@", 
       RowBox[{"Length", "@", "newTracksList"}]}]}], ";", 
     "\[IndentingNewLine]", "newTracksList"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6818437818788157`*^9, 
  3.681843790654318*^9}},ExpressionUUID->"af3d309f-55c3-44e7-b8ae-\
8873b4193def"]
}, Closed]],

Cell[CellGroupData[{

Cell["TrackFiller", "Subsection",
 CellChangeTimes->{{3.681819224690225*^9, 
  3.68181922983352*^9}},ExpressionUUID->"dad5cb5a-bb38-4fd4-a22c-\
0313d30e7ec6"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "This", " ", "module", " ", "fills", " ", "any", " ", "gaps", " ", "in", 
   " ", "tracks", " ", "by", " ", "interpolating", " ", "the", " ", 
   "position", " ", "from", " ", "the", " ", "last", " ", "postion", " ", 
   "before", " ", "the", " ", "gap", " ", "and", " ", "the", " ", "first", 
   " ", "position", " ", "after", " ", "the", " ", "gap"}], " ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.681839614018428*^9, 3.681839638313818*^9}, {
  3.681839694090008*^9, 
  3.681839739850625*^9}},ExpressionUUID->"27a11b49-75a6-4eb9-87a4-\
e6fe75774064"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrackFiller", "[", "tracksList_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "filledTracksList", ",", "myIdx", ",", "missingStart", ",", "missingNum",
       ",", "missingStartShifted", ",", "spotEnd", ",", "spotStart", ",", 
      "fillingNum", ",", "fillingPos", ",", "fillingSpots", ","}], "}"}], ",",
     "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filledTracksList", "=", "tracksList"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"myIdx", "=", 
         RowBox[{
          RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", 
            RowBox[{"2", ";;"}], ",", "2", ",", "1"}], 
           "\[RightDoubleBracket]"}], "-", 
          RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", 
            RowBox[{";;", 
             RowBox[{
              RowBox[{"Length", "@", 
               RowBox[{
               "filledTracksList", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}]}], "-", "1"}]}], ",", "2", ",", 
            "1"}], "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"missingStart", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{"myIdx", ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", ">", "1"}]}]}], "]"}], "+", "1"}], "//", 
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"missingNum", "=", 
         RowBox[{
          RowBox[{"Cases", "[", 
           RowBox[{"myIdx", ",", 
            RowBox[{"x_", "/;", 
             RowBox[{"x", ">", "1"}]}]}], "]"}], "-", "1"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"missingStart", "\[NotEqual]", 
           RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"missingStartShifted", "=", "missingStart"}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"missingStartShifted", "\[LeftDoubleBracket]", 
             RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "=", 
            RowBox[{
             RowBox[{"missingStart", "\[LeftDoubleBracket]", 
              RowBox[{"2", ";;"}], "\[RightDoubleBracket]"}], "+", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"FoldList", "[", 
                RowBox[{"Plus", ",", "missingNum"}], "]"}], ")"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{";;", 
               RowBox[{
                RowBox[{"Length", "@", "missingNum"}], "-", "1"}]}], 
              "\[RightDoubleBracket]"}]}]}], ";", "\[IndentingNewLine]", 
           RowBox[{"Table", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{
              RowBox[{"spotEnd", "=", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{
                    "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "-", "1"}]}], 
                  "\[RightDoubleBracket]"}], ")"}], "\[LeftDoubleBracket]", 
                "2", "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"spotStart", "=", 
               RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
                RowBox[{"i", ",", 
                 RowBox[{
                 "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}], ",", "2"}], 
                "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"fillingNum", "=", 
               RowBox[{"Range", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{
                  "spotEnd", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "+", "1"}], ",", 
                 RowBox[{
                  RowBox[{
                  "spotStart", "\[LeftDoubleBracket]", "1", 
                   "\[RightDoubleBracket]"}], "-", "1"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"fillingPos", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Plus", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]}], "]"}], "&"}], "/@", 
                RowBox[{"Outer", "[", 
                 RowBox[{"Times", ",", 
                  RowBox[{
                   RowBox[{"Range", "@", 
                    RowBox[{
                    "missingNum", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}]}], "/", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    "missingNum", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "+", "1"}], ")"}]}], ",", 
                  RowBox[{
                   RowBox[{"spotStart", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], "\[RightDoubleBracket]"}],
                    "-", 
                   RowBox[{"spotEnd", "\[LeftDoubleBracket]", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "3"}], "}"}], 
                    "\[RightDoubleBracket]"}]}]}], "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"fillingSpots", "=", 
               RowBox[{"ConstantArray", "[", 
                RowBox[{
                 RowBox[{"filledTracksList", "\[LeftDoubleBracket]", 
                  RowBox[{"i", ",", 
                   RowBox[{
                    RowBox[{
                    "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "-", "1"}]}], 
                  "\[RightDoubleBracket]"}], ",", 
                 RowBox[{
                 "missingNum", "\[LeftDoubleBracket]", "j", 
                  "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"fillingSpots", "\[LeftDoubleBracket]", 
                RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"Thread", "@", 
                  RowBox[{"{", 
                   RowBox[{"fillingNum", ",", "fillingPos"}], "}"}]}], "//", 
                 "Flatten"}], "//", 
                RowBox[{
                 RowBox[{"Partition", "[", 
                  RowBox[{"#", ",", "3"}], "]"}], "&"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "filledTracksList", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "=", 
                 RowBox[{"Insert", "[", 
                  RowBox[{
                   RowBox[{
                   "filledTracksList", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                   "fillingSpots", "\[LeftDoubleBracket]", "k", 
                    "\[RightDoubleBracket]"}], ",", 
                   RowBox[{
                    RowBox[{
                    "missingStartShifted", "\[LeftDoubleBracket]", "j", 
                    "\[RightDoubleBracket]"}], "+", "k", "-", "1"}]}], 
                  "]"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"k", ",", "1", ",", 
                  RowBox[{
                  "missingNum", "\[LeftDoubleBracket]", "j", 
                   "\[RightDoubleBracket]"}], ",", "1"}], "}"}]}], "]"}], 
              ";"}], "\[IndentingNewLine]", ",", 
             RowBox[{"{", 
              RowBox[{"j", ",", "1", ",", 
               RowBox[{"Length", "@", "missingStart"}], ",", "1"}], "}"}]}], 
            "]"}], ";"}]}], "]"}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "filledTracksList"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", "filledTracksList"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681819232566676*^9, 3.681819281457472*^9}, {
  3.681836758312091*^9, 3.681836906328557*^9}, {3.681836938336388*^9, 
  3.681836980535802*^9}, {3.681837014016717*^9, 3.681837143512123*^9}, {
  3.6818371739048615`*^9, 3.6818373862010045`*^9}, {3.6818390382424955`*^9, 
  3.68183903989859*^9}, {3.681839128498658*^9, 
  3.6818391529510565`*^9}},ExpressionUUID->"15a06461-10d4-4876-85de-\
fb4b6659e6b5"]
}, Closed]],

Cell[CellGroupData[{

Cell["FindConnectableTracks", "Subsection",
 CellChangeTimes->{{3.679313898838685*^9, 
  3.6793139041269875`*^9}},ExpressionUUID->"f9fed715-6079-4e62-9e6d-\
dedc92349cf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindConnectableTracks2", "[", 
   RowBox[{
   "tracksList_", ",", "myMaxN_", ",", "dist_", ",", "time_", ",", 
    "trackNumber_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "allTracksStart", ",", "timeEnd", ",", "posiEnd", ",", "afterTracks", 
      ",", "listConnectTracks", ",", "tempConnectTracks", ",", 
      "tempConnectTracks2", ",", "tempConnectTracks3", ",", 
      "posiConnectTracks", ",", "tempTrack", ",", "tempFrame"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"allTracksStart", "=", 
      RowBox[{"tracksList", "\[LeftDoubleBracket]", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"trackNumber", "+", "1"}], ")"}], ";;"}], ",", "1"}], 
       "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"timeEnd", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Last", "@", 
         RowBox[{
         "tracksList", "\[LeftDoubleBracket]", "trackNumber", 
          "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"posiEnd", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Last", "@", 
         RowBox[{
         "tracksList", "\[LeftDoubleBracket]", "trackNumber", 
          "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
       RowBox[{"2", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"afterTracks", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{"allTracksStart", ",", 
        RowBox[{"x_", "/;", 
         RowBox[{
          RowBox[{"timeEnd", "<", 
           RowBox[{"x", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], 
           "\[LessEqual]", 
           RowBox[{"timeEnd", "+", "time"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "-", "dist"}], "<", 
           RowBox[{"x", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "2"}], "\[RightDoubleBracket]"}], "<", 
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}],
             "+", "dist"}]}], "&&", 
          RowBox[{
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
             "-", "dist"}], "<", 
           RowBox[{"x", "\[LeftDoubleBracket]", 
            RowBox[{"2", ",", "3"}], "\[RightDoubleBracket]"}], "<", 
           RowBox[{
            RowBox[{
            "posiEnd", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}],
             "+", "dist"}]}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"listConnectTracks", "=", 
      RowBox[{"Flatten", "@", 
       RowBox[{"{", 
        RowBox[{"trackNumber", ",", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"afterTracks", "\[NotEqual]", 
            RowBox[{"{", "}"}]}], ",", 
           RowBox[{"afterTracks", "\[LeftDoubleBracket]", 
            RowBox[{"All", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], "}"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempConnectTracks", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
        "tracksList", "\[LeftDoubleBracket]", "listConnectTracks", 
         "\[RightDoubleBracket]"}], "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Partition", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Length", "@", 
           RowBox[{"Flatten", "@", 
            RowBox[{"tracksList", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"tempConnectTracks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "\[RightDoubleBracket]"}], "=", 
      RowBox[{"tempConnectTracks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "\[RightDoubleBracket]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempConnectTracks2", "=", 
      RowBox[{
       RowBox[{"tempConnectTracks", "//", "Sort"}], "//", 
       RowBox[{
        RowBox[{"SplitBy", "[", 
         RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"tempConnectTracks3", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"tempConnectTracks2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "1", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
         RowBox[{"tempConnectTracks2", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", 
           RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}]}], "}"}]}]}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"posiConnectTracks", "=", 
      RowBox[{"Thread", "@", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Range", "@", "myMaxN"}], ",", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "0"}], "}"}]}], "}"}], ",", 
           "myMaxN"}], "]"}]}], "}"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"tempFrame", "=", 
         RowBox[{"tempConnectTracks3", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}]}], ";", 
        RowBox[{
         RowBox[{"posiConnectTracks", "\[LeftDoubleBracket]", 
          RowBox[{"tempFrame", ",", "2"}], "\[RightDoubleBracket]"}], "=", 
         RowBox[{"tempConnectTracks3", "\[LeftDoubleBracket]", 
          RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], ";"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "@", "tempConnectTracks3"}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"listConnectTracks", ",", "posiConnectTracks"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.6787314149002867`*^9, 3.678731473628646*^9}, {
   3.678731527835746*^9, 3.678731651943845*^9}, {3.67873192075622*^9, 
   3.678731925884513*^9}, {3.6787323688368483`*^9, 3.678732492620929*^9}, {
   3.6787335929338627`*^9, 3.678733599774254*^9}, {3.6787336336611924`*^9, 
   3.6787336361663356`*^9}, 3.6790900466130695`*^9, {3.679090105420433*^9, 
   3.6790901372212524`*^9}, {3.67909033683667*^9, 3.6790904911094933`*^9}, {
   3.6791367729136615`*^9, 3.67913678355427*^9}, {3.6791370766180325`*^9, 
   3.6791371439218817`*^9}, {3.6791371846022086`*^9, 
   3.6791372102186737`*^9}, {3.6791372727062483`*^9, 3.679137333898748*^9}, {
   3.679137417098507*^9, 3.6791374283151484`*^9}, {3.6791501942853203`*^9, 
   3.6791502799182177`*^9}, {3.679152732282485*^9, 3.6791527339295793`*^9}, {
   3.6792419937019463`*^9, 3.679242050430191*^9}, {3.679250900469384*^9, 
   3.679250901061418*^9}, {3.679258064987171*^9, 3.6792580677713304`*^9}, {
   3.6792585280766582`*^9, 3.6792585508039584`*^9}, {3.6792616162782936`*^9, 
   3.6792616315821686`*^9}, {3.6792620662780323`*^9, 
   3.679262089254346*^9}},ExpressionUUID->"d6cbd7f4-b272-4d61-8afc-\
d2256ce792e7"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
MyCrossCorrelatePlotter[myColorParameters_,listHead_,colN1_,colN2_,color_\
optional]\
\>", "Subsection",
 CellChangeTimes->{{3.703275782599066*^9, 
  3.7032758061427093`*^9}},ExpressionUUID->"a628e657-0374-4225-b22a-\
a5638b08f67d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyCrossCorrelatePlotter", "[", 
   RowBox[{
   "myColorParameters_", ",", "listHead_", ",", "colN1_", ",", "colN2_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myColorParameters", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "All"}], ",", "All", ",", 
        RowBox[{"colN1", ";;", "colN2", ";;", 
         RowBox[{"(", 
          RowBox[{"colN2", "-", "colN1"}], ")"}]}]}], "]"}], "]"}], "//", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN1", "]"}], "]"}], ",", 
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"PointSize", "[", "0.007", "]"}]}]}], "]"}], "&"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.703274674140876*^9, 3.7032747392387104`*^9}, {
   3.7032747968973637`*^9, 3.7032748616902075`*^9}, 
   3.7032751970156884`*^9},ExpressionUUID->"785b4dd3-ade8-4e83-9cfa-\
cff88d891bf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyCrossCorrelatePlotter", "[", 
   RowBox[{
   "myColorParameters_", ",", "listHead_", ",", "colN1_", ",", "colN2_", ",", 
    "color_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myColorParameters", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;", "All"}], ",", "All", ",", 
        RowBox[{"colN1", ";;", "colN2", ";;", 
         RowBox[{"(", 
          RowBox[{"colN2", "-", "colN1"}], ")"}]}]}], "]"}], "]"}], "//", 
     RowBox[{
      RowBox[{"ListPlot", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Frame", "\[Rule]", "True"}], ",", 
        RowBox[{"BaseStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
           RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", "color"}], ",", 
        RowBox[{"FrameLabel", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN1", "]"}], "]"}], ",", 
           RowBox[{"listHead", "[", 
            RowBox[{"[", "colN2", "]"}], "]"}]}], "}"}]}], ",", 
        RowBox[{"ImageSize", "\[Rule]", "300"}], ",", 
        RowBox[{"PlotStyle", "\[Rule]", 
         RowBox[{"PointSize", "[", "0.007", "]"}]}]}], "]"}], "&"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.703274674140876*^9, 3.7032747392387104`*^9}, {
   3.7032747968973637`*^9, 3.7032748616902075`*^9}, 3.7032751970156884`*^9, {
   3.703275630504817*^9, 
   3.7032756482653213`*^9}},ExpressionUUID->"df49a674-f49a-40a8-99f1-\
b61797b2e0fe"]
}, Closed]],

Cell[CellGroupData[{

Cell["TickFormat[xmin_,xmax_,digits_,divisions_]", "Subsection",
 CellChangeTimes->{{3.703358407462393*^9, 3.703358409042426*^9}, {
  3.703358439210065*^9, 
  3.7033584441361666`*^9}},ExpressionUUID->"23d6f942-4cfb-4ddd-9708-\
54fef398fa02"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TickFormat", "[", 
    RowBox[{"xmin_", ",", "xmax_", ",", "digits_", ",", 
     RowBox[{"divisions_:", " ", "10"}]}], "]"}], ":=", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{"tickNumber", ",", 
      RowBox[{"{", 
       RowBox[{"tickNumber", ",", 
        RowBox[{"PaddedForm", "[", 
         RowBox[{
          RowBox[{"Round", "[", 
           RowBox[{"tickNumber", ",", "0.01"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Max", "@", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", 
                 RowBox[{"IntegerDigits", "@", 
                  RowBox[{"IntegerPart", "[", "#", "]"}]}]}], "&"}], "/@", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"10", "^", "digits"}], " ", 
                 RowBox[{"{", 
                  RowBox[{"xmin", ",", "xmax"}], "}"}]}], ")"}]}], ")"}]}], 
            ",", "digits"}], "}"}]}], "]"}]}], "}"}]}], "]"}], "/@", 
    RowBox[{"FindDivisions", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"xmin", ",", "xmax"}], "}"}], ",", "divisions"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7033584100124474`*^9, 
  3.7033584147265472`*^9}},ExpressionUUID->"40e16cdc-76d0-47e4-8523-\
b7c488182547"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
MyHistogramPlotter[myColorParameter_,listHead_,col_,color_,bins_optional]\
\>", "Subsection",
 CellChangeTimes->{{3.703347014331491*^9, 
  3.7033470305826864`*^9}},ExpressionUUID->"379806d4-26eb-4f87-aa52-\
a569c1ffb004"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyHistogramPlotter", "[", 
   RowBox[{
   "myColorParameter_", ",", "listHead_", ",", "col_", ",", "color_"}], "]"}],
   ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myList", ",", "myMed", ",", "mybinsize"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"myColorParameter", "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"myList", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Flatten", "[", 
           RowBox[{"myColorParameter", ",", "1"}], "]"}], ")"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "col"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "myList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", "\"\<\>\""}], ",", 
         RowBox[{"myMed", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"myList", "//", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[Equal]", "\"\<\>\""}]}]}], "]"}], "&"}]}], 
           "]"}]}], ",", 
         RowBox[{"myMed", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"myMed", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mybinsize", "=", 
           RowBox[{"myMed", "/", "20"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myList", "//", 
           RowBox[{
            RowBox[{"Histogram", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", 
               RowBox[{"Table", "[", 
                RowBox[{
                 RowBox[{"mybinsize", " ", "i"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"i", ",", "1", ",", "60", ",", "1"}], "}"}]}], 
                "]"}], "}"}], ",", "\"\<Probability\>\"", ",", 
              RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "listHead", "\[LeftDoubleBracket]", "col", 
                  "\[RightDoubleBracket]"}], ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TickFormat", "[", 
                    RowBox[{"#1", ",", "#2", ",", "2", ",", "4"}], "]"}], 
                    "&"}], ")"}], ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"BaseStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
              RowBox[{"ChartStyle", "\[Rule]", "color"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "&"}]}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7033453968476095`*^9, 3.7033456017408676`*^9}, {
   3.703345690238285*^9, 3.7033458191282563`*^9}, {3.703345873413062*^9, 
   3.703345894108388*^9}, {3.703345981093774*^9, 3.703346016106325*^9}, {
   3.7033460780712643`*^9, 3.7033460994455795`*^9}, {3.703346166582602*^9, 
   3.7033462159563966`*^9}, {3.7033463000426383`*^9, 
   3.7033463140848665`*^9}, {3.7033463606945405`*^9, 
   3.7033464081352506`*^9}, {3.7033585202398043`*^9, 3.703358540818222*^9}, {
   3.703358600870448*^9, 3.7033586136397057`*^9}, {3.703358644942337*^9, 
   3.703358657284584*^9}, {3.703358723769965*^9, 3.703358723823965*^9}, {
   3.703358795953441*^9, 3.703358804128601*^9}, 3.7033590514415994`*^9, {
   3.703361587852375*^9, 3.703361605516774*^9}, {3.703361638652496*^9, 
   3.7033616501067543`*^9}, {3.7033618063961444`*^9, 3.703361831989685*^9}, {
   3.7033618848697786`*^9, 3.703361910100312*^9}, {3.703362341703863*^9, 
   3.7033623943320017`*^9}, {3.703362485782957*^9, 3.7033624883070083`*^9}, {
   3.7033625395840573`*^9, 
   3.70336257076271*^9}},ExpressionUUID->"797cf264-63d2-48ae-b791-\
7e5ddc39d284"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyHistogramPlotter", "[", 
   RowBox[{
   "myColorParameter_", ",", "listHead_", ",", "col_", ",", "color_", ",", 
    "bins_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myList", ",", "myMed", ",", "mybinsize"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"myColorParameter", "\[NotEqual]", 
       RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"myList", "=", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"Flatten", "[", 
           RowBox[{"myColorParameter", ",", "1"}], "]"}], ")"}], 
         "\[LeftDoubleBracket]", 
         RowBox[{"All", ",", "col"}], "\[RightDoubleBracket]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "myList", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          "\[NotEqual]", "\"\<\>\""}], ",", 
         RowBox[{"myMed", "=", 
          RowBox[{"Median", "[", 
           RowBox[{"myList", "//", 
            RowBox[{
             RowBox[{"DeleteCases", "[", 
              RowBox[{"#", ",", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", "\[Equal]", "\"\<\>\""}]}]}], "]"}], "&"}]}], 
           "]"}]}], ",", 
         RowBox[{"myMed", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"myMed", "\[NotEqual]", "0"}], ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mybinsize", "=", 
           RowBox[{"myMed", "/", "20"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"myList", "//", 
           RowBox[{
            RowBox[{"Histogram", "[", 
             RowBox[{"#", ",", 
              RowBox[{"{", "bins", "}"}], ",", "\"\<Probability\>\"", ",", 
              RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
              RowBox[{"Frame", "\[Rule]", "True"}], ",", 
              RowBox[{"FrameLabel", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                 "listHead", "\[LeftDoubleBracket]", "col", 
                  "\[RightDoubleBracket]"}], ",", "\"\<\>\""}], "}"}]}], ",", 
              RowBox[{"FrameTicks", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"TickFormat", "[", 
                    RowBox[{"#1", ",", "#2", ",", "2", ",", "4"}], "]"}], 
                    "&"}], ")"}], ",", "None"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"Automatic", ",", "None"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"BaseStyle", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                 RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
              RowBox[{"ChartStyle", "\[Rule]", "color"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", "250"}]}], "]"}], "&"}]}]}]}], 
        "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7033453968476095`*^9, 3.7033456017408676`*^9}, {
   3.703345690238285*^9, 3.7033458191282563`*^9}, {3.703345873413062*^9, 
   3.703345894108388*^9}, {3.703345981093774*^9, 3.703346016106325*^9}, {
   3.7033460780712643`*^9, 3.7033460994455795`*^9}, {3.703346166582602*^9, 
   3.7033462159563966`*^9}, {3.7033463000426383`*^9, 
   3.7033463140848665`*^9}, {3.7033463606945405`*^9, 
   3.7033464081352506`*^9}, {3.703346732549771*^9, 3.7033467431699276`*^9}, {
   3.7033468075528164`*^9, 3.703346809363845*^9}, {3.7033584884151525`*^9, 
   3.7033585318370404`*^9}, {3.703358591793267*^9, 3.70335864167127*^9}, {
   3.7033587212929087`*^9, 3.70335872137591*^9}, {3.7033588810271482`*^9, 
   3.703358882944187*^9}, {3.7033589201549244`*^9, 3.703359059365768*^9}, {
   3.703361607820819*^9, 3.703361656398898*^9}, 3.7033618409068685`*^9, {
   3.703361919104509*^9, 3.7033619226515884`*^9}, {3.703362402527178*^9, 
   3.7033624090863256`*^9}, {3.703362456080333*^9, 3.703362482219881*^9}, 
   3.7033625800409193`*^9},ExpressionUUID->"ba63f4a6-6c06-4f3d-9383-\
75b652acf0b5"]
}, Closed]],

Cell[CellGroupData[{

Cell["TXYDiffusionPlotter[txylsits,maxt,color,shapeN,size]", "Subsection",
 CellChangeTimes->{{3.7148656178431544`*^9, 
  3.7148656407825317`*^9}},ExpressionUUID->"f858624d-8b17-4631-a44f-\
81b076742f79"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TXYDiffusionPlotter", "[", 
   RowBox[{
   "txylists_", ",", "maxt_", ",", "color_", ",", "shapeN_", ",", "size_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"msds", ",", "p1", ",", "p2", ",", "msds2"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"msds", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{
            "#", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox[
               RowBox[{
               "#", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
               "2"], "+", 
              SuperscriptBox[
               RowBox[{
               "#", "\[LeftDoubleBracket]", "3", "\[RightDoubleBracket]"}], 
               "2"]}], ")"}]}], "}"}], "&"}], "/@", 
         RowBox[{"Differences", "[", 
          RowBox[{
           RowBox[{
           "txylists", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}],
            ",", "1", ",", "j"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "txylists", "]"}], ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"j", ",", "1", ",", "maxt", ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Mean", "/@", 
          RowBox[{"msds", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "msds", "]"}], ",", "1"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"ErrorListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Frame #\>\"", ",", 
             "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
            "}"}]}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"msds2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"msds", "//", "Flatten"}], "//", 
         RowBox[{
          RowBox[{"Partition", "[", 
           RowBox[{"#", ",", "2"}], "]"}], "&"}]}], "//", "Union"}], "//", 
       RowBox[{
        RowBox[{"SplitBy", "[", 
         RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"Mean", "/@", "msds2"}], ")"}], ",", 
          RowBox[{"ErrorBar", "/@", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              FractionBox[
               RowBox[{"StandardDeviation", "[", "#", "]"}], 
               SqrtBox[
                RowBox[{"Length", "[", "#", "]"}]]], "&"}], "/@", 
             RowBox[{"msds2", "\[LeftDoubleBracket]", 
              RowBox[{"All", ",", "All", ",", "2"}], 
              "\[RightDoubleBracket]"}]}], ")"}]}]}], "}"}], "//", 
        "Transpose"}], "//", 
       RowBox[{
        RowBox[{"ErrorListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", 
               RowBox[{"maxt", "-", "1"}]}], "}"}], ",", "All"}], "}"}]}], 
          ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], "\n", ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Frame #\>\"", ",", 
             "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
            "}"}]}], ",", 
          RowBox[{"BaseStyle", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
             RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "color"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"p1", ",", "p2"}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7148648249721494`*^9, 3.7148649737870293`*^9}, {
  3.7148654437669964`*^9, 3.7148655251818724`*^9}, {3.714866422364873*^9, 
  3.714866425576295*^9}, {3.717770099151585*^9, 
  3.7177701066976013`*^9}},ExpressionUUID->"c975f0bb-259c-433a-8f3b-\
246153a03e55"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
InteractionAnalyzer[componentAnalysisList_,column_(3=red,4=green,5=blue),\
shapeN,size]\
\>", "Subsection",
 CellChangeTimes->{{3.7148681650656333`*^9, 3.714868208670328*^9}, {
  3.714869979361375*^9, 3.714869983188116*^9}, {3.714874224676405*^9, 
  3.7148742255990944`*^9}},ExpressionUUID->"33440c58-3a13-48d1-9824-\
c5165b818633"],

Cell[BoxData[
 RowBox[{
  RowBox[{"InteractionAnalyzer", "[", 
   RowBox[{"ca_", ",", "column_", ",", "shapeN_", ",", "size_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "goodi", ",", "redis", ",", "p1", ",", "greenis", ",", "p2", ",", 
      "blueis", ",", "p3", ",", "myAvgBlueis", ",", "myAvgRedis", ",", 
      "myAvgGreenis", ",", "mySizes", ",", "p4", ",", "p5", ",", "p6", ",", 
      "p4d", ",", "p5d", ",", "p6d", ",", "p7"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "We", " ", "need", " ", "to", " ", "delete", " ", "those", " ", "cases",
        " ", "when", " ", "we", " ", "cannot", " ", "see"}], ",", " ", 
      RowBox[{"eg", "."}], ",", " ", 
      RowBox[{"blue", " ", "in", " ", "every", " ", "track", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
         "assuming", " ", "blue", " ", "is", " ", "the", " ", "seed", " ", 
          "column", " ", "for", " ", "the", " ", "track"}], ")"}], ".", " ", 
        "In"}], " ", "other", " ", "words"}], ",", " ", 
      RowBox[{
      "sometimes", " ", "we", " ", "cannot", " ", "match", " ", "up", " ", 
       "the", " ", "centroid", " ", "to", " ", "a", " ", "specific", " ", 
       RowBox[{"track", ".", " ", "In"}], " ", "that", " ", "case"}], ",", 
      " ", 
      RowBox[{
      "we", " ", "will", " ", "not", " ", "include", " ", "in", " ", "the", 
       " ", 
       RowBox[{"analysis", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"goodi", "=", 
      RowBox[{
       RowBox[{"1", "+", 
        RowBox[{"Position", "[", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            FractionBox[
             RowBox[{"Count", "[", 
              RowBox[{
               RowBox[{"MovingAverage", "[", 
                RowBox[{
                 RowBox[{"ca", "[", 
                  RowBox[{"[", 
                   RowBox[{"i", ",", "All", ",", "column"}], "]"}], "]"}], 
                 ",", "2"}], "]"}], ",", 
               RowBox[{"x_", "/;", 
                RowBox[{
                 RowBox[{
                  RowBox[{"NumericQ", "[", "x", "]"}], "\[Equal]", "True"}], "&&", 
                 RowBox[{"x", "\[NotEqual]", "0"}]}]}]}], "]"}], 
             RowBox[{
              RowBox[{"Length", "[", 
               RowBox[{
               "ca", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}], 
               "]"}], "-", "1"}]], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "2", ",", 
              RowBox[{"Length", "[", "ca", "]"}], ",", "1"}], "}"}]}], "]"}], 
          ",", "1"}], "]"}]}], "//", "Flatten"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"redis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"MovingAverage", "[", 
               RowBox[{
                RowBox[{"ca", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                   "goodi", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", "All", ",", "3"}], "]"}], 
                 "]"}], ",", "2"}], "]"}]}], ")"}], "//", 
            RowBox[{
             RowBox[{"SplitBy", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]}]}], "]"}], 
            "&"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "goodi", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{
       RowBox[{"redis", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Histogram", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Purple", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}], ",", "Red"}], "]"}]}],
             "]"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Interaction time (frames)\>\"", ",", "\"\<Percentage\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Red to \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Interactions\>\""}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"greenis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"MovingAverage", "[", 
               RowBox[{
                RowBox[{"ca", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                   "goodi", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", "All", ",", "4"}], "]"}], 
                 "]"}], ",", "2"}], "]"}]}], ")"}], "//", 
            RowBox[{
             RowBox[{"SplitBy", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]}]}], "]"}], 
            "&"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "goodi", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p2", "=", 
      RowBox[{
       RowBox[{"greenis", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Histogram", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Cyan", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Green", ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Interaction time (frames)\>\"", ",", "\"\<Percentage\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Green to \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Interactions\>\""}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"blueis", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Length", "/@", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"#", ">", "0"}], ",", "1", ",", "0"}], "]"}], "&"}], 
              "/@", 
              RowBox[{"MovingAverage", "[", 
               RowBox[{
                RowBox[{"ca", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{
                   "goodi", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", "All", ",", "5"}], "]"}], 
                 "]"}], ",", "2"}], "]"}]}], ")"}], "//", 
            RowBox[{
             RowBox[{"SplitBy", "[", 
              RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
           RowBox[{
            RowBox[{"DeleteCases", "[", 
             RowBox[{"#", ",", 
              RowBox[{"x_", "/;", 
               RowBox[{
                RowBox[{"x", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "==", "0"}]}]}], "]"}], 
            "&"}]}], ")"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "goodi", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p3", "=", 
      RowBox[{
       RowBox[{"blueis", "//", "Flatten"}], "//", 
       RowBox[{
        RowBox[{"Histogram", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", "10", "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}], ",", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"0", ",", "300"}], "}"}], ",", "All"}], "}"}]}], ",", 
          RowBox[{"ChartStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Blue", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Cyan", ",", 
               "Purple"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
            "\"\<Interaction time (frames)\>\"", ",", "\"\<Percentage\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Blue to \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Interactions\>\""}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myAvgRedis", "=", 
      RowBox[{"Mean", "/@", "redis"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myAvgGreenis", "=", 
      RowBox[{"Mean", "/@", "greenis"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myAvgBlueis", "=", 
      RowBox[{"Mean", "/@", "blueis"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"mySizes", "=", 
      RowBox[{"N", "[", 
       RowBox[{"Mean", "/@", 
        RowBox[{"bca", "\[LeftDoubleBracket]", 
         RowBox[{"goodi", ",", 
          RowBox[{"1", ";;", "maxt"}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"column", "==", "5"}], ",", "8", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "4"}], ",", "7", ",", "6"}], 
             "]"}]}], "]"}]}], "\[RightDoubleBracket]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p4d", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"myAvgRedis", ",", "mySizes"}], "}"}], "//", "Transpose"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"p4", "=", 
      RowBox[{"p4d", "//", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Size vs. Red Int'n Time\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Avg. red int'n time (frames)\>\"", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                  ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
              "\"\< size (pixels)\>\""}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Purple", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}], ",", "Red"}], "]"}]}],
             "]"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p5d", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"myAvgGreenis", ",", "mySizes"}], "}"}], "//", 
       "Transpose"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"p5", "=", 
      RowBox[{"p5d", "//", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Size vs. Green Int'n Time\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Avg. green int'n time (frames)\>\"", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                  ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
              "\"\< size (pixels)\>\""}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Cyan", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Green", ",", 
               RowBox[{"Darker", "[", 
                RowBox[{"Yellow", ",", "0.13"}], "]"}]}], "]"}]}], "]"}]}], 
          ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p6d", "=", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"myAvgBlueis", ",", "mySizes"}], "}"}], "//", "Transpose"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"p6", "=", 
      RowBox[{"p6d", "//", 
       RowBox[{
        RowBox[{"ListLogLogPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "->", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Size vs. Blue Int'n Time\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Avg. blue int'n time (frames)\>\"", ",", " ", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                  ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
              "\"\< size (pixels)\>\""}]}], "}"}]}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"column", "\[Equal]", "5"}], ",", "Blue", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"column", "\[Equal]", "4"}], ",", "Cyan", ",", 
               "Purple"}], "]"}]}], "]"}]}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p7", "=", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"MovingAverage", "[", 
           RowBox[{"#", ",", "3"}], "]"}], "&"}], "/@", 
         RowBox[{"ca", "[", 
          RowBox[{"[", 
           RowBox[{"goodi", ",", "All", ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "8", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "7", ",", "6"}], 
               "]"}]}], "]"}]}], "]"}], "]"}]}], ")"}], "//", 
       RowBox[{
        RowBox[{"ListPlot", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Joined", "\[Rule]", "True"}], ",", 
          RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
          RowBox[{"PlotLabel", "\[Rule]", 
           RowBox[{"\"\<Size of Tracked \>\"", "<>", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"column", "\[Equal]", "5"}], ",", "\"\<Blue\>\"", ",", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"column", "\[Equal]", "4"}], ",", "\"\<Green\>\"", 
                ",", "\"\<Red\>\""}], "]"}]}], "]"}], "<>", 
            "\"\< Clusters\>\""}]}], ",", 
          RowBox[{"FrameLabel", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{"\"\<Time (frames)\>\"", ",", "\"\<Size (pixels)\>\""}], 
            "}"}]}], ",", 
          RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
          RowBox[{"PlotMarkers", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
              RowBox[{"Graphics`PlotMarkers", "[", "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{"shapeN", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
             "size"}], "}"}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"column", "\[Equal]", "5"}], ",", 
       RowBox[{"p6", "=", "p7"}], ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"column", "\[Equal]", "4"}], ",", 
         RowBox[{"p5", "=", "p7"}], ",", 
         RowBox[{"p4", "=", "p7"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"redis", "//", "Flatten"}], "//", 
        RowBox[{
         RowBox[{"HistogramList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "10", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
          "]"}], "&"}]}], ",", 
       RowBox[{
        RowBox[{"greenis", "//", "Flatten"}], "//", 
        RowBox[{
         RowBox[{"HistogramList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "10", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
          "]"}], "&"}]}], ",", 
       RowBox[{
        RowBox[{"blueis", "//", "Flatten"}], "//", 
        RowBox[{
         RowBox[{"HistogramList", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "10", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\"\<Log\>\"", ",", "\"\<Probability\>\""}], "}"}]}], 
          "]"}], "&"}]}], ",", "p4d", ",", "p5d", ",", "p6d", ",", "p1", ",", 
       "p2", ",", "p3", ",", "p4", ",", "p5", ",", "p6"}], "}"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzVtIk3EYBvBPHZ8rzHCVggzKA1oGbtXNPFLMwxTxML0YOJ0oFozJrGSK
LAWdQUdFpxN1uAtNnUokQ8TDZAOVqWSU2kEk1E3mQkvUkThb3/O/ePjx8ML7
hJUqxeW+FEVFM4GixM2OV6O/HphjHd1Q3u+xwvfhHUvQo9GswO0D/TqstLRv
QVvUEzvkLhY64aUoqQtmZwnZrxl5U4pA+Dnu6TXSOX1E7UJRKFz+MBgBg4Uz
N6GB9+gutKX+SIDq+skk6P76LQ/+GVNJ4UVW5D6cmOWdwHVa7iE72km/N4yq
5Ww2/HnFGggle1eD4cN3PVw4QK/dgA1C8z3YWfBSAHvt48SJc58cqGupzIPU
s1opHLObimGKskIOr6szK2D8na3HcCd6Vw0V/Jou8o9j0cPvfIcR0iMCE7TI
ZJ9gsvjfKry/WbJBdrUXdqFLN3QIAxzzRzDE1XoKF6oVHtj2Yu/WW8YEkYoP
zbnKcUjVlU3B8ETnHFwt8H6EdArrC5QLmtagf/fRDnweQ9vhsMRwQO5V07+h
UZdzDDVsN7HRmn4GOaI2Lwy5HcRqZhxpzSeaew2XoW+ak1in5opbGDf+luVD
lzu+EJb6ZRD/A0WrWdA=
  "],ExpressionUUID->"09db4e26-f839-4739-8139-dce81c90c697"]
}, Closed]],

Cell[CellGroupData[{

Cell["MyMSDPlotter[myColorParameter_,color_]", "Subsection",
 CellChangeTimes->{{3.7033634332791195`*^9, 3.703363436122175*^9}, 
   3.7033635200950136`*^9},ExpressionUUID->"6a402888-a476-442e-bccc-\
eaad2904372b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyMSDPlotter", "[", 
   RowBox[{"myColorParameter_", ",", "color_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"msds", ",", "p1", ",", "p2", ",", "poz"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mycol", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"color", "\[Equal]", "\"\<Red\>\""}], "||", 
         RowBox[{"color", "\[Equal]", "\"\<Darker[Yellow,0.2]\>\""}], "||", 
         RowBox[{"color", "\[Equal]", "\"\<Purple\>\""}], "||", 
         RowBox[{"color", "\[Equal]", "\"\<White\>\""}]}], ",", "13", ",", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"color", "\[Equal]", "\"\<Green\>\""}], "||", 
           RowBox[{"color", "\[Equal]", "\"\<Cyan\>\""}]}], ",", "15", ",", 
          "17"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"myColorParameter", "\[NotEqual]", 
        RowBox[{"{", "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"msds", "=", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"poz", "=", 
             RowBox[{"myColorParameter", "[", 
              RowBox[{"[", 
               RowBox[{"j", ",", 
                RowBox[{"1", ";;", "All"}], ",", 
                RowBox[{"mycol", ";;", 
                 RowBox[{"mycol", "+", "1"}]}]}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{"Mean", "[", 
               RowBox[{"Total", "/@", 
                SuperscriptBox[
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Differences", "[", 
                    RowBox[{"#", ",", "1", ",", "i"}], "]"}], "&"}], "@", 
                   "poz"}], ")"}], "2"]}], "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{
                 RowBox[{"Length", "[", "poz", "]"}], "-", "1"}]}], "}"}]}], 
             "]"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"j", ",", "1", ",", 
             RowBox[{"Length", "[", "myColorParameter", "]"}], ",", "1"}], 
            "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p1", "=", 
         RowBox[{
          RowBox[{"msds", "[", 
           RowBox[{"[", 
            RowBox[{"1", ";;", "All"}], "]"}], "]"}], "//", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Frame #\>\"", ",", 
                "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
               "}"}]}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}]}], "]"}], 
           "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"p2", "=", 
         RowBox[{
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"Mean", "[", 
             RowBox[{
              RowBox[{"Cases", "[", 
               RowBox[{"msds", ",", 
                RowBox[{"x_", "/;", 
                 RowBox[{
                  RowBox[{"Length", "[", "x", "]"}], ">", "i"}]}]}], "]"}], 
              "\[LeftDoubleBracket]", 
              RowBox[{
               RowBox[{"1", ";;", "All"}], ",", "i"}], 
              "\[RightDoubleBracket]"}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{
               RowBox[{"Max", "@", 
                RowBox[{"(", 
                 RowBox[{"Length", "/@", "msds"}], ")"}]}], "/", "2"}], ",", 
              "1"}], "}"}]}], "]"}], "//", 
          RowBox[{
           RowBox[{"ListPlot", "[", 
            RowBox[{"#", ",", 
             RowBox[{"Joined", "\[Rule]", "True"}], ",", 
             RowBox[{"PlotTheme", "\[Rule]", "\"\<Detailed\>\""}], ",", 
             RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
             RowBox[{"PlotMarkers", "\[Rule]", "Automatic"}], ",", 
             RowBox[{"FrameLabel", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
               "\"\<Frame #\>\"", ",", 
                "\"\<MSD (\!\(\*SuperscriptBox[\(pix\), \(2\)]\))\>\""}], 
               "}"}]}], ",", 
             RowBox[{"BaseStyle", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"FontFamily", "\[Rule]", "\"\<Arial\>\""}], ",", 
                RowBox[{"FontSize", "\[Rule]", "12"}]}], "}"}]}], ",", 
             RowBox[{"PlotStyle", "\[Rule]", 
              RowBox[{"ToExpression", "[", "color", "]"}]}]}], "]"}], 
           "&"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"p2", ",", "p1"}], "}"}]}]}], "\[IndentingNewLine]", 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7033633976363707`*^9, 3.7033634043065166`*^9}, {
   3.7033634446063566`*^9, 3.703363494452468*^9}, {3.7033635582688527`*^9, 
   3.7033635793863087`*^9}, {3.703363719328355*^9, 3.7033638044862194`*^9}, {
   3.7088575637578373`*^9, 3.7088576490150914`*^9}, 3.708857830351329*^9, {
   3.708857923733378*^9, 3.7088579251766176`*^9}, {3.708858271321045*^9, 
   3.7088583576365824`*^9}, {3.7088584038471575`*^9, 3.708858502638214*^9}, {
   3.708858582381677*^9, 3.708858630781037*^9}, {3.7088586952449894`*^9, 
   3.7088587157962065`*^9}, {3.708858994354885*^9, 3.708858994964552*^9}, {
   3.708859280523344*^9, 3.7088592855260754`*^9}, {3.708859617696069*^9, 
   3.708859639859785*^9}, {3.7088596820381384`*^9, 3.708859701508578*^9}, {
   3.7088597351643853`*^9, 3.70885977992908*^9}, {3.7088598123956695`*^9, 
   3.7088598133515635`*^9}, 
   3.7088633626552286`*^9},ExpressionUUID->"ab1247ed-9265-4f3d-9d21-\
dd87850682d1"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{
  3.708859809880732*^9},ExpressionUUID->"fae8b39e-2db3-4313-9ab0-\
8085123e09f6"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
My3DImager[dir_, fileNameHead_, myt_, myx_, myy_, myc_, dimxy_, dz_, rangez_] \
dz in nanometers, assuming pixels are 130 nm\
\>", "Subsection",
 CellChangeTimes->{{3.702597482382226*^9, 
  3.7025975603424044`*^9}},ExpressionUUID->"a21f0844-85ab-4092-b22d-\
10c07527d548"],

Cell[BoxData[
 RowBox[{
  RowBox[{"My3DImager", "[", 
   RowBox[{
   "dir_", ",", "fileNameHead_", ",", "myt_", ",", "myx_", ",", "myy_", ",", 
    "myc_", ",", "dimxy_", ",", "dz_", ",", "rangez_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myImg3D", ",", "myGrid"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myImg3D", "=", 
      RowBox[{
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageTrim", "[", 
          RowBox[{
           RowBox[{"Import", "[", 
            RowBox[{
            "dir", "<>", "\"\<\\\\\>\"", "<>", "fileNameHead", "<>", 
             "\"\<_t\>\"", "<>", 
             RowBox[{"MyNumString", "[", 
              RowBox[{"myt", ",", "3"}], "]"}], "<>", "\"\<_z\>\"", "<>", 
             RowBox[{"MyNumString", "[", 
              RowBox[{"myz", ",", "3"}], "]"}], "<>", "\"\<_c\>\"", "<>", 
             RowBox[{"MyNumString", "[", 
              RowBox[{"myc", ",", "3"}], "]"}], "<>", "\"\<.tif\>\""}], "]"}],
            ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"myx", "-", "dimxy"}], ",", 
               RowBox[{"myy", "-", "dimxy"}]}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"myx", "+", "dimxy"}], ",", 
               RowBox[{"myy", "+", "dimxy"}]}], "}"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"myz", ",", 
           RowBox[{
           "rangez", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
           ",", 
           RowBox[{
           "rangez", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
           ",", "1"}], "}"}]}], "]"}], "//", 
       RowBox[{
        RowBox[{"Image3D", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ColorFunction", "\[Rule]", "\"\<XRay\>\""}], ",", 
          RowBox[{"Background", "\[Rule]", "Black"}], ",", 
          RowBox[{"BoxRatios", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"1.3", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
             RowBox[{"1.3", "*", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
             RowBox[{"5", "*", "dimz"}]}], "}"}]}]}], "]"}], "&"}]}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"myGrid", "=", 
      RowBox[{"Grid", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"myImg3D", "//", 
               RowBox[{
                RowBox[{"Image3DProjection", "[", 
                 RowBox[{"#", ",", "\"\<YZ\>\""}], "]"}], "&"}]}], "//", 
              "ImageAdjust"}], "//", 
             RowBox[{
              RowBox[{"ImageResize", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1.3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
                  RowBox[{"5", "*", "dimz"}]}], "}"}]}], "]"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"ImageRotate", "[", 
              RowBox[{"#", ",", 
               RowBox[{
                RowBox[{"-", "\[Pi]"}], "/", "2"}]}], "]"}], "&"}]}], ",", 
           RowBox[{
            RowBox[{
             RowBox[{"myImg3D", "//", 
              RowBox[{
               RowBox[{"Image3DProjection", "[", 
                RowBox[{"#", ",", "\"\<XY\>\""}], "]"}], "&"}]}], "//", 
             "ImageAdjust"}], "//", 
            RowBox[{
             RowBox[{"ImageResize", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"1.3", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
                 RowBox[{"1.3", " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"2", " ", "dimxy"}], " ", "+", "1"}], ")"}]}]}], 
                " ", "}"}]}], "]"}], "&"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{",", " ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"myImg3D", "//", 
               RowBox[{
                RowBox[{"Image3DProjection", "[", 
                 RowBox[{"#", ",", "\"\<XZ\>\""}], "]"}], "&"}]}], "//", 
              "ImageAdjust"}], "//", 
             RowBox[{
              RowBox[{"ImageResize", "[", 
               RowBox[{"#", ",", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"1.3", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
                  RowBox[{"5", "*", "dimz"}]}], "}"}]}], "]"}], "&"}]}], "//", 
            RowBox[{
             RowBox[{"ImageReflect", "[", 
              RowBox[{"#", ",", 
               RowBox[{"Left", "\[Rule]", "Right"}]}], "]"}], "&"}]}]}], 
          "}"}]}], "}"}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.7025966134765973`*^9, 3.7025967014998627`*^9}, {
  3.7025968024916396`*^9, 3.702596806741683*^9}, {3.702596871519726*^9, 
  3.702596882303732*^9}, {3.702597085170679*^9, 3.702597102280223*^9}, {
  3.70259718262298*^9, 3.7025971948978977`*^9}, {3.7025972506998143`*^9, 
  3.7025972635593166`*^9}, {3.702597298754261*^9, 3.7025973357679443`*^9}, {
  3.7026437600039062`*^9, 
  3.702643773139658*^9}},ExpressionUUID->"9160aa85-6ba7-4dd1-b4f3-\
77b21fc55797"],

Cell[BoxData[
 RowBox[{
  RowBox[{"My3DImagerRaw", "[", 
   RowBox[{
   "dir_", ",", "fileNameHead_", ",", "myt_", ",", "myx_", ",", "myy_", ",", 
    "myc_", ",", "dimxy_", ",", "dz_", ",", "rangez_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"myImg3D", ",", "myGrid"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"myImg3D", "=", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageTrim", "[", 
         RowBox[{
          RowBox[{"Import", "[", 
           RowBox[{
           "dir", "<>", "\"\<\\\\\>\"", "<>", "fileNameHead", "<>", 
            "\"\<_t\>\"", "<>", 
            RowBox[{"MyNumString", "[", 
             RowBox[{"myt", ",", "3"}], "]"}], "<>", "\"\<_z\>\"", "<>", 
            RowBox[{"MyNumString", "[", 
             RowBox[{"myz", ",", "3"}], "]"}], "<>", "\"\<_c\>\"", "<>", 
            RowBox[{"MyNumString", "[", 
             RowBox[{"myc", ",", "3"}], "]"}], "<>", "\"\<.tif\>\""}], "]"}], 
          ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"myx", "-", "dimxy"}], ",", 
              RowBox[{"myy", "-", "dimxy"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"myx", "+", "dimxy"}], ",", 
              RowBox[{"myy", "+", "dimxy"}]}], "}"}]}], "}"}]}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"myz", ",", 
          RowBox[{
          "rangez", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
          ",", 
          RowBox[{
          "rangez", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
          ",", "1"}], "}"}]}], "]"}], "//", 
      RowBox[{
       RowBox[{"Image3D", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ColorFunction", "\[Rule]", "\"\<XRay\>\""}], ",", 
         RowBox[{"Background", "\[Rule]", "Black"}], ",", 
         RowBox[{"BoxRatios", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"1.3", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
            RowBox[{"1.3", "*", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"2", " ", "dimxy"}], "+", "1"}], ")"}]}], ",", 
            RowBox[{"5", "*", "dimz"}]}], "}"}]}]}], "]"}], "&"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7025966134765973`*^9, 3.7025967014998627`*^9}, {
   3.7025968024916396`*^9, 3.702596806741683*^9}, {3.702596871519726*^9, 
   3.702596882303732*^9}, {3.702597085170679*^9, 3.702597102280223*^9}, {
   3.70259718262298*^9, 3.7025971948978977`*^9}, {3.7025972506998143`*^9, 
   3.7025972635593166`*^9}, {3.702597298754261*^9, 3.7025973357679443`*^9}, {
   3.702604441189641*^9, 3.7026044659555087`*^9}, {3.702643792443762*^9, 
   3.702643796370987*^9}, 
   3.702644225862552*^9},ExpressionUUID->"366ae5bc-4370-4d1a-98da-\
8a24afa44a3f"]
}, Closed]],

Cell["Handchecking Functions", "Subsection",
 CellChangeTimes->{{3.7711044536534023`*^9, 
  3.771104462805997*^9}},ExpressionUUID->"fff8efca-8997-4f22-a255-\
839e90e3afa0"],

Cell[CellGroupData[{

Cell["Trim Corrector Interpolation", "Subsection",
 CellChangeTimes->{{3.727639058955162*^9, 
  3.7276390902800174`*^9}},ExpressionUUID->"15d41bf2-98fb-47a0-8cf1-\
fd1ce8507405"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTrimBGCorrecterAll", "[", "centrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"testimg", ",", 
      RowBox[{"myDot", "=", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIfiiHgg/0oPUoj
aFyA3vbRyn5ywai9tLV/uKTnUXqo0QB83Oah
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}]}], ",", "myDotImg", ",", "myDotImgD", 
      ",", "myDotImgDXY", ",", "p1", ",", "f", ",", "mySubImg", ",", 
      "myCorImg", ",", "CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testimg", "=", "centrim"}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImg", "=", 
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myDot", ",", "testimg"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgD", "=", 
      RowBox[{"ImageData", "@", "myDotImg"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgDXY", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", "myDotImgD", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "//", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"myDotImgDXY", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mySubImg", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "15", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myCorImg", "=", 
      RowBox[{"ImageSubtract", "[", 
       RowBox[{"testimg", ",", "mySubImg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], "}"}], "}"}], 
      "=", 
      RowBox[{"GetTrimPeakIntFixedSigmaAll", "[", 
       RowBox[{
        RowBox[{"{", "myCorImg", "}"}], ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"ListPlot3D", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", 
           RowBox[{"myCorImg", "//", "ImageData"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"centrim", ",", "myCorImg", ",", "mySubImg", ",", 
       RowBox[{"Show", "[", 
        RowBox[{
         RowBox[{"Plot3D", "[", 
          RowBox[{
           RowBox[{"CC", "+", 
            RowBox[{"A", " ", 
             RowBox[{"E", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", 
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                RowBox[{
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                 RowBox[{"(", 
                  RowBox[{"2", " ", 
                   RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "1", ",", "15"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y", ",", "1", ",", "15"}], "}"}], ",", 
           RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
           RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
           RowBox[{"MeshStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"{", 
              RowBox[{"Red", ",", "Thick"}], "}"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"Opacity", "[", "0", "]"}], "}"}]}]}], "]"}], ",", 
         "p1"}], "]"}], ",", "A"}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.727631334035967*^9, 3.727631726267456*^9}, {
  3.727631770493534*^9, 
  3.727631772474737*^9}},ExpressionUUID->"62de225e-74ce-403f-8a5a-\
0875b7ee4fb3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTrimBGCorrecter", "[", "centrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"testimg", ",", 
      RowBox[{"myDot", "=", 
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOmUkqSJIfiiHgg/0oPUoj
aFyA3vbRyn5ywai9tLV/uKTnUXqo0QB83Oah
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real", ColorSpace -> Automatic, Interleaving -> None],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}]}], ",", "myDotImg", ",", "myDotImgD", 
      ",", "myDotImgDXY", ",", "p1", ",", "f", ",", "mySubImg", ",", 
      "myCorImg", ",", "CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"testimg", "=", "centrim"}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImg", "=", 
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myDot", ",", "testimg"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgD", "=", 
      RowBox[{"ImageData", "@", "myDotImg"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myDotImgDXY", "=", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", "myDotImgD", ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "//", 
       RowBox[{
        RowBox[{"DeleteCases", "[", 
         RowBox[{"#", ",", 
          RowBox[{"x_", "/;", 
           RowBox[{
            RowBox[{"x", "[", 
             RowBox[{"[", "3", "]"}], "]"}], "\[Equal]", "0"}]}]}], "]"}], 
        "&"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"f", "=", 
      RowBox[{"Interpolation", "[", 
       RowBox[{"myDotImgDXY", ",", 
        RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"mySubImg", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"y", ",", "1", ",", "15", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"x", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"myCorImg", "=", 
      RowBox[{"ImageSubtract", "[", 
       RowBox[{"testimg", ",", "mySubImg"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], "}"}], "}"}], 
      "=", 
      RowBox[{"GetTrimPeakIntFixedSigmaAll", "[", 
       RowBox[{
        RowBox[{"{", "myCorImg", "}"}], ",", "1.5"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"p1", "=", 
      RowBox[{"ListPlot3D", "[", 
       RowBox[{"Flatten", "[", 
        RowBox[{
         RowBox[{"MapIndexed", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
              RowBox[{
               RowBox[{"#2", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
            "&"}], ",", 
           RowBox[{"myCorImg", "//", "ImageData"}], ",", 
           RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"A", ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"myCorImg", "//", "ImageData"}], "//", "Flatten"}], "//", 
         "Flatten"}], "//", "Total"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7276318545152817`*^9, 
  3.7276319114865813`*^9}},ExpressionUUID->"e27f3681-18dc-4b80-b76f-\
12c377d635eb"]
}, Closed]],

Cell[CellGroupData[{

Cell["Species Plot Function for FSXXLMS2 & SFXXLMS2", "Subsection",
 CellChangeTimes->{{3.7276263029335303`*^9, 3.727626321856364*^9}, {
  3.7277224979579563`*^9, 3.727722504088709*^9}, {3.7277239711660833`*^9, 
  3.7277239788603835`*^9}},ExpressionUUID->"586cf469-dcce-471e-b42e-\
28aaecf4db50"],

Cell[BoxData[
 RowBox[{
  RowBox[{"BandPass", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        RowBox[{"GaussianMatrix", "[", 
         RowBox[{"{", 
          RowBox[{"hi", ",", "lo"}], "}"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"imgc", "=", 
        RowBox[{"ImageConvolve", "[", 
         RowBox[{"img", ",", 
          FractionBox[
           RowBox[{"BoxMatrix", "[", "hi", "]"}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"2", " ", "hi"}], "+", "1"}], ")"}], "2"]]}], "]"}]}], 
       ";"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"ImageConvolve", "[", 
       RowBox[{"img", ",", 
        FractionBox[
         RowBox[{"DiskMatrix", "[", "hi", "]"}], 
         RowBox[{"Plus", "@@", 
          RowBox[{"Plus", "@@", 
           RowBox[{"DiskMatrix", "[", "hi", "]"}]}]}]]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"ImageSubtract", "[", 
      RowBox[{"imgb", ",", "imgc"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5750965858018923`*^9, 3.5750966952420454`*^9}, {
  3.5751516881187415`*^9, 3.5751517415788164`*^9}, {3.5787952659665294`*^9, 
  3.578795266902531*^9}},ExpressionUUID->"0aa9996a-50b4-434e-9c0a-\
00eaaada7493"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"BandPass", "[", 
    RowBox[{
     GraphicsBox[
      TagBox[RasterBox[CompressedData["
1:eJxc3XezbVWZx/uuui+io0gDksydg6STz9777JM5gKG77aBtEyQniYIoAqIe
lCgoSUREBbSRjKKAWTF29T/9Su73jk/NUdRdVXvV2mvNOeYIz3jC7wnjz99/
1p73/z9/8Ad/cH9/z/f3/33+wAc+8O53v/vAgQObN2/etm3bCSecsL6+vmfP
nu3bt//DP/zDysrKe9/73r7ZuHHj2trarl27Nm3atGHDhr//+7/fO179dNxx
x/Xe59NOO211dfVtb3tbt//zP//zSSed9B//8R99v2XLFld2++mnn/5v//Zv
Pah23ve+95188smnnHJKT+/9gx/8YP92TQ/dunVr19SHPmt8586d28ernvzd
3/1dV9bCvn376nAPqg9d2UDqZN3up63j1ZVvfetb+6kO++aYY47p167/x3/8
x/6t5R07duj8/v37Deev/uqvukafu/c973lPD2pQJqfHdW/TVeN90+P0ttt7
r/8nnnhiw+knw6xBs6fPW8br/e9/f3cdffTRTVdNnXrqqU3C2Wef3QVNeM9q
Jmu55/7rv/5rHWiuuqAu/dM//dN//ud/1o1/+Zd/Oeywwz70oQ8df/zxPVTH
+lyzZkmXGku/9mH37t21UyNd0BNruX52V73693//927pifvGq870uRb6vp40
lt67uBt7RO/NVZd1Qe30TW32iDrWhDS0Bl6bzWpzHqmYYTPTq7vqRp3pygbY
hx7XKOpnH2q81qLJPnTBnvHq3jkDzUYP6kN9+/CHP2xpoo0eUT+7qwmsV/W/
lntc9/bEuvHOd76zpfyLv/iLFqIvW8Fa7uJm4B/Hq3+7vuWIQrqgVajlvjGf
f/u3f9vtXdazaqH3Btt7z6qRHlcHehB66Ke+7Jt+tTTmthb6ppmswf3j1WVN
Zt/0XrPd0qh7epNmyK5H0qeMV9c05/W227vsr//6r7vF1oskkGh9bvjdWJt9
rmPd2LzVYFNR+01417dM9arJbFztnT53V//63F0tSq3VeB1u6v7mb/4GgXXj
scce23vt13LvNdvy1du62rQ00q7sp4bf7b3vHC+01xBqtrt63DnnnBNDqD/1
Sgt1ssnvS2TTNd1Yby1cPWn4LVMT0vfdMje7nrSzoo3a6VdbpoE0XX2uKWNE
aX3oEQje3PZlLAuN1W176l3veldjqTULXcv1oSv7tTXqvX+tXRdH861+1NLn
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
        "], {{0, 165}, {192, 0}}, {0, 255},
        ColorFunction->RGBColor],
       BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
       Selectable->False],
      BaseStyle->"ImageGraphics",
      ImageSize->{78., Automatic},
      ImageSizeRaw->{192, 165},
      PlotRange->{{0, 192}, {0, 165}}], ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", "12"}], "}"}]}], "]"}], "//", "ImageAdjust"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.575096671242012*^9, 3.575096685632032*^9}, {
  3.575151552048551*^9, 3.575151584238596*^9}, {3.5751527213321905`*^9, 
  3.575152738242214*^9}, {3.5787952704749374`*^9, 3.5787952717229395`*^9}, {
  3.648226188532628*^9, 3.6482261920908318`*^9}, {3.648226491268944*^9, 
  3.648226494211112*^9}, {3.6482313009610424`*^9, 3.6482313029911585`*^9}, {
  3.6482314723518453`*^9, 3.648231474766983*^9}, {3.6483038949211793`*^9, 
  3.6483038979373517`*^9}},ExpressionUUID->"4c331371-e3eb-4d7f-a250-\
10fad46c651b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeighted", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ComponentMeasurements", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{"img", ",", "imgc"}], "]"}], ",", 
        RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
      "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Show", "[", 
       RowBox[{"img", ",", 
        RowBox[{"Graphics", "[", 
         RowBox[{"{", 
          RowBox[{"Color", ",", 
           RowBox[{
            RowBox[{
             RowBox[{"Circle", "[", 
              RowBox[{"#", ",", 
               RowBox[{"hi", " ", "1.5"}]}], "]"}], "&"}], "/@", 
            RowBox[{"(", 
             RowBox[{"pos", "=", 
              RowBox[{
               RowBox[{"ComponentMeasurements", "[", 
                RowBox[{"imgc", ",", 
                 RowBox[{"{", "\"\<Centroid\>\"", "}"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "2", ",", "1"}], "]"}], "]"}]}], 
             ")"}]}]}], "}"}], "]"}]}], "]"}], ",", "pos"}], "}"}], "*)"}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, 3.7082569876100755`*^9, 
   3.7083825965615287`*^9},ExpressionUUID->"7ef2d0dd-5f28-4158-b369-\
af76ae850f03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindParticlesWeightedMask", "[", 
   RowBox[{"img_", ",", 
    RowBox[{"{", 
     RowBox[{"lo_", ",", "hi_"}], "}"}], ",", "max_", ",", "th_", ",", 
    "imgmask_", ",", 
    RowBox[{"{", 
     RowBox[{"small_", ",", "large_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"imgb", ",", "imgc", ",", "pos"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"imgb", "=", 
      RowBox[{"BandPass", "[", 
       RowBox[{"img", ",", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"imgc", "=", 
      RowBox[{"SelectComponents", "[", 
       RowBox[{
        RowBox[{"ImageMultiply", "[", 
         RowBox[{
          RowBox[{"imgb", "//", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"#", ",", " ", 
              RowBox[{"max", " ", "th"}]}], "]"}], "&"}]}], ",", "imgmask"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Count\>\"", ",", "\"\<AdjacentBorderCount\>\""}], "}"}],
         ",", 
        RowBox[{
         RowBox[{
          RowBox[{"small", "<", "#1", "<", "large"}], "&&", 
          RowBox[{"#2", "\[Equal]", "0"}]}], "&"}]}], "]"}]}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.5751527958022947`*^9, 3.5751528802924128`*^9}, {
   3.575152925492476*^9, 3.575153061152666*^9}, {3.5751531432227807`*^9, 
   3.5751531438627815`*^9}, {3.575153188922845*^9, 3.575153245352924*^9}, {
   3.5751533274730387`*^9, 3.5751533584830823`*^9}, {3.575153416033163*^9, 
   3.575153416743164*^9}, {3.575153718293586*^9, 3.5751537187735863`*^9}, {
   3.575157436595137*^9, 3.575157459425169*^9}, {3.5751582558262844`*^9, 
   3.5751582568962855`*^9}, {3.575166234180505*^9, 3.5751662566605363`*^9}, {
   3.5752405029781218`*^9, 3.5752405155081396`*^9}, 3.5752409476101503`*^9, {
   3.575241075013016*^9, 3.575241093953043*^9}, {3.575241128623091*^9, 
   3.5752411288630915`*^9}, {3.575241197793188*^9, 3.5752411981431885`*^9}, {
   3.5752413495734005`*^9, 3.5752413764734383`*^9}, {3.608917991298159*^9, 
   3.608917992241254*^9}, {3.6464847677413335`*^9, 3.646484783389229*^9}, {
   3.6485836816759624`*^9, 3.648583758596362*^9}, {3.6485838271562834`*^9, 
   3.6485838425561647`*^9}, {3.648584935277664*^9, 3.648584935773693*^9}, {
   3.653239142652603*^9, 3.653239166804985*^9}, {3.653239283964686*^9, 
   3.6532393084690876`*^9}, {3.6550415999770727`*^9, 
   3.6550416069970846`*^9}, {3.655041804633832*^9, 3.655041805772634*^9}, {
   3.6550418792175627`*^9, 3.6550418826339693`*^9}, {3.655059163882098*^9, 
   3.655059163986104*^9}, {3.655059211210805*^9, 3.655059211353813*^9}, {
   3.6552216016280055`*^9, 3.655221607020314*^9}, {3.6552232897335596`*^9, 
   3.6552232946458406`*^9}, {3.6552233416135273`*^9, 3.655223392261424*^9}, {
   3.6552241750611973`*^9, 3.65522418961403*^9}, {3.6553853018305316`*^9, 
   3.6553853463590784`*^9}, {3.7064175117925706`*^9, 
   3.7064175278289895`*^9}, {3.7064175826179943`*^9, 
   3.7064175944213734`*^9}, {3.708250397120329*^9, 3.708250404106188*^9}, {
   3.7082504460739756`*^9, 3.7082504507957506`*^9}, 3.7082516795254517`*^9, {
   3.7082520161449137`*^9, 3.708252025649684*^9}, {3.708252308189315*^9, 
   3.708252309186164*^9}, {3.7082566948533335`*^9, 3.7082567064482007`*^9}, {
   3.708510282112838*^9, 
   3.7085102832053924`*^9}},ExpressionUUID->"69075793-99f2-4418-9536-\
8e0a8166d020"],

Cell["\<\
I want to make a function that can look in each channel and try to find a \
particle. After it does this I want it to do the donut to all channels (RGB). \
I want the output to be a list of Red Only, Yellow, White, and Purple spots. \
Within this list will be the RGB trims with the RGB donut intensity. Should \
have a list length of 3 and each one will be the how many spots there are.\
\>", "Text",
 CellChangeTimes->{{3.727557204215579*^9, 3.7275572566428785`*^9}, {
  3.7275572878338532`*^9, 
  3.7275573693423986`*^9}},ExpressionUUID->"5d6bff52-6ced-4b84-b0af-\
516fbf68e401"],

Cell[BoxData[
 RowBox[{
  RowBox[{"imgmask", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", "15", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "15", ",", "1"}], "}"}]}], "]"}], "//", 
    "Image"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7274841811677756`*^9, 3.727484204684121*^9}, 
   3.727556878721371*^9},ExpressionUUID->"32901978-3e79-4cc8-aa91-\
99d168beed5e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 
   3.7275767933998756`*^9}},ExpressionUUID->"68dbaf88-d94b-434b-8e7f-\
182358217c0f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                "}"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, {3.7306533396389585`*^9, 
   3.730653412733721*^9}, {3.7306534790410748`*^9, 3.730653491078511*^9}, {
   3.7306565375544868`*^9, 3.7306565547007227`*^9}, {3.7306569418372684`*^9, 
   3.7306569466166787`*^9}, 3.7336854071770325`*^9, 3.733685529755254*^9, {
   3.7336883828935237`*^9, 
   3.733688383409093*^9}},ExpressionUUID->"f50d7672-18fb-4e01-9e28-\
523b0357a349"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotDataFN", "[", 
   RowBox[{"mySpots_", ",", "mySpotFNs_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], "}"}],
                ",", 
               RowBox[{"mySpotFNs", "[", 
                RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}], ",", 
                 RowBox[{"mySpotFNs", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotFNs", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], 
              ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotFNs", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
             "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7313408926794353`*^9, 3.731340958257808*^9}, {
   3.7313409975455093`*^9, 3.7313409997229137`*^9}, {3.7336855343447123`*^9, 
   3.7336855373388643`*^9}, {3.733685660179097*^9, 3.733685661133805*^9}, {
   3.7336857657391624`*^9, 3.7336857660516815`*^9}, {3.7336858709923058`*^9, 
   3.7336858715622387`*^9}, {3.733685938288226*^9, 3.7336859430045447`*^9}, {
   3.7336860534655013`*^9, 3.7336860632921724`*^9}, {3.733686106551157*^9, 
   3.733686106659053*^9}, {3.733686157592886*^9, 3.7336861585170603`*^9}, {
   3.73368619493834*^9, 3.7336862006623545`*^9}, {3.733686279161891*^9, 
   3.733686284719052*^9}, {3.733686320104744*^9, 3.73368632059907*^9}, {
   3.7336864595329385`*^9, 3.733686461009547*^9}, {3.7336864995873227`*^9, 
   3.7336865002777543`*^9}, 3.733686547048807*^9, {3.733686585779167*^9, 
   3.7336865866083326`*^9}, {3.7336866239977956`*^9, 
   3.7336866247548027`*^9}, {3.733688208547043*^9, 3.7336882304319887`*^9}, {
   3.7336882664848857`*^9, 3.7336882671441045`*^9}, 
   3.7336883145217037`*^9},ExpressionUUID->"81d2ca67-5325-46e6-8c8b-\
441bb9aaabda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesPlotDataFN", "[", 
   RowBox[{
   "HCRedTracks_", ",", "myImageInterval_", ",", "my488and561Interval_"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "mytempSpots", ",", "tempRedOnlyList", ",", "tempYellowList", ",", 
      "tempWhiteList", ",", "tempPurpleList", ",", "mytempInts", ",", 
      "mytempCellFN", ",", "tempGPos", ",", "tempBPos", ",", "tempGSpot", ",",
       "tempBSpot"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempSpots", "=", 
         RowBox[{"HCRedTracks", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "3", ",", "spot", ",", "2"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"mytempInts", "=", 
         RowBox[{"HCRedTracks", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "3", ",", "spot", ",", "3"}], "]"}], "]"}]}], 
        ";", "\[IndentingNewLine]", 
        RowBox[{"mytempCellFN", "=", 
         RowBox[{"HCRedTracks", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "2"}], "]"}], "]"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"mytempSpots", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "//", "Mean"}], ")"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.5", ",", "0.12", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "9.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"mytempSpots", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "//", "Mean"}], ")"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.75", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "9.8"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
               RowBox[{"Range", "[", 
                RowBox[{"2", ",", 
                 RowBox[{
                  RowBox[{"Length", "@", 
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                  "myImageInterval"}], ",", 
                 RowBox[{"myImageInterval", " ", "my488and561Interval"}]}], 
                "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
                 RowBox[{"Range", "[", 
                  RowBox[{"2", ",", 
                   RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                    "myImageInterval"}], ",", 
                   RowBox[{"myImageInterval", " ", "my488and561Interval"}]}], 
                  "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                    "myImageInterval"}], ",", 
                    RowBox[{"myImageInterval", " ", "my488and561Interval"}]}],
                     "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}],
                 "]"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{"cell", ",", "spot", ",", "mytempSpots", ",", 
                   RowBox[{"Range", "[", 
                    RowBox[{"2", ",", 
                    RowBox[{
                    RowBox[{"Length", "@", 
                    RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "1", "]"}], "]"}]}], " ", 
                    "myImageInterval"}], ",", 
                    RowBox[{"myImageInterval", " ", "my488and561Interval"}]}],
                     "]"}], ",", "mytempInts", ",", "mytempCellFN"}], "}"}]}],
                 "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"cell", ",", "1", ",", 
         RowBox[{"Length", "@", "HCRedTracks"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", 
          RowBox[{"HCRedTracks", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "3"}], "]"}], "]"}]}], ",", "1"}], "}"}]}], 
      "]"}], ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772569084976136*^9, 3.772569097084089*^9}, {
   3.7753188863815784`*^9, 3.7753189120139766`*^9}, {3.7765540767700276`*^9, 
   3.776554092102455*^9}, 3.776554128734826*^9, {3.776554688662282*^9, 
   3.7765546933038054`*^9}, 3.7765547811317787`*^9, 3.7765548581074877`*^9, {
   3.776554917430843*^9, 3.776554929658655*^9}, {3.776554986619334*^9, 
   3.7765549957437344`*^9}, {3.7765551003254232`*^9, 
   3.7765551009816475`*^9}, {3.7765554671833706`*^9, 
   3.7765554947210336`*^9}, {3.776555823213256*^9, 3.77655582766786*^9}, {
   3.77655597667132*^9, 3.7765560445437665`*^9}, {3.776556390916318*^9, 
   3.7765564166374907`*^9}},ExpressionUUID->"5cfe949f-8662-4614-935e-\
1f675a8fef77"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesSFPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.8", ",", "0.14", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.5"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.5"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
            "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
              "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntG", ",", "tempIntB"}], "}"}]}], "}"}]}], 
                "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, 3.727722548609498*^9, {
   3.727722583207616*^9, 3.7277225860601945`*^9}, 3.7277227131397*^9, 
   3.727722815726414*^9, 3.727722851113195*^9, {3.727722924108713*^9, 
   3.727722928695131*^9}, 3.7277229670202184`*^9, {3.7277230907794256`*^9, 
   3.7277231007245646`*^9}, 3.7277231652633066`*^9, 3.727723256009217*^9, {
   3.727723947145483*^9, 3.727723947230341*^9}, {3.7280542326277814`*^9, 
   3.7280542571551847`*^9}},ExpressionUUID->"e97e6b77-5d05-4caf-882f-\
3cef90934858"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesSFPlotData", "[", "mySpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.9", ",", "0.14", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.2"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                "}"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}], ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}]}], "}"}]}], "]"}]}]}], "]"}]}], "]"}]}], "]"}]}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, {3.7306533396389585`*^9, 
   3.730653412733721*^9}, {3.7306534790410748`*^9, 3.730653491078511*^9}, {
   3.7306565375544868`*^9, 3.7306565547007227`*^9}, {3.7306569418372684`*^9, 
   3.7306569466166787`*^9}, {3.7313423755209684`*^9, 
   3.7313423756769686`*^9}, {3.731342412977272*^9, 3.7313424917211113`*^9}, {
   3.7318551752654285`*^9, 3.7318551773305473`*^9}, {3.7318553164345036`*^9, 
   3.731855324306152*^9}, {3.7318555204957695`*^9, 3.7318555237939587`*^9}, {
   3.7318556999222307`*^9, 3.731855709105756*^9}, {3.731855838786173*^9, 
   3.731855873186141*^9}},ExpressionUUID->"422542ea-d54a-4237-93ca-\
32618c87aef8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SpeciesSFPlotDataFN", "[", 
   RowBox[{"mySpots_", ",", "mySpotsFN_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"mytempSpots", "=", "mySpots"}], ",", "tempRedOnlyList", ",", 
      "tempYellowList", ",", "tempWhiteList", ",", "tempPurpleList", ",", 
      "ringMask", ",", "diskMask", ",", "ringSize", ",", "diskSize", ",", 
      "mytempIntB", ",", "bgtempIntB", ",", "mytempIntG", ",", "bgtempIntG", 
      ",", "tempIntB", ",", "tempIntG", ",", "tempRSpot", ",", "tempGSpot", 
      ",", "tempBSpot", ",", "tempGPos", ",", "tempBPos", ",", "mytempIntR", 
      ",", "bgtempIntR", ",", "tempIntR"}], "}"}], ",", "\n", 
    RowBox[{
     RowBox[{"tempRedOnlyList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempYellowList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempWhiteList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempPurpleList", "=", 
      RowBox[{"{", "}"}]}], ";", "\n", 
     RowBox[{"ringMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"6", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}], "-", 
        RowBox[{"DiskMatrix", "[", 
         RowBox[{"3", ",", 
          RowBox[{"{", 
           RowBox[{"15", ",", "15"}], "}"}]}], "]"}]}], " ", "]"}]}], ";", 
     "\n", 
     RowBox[{"diskMask", "=", 
      RowBox[{"Image", "[", 
       RowBox[{"DiskMatrix", "[", 
        RowBox[{"2", ",", 
         RowBox[{"{", 
          RowBox[{"15", ",", "15"}], "}"}]}], "]"}], " ", "]"}]}], ";", "\n", 
     RowBox[{"ringSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"ringMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"diskSize", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"diskMask", "//", "ImageData"}], "//", "Total"}], "//", 
       "Total"}]}], ";", "\n", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"mytempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntR", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"mytempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntB", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "3"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"mytempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"diskMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", "\n", 
        RowBox[{"bgtempIntG", "=", 
         RowBox[{
          RowBox[{
           RowBox[{"Total", "[", 
            RowBox[{"Flatten", "[", 
             RowBox[{"ImageData", "[", 
              RowBox[{"ImageMultiply", "[", 
               RowBox[{"ringMask", ",", "#"}], "]"}], "]"}], "]"}], "]"}], 
           "&"}], "@", 
          RowBox[{"mytempSpots", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "2"}], "]"}], "]"}]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntR", "=", 
         RowBox[{
          FractionBox["mytempIntR", "diskSize"], "-", 
          FractionBox["bgtempIntR", "ringSize"]}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"tempIntB", "=", 
         RowBox[{
          FractionBox["mytempIntB", "diskSize"], "-", 
          FractionBox["bgtempIntB", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempIntG", "=", 
         RowBox[{
          FractionBox["mytempIntG", "diskSize"], "-", 
          FractionBox["bgtempIntG", "ringSize"]}]}], ";", "\n", 
        RowBox[{"tempGPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "2"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "12"}], "}"}], ",", "1.9", ",", "0.14", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.2"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempBPos", "=", 
         RowBox[{"Cases", "[", 
          RowBox[{
           RowBox[{"FindParticlesWeighted", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"mytempSpots", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "3"}], "]"}], "]"}], "//", 
              "ImageAdjust"}], ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "4"}], "}"}], ",", "1", ",", "0.13", ",", 
             "imgmask", ",", 
             RowBox[{"{", 
              RowBox[{"1", ",", "100"}], "}"}]}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"6", "\[LessEqual]", 
             RowBox[{"x", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "8.8"}]}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"tempGSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempGPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.2"}]}], ",", "tempGPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"tempBSpot", "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempBPos"}], "\[NotEqual]", "0"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "1"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}], "&&", 
              RowBox[{"6", "\[LessEqual]", 
               RowBox[{"tempBPos", "[", 
                RowBox[{"[", 
                 RowBox[{"1", ",", "2"}], "]"}], "]"}], "\[LessEqual]", 
               "8.8"}]}], ",", "tempBPos", ",", 
             RowBox[{"{", "}"}]}], "]"}], ",", 
           RowBox[{"{", "}"}]}], "]"}]}], ";", "\n", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
           RowBox[{
            RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
          RowBox[{"tempWhiteList", "=", 
           RowBox[{"Append", "[", 
            RowBox[{"tempWhiteList", ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", "spot", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], "}"}],
                ",", 
               RowBox[{"mySpotsFN", "[", 
                RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Length", "@", "tempGSpot"}], ">", "0"}], "&&", 
             RowBox[{
              RowBox[{"Length", "@", "tempBSpot"}], "\[Equal]", "0"}]}], ",", 
            RowBox[{"tempYellowList", "=", 
             RowBox[{"Append", "[", 
              RowBox[{"tempYellowList", ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"mytempSpots", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                  "}"}], ",", 
                 RowBox[{"mySpotsFN", "[", 
                  RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], ",", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"Length", "@", "tempGSpot"}], "\[Equal]", "0"}], "&&", 
               RowBox[{
                RowBox[{"Length", "@", "tempBSpot"}], ">", "0"}]}], ",", 
              RowBox[{"tempPurpleList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempPurpleList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotsFN", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}], 
              ",", 
              RowBox[{"tempRedOnlyList", "=", 
               RowBox[{"Append", "[", 
                RowBox[{"tempRedOnlyList", ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"mytempSpots", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"tempIntR", ",", "tempIntG", ",", "tempIntB"}], 
                    "}"}], ",", 
                   RowBox[{"mySpotsFN", "[", 
                    RowBox[{"[", "spot", "]"}], "]"}]}], "}"}]}], "]"}]}]}], 
             "]"}]}], "]"}]}], "]"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", " ", "1", ",", " ", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\n", 
     RowBox[{"{", 
      RowBox[{
      "tempRedOnlyList", ",", "tempYellowList", ",", "tempWhiteList", ",", 
       "tempPurpleList"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7275597304067507`*^9, 3.727559773411307*^9}, {
   3.7275598070713043`*^9, 3.7275598306830387`*^9}, {3.7275598626553583`*^9, 
   3.727560033282771*^9}, 3.7275601173387585`*^9, {3.7275607591790533`*^9, 
   3.7275607618667183`*^9}, {3.7275614560480084`*^9, 3.727561459814039*^9}, {
   3.7275624388814845`*^9, 3.727562448932534*^9}, {3.7275625081575823`*^9, 
   3.7275625351976204`*^9}, {3.727562646251978*^9, 3.727562651596304*^9}, {
   3.727563271771695*^9, 3.7275632835006332`*^9}, {3.727563488483347*^9, 
   3.7275634889365177`*^9}, {3.7275635725079184`*^9, 
   3.7275635854624395`*^9}, {3.7275636728309793`*^9, 
   3.7275637014123096`*^9}, {3.727563900205445*^9, 3.727563908565692*^9}, {
   3.7275639925276303`*^9, 3.7275640407048097`*^9}, {3.7275641435907636`*^9, 
   3.727564157185986*^9}, {3.7275642414448037`*^9, 3.7275642579467096`*^9}, {
   3.7275643716697984`*^9, 3.7275643745919266`*^9}, {3.7275645610025826`*^9, 
   3.7275645765823717`*^9}, {3.7275647667118683`*^9, 3.727564776025501*^9}, {
   3.727564994595694*^9, 3.7275649961582146`*^9}, {3.727565031380721*^9, 
   3.727565038366001*^9}, {3.727565216009788*^9, 3.7275652234793386`*^9}, {
   3.7275654144372015`*^9, 3.7275654816788955`*^9}, {3.72756558564312*^9, 
   3.727565596487893*^9}, {3.727565825246664*^9, 3.727565830294217*^9}, {
   3.7275659928582697`*^9, 3.7275660303466415`*^9}, {3.7275661160156746`*^9, 
   3.727566141828221*^9}, {3.727566325512372*^9, 3.727566388434701*^9}, {
   3.727566471074253*^9, 3.727566486018536*^9}, {3.7275666376548214`*^9, 
   3.727566677655136*^9}, {3.7275678493943233`*^9, 3.727567927827355*^9}, {
   3.727568346785818*^9, 3.7275683533367224`*^9}, {3.7275687562802706`*^9, 
   3.72756875829235*^9}, {3.727569001751335*^9, 3.7275690042848587`*^9}, {
   3.7275690838700113`*^9, 3.727569105134203*^9}, {3.727569194510257*^9, 
   3.727569199231344*^9}, {3.727569312085497*^9, 3.7275693226846933`*^9}, {
   3.7275707177633443`*^9, 3.727570735653425*^9}, {3.7275711043149214`*^9, 
   3.727571244095045*^9}, {3.727571511290452*^9, 3.727571555254011*^9}, {
   3.727571587501108*^9, 3.727571613544325*^9}, {3.7275718582829885`*^9, 
   3.7275718618146343`*^9}, {3.72757189454249*^9, 3.727571930622487*^9}, {
   3.7275720301394978`*^9, 3.7275720322234707`*^9}, {3.727572099580765*^9, 
   3.7275721421709876`*^9}, {3.7275724522998004`*^9, 
   3.7275724812085924`*^9}, {3.7275725864185076`*^9, 
   3.7275725877936783`*^9}, {3.7275727712207813`*^9, 
   3.7275727822947283`*^9}, {3.7275728631852474`*^9, 
   3.7275728645758605`*^9}, {3.727572952413108*^9, 3.7275729558994627`*^9}, {
   3.727573052284537*^9, 3.7275730573315706`*^9}, {3.7275732443377275`*^9, 
   3.727573254362134*^9}, {3.7275733269308777`*^9, 3.727573327633918*^9}, {
   3.727573444619197*^9, 3.727573444900596*^9}, {3.727573554439266*^9, 
   3.727573570418919*^9}, 3.7275736623408184`*^9, 3.7275737451871867`*^9, 
   3.7275738468487473`*^9, 3.727573986485061*^9, {3.727574113747354*^9, 
   3.72757411443509*^9}, 3.7275742076438274`*^9, {3.727574419305231*^9, 
   3.727574423711939*^9}, 3.7275744857449865`*^9, {3.7275745732052603`*^9, 
   3.727574573377009*^9}, 3.727574793064417*^9, 3.7275749123094616`*^9, {
   3.727575000015519*^9, 3.727575000750104*^9}, {3.7275751960305185`*^9, 
   3.7275752090799913`*^9}, {3.727575387906787*^9, 3.7275753885316963`*^9}, {
   3.727575442128422*^9, 3.7275754429253855`*^9}, {3.727575600063656*^9, 
   3.7275756104563065`*^9}, 3.7275757076612144`*^9, 3.7275758103805285`*^9, {
   3.7275760467058797`*^9, 3.7275760661775475`*^9}, 3.7275765115087547`*^9, {
   3.727576595187125*^9, 3.727576595642017*^9}, 3.727576661039774*^9, {
   3.7275767882329593`*^9, 3.7275767933998756`*^9}, 3.727722548609498*^9, {
   3.727722583207616*^9, 3.7277225860601945`*^9}, 3.7277227131397*^9, 
   3.727722815726414*^9, 3.727722851113195*^9, {3.727722924108713*^9, 
   3.727722928695131*^9}, 3.7277229670202184`*^9, {3.7277230907794256`*^9, 
   3.7277231007245646`*^9}, 3.7277231652633066`*^9, 3.727723256009217*^9, {
   3.727723947145483*^9, 3.727723947230341*^9}, {3.7280542326277814`*^9, 
   3.7280542571551847`*^9}, {3.7313423067557583`*^9, 3.73134231399818*^9}, {
   3.7313426995603204`*^9, 3.7313427440858464`*^9}, {3.7318551148015738`*^9, 
   3.731855117457726*^9}, {3.731855328882414*^9, 3.731855331169544*^9}, {
   3.73185548829173*^9, 3.7318555136173763`*^9}, {3.731855648290079*^9, 
   3.7318556873943157`*^9}, {3.7318558800825353`*^9, 3.731855888850235*^9}, 
   3.7318575285643787`*^9, 3.731857650052526*^9, {3.7318578823234057`*^9, 
   3.7318578840515046`*^9}, {3.7318580190734253`*^9, 
   3.7318580196204567`*^9}},ExpressionUUID->"05e480b1-5272-4765-ba6e-\
fe40ce5e1f96"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FilterGlobules", "[", "myBlueSpots_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"tempGoodList", ",", "tempCrapList", ",", 
      RowBox[{"mytempSpots", "=", "myBlueSpots"}]}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tempGoodList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"tempCrapList", "=", 
      RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Length", "@", 
           RowBox[{"(", 
            RowBox[{"FindParticlesWeighted", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"mytempSpots", "[", 
                RowBox[{"[", 
                 RowBox[{"spot", ",", "1", ",", "3"}], "]"}], "]"}], "//", 
               "ImageAdjust"}], ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "12"}], "}"}], ",", "1.3", ",", "0.083", ",",
               "imgmask", ",", 
              RowBox[{"{", 
               RowBox[{"1", ",", "32"}], "}"}]}], "]"}], ")"}]}], "\[Equal]", 
          "0"}], ",", 
         RowBox[{"tempCrapList", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"tempCrapList", ",", 
            RowBox[{"{", 
             RowBox[{"mytempSpots", "[", 
              RowBox[{"[", "spot", "]"}], "]"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"tempGoodList", "=", 
          RowBox[{"Append", "[", 
           RowBox[{"tempGoodList", ",", 
            RowBox[{"{", 
             RowBox[{"mytempSpots", "[", 
              RowBox[{"[", "spot", "]"}], "]"}], "}"}]}], "]"}]}]}], "]"}], 
       "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", "1", ",", 
         RowBox[{"Length", "@", "mytempSpots"}], ",", "1"}], "}"}]}], "]"}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"tempGoodList", ",", "tempCrapList"}], "}"}]}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.728054666790614*^9, 3.72805468332656*^9}, {
   3.7280547602059574`*^9, 3.7280548810708704`*^9}, 3.728054952062931*^9, 
   3.7280549830387025`*^9, {3.7280550853765554`*^9, 3.7280551613279*^9}, {
   3.728055347744562*^9, 3.7280553479515743`*^9}, 3.728055511776944*^9, 
   3.7280555684181843`*^9, {3.7280556094565315`*^9, 3.728055611055623*^9}, 
   3.728055675714321*^9, {3.728055784592549*^9, 3.7280558147842755`*^9}, {
   3.728055904931432*^9, 3.728055930448891*^9}, {3.7280560985775075`*^9, 
   3.728056098784519*^9}, {3.7280573361462927`*^9, 3.7280573369453382`*^9}, 
   3.7280574552521048`*^9, {3.728057511921346*^9, 3.7280575410900145`*^9}, 
   3.7280575903538322`*^9, {3.728057860578288*^9, 3.728057860818302*^9}, 
   3.7280580091237845`*^9, {3.7318548269587135`*^9, 
   3.731854830748931*^9}},ExpressionUUID->"b1e893d2-5c08-49ce-90b1-\
708a1015b348"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ErrorBar", "Subsection",
 CellChangeTimes->{{3.7247754101693068`*^9, 
  3.7247754125214415`*^9}},ExpressionUUID->"fee8d20b-42bb-4e72-8c3a-\
813684f8c01b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"errorBar", "[", 
    RowBox[{"type_:", " ", "\"\<Rectangle\>\""}], "]"}], "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x0_", ",", "x1_"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y0_", ",", "y1_"}], "}"}]}], "}"}], ",", "value_", ",", 
    "meta_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"error", ",", 
      RowBox[{"mags", "=", 
       RowBox[{"QuantityMagnitude", "[", "value", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"error", "=", 
      RowBox[{"Flatten", "[", 
       RowBox[{"QuantityMagnitude", "[", "meta", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"error", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"error", "===", 
         RowBox[{"{", "}"}]}], ",", "0", ",", 
        RowBox[{"Last", "[", "error", "]"}]}], "]"}]}], ";", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"ChartElementData", "[", "type", "]"}], "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"x0", ",", "x1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"y0", ",", "y1"}], "}"}]}], "}"}], ",", "mags", ",", 
         "meta"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"Black", ",", 
         RowBox[{"Line", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x0", "+", "x1"}], ")"}], "/", "2"}], ",", 
                RowBox[{"y1", "-", "error"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"x0", "+", "x1"}], ")"}], "/", "2"}], ",", 
                RowBox[{"y1", "+", "error"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", "x0"}], "+", "x1"}], ")"}]}], ",", 
                RowBox[{"y1", "+", "error"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"x0", "+", 
                   RowBox[{"3", " ", "x1"}]}], ")"}]}], ",", 
                RowBox[{"y1", "+", "error"}]}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"3", " ", "x0"}], "+", "x1"}], ")"}]}], ",", 
                RowBox[{"y1", "-", "error"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"1", "/", "4"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"x0", "+", 
                   RowBox[{"3", " ", "x1"}]}], ")"}]}], ",", 
                RowBox[{"y1", "-", "error"}]}], "}"}]}], "}"}]}], "}"}], 
          "]"}]}], "}"}]}], "}"}]}]}], "]"}]}]], "Input",ExpressionUUID->\
"004a5ae0-31b1-4c90-b8c5-392576d9a600"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Trim Peak Intensity without Fixing the Sigma", "Subsection",
 CellChangeTimes->{{3.7247754364898124`*^9, 3.724775440457039*^9}, {
  3.7247754957692027`*^9, 3.7247755034016395`*^9}, {3.7247755654011855`*^9, 
  3.7247755676893167`*^9}},ExpressionUUID->"7353d79f-b778-4d01-9534-\
6c3b004f0138"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntSigmaIntergrate", "[", "myMeanTrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"A", " ", 
           SqrtBox[
            RowBox[{"2", " ", "\[Pi]"}]], " ", "a"}], "/.", 
          RowBox[{
           RowBox[{"myTrimtempGauss", "[", 
            RowBox[{"[", "fit", "]"}], "]"}], "[", 
           "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",ExpressionUUID->"5b59b97c-0b84-4507-a30a-\
2c6103f87ba6"]
}, Closed]],

Cell[CellGroupData[{

Cell["Get Trim Peak Intensity with Fixed Sigma", "Subsection",
 CellChangeTimes->{{3.724775626985708*^9, 
  3.7247756465858293`*^9}},ExpressionUUID->"608a76ed-e77e-4854-ba22-\
68db3e957192"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntFixedSigma", "[", 
   RowBox[{"myMeanTrim_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0", ",", "CC", ",", "A", ",", 
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"A", " ", "/.", 
          RowBox[{
           RowBox[{"myTrimtempGauss", "[", 
            RowBox[{"[", "fit", "]"}], "]"}], "[", 
           "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7247756524121623`*^9, 3.724775687147149*^9}, {
  3.727630767396172*^9, 
  3.727630773792183*^9}},ExpressionUUID->"62a3193d-d60f-4940-a362-\
83487cc4a578"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntFixedSigmaAll", "[", 
   RowBox[{"myMeanTrim_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0", ",", "CC", ",", "A", ",", 
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"CC", ",", "A", ",", "x0", ",", "y0"}], "}"}], " ", "/.", 
          RowBox[{
           RowBox[{"myTrimtempGauss", "[", 
            RowBox[{"[", "fit", "]"}], "]"}], "[", 
           "\"\<BestFitParameters\>\"", "]"}]}], "}"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7276301415386724`*^9, 3.7276301564210987`*^9}, 
   3.7276307803285947`*^9, 
   3.77125325462321*^9},ExpressionUUID->"db54a44c-cc70-4cba-bae0-\
68b7854125b7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntFixedSigma95Conf", "[", 
   RowBox[{"myMeanTrim_", ",", "sigma_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"x0", ",", "y0", ",", "CC", ",", "A", ",", 
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"sigma", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], 
              ",", "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SqrtBox[
              RowBox[{"2", " ", "\[Pi]"}]], " ", "sigma"}], "/.", 
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "fit", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ",", 
           RowBox[{"MyErrorPropagator", "[", 
            RowBox[{
             RowBox[{"x", " ", "y"}], ",", 
             RowBox[{"A", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", 
             RowBox[{"sigma", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", "1", ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", "1"}], "]"}]}], 
          "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7276301415386724`*^9, 3.7276301564210987`*^9}, 
   3.7276307803285947`*^9, 3.77125325462321*^9, {3.771253301344698*^9, 
   3.771253317951451*^9}, {3.7712534192309093`*^9, 
   3.7712534232585573`*^9}},ExpressionUUID->"39e76908-e17d-4a6e-b3f4-\
7a4ad5709fb5"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Get Integrated Trim Peak Intensity and Sigma and Peak Intensity 95% \
Confidence Interval Error Propagated\
\>", "Subsection",
 CellChangeTimes->{
  3.725307697492854*^9, {3.7253099681177263`*^9, 3.725310001941661*^9}, 
   3.771253144082409*^9},ExpressionUUID->"232578f9-4a21-4704-b292-\
e418ec341918"],

Cell[BoxData[
 RowBox[{
  RowBox[{"GetTrimPeakIntSigmaIntergrate95Conf", "[", "myMeanTrim_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"myTrim", "=", "myMeanTrim"}], ",", "myTrimtempData", ",", 
      "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"myTrimtempData", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ImageData", "[", 
         RowBox[{"myTrim", "[", 
          RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"spot", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrim"}], ",", "1"}], "}"}]}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"myTrimtempPos", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"Flatten", "[", 
         RowBox[{
          RowBox[{"MapIndexed", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
               RowBox[{
                RowBox[{"#2", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
             "&"}], ",", 
            RowBox[{"myTrimtempData", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myTrimtempGauss", "=", 
         RowBox[{"Quiet", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"NonlinearModelFit", "[", 
             RowBox[{
              RowBox[{"myTrimtempPos", "[", 
               RowBox[{"[", "i", "]"}], "]"}], ",", 
              RowBox[{"CC", "+", 
               RowBox[{"A", " ", 
                RowBox[{"E", "^", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                    RowBox[{"(", 
                    RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"CC", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"A", ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"x0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"a", ",", "1"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"y0", ",", "8"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
           "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"Flatten", "@", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"A", " ", 
             SqrtBox[
              RowBox[{"2", " ", "\[Pi]"}]], " ", "a"}], "/.", 
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "fit", "]"}], "]"}], "[", 
             "\"\<BestFitParameters\>\"", "]"}]}], ",", 
           RowBox[{"MyErrorPropagator", "[", 
            RowBox[{
             RowBox[{"x", " ", "y"}], ",", 
             RowBox[{"A", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", 
             RowBox[{"a", "/.", 
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "fit", "]"}], "]"}], "[", 
               "\"\<BestFitParameters\>\"", "]"}]}], ",", "1", ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], ",", 
             RowBox[{"Differences", "@", 
              RowBox[{
               RowBox[{
                RowBox[{"myTrimtempGauss", "[", 
                 RowBox[{"[", "fit", "]"}], "]"}], "[", 
                RowBox[{"\"\<ParameterConfidenceIntervals\>\"", ",", 
                 RowBox[{"ConfidenceLevel", "\[Rule]", " ", ".95"}]}], "]"}], 
               "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], ",", "1"}], "]"}]}], 
          "}"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"fit", ",", "1", ",", 
         RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7253080088086605`*^9, 3.725308086616111*^9}, {
   3.7253081245532804`*^9, 3.7253081564261036`*^9}, {3.7253081882829256`*^9, 
   3.7253082635772324`*^9}, {3.725308330569064*^9, 3.7253083962338195`*^9}, {
   3.7253084602044783`*^9, 3.7253084621205883`*^9}, {3.7253086580737963`*^9, 
   3.7253086603129244`*^9}, {3.7253090274339223`*^9, 
   3.7253090445409007`*^9}, {3.725309093082677*^9, 3.7253092390010233`*^9}, {
   3.725309288875876*^9, 3.7253092914030204`*^9}, {3.7253093924758015`*^9, 
   3.725309399129182*^9}, {3.7253094524912343`*^9, 3.7253094838820295`*^9}, {
   3.725379923149925*^9, 3.7253799249900303`*^9}, {3.726497320170211*^9, 
   3.7264973477820377`*^9}, 3.726497436642132*^9, {3.760826876182366*^9, 
   3.760826897598407*^9}, {3.760827034786384*^9, 3.76082706535353*^9}, {
   3.7712531460948124`*^9, 
   3.7712531533288803`*^9}},ExpressionUUID->"ed873ad7-5c1b-43e8-95bd-\
db2ef6f7b71a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Remove Trims which spots are large than 2 sigma for x position\
\>", "Subsection",
 CellChangeTimes->{{3.724775755098036*^9, 
  3.724775846217247*^9}},ExpressionUUID->"10884ae8-510f-4ab8-b229-\
bea13d0e2e69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetGoodTrims", "[", "myTrims_", "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "myTrims"}], ",", "myTrimtempData", 
       ",", "myTrimtempPos", ",", "myTrimtempGauss"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Part", "[", 
       RowBox[{"myTrimAllSpotsF", ",", 
        RowBox[{"Flatten", "@", 
         RowBox[{"Position", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{
              RowBox[{
               RowBox[{
               "myTrimtempGauss", "\[LeftDoubleBracket]", "i", 
                "\[RightDoubleBracket]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], ",", 
              RowBox[{"{", 
               RowBox[{"i", ",", "1", ",", 
                RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], 
               "}"}]}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
           RowBox[{"x_", "/;", 
            RowBox[{"x", "<", "2"}]}]}], "]"}]}]}], "]"}]}]}], "]"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7251169408171387`*^9, 
  3.725116940823139*^9}},ExpressionUUID->"10fd7d00-c9ed-4018-b6c4-\
c485ea36a69e"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Remove Trims which spots are larger than 2 sigma for x position and also \
taking the corresponding Blue Trim (For when there is no existing blue spot)\
\>", "Subsection",
 CellChangeTimes->{{3.7247758552577643`*^9, 
  3.724775902250452*^9}},ExpressionUUID->"2cedf0ed-be45-46c4-ae6d-\
d527ff15465b"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"GetGood0TrimsAndFSTrims", "[", 
    RowBox[{"my0Trims_", ",", "myFSTrims_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "my0Trims"}], ",", "myTrimtempData", 
       ",", "myTrimtempPos", ",", "myTrimtempGauss", ",", 
       RowBox[{"myTrimFSAllSpotsF", "=", "myFSTrims"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Part", "[", 
         RowBox[{"myTrimAllSpotsF", ",", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "myTrimtempGauss", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "[", 
                 "\"\<ParameterConfidenceIntervals\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], 
                 "}"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", "<", "2"}]}]}], "]"}]}]}], "]"}], ",", 
        RowBox[{"Part", "[", 
         RowBox[{"myTrimFSAllSpotsF", ",", 
          RowBox[{"Flatten", "@", 
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "myTrimtempGauss", "\[LeftDoubleBracket]", "i", 
                  "\[RightDoubleBracket]"}], "[", 
                 "\"\<ParameterConfidenceIntervals\>\"", "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"i", ",", "1", ",", 
                  RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], 
                 "}"}]}], "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "4", ",", "2"}], "]"}], "]"}], ",", 
             RowBox[{"x_", "/;", 
              RowBox[{"x", "<", "2"}]}]}], "]"}]}]}], "]"}]}], "}"}]}]}], 
    "]"}]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.7251169408261395`*^9, 
  3.72511694083714*^9}},ExpressionUUID->"50ad3241-57af-4ec1-8042-\
0e3df93e48a1"]
}, Closed]],

Cell[CellGroupData[{

Cell["FilterFitOutlier", "Subsection",
 CellChangeTimes->{{3.71629985262469*^9, 3.7162998590880604`*^9}, {
  3.7177712559439316`*^9, 
  3.7177712581020555`*^9}},ExpressionUUID->"09645c52-1503-45f4-ab7f-\
2d42664ef53b"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"(*", " ", 
   RowBox[{
    RowBox[{
    "This", " ", "function", " ", "removes", " ", "outliers", " ", "based", 
     " ", "on", " ", "intensity"}], ",", " ", 
    RowBox[{
     RowBox[{
     "90", "%", " ", "confidence", " ", "interval", " ", "of", " ", "xy", " ",
       "positions", " ", "and", " ", "the", " ", "size", " ", "of", " ", 
      "sigma"}], ";", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Tatsuya", "'"}], "s", " ", "Recipe", " ", "for", " ", "best", 
       " ", "Gaussian", " ", 
       RowBox[{"Data", ":", " ", "maxDxy_"}]}], " ", "=", " ", 
      RowBox[{
       RowBox[{"5", " ", "and", " ", "maxSig_"}], "=", " ", "20"}]}]}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FilterFitOutlier", "[", 
    RowBox[{"mySpotsFit_", ",", "maxDxy_", ",", "maxSig_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
       "idxSigY", ",", "idxOutliers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"idxInt", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "4", ",", "2", ",", "1"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"x", "<", "0"}], "||", 
           RowBox[{"x", ">", "2"}]}]}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"idxX90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Differences", "/@", "#"}], "&"}], "/@", 
            RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "5", ",", "1", ",", "1"}], 
             "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "maxDxy"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxY90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"Differences", "/@", "#"}], "&"}], "/@", 
            RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
             RowBox[{"All", ",", "All", ",", "5", ",", "1", ",", "2"}], 
             "\[RightDoubleBracket]"}]}], ")"}], "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], 
         ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "maxDxy"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSigX", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "4", ",", "3", ",", "1"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "maxSig"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxSigY", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"mySpotsFit", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "All", ",", "4", ",", "3", ",", "2"}], 
          "\[RightDoubleBracket]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "maxSig"}]}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"idxOutliers", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
        "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
         "idxSigY"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Delete", "[", 
       RowBox[{"mySpotsFit", ",", "idxOutliers"}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.7163079773033953`*^9, 3.7163080736239047`*^9}, {
  3.716308283583914*^9, 3.7163083117995276`*^9}, {3.7163083677277265`*^9, 
  3.7163083737850733`*^9}, {3.7175241617528915`*^9, 3.7175241618648977`*^9}, {
  3.7175242033692713`*^9, 3.717524205240379*^9}, {3.7175242379372487`*^9, 
  3.717524239273325*^9}, {3.7175250840096416`*^9, 3.7175250850256996`*^9}, {
  3.717771260303181*^9, 3.7177712633193536`*^9}, {3.7251401938411355`*^9, 
  3.725140216049406*^9}, {3.725140251282421*^9, 
  3.725140265313224*^9}},ExpressionUUID->"78c6484a-cb57-4b2b-aae9-\
6c7a5fbd2369"]
}, Open  ]],

Cell[CellGroupData[{

Cell["ErrorPropagator", "Subsection",
 CellChangeTimes->{{3.7247760566022806`*^9, 
  3.72477606271363*^9}},ExpressionUUID->"b1ece991-4722-4115-938c-\
afe25bca5bed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"MyErrorPropagator", "[", 
   RowBox[{
   "f_", ",", "xmean_", ",", "ymean_", ",", "zmean_", ",", "\[Sigma]x_", ",", 
    "\[Sigma]y_", ",", "\[Sigma]z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "x"}], "]"}], "2"], " ", 
         SuperscriptBox["\[Sigma]x", "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "y"}], "]"}], "2"], " ", 
         SuperscriptBox["\[Sigma]y", "2"]}], "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"D", "[", 
           RowBox[{"f", ",", "z"}], "]"}], "2"], " ", 
         SuperscriptBox["\[Sigma]z", "2"]}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "2"}], ")"}]}], ")"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", " ", "xmean"}], ",", 
     RowBox[{"y", "\[Rule]", " ", "ymean"}], ",", 
     RowBox[{"z", "\[Rule]", " ", "zmean"}]}], "}"}]}]}]], "Input",ExpressionU\
UID->"ca6f0176-b2f8-4e0c-8ca0-725caa1bd921"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Fitting Trims and Filtering Out Bad Spots, also using the 0 frame to take the \
-1 frame trims too, Usually use maxDxy of 5 and maxSig of 20!\
\>", "Subsection",
 CellChangeTimes->{{3.725205412179469*^9, 3.7252054492835913`*^9}, {
  3.725213345770244*^9, 
  3.7252133941380105`*^9}},ExpressionUUID->"0e8edc81-f560-43be-8e58-\
f0d36cc1ffe4"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FilterTrimFitOutlier0andFS", "[", 
    RowBox[{"my0Trims_", ",", "myFSTrims_", ",", "maxDxy_", ",", "maxSig_"}], 
    "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "my0Trims"}], ",", 
       RowBox[{"myTrimFSAllSpotsF", "=", "myFSTrims"}], ",", "myTrimtempData",
        ",", "myTrimtempPos", ",", "myTrimtempGauss", ",", "idxInt", ",", 
       "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", "idxSigY", ",", 
       "idxOutliers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"idxInt", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"x", "<", "0"}], "||", 
           RowBox[{"x", ">", "2"}]}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxX90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxY90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigX", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigY", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxOutliers", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
        "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
         "idxSigY"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Delete", "[", 
         RowBox[{"myTrimAllSpotsF", ",", "idxOutliers"}], "]"}], ",", 
        RowBox[{"Delete", "[", 
         RowBox[{"myTrimFSAllSpotsF", ",", "idxOutliers"}], "]"}]}], 
       "}"}]}]}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.725201383381035*^9, 3.7252014327208567`*^9}, {
   3.725201505541022*^9, 3.725201605744753*^9}, 3.725201708930655*^9, {
   3.7252042208363276`*^9, 3.725204240246438*^9}, {3.725204271763241*^9, 
   3.725204426520092*^9}, {3.7252044861655035`*^9, 3.7252045014453773`*^9}, {
   3.7252046446155663`*^9, 3.72520471671469*^9}, {3.7252051673364644`*^9, 
   3.725205171063678*^9}, {3.725205597512069*^9, 3.725205627703796*^9}, {
   3.7252134499492025`*^9, 3.72521349571082*^9}, {3.725213660832265*^9, 
   3.7252136725739365`*^9}},ExpressionUUID->"37a84e3e-ed08-47e3-8bed-\
f6c28f3c79a0"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"FilterTrimFitOutlier", "[", 
    RowBox[{"my0Trims_", ",", "maxDxy_", ",", "maxSig_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myTrimAllSpotsF", "=", "my0Trims"}], ",", "myTrimtempData", 
       ",", "myTrimtempPos", ",", "myTrimtempGauss", ",", "idxInt", ",", 
       "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", "idxSigY", ",", 
       "idxOutliers"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"myTrimtempData", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"ImageData", "[", 
          RowBox[{"myTrimAllSpotsF", "[", 
           RowBox[{"[", "spot", "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"spot", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimAllSpotsF"}]}], "}"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"myTrimtempPos", "=", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"MapIndexed", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "2", "]"}], "]"}], "1"}], ",", 
                RowBox[{
                 RowBox[{"#2", "[", 
                  RowBox[{"[", "1", "]"}], "]"}], "1"}], ",", "#1"}], "}"}], 
              "&"}], ",", 
             RowBox[{"myTrimtempData", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"{", "2", "}"}]}], "]"}], ",", "1"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "@", "myTrimtempData"}]}], "}"}]}], "]"}]}], ";",
       "\[IndentingNewLine]", 
      RowBox[{"myTrimtempGauss", "=", 
       RowBox[{"Quiet", "[", 
        RowBox[{"Table", "[", 
         RowBox[{
          RowBox[{"NonlinearModelFit", "[", 
           RowBox[{
            RowBox[{"myTrimtempPos", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{"CC", "+", 
             RowBox[{"A", " ", 
              RowBox[{"E", "^", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"x", "-", "x0"}], ")"}], "^", "2"}]}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"a", "^", "2"}]}], ")"}]}], "-", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"y", "-", "y0"}], ")"}], "^", "2"}], "/", 
                  RowBox[{"(", 
                   RowBox[{"2", " ", 
                    RowBox[{"b", "^", "2"}]}], ")"}]}]}], ")"}]}]}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"CC", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"A", ",", "0"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"a", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"y0", ",", "8"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b", ",", "1"}], "}"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", "y"}], "}"}]}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"i", ",", "1", ",", 
            RowBox[{"Length", "@", "myTrimtempPos"}], ",", "1"}], "}"}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"idxInt", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"2", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"x", "<", "0"}], "||", 
           RowBox[{"x", ">", "2"}]}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxX90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxY90Conf", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{"Differences", "@", "#"}], "&"}], "@", 
             RowBox[{
              RowBox[{
               RowBox[{"myTrimtempGauss", "[", 
                RowBox[{"[", "i", "]"}], "]"}], "[", 
               "\"\<ParameterConfidenceIntervals\>\"", "]"}], "[", 
              RowBox[{"[", "5", "]"}], "]"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"i", ",", "1", ",", 
              RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}],
            "]"}], "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{"x", ">", "5"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigX", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"4", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxSigY", "=", 
       RowBox[{"Position", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"myTrimtempGauss", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "[", 
             "\"\<ParameterTableEntries\>\"", "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"6", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "@", "myTrimtempGauss"}], ",", "1"}], "}"}]}], 
          "]"}], ",", 
         RowBox[{"x_", "/;", 
          RowBox[{
           RowBox[{"Abs", "@", "x"}], ">", "20"}]}]}], "]"}]}], ";", "\n", 
      RowBox[{"idxOutliers", "=", 
       RowBox[{"Union", "[", 
        RowBox[{
        "idxInt", ",", "idxX90Conf", ",", "idxY90Conf", ",", "idxSigX", ",", 
         "idxSigY"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"Delete", "[", 
       RowBox[{"myTrimAllSpotsF", ",", "idxOutliers"}], "]"}]}]}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.7252134259508305`*^9, 
  3.725213430366083*^9}},ExpressionUUID->"fbcc9076-e949-491b-93de-\
215a146a84db"]
}, Closed]],

Cell[CellGroupData[{

Cell["TrimsForSpeciesPlot[outputDirectory, Color, goodspotlist]", "Subsection",
 CellChangeTimes->{{3.7268579396390133`*^9, 
  3.726857981200719*^9}},ExpressionUUID->"84d9f2a1-4790-4a1b-b18e-\
2b35f96dcc09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"outDir_", ",", "myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"upto", ",", "myIs", ",", "temp", ",", "outName"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"StringPosition", "[", 
                RowBox[{
                 RowBox[{"goodspotlist", "[", 
                  RowBox[{"[", 
                   RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                 "\"\<_sorted\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotNumberRGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_Xred_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_Yred_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Ired_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"outDir", "<>", "\"\<\\\\\>\"", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.726854838016556*^9, 3.7268548682469263`*^9}, {
   3.726854904698144*^9, 3.7268551902937565`*^9}, {3.7268552970160575`*^9, 
   3.7268553011068573`*^9}, {3.7268554106137643`*^9, 3.726855484499131*^9}, 
   3.7268555620137763`*^9, {3.72685577239616*^9, 3.72685586117972*^9}, {
   3.726855939252792*^9, 3.7268559402713423`*^9}, 3.726856018187831*^9, {
   3.726856051880597*^9, 3.7268560521150656`*^9}, {3.7268560902562685`*^9, 
   3.72685610529656*^9}, {3.726856135485732*^9, 3.7268561538423824`*^9}, {
   3.726856193202156*^9, 3.726856200543499*^9}, {3.726856864219626*^9, 
   3.7268568862859383`*^9}, {3.7268569165790906`*^9, 
   3.7268569282250195`*^9}, {3.726856965044675*^9, 3.726856965982503*^9}, {
   3.7268570561885405`*^9, 3.72685706231516*^9}, {3.726857113004418*^9, 
   3.7268571209415483`*^9}, {3.726857222971142*^9, 3.7268572626764574`*^9}, {
   3.7268574457362967`*^9, 3.726857450594911*^9}, {3.7268576496073556`*^9, 
   3.726857664880804*^9}, {3.7268577733453007`*^9, 
   3.7268577746759357`*^9}},ExpressionUUID->"b58fc8c9-04e1-4cd4-b3f5-\
45f2c511215a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "upto", ",", "myIs", ",", "temp", ",", "aF", ",", "outName", ",", 
      "outDir"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"aF", "=", 
        RowBox[{"\"\<\\\\\\?\\\\\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringPosition", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
         "\"\<\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"StringPosition", "[", 
                RowBox[{
                 RowBox[{"goodspotlist", "[", 
                  RowBox[{"[", 
                   RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                 "\"\<_sorted\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
         RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_XR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_YR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5IR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"outDir", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"aF", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.726854838016556*^9, 3.7268548682469263`*^9}, {
   3.726854904698144*^9, 3.7268551902937565`*^9}, {3.7268552970160575`*^9, 
   3.7268553011068573`*^9}, {3.7268554106137643`*^9, 3.726855484499131*^9}, 
   3.7268555620137763`*^9, {3.72685577239616*^9, 3.72685586117972*^9}, {
   3.726855939252792*^9, 3.7268559402713423`*^9}, 3.726856018187831*^9, {
   3.726856051880597*^9, 3.7268560521150656`*^9}, {3.7268560902562685`*^9, 
   3.72685610529656*^9}, {3.726856135485732*^9, 3.7268561538423824`*^9}, {
   3.726856193202156*^9, 3.726856200543499*^9}, {3.726856864219626*^9, 
   3.7268568862859383`*^9}, {3.7268569165790906`*^9, 
   3.7268569282250195`*^9}, {3.726856965044675*^9, 3.726856965982503*^9}, {
   3.7268570561885405`*^9, 3.72685706231516*^9}, {3.726857113004418*^9, 
   3.7268571209415483`*^9}, {3.726857222971142*^9, 3.7268572626764574`*^9}, {
   3.7268574457362967`*^9, 3.726857450594911*^9}, {3.7268576496073556`*^9, 
   3.726857664880804*^9}, {3.7268577733453007`*^9, 3.7268577746759357`*^9}, {
   3.726859333401745*^9, 3.7268593857175007`*^9}, {3.726859435436879*^9, 
   3.7268594362807207`*^9}, 3.726859657067128*^9, {3.726862050280302*^9, 
   3.7268620845633063`*^9}, {3.7268621385972447`*^9, 
   3.7268621415411873`*^9}, {3.726862193582514*^9, 3.7268622320475135`*^9}, {
   3.726862281230372*^9, 3.7268623251947093`*^9}, {3.726862495125786*^9, 
   3.726862535374193*^9}, {3.7268625705858917`*^9, 3.7268625868553133`*^9}, {
   3.7268626344354897`*^9, 3.7268626850584717`*^9}, {3.726864448445756*^9, 
   3.726864473860623*^9}},ExpressionUUID->"14347ddc-2d1c-4536-a9d0-\
1fb78349d6b1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "upto", ",", "myIs", ",", "temp", ",", "aF", ",", "outName", ",", 
      "outDir"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"aF", "=", 
        RowBox[{"\"\<\\\\\\?\\\\\>\"", "<>", 
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringPosition", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
         "\"\<\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"StringPosition", "[", 
                  RowBox[{
                   RowBox[{"goodspotlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", 
                 "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
         RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_XR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_YR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5IR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"outDir", "=", 
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"aF", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{
  3.727025999614478*^9},ExpressionUUID->"582a2e45-c032-4c62-920f-\
de20fd431387"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TrimsForSpeciesPlot", "[", 
   RowBox[{"outDir_", ",", "myColor_", ",", "goodspotlist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"upto", ",", "myIs", ",", "temp", ",", "outName"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"upto", "=", 
        RowBox[{
         RowBox[{"StringPosition", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"myIs", "=", 
        RowBox[{
         RowBox[{"GetTrimPeakIntFixedSigma", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//",
          "Flatten"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"temp", "=", 
        RowBox[{
         RowBox[{"<<", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"StringTake", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"StringPosition", "[", 
                  RowBox[{
                   RowBox[{"goodspotlist", "[", 
                    RowBox[{"[", 
                    RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                   RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", 
                 "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
            "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
            "\"\<AllParameters.m\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
         RowBox[{"goodspotlist", "[", 
          RowBox[{"[", 
           RowBox[{"spot", ",", "2"}], "]"}], "]"}], 
         "\[RightDoubleBracket]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"outName", "=", 
        RowBox[{
         RowBox[{"StringDrop", "[", 
          RowBox[{
           RowBox[{"StringTake", "[", 
            RowBox[{
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"upto", "+", "2"}], ",", 
               RowBox[{"StringLength", "[", 
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
            "]"}], ",", 
           RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
         RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FrameN_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", 
         "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_XR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_YR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"temp", "[", 
           RowBox[{"[", 
            RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5IR_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixSig1p5Igreen_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
         "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
         RowBox[{"ToString", "[", 
          RowBox[{"myIs", "[", 
           RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
       ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"outDir", "<>", "\"\<\\\\\>\"", "<>", "outName"}], ",", 
         RowBox[{"ColorCombine", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "\"\<RGB\>\""}], 
          "]"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"spot", ",", "1", ",", 
        RowBox[{"Length", "@", "goodspotlist"}], ",", "1"}], "}"}]}], "]"}]}],
    "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.726854838016556*^9, 3.7268548682469263`*^9}, {
   3.726854904698144*^9, 3.7268551902937565`*^9}, {3.7268552970160575`*^9, 
   3.7268553011068573`*^9}, {3.7268554106137643`*^9, 3.726855484499131*^9}, 
   3.7268555620137763`*^9, {3.72685577239616*^9, 3.72685586117972*^9}, {
   3.726855939252792*^9, 3.7268559402713423`*^9}, 3.726856018187831*^9, {
   3.726856051880597*^9, 3.7268560521150656`*^9}, {3.7268560902562685`*^9, 
   3.72685610529656*^9}, {3.726856135485732*^9, 3.7268561538423824`*^9}, {
   3.726856193202156*^9, 3.726856200543499*^9}, {3.726856864219626*^9, 
   3.7268568862859383`*^9}, {3.7268569165790906`*^9, 
   3.7268569282250195`*^9}, {3.726856965044675*^9, 3.726856965982503*^9}, {
   3.7268570561885405`*^9, 3.72685706231516*^9}, {3.726857113004418*^9, 
   3.7268571209415483`*^9}, {3.726857222971142*^9, 3.7268572626764574`*^9}, {
   3.7268574457362967`*^9, 3.726857450594911*^9}, {3.7268576496073556`*^9, 
   3.726857664880804*^9}, {3.7268577733453007`*^9, 3.7268577746759357`*^9}, 
   3.7269534731566534`*^9, 3.771109640582051*^9, {3.7711096962699537`*^9, 
   3.771109719093383*^9}},ExpressionUUID->"7b998f18-d0ff-495c-831d-\
4fb671347a18"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"goodspotlist", "=", "goodredonlyspotlist"}], ";"}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.7269528111887913`*^9, 3.7269528263976607`*^9}, {
  3.7269531525263147`*^9, 3.726953155790501*^9}, {3.7269532251354675`*^9, 
  3.726953227918627*^9}},ExpressionUUID->"9ef5859c-4552-4eff-bb84-\
ae3ee468f638"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"spot", "=", "180"}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726952842898605*^9, 3.726952844877718*^9}, {
  3.7269530610390816`*^9, 3.726953061118086*^9}, {3.7269530994222775`*^9, 
  3.726953099598287*^9}, {3.7269531855192013`*^9, 3.726953209518574*^9}, {
  3.726953257406313*^9, 3.726953257582323*^9}, {3.726953322943062*^9, 
  3.726953419806602*^9}},ExpressionUUID->"2bbb5078-8b10-4b7f-9f44-\
24d489991eb5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"aF", "=", 
    RowBox[{"\"\<\\\\\\?\\\\\>\"", "<>", 
     RowBox[{"StringTake", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{"StringPosition", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
          "\"\<Analysis\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
     "\"\<\\\\\>\""}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"upto", "=", 
    RowBox[{
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", "\"\<Analysis\>\""}], 
      "]"}], "//", "Max"}]}], ";", "\[IndentingNewLine]", 
   RowBox[{"myIs", "=", 
    RowBox[{
     RowBox[{"GetTrimPeakIntFixedSigma", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "3"}], "]"}], "]"}], ",", "1.5"}], "]"}], "//", 
     "Flatten"}]}], ";"}], "*)"}]], "Input",ExpressionUUID->"25bd156a-9a62-\
49b1-b814-3ef8c566526c"],

Cell[BoxData[
 RowBox[{"(*", "aF", "*)"}]], "Input",
 CellChangeTimes->{{3.7269528472968564`*^9, 
  3.7269528479818954`*^9}},ExpressionUUID->"c3fba93d-b23b-4be2-94ee-\
32d5968d8c0a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"myColor", "=", "\"\<RedOnly\>\""}], ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726952869809144*^9, 3.726952873422351*^9}, {
  3.7269531378384743`*^9, 3.726953138414507*^9}, {3.72695323532705*^9, 
  3.726953237710187*^9}},ExpressionUUID->"c92d9e69-8dee-46b6-81c4-\
1d1f495707dc"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"StringPosition", "[", 
             RowBox[{
              RowBox[{"goodspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
              "\"\<_sorted\>\""}], "]"}], "//", "Max"}]}], "]"}], "<>", 
         "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
         "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
      RowBox[{"goodspotlist", "[", 
       RowBox[{"[", 
        RowBox[{"spot", ",", "2"}], "]"}], "]"}], "\[RightDoubleBracket]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outName1", "=", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"upto", "+", "2"}], ",", 
            RowBox[{"StringLength", "[", 
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
      RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FrameN_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<_XR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", "\"\<_YR_\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5IR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5Igreen_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
    ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.726953115824215*^9},ExpressionUUID->"ddbfd35f-8674-4c36-a719-\
fd0de12dd6df"],

Cell[BoxData[
 RowBox[{"(*", "outName1", "*)"}]], "Input",
 CellChangeTimes->{{3.726952859411549*^9, 3.726952860686622*^9}, 
   3.726953119438422*^9},ExpressionUUID->"5a23efa7-069b-41de-845f-\
15dde32e1171"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"StringPosition", "[", 
    RowBox[{
     RowBox[{"goodspotlist", "[", 
      RowBox[{"[", 
       RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", "\"\<_sorted\>\""}], 
    "]"}], "//", "Max"}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7269528923344326`*^9},ExpressionUUID->"cec616a7-16f6-441c-85b1-\
7f4849529907"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"StringTake", "[", 
   RowBox[{
    RowBox[{"goodspotlist", "[", 
     RowBox[{"[", 
      RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
    RowBox[{
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", "\"\<_sorted\>\""}], 
      "]"}], "//", "Max"}]}], "]"}], "*)"}]], "Input",ExpressionUUID->\
"f57cd704-380d-4098-b5f0-790019431eb6"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"goodspotlist", "[", 
   RowBox[{"[", 
    RowBox[{"spot", ",", "1"}], "]"}], "]"}], "*)"}]], "Input",
 FontWeight->"Plain",ExpressionUUID->"961f4ee2-b25a-43bd-a9e9-cc1ca7964460"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"StringPosition", "[", 
      RowBox[{
       RowBox[{"goodspotlist", "[", 
        RowBox[{"[", 
         RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
       RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", "Min"}], ")"}],
    "-", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726952899757857*^9, 3.7269529049101515`*^9}, {
  3.726952990800064*^9, 
  3.726953019710718*^9}},ExpressionUUID->"2f3f87ac-2b24-4f5f-8af6-\
9491c40e4f94"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{
    RowBox[{"temp", "=", 
     RowBox[{
      RowBox[{"<<", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"StringTake", "[", 
          RowBox[{
           RowBox[{"goodspotlist", "[", 
            RowBox[{"[", 
             RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"StringPosition", "[", 
               RowBox[{
                RowBox[{"goodspotlist", "[", 
                 RowBox[{"[", 
                  RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
                RowBox[{"\"\<my\>\"", "<>", "myColor"}]}], "]"}], "//", 
              "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
         "\"\<_FixedSigma\>\"", "<>", "myColor", "<>", 
         "\"\<ColorParameters.dat\>\""}], ")"}]}], "\[LeftDoubleBracket]", 
      RowBox[{"goodspotlist", "[", 
       RowBox[{"[", 
        RowBox[{"spot", ",", "2"}], "]"}], "]"}], "\[RightDoubleBracket]"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"outName", "=", 
     RowBox[{
      RowBox[{"StringDrop", "[", 
       RowBox[{
        RowBox[{"StringTake", "[", 
         RowBox[{
          RowBox[{"goodspotlist", "[", 
           RowBox[{"[", 
            RowBox[{"spot", ",", "1"}], "]"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"upto", "+", "2"}], ",", 
            RowBox[{"StringLength", "[", 
             RowBox[{"goodspotlist", "[", 
              RowBox[{"[", 
               RowBox[{"spot", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], 
         "]"}], ",", 
        RowBox[{"-", "2"}]}], "]"}], "<>", "\"\<SpotN\>\"", "<>", 
      RowBox[{"ToString", "[", "spot", "]"}], "<>", "\"\<RGB_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "1"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "]"}], "<>", "\"\<_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "3"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FrameN_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<to\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"5", ",", "4"}], "]"}], "]"}], "]"}], "<>", "\"\<_XR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "13"}], "]"}], "]"}], "]"}], "<>", "\"\<_YR_\>\"", 
      "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"temp", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "14"}], "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5IR_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixSig1p5Igreen_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "2", "]"}], "]"}], "]"}], "<>", 
      "\"\<_FixedSigma1p5Iblue_\>\"", "<>", 
      RowBox[{"ToString", "[", 
       RowBox[{"myIs", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "]"}], "<>", "\"\<.tif\>\""}]}], 
    ";"}]}], "*)"}]], "Input",
 CellChangeTimes->{
  3.7269530449141593`*^9},ExpressionUUID->"fa79adc9-6a46-4da8-bd6b-\
ae9adddab694"],

Cell[BoxData[
 RowBox[{"(*", "outName", "*)"}]], "Input",
 CellChangeTimes->{{3.726952859411549*^9, 
  3.726952860686622*^9}},ExpressionUUID->"c3852b83-5862-45f4-ba73-\
92164eba67e5"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"outName", "\[Equal]", "outName1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.726953125224753*^9, 
  3.7269531297580123`*^9}},ExpressionUUID->"e0e073d0-47d4-455b-9dde-\
3b7c0b689b18"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Analysis", "Section",
 CellChangeTimes->{{3.6483041433283873`*^9, 
  3.6483041519288793`*^9}},ExpressionUUID->"1be8c170-70bb-44ff-bf0e-\
3a585633d3ea"],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Reading in Maximum Projection Tif Images ",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 CellChangeTimes->{{3.5831236302316623`*^9, 3.5831236326916656`*^9}, {
   3.6097111426870265`*^9, 3.6097111439581537`*^9}, {3.6422513183492937`*^9, 
   3.642251333965187*^9}, {3.6783136569918723`*^9, 3.6783136621191654`*^9}, 
   3.678316094481289*^9, {3.7792037926619463`*^9, 
   3.779203800389388*^9}},ExpressionUUID->"920526e2-e0f8-43a0-ae0c-\
a0d6c663cf35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FileNameSetter", "[", 
    RowBox[{"Dynamic", "[", "mymovie", "]"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "mymovie", "]"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.651503548625061*^9, 3.651503549729124*^9}, {
  3.6515036971455555`*^9, 3.6515037273852854`*^9}, {3.6515038052497387`*^9, 
  3.651503807864888*^9}, {3.6515048066830177`*^9, 3.6515048169146028`*^9}, {
  3.6515052946509275`*^9, 3.651505295114954*^9}, {3.6515053260127215`*^9, 
  3.651505326890772*^9}, {3.651521020023368*^9, 
  3.651521093823589*^9}},ExpressionUUID->"164a1778-751f-4d48-92c3-\
f3ed7c4e7a27"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{Dynamic[$CellContext`mymovie],"Open",All},
    "FileNameSetterBoxes"], ",", 
   DynamicBox[ToBoxes[$CellContext`mymovie, StandardForm],
    ImageSizeCache->{49., {3., 9.}}]}], "}"}]], "Output",
 CellChangeTimes->{3.7065812023028316`*^9, 3.708244694989421*^9, 
  3.7088139612807713`*^9, 3.713542439089244*^9, 
  3.7144112771700954`*^9},ExpressionUUID->"7cad7cac-3a1f-4c7b-97d8-\
25f93aa297cc"]
}, Open  ]],

Cell["\<\
This will partition a three color movie, if the movie is not three colors \
then an error will occur\
\>", "Text",
 CellChangeTimes->{{3.7792156583826265`*^9, 
  3.7792157072784233`*^9}},ExpressionUUID->"67119e28-6cf3-414d-82c5-\
fa170086002c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymovie", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"FileBaseName", "[", "mymovie", "]"}], ",", "4"}], "]"}], 
      "\[Equal]", "\"\<AVG_\>\""}], ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"mymovie", ",", 
       RowBox[{"\"\<AVG_\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
     "mymovie"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myColMovie", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "mymovie", "]"}], "//", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectoryQ", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
        "\"\<Analysis\\\\\>\""}], ")"}]}], "\[Equal]", "False"}], ",", 
    RowBox[{"CreateDirectory", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
       "\"\<Analysis\\\\\>\""}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analysisFolder", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
    "\"\<Analysis\\\\\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7174432452321424`*^9},ExpressionUUID->"8f8d08c3-87d7-4e1b-a8a6-\
4d57096ad2c7"],

Cell["\<\
This is making an average image of the movie to help make a mask\
\>", "Text",
 CellChangeTimes->{{3.7792157124147167`*^9, 
  3.7792157303987455`*^9}},ExpressionUUID->"6ffc853a-df06-4af4-8a66-\
c1bd2d018262"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileExistsQ", "[", 
      RowBox[{"analysisFolder", "<>", "\"\<_avg.tif\>\""}], "]"}], "\[Equal]",
      "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"analysisFolder", "<>", "\"\<_avg.tif\>\""}], "]"}]}], ";"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Mean", "/@", "myColMovie"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"analysisFolder", "<>", "\"\<_avg.tif\>\""}], ")"}], ",", 
       "avgImg"}], "]"}]}]}], "]"}], ";"}]], "Input",
 CellChangeTimes->{{3.779204378359446*^9, 
  3.779204380966595*^9}},ExpressionUUID->"96d5818c-c7cb-4313-a859-\
6864c53f2774"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Make Masks of Cytoplasm and Nucleus", "Subsection",
 CellChangeTimes->{{3.678650616049817*^9, 3.6786506203690643`*^9}, {
  3.678650695665371*^9, 3.678650698023505*^9}, {3.7029286067245507`*^9, 
  3.702928608107577*^9}, {3.7792038561015744`*^9, 
  3.7792038656371202`*^9}},ExpressionUUID->"1525a9ab-d02f-487f-8e64-\
ce82c02b1517"],

Cell["\<\
Choose a nice threshold first such that you can make out the shape of the cell\
\>", "Text",
 CellChangeTimes->{{3.7792044022668133`*^9, 
  3.77920441794171*^9}},ExpressionUUID->"e0622622-8e77-4cad-8e9e-\
0030075b85ee"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"avgImg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
    "//", 
    RowBox[{
     RowBox[{"ImageAdjust", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"threshold1", ",", "threshold2"}], "}"}]}], "]"}], "&"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose threshold such that the shape of the cell can be visualized \
and CLICK\>\"", ",", 
     RowBox[{"thtemp", "=", 
      RowBox[{"{", 
       RowBox[{"threshold1", ",", "threshold2"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"threshold1", ",", "0", ",", "0.2", ",", "0.001"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold2", ",", "0.1"}], "}"}], ",", "0", ",", "0.2", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",ExpressionUUID->"e7864fd2-d74e-4dae-\
9c9f-d1a11569e86c"],

Cell["\<\
Run this next line to see your selected average image with the desired \
threshold. Click on the image and select the mask tool to create and copy the \
mask image below into the \[OpenCurlyDoubleQuote]mymask\
\[CloseCurlyDoubleQuote] \
\>", "Text",
 CellChangeTimes->{{3.7792044240380583`*^9, 
  3.779204470229701*^9}},ExpressionUUID->"9aa24e42-4ca3-459d-84d2-\
09fc3376e5bf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageAdjust", "[", 
  RowBox[{
   RowBox[{"avgImg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thtemp"}], "]"}]], "Input",
 CellChangeTimes->{{3.705511223008813*^9, 3.7055112427609425`*^9}, 
   3.705513781923174*^9, {3.715278924878066*^9, 3.7152789249820724`*^9}, {
   3.7156096127093287`*^9, 3.715609612853337*^9}, {3.7700333052365737`*^9, 
   3.7700333063147774`*^9}},ExpressionUUID->"c14f7ea9-576e-4272-b23b-\
a431224dd75a"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxcvV+Eo+vbLth2CXXwaUrIwafV8761cvBpSkyMj1ZEhk0rIgd7tCJysPf0
1OxMjG/0rpHJPlqKCPugaUX8jEUrYhmLFmIdLFoRfbBoRfTBohVRJ0tTogw/
TQl18DPvc1/XdT9ZW6mqVPLmzZ/K/e+6r/u68//l//wP/9u/e/Lkydlu8eM/
/Kf/+3/6L//lP/3X/3mv+OPVv5397//5307/1+N/+79O//Ppf/kf/rUXj3vy
7/D9af/T/q/7j/v3xe8v+7fFpfj9a/Ezfn0prv9iX/Hyr/vx6Ht+VcIXu999
8fOT/cRRlXBbHHm/vxt2Q7zlsbhmN8RzPNp1t8XPeOsX+4637YZKwO/H/Wrx
s2rXxHNX7fJuqBdf1eKaph0Zr62HeLaqXR9/t4vrmwGPUN06Kt03PuN4bLv4
u2I/7/loVf5dtWcRfzftXnW7tl18xWvaoWu3De26eETTbsPvSujbJd0Hf+Fe
8ehK8XfXzjQsvvp2zzaP7RZ/x69mcUuXt+JS167thklxeRwWxc958TUtLvfD
svhaFJdXxc9Fce0ibIqvtX2VslXxvbbvcobrV8X3pviZF7eVs1q2sWtWQb/L
WSNbbx0397Mu7f5Le5z4aOvi8efFpSWfAx6xlOXF98Iec2W3ruzsC/+e23k2
dsuieB7xueF+8fnk9jxLxeVyFp9DOVv6WfBIeJ5L/h3/Wtj7sbCvKX9Oiuvn
xc/4PS7eu3j70v6O10zs/Zvau9y193PCv4Z2hnHxM17Xttc4Lq6d2H8Mf+EM
Y/43xnY/PM6Y/6W5nQ1HL3hLvM+Sr2TB/wHepfhqN/Y/XNq9pvaKxvZchvaZ
wCMO7XnHs/bt2QztGtw+5vOY8L5j+z3ho8ZLXXseeN0Lvsp4vngO2HS09Upx
+Vez4k/mC+7N9qMl/2y2+1j8/pXXf7LbHu24aNH35jWiPd+a/d/bcZ/2dwM8
xK35B3iZW14De380T1EJ+AkvcG8+49busWuWHL/jmZtm0U2zm12z+KpZFmz9
fr9uv5tBnqFqlts0bwJ/IT+Da6u046pbe6V4t5o8C86Kv6OVdukNmmahTbsG
9+nb2dp+lq4/M3gHeIp4/zE9QptH9+2T0+U9cMahWb5sH488sU/2lP+5pX2m
Sxmsf2WfeFwXLQwWvjZ729BSlmY7+NwtAyytlM3NeuNnMC/sr1Xcr5Et7TO6
Notd09am9je8hax+aY9ZMp8RbbdRfJZz+hrcvqANl+hr4l96JtH+a1m0f/is
eL88gx/a9gKwbRwXf8PG4Z/W9gzhlfAaYT9T+1raJfnLBS1xatY2pmVO7f2H
xcrKpvZOw6e27b8xtaOnvE/frXHC26Y8Q7xlYd9T90xj/p7y/7QOeP9zs/z4
nqzsCDxX/H+jXU/pD/BoeOQ2PVG09aY/K/wNjzClv5rSe895j4l5CviIKe+F
Zx1j9a+M9b/aT0T7X+3ri137xWz2b5Yp4JhPFsNh4bjPvdkx7Pye2UOFUR+3
1c0G67T0L/s6Nsbl+F1hBEdOAI/waMdE268H/KybvcFXtO1dqNqRTXqPKu0N
j1J3/9Ckx1BmULGcAPauOAxr3zU7hP/oMy9A5G4z0ld4Tfx/NO2rS2vumr13
za6bFs9xP8R+Rfgu/0vIHfp2S7t4JbJ1eAHEnnhZ/+GpfRLifzDG2aVF+Y1Z
IT790e5r2ZoRPX7GlswK4ietY9EZt5XMVuPRiMDLUDb7r5kPwKcS9phniLor
9yXIAEoZLDAeGS35osgeGnamtUXg6DfibcpDcHnFzGRpHqNEP7UpnsfKLGJl
jxmfVTxz/HvB3KRs2cXGzgb7XxWPs6EvgS/CGeF7pvY6EfFkD2Pa2YIRfGJ2
0fUYDT+xMLuYeq4wZMSf2u1jWr68gSJul3F3yUeYWM6xtFvHAf+Hkr3WlmU8
DfN+ZfOeCz9Xn8+1z6gu/zXlM5YH6/O5D+krxuZ15vZIXT7DPp+jMgHE/jkz
njb93c8Wkf8bI/MtY3q08k/7P9s3bPjWLn2y/ODR/oafUKYOe96l5d6aVT/y
OsT+L2bLt4z4t4z6sPJdj/D3rBdwplt6h12z9l2z4Sp/V9zi6oz3sm94kgq9
gPKEOj0G8vJd5gVNftUZsbs8ape+A7ch82/TG7TpY+pmnxWL1LDhrj2rNvOD
+Iy79r/pmlfo232Qk+CTp++unQu+YEz/0OZns22XZfvIu6duifj0R9tAvFQE
Llk2Hy0mRt2lRdWVWXnNritZxC7Z7/iZbdinEkfD+pBNrOg/Nma1uB3WNw8r
9wu1bJQN7BHnlnUsmWPo/vATS/uNZ7VhzI/PYGW/O8yJkY2svRbY8FyNDPnB
hhUBHgexP88WXieszQMtWRdMPPLDPofMhSeM83Na9ZA12NRrhyktB8dM/Gvo
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
0FYzYHVzogLILMDX18a8NHuXlJGALSxD2qAyIU6PHCF51Q0nplaGtuqotO9R
c5lSYIEnwJYOHa3jxM1ONYMU3lAZSF+mxtpP2rrannfh3H7wW++cCX9F/qlY
qJinRTSfMVd4IH8P0/YPZMKPHL1+IKPvml3Au+zcKn6waY6Joh0Rz39HG3rP
WPuRmfk5lW0/m0+I9veVKrcfzBu8p31/NA28r4yZqAre8Ygzi/Uf7dgPds0H
8w7vi7N+sHNHK/5oZ/xqx7+zn5+ZPXzkeXAsvAd8zUc79h1fSfB5hAd6VnRN
xXbG3pKE+AEb1Gb0iK6A5Yw93lD4iq8ozvnHLt+PVgNEH/AP6wW8NUTwTZEd
nLEaAh/5ht1Z5RotUyTAJBL2h8aqI20uKlGxJM80Gbx0ZE8dPFUI4AioZwCF
j7V1/Ro+VYR7rYL2na3J/NPG3G0G7zabT9s0xc9tur2r06fuXiVIwSfamlT3
1Nvrk8en78SuFbdvGNIWvKS1ud7qs0+NrzsJ2wz8sUdoYHLC7Sa0OczhbO9U
FhsnIXl4h8W0RNTWzjfwMJac1NF2Pikubfh+ToP0Y2MOhkqhTC5GxGpQuQEZ
rLEvW6YCBdT28kx6ForOM4vjd9kR0awHYnjK5cGyjXnBDXl9wANm7Oajqgcr
7toy/T1j4x6S0SMmLxRqxJs5ZOQ8J7L2gZn+ubFyzuyaM7O7c2rbfzZLjBUD
Mv4P/P5stv/OauX3dgu8wGfrnD89OLf8/9xs6cw8yDkRg3PzKx+pofeBqOEZ
ccI4cxe777gPNLaeHcTrPtstyDvOzIO9Zy9hj3yBa04+XFiWhL2dF5l0EbAx
VVoqA7Ipd5xdhNwGvN8XRYx/bXn/H8XPv9vMz4/GAnxprIBXB/HZ71m/9ME7
umBmNTJtKwILCDuFNG+ovcbaEYoOoCYS187+Ebt/Q1bwxpG+GrHDnDPOORVN
1qwpEJXGZPlo4qbN+r3tlQB6A+MgZS1tutY+PWzYnAbt1uoHafGAnav+/IJI
m3p4fVrqnN9L4m3o8y3sGS3czoXfKavf3oQAHp/Uz8XiR6TXZk1hdlJMm3sn
cOncyRW/8N5Mg5Tga9wTtSDumlSa4F02xsjQtFXD2ZUbWr/6NTV2cmv0zA3W
lw1n/Yhhdu11/Z3Z/h7t9oFWjlv28qtMM/I3VNZ54DzuFSv+HUO+Q6777eSa
yz9k/b/nvfNjm7RBtx2Y/hEz+3dmiSdUujg1W/xsEfeDceDfMR6fM6Kf221f
i+iIKBk5stEXPDn4bPd8chDnZj5YDI129MFs+YNl1PHIeA2iuGqCd+ZLPvAS
kINv9C3vLR/4ao8T9Tc+mj/4yPudWw5w7h0MVADyAiPqomhvGhQRwbweZNq5
cE3sb4/sJXgAoX+vzO6j1ccMIMb9n4wTECf/oQSMeYeQX2ea0x4x9x+RAdBj
9gckWJOIrUxbjEqs3KNesBQLNkGfMWX4su0S2QLIHHKv+zXjJMVjIOjVoM2a
aZau6R0+ZATjrdo+bcToBynwjf2eaeudtuppVxl6gH36ihjF++zTLUPS4h8S
0RuS6zsNaavGwqP7cqs7r0vg9iNXSN05MG7Fut8w8wdiOg7SSoYfWIcyGZfI
vpZB76lmsNHFS1h+2hWryZ5apr3z2B23CtJeWRD7r2VJdVrsMm2F0YZNVOs7
nLKH/cvGb4jeP2SYfsGnWVNvd9w8eec8/yvm/NdbPD7M4GAO99jj/TF7+Qnn
O2XOH9HuWCe8N/tE/+6jxf3PnoN/Z8xHRf+ZWftH48l8Nz3M72bZ50QCYPHx
jPHaZwcf6TW+2mPEvOCj/R29CZi08Rb4jA+mrRe9xqvi3tHP4OzPDlBrPD34
Zs8ICON7s0LwjGXL4EyLP3XnHCDprM+Yq8/Y+QPjCNt8T/loz03j57nZ+i82
9/eLcf6fkff/jRXJYX5F3wx/o40qyD3KtHkgAtr8IKXSss8oxM+euL3KUGtU
B9kEqUisnP+HaSZskmlQ5wDXSxF4bZm9mHpi7raDuP5S4tze1DekF0g7e5TX
Q3ETTADtwNHOHDHxNU0jzi/2YovloxmdeZgEMf2l0zcl72dChB+bULUTWduz
V+zoSQ95wep/bR2RhfN3JkEblRHXhRCs/UjU/eJRxtthp6VMNi2UcEHfumQv
fxmktJzTX5R9oxxUqNXxXYdBViP7FDs4rlibqmq/I2YN6z3KobiF3B62DVxA
qjmXlvGDxXPNHAH9wetshyj0XbbH7tiRddB3LEKKmX9q+PYx8/9Tom+o9xGB
P3tkhvLNOevhb8z3kRvEWP/V/EG0/e/0AJ95zHtTzIkZQrSj7xa9oaLx5OCb
RfZ4+3v7/dFUNKGu8dmO/MrjnhwgX3hms7ffraKI8/jPDz5b/H9+IB7xV0MS
dsghBgvohn2WKzKlO/TB12ToXHD6Qj74yOz/xLCOD+Z5nh9E1Z+3Nvv72jzB
M1P/eVpcip7qjJ3IQ84pSr8I7F/scMzJ/GoZEhAVOjb2CRmQAwBEH5wg1Pdi
k2w8nkDfs5dpS2FOzL/E3B+eAdUC5gC1eSTtuhZXRxt6pNrdJMsHOh3i5415
jbZe6v4TfkkpX78XtOUpkXnhfsOgfYfi9w+Dpmu01XhO1H4YVH1L81ydOWX0
U6JwyyA9hEVI2b76dFPa64LdFNj9xt/TFqekUtaF961sFiurnpBJhbhe8imM
VdBO9xI7+/DG5Qy7o4TCljOpy+UZdthC5UPTfOjoB+pkPWSatt9x5Y0rZ+oJ
9QdT/5p8PylO73BS9thyfX2WD8mhOWLuf0oe3okz+MG/f285bLSgU7O677ly
c319t5/fLNrGv2Ad3yxKP7HoHKP3dzvmm/18lz+13vizA6hnfDf1LETMeN1n
6ml9s+riu9n3CzvTN8u64U2+2W3xmpcH8BDx67v5FDz+U+u/fWaH4sQ4S4Hv
15WzI7WL/GqLEZi0RGH/6KnskPd0apnIN6r9xuzjmb3Kz4VPeGldv/iKP5P7
FDFD6BdqfwK6jD2v+jANeEkOkOYR0QkAmpQY/rkzyNRbWgVl/FIvxJZT7Rct
+ydOX+gixM9/O0A9B9m3tu9hl4bwgC6Pwqz+IkijT1t20JFbBM3XtcPE831U
ArBl+QpF8aVH92FI+7eGxO11i9j28VioZk28mpfu4ZqvZuKIHt4jRXmdY8k+
vmaqlPVv72DGDAU2sc6dd7EI6p9ISy0xhZLemlD9EhGDnCxuzWlsHMGR8gyU
ZQY26zfiTJ80tjB7u0Otixv283aMn3Nn7B/NwlwZa/8kRz9A6hhg8SVO302G
CZkjxvxDcnWDxf0jsmneM/M/YTf9jBU7au93jOmo9r9aNP9muXC0g1h7x6j+
gfjcN8vIY5fsqethR1uOthKvj3OzqCeeMod/eqA64alF9BfmF54dwEt8NnXN
b5ZJRJXNF6avhTPHa97Y+aJ/iI/zI/3KZ6KOZxaLH/j+3DGH2t5QDE2UTpZ0
VRIHC5UVOI/oAcRn+N6eKXzAe3q7p8b6QY8DXUooGEiBQZsVB5ZP1jhpCDWC
Qaad4uoONzgHnG9xhGX1eaa4g26f9gmsgjaVR0+w4I6zxDtVvroM0suceN9+
GKSjhZ91TvWmXZ2a29FUvXrxquDnW927fhDjX8o7feJxYONJbTspZ4K7l3bm
TT3+p70nUuPQTj1N3K1p/9EbQNFPnN6N9+nB8pk7Z0L7llLtr+OFqyrXXwfV
9WICbJzVK4wAuEPL/18t7ozTZIcmufCfQd9XeT/Ua6S5kTQ0d6ifF6ioFdip
23NFDDDdoKYJRgBUMIAYYmYP3etDn5o5ycVMF5ce6N0Ru/pg9H5mL+4zkbrP
lpu/Z+R/YtX2d4vQLyz+IfZ+dS3cb4aTPT14xXj/5ABx84kdH/P0ZzY5/9V4
9LDlj2bbOO9Lxv1nFtuf2mVc98r8wDPT2HluR7yxjvvrAyjwIjt/egDE4D1Z
Q6dW9UAzAB4WkfmaqiiYf8bsxIi2jzwMKP6peU68O1+9C/mVOdATywS+mU8Q
sxn9xzvWY3dEF6BABKyhY1afk23YIPoH5eYabR4dI836STFsEcTnqRH/WzHP
lKZlUjDEtnPlojV6ANnzhAj/nCh/nay9pLwpBa0JPQTQfk3WwMa1WXMYNJPb
Jx9nHNJkzvaUXDdoV+aU3kAsHXUI0QsUH1dzAEtW3mv24cSx1eY0sPoW9k7N
w9x5edryuvBu6NrjfYz4yO2lypN003SsuLtJrV/T+yV2VnHfGns2yvvVpcmJ
66Ir02LfX7t8oVOzZ70iqV+if7dD/s3hXxQz8ek9JI4nTvwe5/f2iAkcWsw/
zmH30urD9M178wPQssEkH+K/eu1f7RP+2dk7zw9QjX/NkbW/N2t/YRn+N8v+
lRXDzj9aRhx7Ycjho01GfOyVaea8tlz5id0WtXKi/cTvl2bbzy1DgBeBlu5T
Vtg/0s6itcccIV77oyHvr63r9oIe4DtxQzEMP3D2cI+zwtf23l2RY6VdItpc
innfa6oPqv4/Jip6aihJ9AWHzHc+GEqKnR9ATY6sgjqxe4Kr3XOU98LwP2T+
PU4biAcg7dGIAqhelzJxTvROWat2GJbdT4DxU6bll4n85fyM4vOqucIp8/R+
kJa2tmP33RtID2tbQ29FzyE9HjHsk+ruJGg75twuodenfcri4PaD9PFUnQuX
G4c0l4soPmY3T306de9UBc3tfZBiOqJx2oGMuA8GtWYoVqHk0xF5llSUSuyT
rtlBXTMv0EYInXvjVcEi1LbeYfVZ09yV9F3SHmpNmg62EL+bTPsyYP365EkD
bxu5Q16gqfw9Tt4DJTyxPOA4l0rPDmfhD32i5pw8ejFvTw0hA6PmbCu2obv+
kREdjNcPlgkgW/+eI6JjFu45rRxVPSL/U9uBAQwAivjPiZXFbP2NRf035g+g
lvXK0PPnVNIErhavjV9vzLJx7Y884rUdEe8P9Y03Zv/Pzee8sFgMi/zAePwu
Bw4a8hv2Ra8MXZHe6R1nLu/Iwrpiv/Wa1dOpvbvBJx7O/sJU/ph/5YzTZ3uX
j6hb8MCtJtq2po1sqgOk+gLUr+ZKpGVaboPMfWWoYvRIM3YdEmZVJnsImj8l
1plpz7miVYx5UtMeBm3g6BLdT9su+p6TA/mLvN8pmbxA3YTdwzvADyByQ0MX
WmVJBV87dJD9C7ufBinvrB3nXwRtNZ0EbTfU/K92HQjZVydPM/yLIL7/gmxc
sXuSlqr2QSt/B8NKUV9IqhRVVcmXM2X+5b90X1ATYM4aXqTFWkxK8+D85az8
tKfzxj4TUNMPXs/vUXkrMM+HUi7U9JAN3Bke/UBVTOQA0tFGBQCG0DEn5aSq
deasPnxywfQHi/YdN1rgsywOz0fGe2Tt0Q98z58xviKiR1t7YbXvU7PsV5br
v7S6PVr9W4v9L6iS99rU8V7S8l+bbb8y9fyXVNN9wyj+krb+nLnDC+rrv/Uu
ezz6R3uElwe/25neML94Zb7puyGT35nZBObw4OTg3VZ1v5ODn6/uoGYmH7Zm
olEv7dm7iHdO+iZgRYGxeEoO8jFnKnbyGbG/q0x67trt1jJd4RazfvEA1SPS
TojcET2peiUtH8SUcqbPdIvnwH3wiQfKXKPikFiEae912m3dZQe+HdLWnVT1
q1LfOC9Hfbuh+wLp5se4D66edPXGzuUR8o99ZlP6hjkxO7Ho4z3XrAdWZPhJ
ZTepoS2D9qhKHVV8fPidVUg9kA27gUDmciL0ZSJ2a8P180xzOmvWAGJYiwEk
RjV6MmtmHsL91x7vy+RwtujR9f+DplyHTNArRn5k/YderaOyP2F03yNaF+gN
sIPihPpce1v5v/T6jjjDB+s/5+TOET+12FZ9xkmeM4vz78nrUacOMf/pAfry
L80Gv+UvDY/7Zoj7kwNgfIjMLyxLhz9Atf7K7PM35uXPLVajT/4LOXL4fkkl
jde0/NeM+M8tyr8x+0a0f2FHR95N7Lj/ZNYfz/baZnDi1y923Y9WQcgHfLU+
ANQGTjwuH3JW6IYcSc0HQQlBeoiB+4nuvJo6pybCUX5Gr3pqTIMjm3t6R/T0
lLdIXwWYIur+S0Z7qIt07HJu+X7OaJ1n2kyYEy9SdFoHfRbFFsjdsqPnWFM7
VNsOE58wz9Luj3jsJGjmDvN2mrCTalaatktb85KnmATtI9a8jVTvUStI8x4M
vanlEKrxVQNsvF+/pr2qf6c5G10n7a5FWG7l80kxEXFcGKA096Sipvheolft
2Pv01/pceUCantZGyDJ7r6q2lDdom0qeaYujFKOxWUT83hq9jPbQaqdnRAC1
Mzd+rqSNGzyWS9vuOJee9rF1sYDiY3IHfuLOt+8cWpfrhNPvIYeK5onF/ROy
+k45vX9Kri14M7D/b+zHvTOcDt022Dl629EDPDXr/Mb+G255YZn7E2b6z81q
n5o2buTEP7FJuTf8em7R/7V9vzWbfW23viVe8Npi+o92yyuzdxz7wnQ1Y7Yf
eXZvybl9bT/f2CTuKyryvWAnLvop4ZbnVCXCO33H3uhDJr1DMKvFn3jYYlZp
h1nge4vaSnplwWx/h/pFJ9QmOLWeDLqu15zDhuXPiAAM2PfPnQkKPAAWX96K
UNADnoeNV/raC4AOkyrOsned9ektUWcAn+sWO1K4L3C7pjN50MvTVl1tw0Nk
Fj9vTLxu4RF9Thw+bcBRx38atPEavJ8VPcWE1j4J0sfStC1qDVT4YOui6yeN
HezsRQwHvrcM2m2EfDxN7SzZ2V8G6SMin78k5loye9XMj+qB3FnX2sa2doU1
MHylxVTaer91a4mcrTUz/ZwW3/D8rpxpG7e2cV6yl3/DqH1CdC7kUs085jTr
Xi6NvBPOou7RU+CnNPjE7Tmxz+Q5EYBTdvxOyOfVJP65adRu9+3AypHlPzdb
+mjVPzpzTy1aP2f2/tZie7yMI1+aR/jJbPgtUbkf7XvbUhG1Yb8/Ui3vjd3r
BaP9T14pvDUtHdwjHvPLwT+s2n9t3gDzNn8WP/88gAL/H7wvsoWn1pn8bK/3
hFMOsao6y3eYO91RGeGGcxOB2sF33FZ4nEOrfIeaAoEaQ1AdxlwgmD5H9L6H
1Ea4I5cLXMIZ/989x/wuOWMILkCDNQHsVBl+aat+BydAlUDDc80WO8/69NY8
am1Cj9mBztgg2hXn2dJOLGlnjN3SxduDRUqLQ2q8Y8/ZgeFpQjfl8gta7pD8
GzzSkjNLmtIFOrgKYvVLO29JDzBnj27J3ptyBfGg0+bU+Gh5polobU0A+25B
60YldcncCrlA0lqO2UMjk166dFJLmXZALrgXWrgftnWrP5uqNilI18xf1Kjr
knZLDag2NXMNzp0cDFHEpnPvw2t+TQq6J/YJPqbuFW49NkwAeto49h2ZfGfk
9eHTeErdDuWmYNWj/46eHqZnUGW/OPhIFP8Vcfdn7Le9sHgP3P61RWdY6Cvz
Ci+J38V4Di7sW7Pwt0UW8KfF/j/Mdn8yzjxm53+0mgAI3o927Uuz8t8txiP2
v6XSzh8HccL+Dzvfb+Yf4nl+tAmct+YX/rQpPGhyvbFnAgxTeiRnzm+EPsBd
ljRCdiy/B+8C+oEnjq6cEomRDuIhOwLHrjuM/oB6MEAUoMl4ScZWy9VHBmT/
14j9J0VQKZBqHqhGe66xtydcWYieNhkmZUD4ibV7CeWcqiw07So13CU787D9
ttt/mqTV36j6V0GaW1O3f/T3lPEvPEvY8JaVYXcb2uk8JH5uOdNmHOUH+N7Q
80CpZ8EYDnbPPKgXGm8pE5Ovsa+xYV8gt4pJG5bje9Exb9ohClcivwpcaeX4
OeulpJuo/0KDEbxDpk8nW9Prlh0JgG6seBzaIIUzg0MsDvjllnrnHmdzEfXf
k7GGGhNY3THzgjOP5ZjViTX9Hj+PyG0P+Vk9cTWc0zx43+qMU3qfWf1/8K31
n4nzvaIFP7P8XTX8S36hin9GH4EI/8ws9I3hcm/Msv+wv99aHP7dKvXXZt1/
WsT+iao5b0055xez6d9tbv4nRu9XduwvVhf8br/fmmeI1o2v3+1R/jTb/8XO
+Ied8zf6lTiV98pQAGzh+pa/J6vheEsxLDCjUkflgTOVR7kQ/x3vpN5xoho4
4B13loJjLeR1z+z/mswN8LlmnPu7Ju7Xcb4xtjY1iAZ3aKMl9gFT309dQGFM
f90S2KF/iJ/DXqadJQkDbBBxAv9HW6bit+ZxtPdWyjlSy0R+PvXaIH63abm4
r6bsEwM36fAszOKV2a9YBSxZK8BHCJFfMl+fE7tDnw+IACZutD8XPId10Dux
rYskrVNV6Usi/dHmSvZO9TJoLCEzRwcwPj7QVVRI6tGVvPMifCVqNvYy6SzE
+zcybYzFex09wyUzPGx2he8tE+vt8Hvk6h6z7I6Tekd50rc846zZe8aaY2ph
SAsP2NUpo7w2aB5Zhwq6+ces9z8QlYJ6DmZ1MK3/gVP3YOaBL/vsQLX+C8Py
n7Pv9oRZ+RtGdmy5/JG3vyFaF2uBPw2Je2WR+Y3Z4U+mhvPWcIA/LEt/yw0Z
//QDNDP/+Yf/94d//8Pfi8u/2zG/c4/W73avmPP/0w+/Wx4QtbX/tOv/PPiX
H+K10dr/tHP/w3KJ3+x+v5gan/AEsHPf2wwDcqsPjrCg0trLxa2W8vFeLtXO
nVz7ywO9xBERWHiMY2onCZPZIct45l2/mW9uGNn8v7a4doxv2KMCRMs+tz0y
A8qGBpYdOcoZZUqsBTTLg0iEz700vmuMWy3ec+CoopAtYFnQ2NE+K/TMFsTw
khIfsnrk+1MiAJrF1RadVdB8Lir6PFsF7cuU4v4qaPvlhDj/kh0A9fqwJVeT
uZhxFPanvUVTon+bIJWtDbl7S0fiys6blAaa4nYngx467DKy77R3t8HaXP60
lokzlbL7nMidNkYlhrXUG8v2v0WnN97Wy2rUeAHeO7DjwPWdkeGLSAG93UPq
4B3R/qFsc8hJ9vNcCrtnxt5B9onjYzz6QJz/Hat8sPrOtpQ30Mt/R60c8PU/
k8WDLDleekWWLrptqOff8hLq8Zdm/a/NJl8xR//Fsu7fzRahhgVdvN9MEet3
1uq/WdSOSnl/566M//jD//fD/1H9H6v/zw//MNv+zWweqOEvtGf4jp9MX+df
bL8GMv2ouB19wY/mRf7ph39YrhAf9XfLIIQvPjOe8Wd71ejNHZIBDVRlh5X7
HlHBI2dcAWERWoiJ7AdHa47ZfwXfeof9l71cuxiuMm1w0IaWSyq1YD/7gPPG
0XJnmXaCNviJjHEpWi9+p25VnknpR30mqAK1+OmVdoh2HGnnMfzCPMif/FVz
E9X6mKidbkGsXjuDJ03kSTdX+D+wN2zVQ+QGHw99eulqIaMXKwCqeZqmQ8Wv
fcbA/8Xn0Y5EbTCeBmX/uVm/uFHrIAV1IAQxR+9k2IjVy1qM4mXrAeT0uWUi
LtjyrPcwz6TNm9N3SEW17L5AnrZn5xuwtztjjYed8cjqet7ljX+huxzIybvL
UEvCvt+5D8CWqXMy8s6IAkJn8+T/Z+t9YOK8z3RRq8QbWbVQiY9lrYU63zCA
MQmHa61r1eGG6HitUm6w1otKOcFaCxVxg7UWKuKG9bWWIG7m+FiHWiGs11pq
hcym1lJUMiexFlklnMQqsormpMeLUNFscryoLgrx8Vp1rBCvr7Xu/b3P87y/
YaWr0cD8+WaA4Xv/Pe/zPi+q+c44r9uqut41t9nb57u4Io9N3i9FtH89TtuR
sVMO+6ayRQtws1Jcn4E3aFE//gIe9e8XEI8vKHY/QbynDVqdbjsxLGrPVPF6
H5cnwYoPZezanWnPrGXOVx+vHgvWa3nBTsT4GRy9E1nBjGp+yyP24qgVaG1Z
/kAcoQ7HmWe4X8XtG/YzVrCDu0U5TH0VFUamVAuNqrpKqR/YmvbOnisHp5QP
NKmmT6U3t3CzXSWZSsq+j7gJNUKFOH/s/XGSwCs+coAX4vaBNmGBzBjbxP/p
S3wzcVvMMJnL+1npimFtiXes0zHq70pKW826dF43KiOlavhDbKbzXrrvv/As
3LdV+557m3v9ScoV+ErauKzbz4lnwx059p3H34l9PecnM0q7Yi45unycU3a+
2fyhvBHj+a8ie/ehagayBLwW2iVMg3odngVsV9ekWQrPzfoEtiOLJ27vnYA7
QkmdacV5v+2K9NuFzHTFbs0u1fKNOjIb/0Pk9LqiQ1vCbVLcMtWXcAv3RKz7
G8TsKVN3r0mMXK/biQKMa4ZtHsg9lXfYzR+Vjpbv4RmNU3yj6nNTn2cq7brb
o9DjmUe+z3q/vooMftb868D7OMtyWTl8C3C9EVjTBVX9I4jMM+q8X4NN3kY8
J2Z3H1bYHmzcrk+QBdzGMffhGY5mFkPcb89MZvrD1z3Ve6r7M2bbzBjs1feR
DRzFY4cyFt8tZ+CGzRvyL/Y8tTd26meYT7F75jlG4EcGtItrXbNLS1Ab6kxP
SUO0Vd6SmIkrIBMRaIj3NzVZQSWmohhW9AOuukAugXcPXa+1oHiwKZXxIZ2P
zBK7hAi0KfNv1C1ydnbp7GvU2ZgG5n8n1RhxveYYn1jVtineEwNM65xs1KNb
karGhBp2D2XJvOeMO+fikJ/vypqen9/Zwuf965RP3roK70ey0dIGLY/q6cTz
gDti67hF31H17wqbv4p1Pl+RVi7v+9Aeqmv3MOX7Wp0pzWyp1D/dhXjbpuq8
C59jl6L99oRsvF1btHgcUW2M97rkmR0NLPlU3xO9S0c3J136D/N/ObRF69H5
HkNSgWKEYC9qHDmo2z0n7+bBx+3UmUpEcAo4NifyW6WSNah43wru2Whk8c3K
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
S2evMvL0qcFlHuGCJnQG0NUbEH9nIDL5yYidiZN4NxTtiZlbDt0OH1AHOyKK
zny/HZU7c+yjsEHa/RistF9xexF1vNn2YsjmJ4NNz4XrnuppPLssm58Olj4G
q1/D0cb/XYYH2FO9o/peeHQs3DO/YP7gMbjCkzjuHt7DXjsGNGBOVUQ/0ELi
g3XqJ3bL/m9LP6BD27or5SkPywvMo67i/rFBZGLzYgL0iiFEVZUpqa6Xtqj6
BvUCuL959XYrtO2bUz/EAzdxTvhud6o9+S5wR4jzwpTaVMGyc90mtqqzSckF
7MPESps6hF61lrL+PnmOrDJXO0+Z+7o2kG+r/lXE9dyyfxW5esTsPgJ3hzw/
snh+pWzgUzDu25SJ3xFLh6z9RvXq6F1ct4SYnHMXXbecLNq2xJWM0+q+2/Nt
0eonFNl9O2qzqhv6wLSskvN7jfis2sTqJZfSO/Nt0ct6H585fy5aczHy9rKy
6y7V/Vn9Dyfw3uRs96nWz+k+M74JVYXMI1LpBan8+UQZZ3OmYp+fqvrbkNsT
pS4HQk+Oboc2XZR2YZU0tetx9GHoaQ9Ih7MnausOaFqH/b4B6ew8Qcy/Ae4+
o7+heHvBv69DlV6HSD8Muz8Ei1/MsJNvWfghxHHW9hbx55S/TyOT31P9GPZ7
T5fa6j2wb5vyWUMesCMc0Z95DL9xD/ft1WerzQNMhnuTyv7NhywLPTgkzzIX
8QL2DR1dHMbvNQbOwDKqGWYANzQjOAAskFwnYir14gNzxwG5FaPqC65qE8oo
OjOuw+TaoQ1iAnFimP9Z7hSgpnBOHiCPGsDxAd8twr4Bz5cFnD/eH8oJg9oe
Y+P22F9yS+iLqMCQzvI24V1diJHefy69ri8Zilmz61iwC0603qza+fq2F/h9
9QLvpHwfLm+XNl45SpdOXP3aewuujNW8RUOfeUE64nrbhb01RyyP/m6X5nt2
Jc7LbYzIR5cs0usY5ze1JV2yfDIrmuUNnIfHnn8u9ua65Bv7VFc5T4eVfB+Q
upxs3P3nhLILV+zOKcpnkcN1qZ9TyvhyOB/oKbyO2FSUKKnFseNMbn+Ldums
al9mpSbWyhWpOjCXswreXrn0OOr1jM/q1Iu1MwBrH4C1d6D7fQ2x737U3Lom
ftx9TNByct4Y+t3I/cnEa4ddtQt7H0M8ZcbfDwscUzZOq2eUX0Qef7DaLP14
9enq2nBrR7XF9OPVizh2DUfZdVn1vvkJi/7L8BwHq81XzGXuAQ18HKsB5vzs
JVp0f4zugSEQa8gNulEF9IM1QE7xk6p+8A2N3WA4xgVNLPVAi/wwsqzD2kDG
TUW+xWNWzEmfo+ac9ah0lKjA0CAswDcwsh5o0jwgmYC+9WdTvb+85oAK0gNy
rIgZgM8F+tRvIxCxZuW3zGV3oc/Xp8pgSFm+96gnEt8o0CdrYURzS2tUJUDb
2w5c/SOxb3y/0J1Y7ftOQa/nP02VlO53qZYvcXK3J77bwhl+zFO2J75x2NU3
fT/Op4rzpX0naU3XsG5nDeCcpl2JT9F5ZGdl7gx7rxG849mGT6Nty+fRqByr
NG/lXXpuZG+Wb2CHfgHIvXnt5oTK7YXEdbuyep9sko3dnbxqvJx8QKnnyxmx
hcS14yxO9Ka5aYc76repJ10O9ft14H605w51rnu068K3TneoCjgcO/st2oFV
CQRvBmc7lXEHtJ3+mrA9n8BfqTokrMysn5ZzCD38YVl8u/J99ui7lXEfRYRd
VGdvUfn5juojsNbHsGqb66kNVr+j2nzB48wR+AGr7/n1MWp96/eZt1iDpTNT
MG/BuqG2eg0ZxBx+yqIqAsMW+1FdrMEHzYXffRoeYA6cAfYGDqEnSe4waxzD
M8hwnIE+eDn4QC3aHDyrDSdL2IMyr30B84r9vAxKhbUhMgK4VYmMQN8Q6tsX
K9IbmgQoxPp/QXY/pB4w0b8c4ldByHOz8mN2rp3Nmkv6tsQy1wh2XLtLHau+
xPcJ+XzRhGKibxhmv8FVa7cn1NAldseOvuvaU1c3nXh3z/v63jdgnGbuz3lb
1yQu6Ww6ev9QnB7uL3ONM9c353vsitW86+V5F8/Vc7gPrUv1u3c2umKW3iYs
n68h065P1RFtfiJm5ROy/C55gSH5zyF16hj1F5Tdex9/IvFtXeR6TCS+Jy6v
/l4en3VBs53kglakF6JuHKfCBjHRz+2680LyjZW6TVM3h8XhqdTMrWtpsR7g
5sxK7NRybQsq3V7AcTekp7ciJZ0L6ubT/p9IQWMnUPydmKYxpG9Odt8PG+qH
rU+jqp5G5GXvbQyRvh92Pg3LnEbcnkNdbzm+fbcobhVAbbB+y+t3BIs+jusO
2fkian3zEeYl5jL0AKfD680bOA4whzpiONw7qKPs1jJ8wKJ4BpP4DbrhHQxP
OIQ6gLnAGCqXFeEbK+AuDUCfrEPqRaXqiZporABmUQUYG2NQvKxxZQODYgOX
diVTIYSKv8WkQmriTcoKcuB65sUGdD0QdoQnFEU2EioAeUaZS3yi19Fu548T
F+xTrj8R0a20Yj9r0r5YlWbVqxpSrHL/4erijLyMw9xLb3b8UeTqcrr2jibu
PN933n0JpaP+WJfwClfGJ1ePXMM7qvtdDX+74jU1TfnadOJTym2JM/oY92nr
XcppssLuiAX0yd9lgfnlVPkQCXG/SAQ1Fz9j77k0xtdmxR3IKnZnZcsTqsn6
1Llz1lZBVT+jfJ/+o3kg/Zua+XQ+KPdyl3b0cdpvFOcPd+yQl98iBY4RaW5V
qsbvkfJ9pTC9HkznlePoAW3OOCxt/Rs4r5/AA1BLb0ac/Rvgx7QDE9sLfj5Z
9e3qoY0hqh+FH5hT325anXpD1h3Bm0TebRY4DTudhi2bxZvNmsUvh2h/EJZP
uzWLPotcoLaaHsFecbzasICT4bkj1cwO6DP2hHtzyiPWUFUsAh2YBG64JsbQ
shiCi7L9dvAEjup3bRc7mKzj+6EOuC3dgAvwjgPaLnAY+Ra3BNgnvYoNh7Ox
EzMrZmCvWMI+ITwvP0CVRt/T0qT8znUY2Q0sJNzhlk980yCjQR4eIKeuwARi
zVCyoAydPTqvpp0DnFY177lrnyyjTxhVo2rV5phZ5P4N4jWknpXzgbqSTzVP
yzqe076/kqJgSU3P52l984DF88ZY/5fwu2ZlBo4K7Ip5ADV40qrLXSuvMfHd
JENANP//upx9uu18fDJpG2OFw76Ab1W3z9OZ1MzxJ5T3OOMqp8+oKyltYqCH
yCunz8OyF5QD5PXunlH5lk7f20NcoKDuT1YMjw0h/lYHNqTzSUlTriLdKl3f
XnX6l7TBktpa3GxTqS0W9ZrLvwb07vAWPO+wmDzU3W0B7lcJhN91sfZmnojD
cx+dO9b4OzM7I4bPSpqTt+yzTavOdsTtHvg8VqOPwc53oDJfhjeoRR3PjH1P
sN7TwbJPBuu168Fw3VNNFNDygPOI8yfhF44HD3Ecx+zBfXoOs//a8K6GD5pf
2AFlAOYQe5BF8D4jv7MFWBvcU6bSHR4jUtEPRGAOfzV1SIzTdA0TjNfgBXo0
/VQfNxVtq1oXZ3oJdr8qFZX5qKo0JT1FVm0VwgIH09y+Utq3yH2rrP59i0Be
/K8icv28ziuyAPKy+y48soFz2vvpviG+pCPh95y5SgufSLxXyCMdy+5S/G+M
MdG5a9T/eahe/afaCeYVO+f2vLJnt36XXnMn4gXE6DiR5908Ynv8/dPK4tsS
QwsmEtfB3RUrnGbwgEpaRcT1JxKqoHivrtSb60ryie9Pb45IqD8/oWy+S393
V+J90a4YsXmEVwATsHdmAcWI6/VF30AFF/6vJsTstvfY0HR3XhmC13YFWH1K
SDCjv2vH2nnRhB0xjB6zmMnnLH6HkLoW6exWAr87LBtnF2AEtj6CifYWbd0Y
wKPs5ZOp/yQqX1jmewisHbvcqCKyv1dVPTOAMURM8nIYXe+pd2819WPE2jXk
2GaFe6K1eoyvrT6Cy+lw2QML31N9Ntj4pfDYJRxzNny/Gr5aFrCMOH8WqMAR
1AOnURnsgMXvgNc4Um0VxTJ+4pp+KjEF+z4tTOAePMCaWAXT4AnNCZMgN6Ab
Hcz70AKpk47QbVREI7jOSA2E/Oj1dKVUUda3TAb0qhs4Jf3kQVUDo8r+W6Un
npLlU4W9gO3i3M/skwK23bGA6jKX+PzfhHrD2S1Zpp+P7HB1qUIlMjCUOLvf
bdj3iOySXWSV604IMcgqXrbpbCeCzo0gfRFxbxaXbxey/64kLb4OdbGJ3HeJ
qeebb/zSrFyh1FtIyze4zpDrmXI272GqpIHp3fs+9fjJxynNLfJvZY4wJCSj
Td7OsXx24IeS0mbFLuThbbLqNn1+E7LVfPwf9CVD8X/A2wU9m4Wde54/Iexm
AtyfzcjoXkh8W9xCwrnvzdjXpYY8K8J84gqxTVHnZxAV5hKUuEo8ncuy5QsR
xa/HWdqhjHVGKto9cR/GDXF5LkOHZ0Qa+JermOPvBJpPpu4hREWqbrCnxxya
zLw1IGqTsCqz+scZRu7HyL8Zyc3al1GRLwLH2wE73oNYTyu+FB65Un09XC0L
OK3HrQ9wJVzPBi9gnoI+w+L6yfCK47jMBd+wB+9BTOAxMgv6moO4TzRxEpXB
Pfile/ADy2AJLOO6o5rMwTHVM3NgMPVDN4wKITOaah7QJ3oZtt8hHiWnpnib
m4+nMEk9K4bmPDDbBqmEjMctAg1iBrmWcGtUBd2UQgi3i7FXMCGsmPnnAs5Z
RhJXBl6AxWSR0TcrC+6LUclnzHNCtt3Ku5QhezVAJporC5Xwbs+rnXvvu8MY
w++kSvwcr/c91nvHMJ34ri3v4j2MisJu9SVd3F1JX+zhtSXOYnaV012x4nfO
s8/beb5DxUxm8Xl14LuU2/BvbpPnnJBfcEYOsbhS7PdZ3Hz0CDlh/Yzg3qPd
SLJScfCovpFkxezxXL+oZ4uq6LgndkNIcJm2yUwA/6uQfuSoasZBoH9LaW7U
LVfmPiAUv0c7smY0id8TIxb3ZlAXuwO5LKd1Z5DPXka2f0PTbzvRuePcXJ0w
PWb8e2Edk7D8SaB31OHZA94Nsbh7sPCT1bQ64vhHFPNpjcz07evZ8PU8bNns
/Hy4b5Z+M1jz+fDYeeQCt+AJzCOcR/y39z4rf3EW73oaXoE4AbOMNeAJzAQO
wjOwV0CPxH7jWrR9IpZjmBjoFmY5DSbQXk0oUploRP3QC+JFXxC/4gHQ1xYg
Apyv8InKcU1nUmGNymDj2iXkGuLcGUAd5wrtAEpBk91RgLK0dwNtboCV4gK+
DkkJLhe9AmOVRX5W/AuJqwM6v8f3BXUl+cR1adtUrzqTkFg2NwzkVGv0JSVF
UM+3icmztvcNVb7bzm27OXbsXRfXtTxcg9zf0zeYu5Jxo/gIjOK7lAlk8Rra
cDrmNW2Rq5NLvNvHGemhxLlMOaGc9HlU1XFUv099lJw+xayy+JL6InewsAeb
Vw/G1bqzQujNjrPyC+aN0+JqbErzgQovG9oRW9oSuRl5Xw2aDvf9kmUxPoyq
6p9Xt5kzei3aX31ZW+8uI8aXeHqus39BW22oxHdZUzwjwvavCfO3DP9aFefk
hzEjT47MXqFj5NIxz59TjH+syE8Ubo/i81n04k4HGzwZrNcq97Po5J+FvZ+G
vZ6GFdPi7wY7N4u2yyVUAHbrVrja0VfhKcxD0EfYa04iR7iE7MD6A+ZZjuM7
2cD0Qwer2Q2kXuhx1AGs+pfBEuDtYc0csHfZLWZSnRTCVsR0YF1EFKVDNdYM
uijl6r/WVzkbcErTQeOaEhiXKlurVAI6tX9hHKoA3CVUoU0iviN0U+jvJs69
Ev5fSHwjQDH2lZjnb8Q47zaeVYab24Josy7IJc5O9R7VUOLzhQvKanPyKllF
TdcYIae+pLDDSp1x/456e64+nFaHsEvztg9Trq3fFVlFJe08KvE2K49wHdxs
4vrarP2z4iT0JZzgo5fwHkVX4qpIfaqQWNcXVMcwh3H2hDMp8or9/Jvz+uQc
/Td8zzWYJxJqL3ErK98jL7xmIXH1Nvrqolidm4kzvNnbY+yn9rOhAhXaFLcg
b1Cmut/3eVJ1nkof1Oxh9CfWN6McfwRWT2tnnnpDO3VuiMkzIx2+G3GHlu/G
oCJ2v1jw/ZiMJ4tnWGj+MNB92vue6mVN0jCu70EU5nf2769XW5V+BFZvkdui
+V1Y/1XY9nn4Art9E97gfHjFzWDPd8PVIvt1+IOb4XId2cAVYAHnw/1b8AcH
gRvQgzC/oL0fFAJoPqdUhxxXh4A8IXt+GUwkThO4ksAYvN2Y1MX4SdSBx+za
4ivaR0ZEpSP2WdiDIQq4Dh8wFVmBU+oG9Gq7Si8svzVW/71xg9hG0onI73vE
uFlwAedSUTzwidhd8p3A1ISkTggtNRtze8eoc4nrUBDlblMHICfLH9rCPvFz
ekg5hufDWUVanw1qFsuoUZW8q+dw8jYdcwLiAZ6xuxahM2vSic/GEcW37MD1
yNNJSZnH+XquiOkahdTS41/kjGXv+TtqX5CHJOLelfhkXTainlkh/j5T7R5x
InHlPVdfcgXGfJzayGqyp5j4nOZCjO1F2Tj3wJchq/PLhmq7TWX/5IZXpMuE
Bm9o0ielTJHqXavg9LPD16ONGtx5Sb7qgDQ5RrBV84Y26rGLtSLlvRvQ66EO
zwy4rkS7VqoOSVuvX/1wZsST6Nw/hmWQbcs6fAc6dvfQgT8Cdo7V4RaxeT2L
+HwpWvtZ5PmXYMPXw7HXYf9nq5+uuYkc4Kaeuapob8f6vZuI+lfgI24qF7gC
r3IF1cb5anYGzqsvcFA9Q/IHFsEcYvRfzByp5qzgIhjDy5orXISe4JgyHaoD
HMrc19bQQ5hV5i7SgYiz9IAD4Ornq9h/UomKgLMBs2ACW+2/JF1l7ljyzaoN
+E4dd6q3t4ol5DtDNmJk8UxgQzl/QRhzUVabV+6ZFaJH1eC80Cuv5PvU6yP+
1YXYxjiWTXzf0ILyZloFe9d9iXe7+hLXvm1UDe7KYNsT1x80+7RH+lSpW1Tv
ipW8KwqU8vzGiOK7ooYfl058hs61B9q2VPfO53Ftrix+g4nEuX30YG3Rpj3/
Ycwein5nYQuO6v61tG19QlkXY/4mfCN52v75ljA9129y+3c+F/2AZwELqADK
4rZYbvAzZegUtkf6Fm6eDdy7uQ7Gj6ntzqeJ+HM2Z0SqutyO9USKW/eluD0D
dV3m+RbhyfHZq55eHXT1b0OBY0yqO8Pg5A1r2p41Mrn57OAZ2ncwIu4Hca3F
vbPIyWuDzd5FHKfFXlecPx5s+ySes8ct2j+C7V+ttsuj6kzN3fDVfMDVcNty
hEfhFTdh8dfD+96ULzHrv6qM4CyqjPPVtUILiRqyN3AWXOI1zRBY9X8y+ACr
EKaFAPrE0aI4AXPoBfZLR6hfM4HUAmpHT5QqpgNQPhnBf6BHvYByzVSUI/83
FhYrAKotr6ICIHY7CP4WVUObYgewVzNdTVEtqEJKwH72+BSoV/zeSebMmHe2
XFPGI9VG4rvDh/T4UMT+s4kz0vPRavLSHHTdsZyqZMfB7LI98TlBnylolA9o
VveB2juuM8D6wPeSOEMnnZBDT/5dmzyL62G64oDzmtui3bfpt2emU+rx98nC
idD7RF8+8Vm6ISGfXRG9y0U0lHbMiJ/XOyzo0yopsBTld5lvMavYjCztzYRM
/pK6I2e8NjXLXYjILhVefCKM258bEPftUapKc+su93L0imU6C9TPOCcd0Nrl
GUiuzmVZ9opUuJizcquWZbDE+G5LV3sFPX5qXR7CeU5r6EZWP6bJ2nuwd8+i
a5HL7wCydhzRnTH/JPLy88DumetbxX8TEfs88vq7wcqvw5YfhXt2vRVs90CI
+k/XPKreXXOg5ukau3Wp2u7Zo7dw3G48vrvGsAHLDG7Bm9BD2PteQk5ht0/D
v5gfOgt0YQd+l7Oo+J0HQKYQWYOcIF7GXzgGPvGwWMKW8TwGE6AOvmBvhupA
N9AdvS1eZId2lHeAWVUOHLAc3+urqMbE7YizUSOoF4hgE2r+QdVz3AfOHoBh
vJ3iAKWwIbAiTaTI40gqnUsqpCG+oEqScXpBsT+rs9IxP/aTSlvDh5TdLiRZ
zae7ptCmcDCe5/mY4y4kE9F2JqI19qHqLm2q5uQcuQLNEZEvzcWws9cVkcBG
xWFX5tja1+tTp8FrDFcyd2/TmJTUdojndcXIPqR632uYNiHvbUlOtjsh1CSP
z4WTVqzvyasaEsrvM8HuQXOxc5dTJeYV+yZwgQ3N57Fra/+hXMzWNnVlL7+Y
+LaXlHa9c49XQRtijQvWK4SIfL954X52dTV6btBqkYY2v96Okzl7M5eVDThz
1ytY7s6sk+YVNfL3wuaXM6eBmA/DCtbQR+cUXS3qaPbwjiPvP4+YS0z+JGLt
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
siTkj1nAqJSAmINyaqRX2ey4fECTEDNi6eyJG/rvulU+BZdXl25Bs3FUzvF9
IK4XuiG28ELierU2Az8qxK9VXKOSPj1Vrtmlp2pQn5Q97btpIQ8o86kH3tmC
v5GxcAq2M6X4yr9uCd6AVtepPIG4Rm/E11Oyzl78LuOqIFpVr1fEV/i8TZMy
hM6I97Er4VN34/gpDUIm6dt6tZOF/fpxqbESpeec5nrk6K/jv9arv4szeVNi
6D0Qs4P4Ljs+zPQOC/vtEbLXgyzQufxki7UIK+ImjxFM9t9ANLlfRdXO+1XG
OGNtukPbLYnqncV0yyUw3e9CMf+W2K+c2jkAtYxzYtBYjW+cnWfA1mOO/0nN
u8Dq3xQq95kuFp15/T5s2uz718Ha30JcHw3fLeb/Eh7gCzzz2/DIW+EVo/sq
60bD48/vsyxgFHb/fDj257jdK79QDFHfkIGvIUd4NfzEL9U1TMMTvQp24EvA
Al5A9P8g3PoQswbHpCryoqr/A5oRPobM/0VxgR4h+l/F58H9QMeVMZ2t5hYD
86KTUvqxeN+v7d+L6KmuSQFwURzgdu1BWQTjck4bAfZCE+g+NincBwfAbH8A
30uKQIelA3wY80DboOQ2KwTA4+GUkKXOtKtH8Hwmnt0Ze1hlQs2KSWl2Lf9v
+PFE+dn3L4gNwD2VtHiL5BOax+e8nysNsxZnnd0QH2NfsZj45hy3fNYAdeA/
cvNcz5Z6dlQ7qmZl/aPIBWbFdPK+nGPpg2LP9Qr37FVvbTz2QVNC7lJiF7Fa
78XvSd/JDgnZk75pfVys6t6IolBfd1DdVO5h7ZUfnkfkd7VdTt/Pa1qfeQ15
uevK7Tu03WVbnO62IyvhEyo1sX8YGt3bcF50SCd2AJV/C+y9I2b/3Np5G3qe
VvHfR+bfDrypHz3paXSszmIjDiP/aTHdb4EBewD974x6YScwL8tJ2mcwb/sM
ZnNewozOS+i8vYJ+nXXmvxtssYjs3KzUkLteWP/vgxX/PFzeCrn/94Olv4Uc
3x75fbhtdv/r4Acq68rrfhls+5fhnvmLN3BrFLmC+YpBZQfmFSwLsI6AYQC9
+z4DP+j74AWZH+L9N+GVXgdDwKqTl8A2JEP4VJwRfA+9gIxygIv4e429yKkf
bgi6ouh/HJO/Z7UXiFsMpiPrh7u+p7X1c1lbUBj9uQtgTJNV7VAEmJQmkEW/
+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
Bev9abj3u2DDf7r/j8Plb/b/l/39+/9u/5/u/4dw+bv9vwj3/wmP/abOnv96
uPzxfjv+W8Ev/A4e4Ov77b3MZ1g28MPw3XIA8zDmD34Qon95neUexA4HxR56
K8T97wMR/BIzA6/UfnPf25ggpg94FRmMMRLfRNfiE2gOvYeK5xOwfl4EDrK7
hv3PDCYZyQW4JGWTs/ICxpY2lrTX9fbZrmW478c+63bksHPo8pP3ZyjBnGaD
2QVYlsoSt6ZxCwAjP7u2F6QBPgIFkG2ogcsx4UEO0KomgFfBO1vC+Tko1Ivo
ODEAr3FL8yuM15tSpqOyjU/XukpHQXM0BU32FGNNkItKdz5rx5mcpogyNoh9
5JGfTCBXwM/L/r0TSAVB+8rNKjfRWTkNZGVaaGmdNqbdl3LFNVj+bfVL2B8h
75V8OfbGVxV7OS+9LpyAU0br+pxWpaqxivtT6fEtHbpRVPTsPKwKY+DMzayq
DHoaMvEPwyJXtLPFsfx62fvhLdZeqZpgAAydFjw/oHmPJ7B1Zvc3kPVQGf4a
coEBcUN4lgyjYrRJ3m5U+mOI+9PILaneaVHnHrpS5PKf13l8XWyeU9iZcRHZ
/ifg8XKClqp6XwI9t3l777pb1v2GMLkfxbj+gxDP9+3/y2DH3eHyx8G2/0u4
94tg838a7pvN/8P+f97/R/V/Xv9/15949k/q99T/vfzC18P3P8atPw3H/eV+
8wJ/vP9fw3saGvA7oAWGBPwwXH67z/CDX4YagxkAK4Dfg0nUi2rku2AIW+z/
Gmr/z9CheBuqAG9CSehNzCK8jSnET6BHcExcphNgOBjH4Sa2jd3ENsBH2kl2
Fzyg89phZNoHixlqf7oCALXQ7kEVaRGx696WTv8acgNuRbMM4TE8wKIwGe4D
5SYA8+M3pNHSoox3BjFuW7hXrphSDj2gB1J6HBRfdFUMmanoCTrjpNmgJs9S
4uIzam+dh6mQpTJLLwrrM5vNJr53ll1/VguptGtdbWLav5g0xLl4RwKa0tTY
KEOdQEXxBdX9RXUBWf/b7auoSbl57SD0FewrmZXD6AzUYWfyDeklW1VAthDn
pFkb1SPX9t4a4/U26aY8UC+QmnnjmpyajT25WU3VUTXzgTp35OZNxXdgVs+N
jF6FWb3OzK1FEzq8PAAff0RYBadzB6Tq1qN8v0eaTx3K7y+D/7GCs2BFeyFm
8Fdfq2KXeG+GCPFe5Pk7wSDZi/Pt0JY9c4tSozmujhWV6x9FNb6PlftSH8Ni
45u1ztU33o5P4BgP52fg6xmab5H+tWD7K3XdiNz79n8r2G5/iOp/Hyz9F/v3
1P/T/h31/yFc9gSL//Pw9a/r/6j+T+r/rP4Pnv3HZ//q2T/Hc/8QLP+f8Jp/
CD7ib8I7/E34/g/7zTN8Pdy6gZ/wo3B5DV9/WmcZgNn+t9EP+H34XX6GLuIo
cn/L9t8AIvAlWAivY37I5ggKYCaQBUgO0DOYB2aVczFOAnJ6+QC+crNopoY7
CQ/UXAJL6goY0ael+MPtHscR+fdI/Zj11WNNAHAXKPcfr8EfzKEj8Bh6CnOo
DPqhqdqN7qzlbNwD+kR7mGfAhmFG2YKct0V7gA9rE8iq0GZWALPKbnuFWXeK
rc5zu0n5PvVoyjT/7ko6FUIBnQW4mRTF/OcReU0GVihXaEj7LvqGWF04zkCW
Ifl11NvZFMuwEHP/bFLaN06m0S3orVJv4Sp87nFMWhi+Oo3aaVg7KkwprQ59
7dualjZMwGcmWhBvV9MDqpaYG2zD50jNhHp40EHpZ7iy3jbNUy1JcWNenVXi
er5xlVies/PLobTF/rzV4TP42cQm+fPrheQ5i4cM/gGxnC7jWTI9biO74TbI
GVj7E/WDyAm7LQ9zHxF/GCqyY9rOwUkyqvPfE878GJv4zqJTXQu8nxtvXYnT
dupQLfsFKei9jJ7eB5i/57wNc+zfBtv/DlD6b4VIb5X83wfL//tgv/9vuNYE
e/6zYON/Fi5/Xv+f6/9HsPjr9f+zvurZ68Hu/3n//6z/l/DY/6q/Wv+fnv3b
Z5uf/d+CD/iTcOSOkA/8Irz6n4O/+KPw9W/2/z08wl8Gj/L18P7fCnXADVj/
tbp65ACG/H2vzroL30bn4Lfo/f0cfYefgQkwGiL/dzU99Ny+d1H7vw19EWoM
PYP5P8MBz0CT7By0AT/WjuBbUgNnfXQJedJdTQA9wmaDk5r83YM64CD6/mcx
NXlPGKCdrZNAWjzf5/7zYdk+fcCw5gQWgXcvKr6xB3BDO4GpA1SJyrBHkaQ8
dou3oYc8nnYtwClhWL3qUA+K/TKqvH9QFup7o80+2e1jdCYXYEPc35IKfxFz
v66ukRdnoEycPmr79Urlqgm8uUH1HRqkptGgeVsqilAhIB8RRt8HmEtuajtM
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
Qc7wK7DHXRBQcOStgDAzGnAbmIGMkKPubA34ycZgk88VfzIm+IFgG+RodY9B
5s4Bfluu+LsC/k6C3zH2QVF4/ghbtBw8PRcUj7IUY8Y48wP6Fk8xE1WZU1x3
dqB7XQssVBd6I57wJyi7VZy0z0C34zF0xEui88CS4175JahtZVPVfzPWGRcc
t4X6/SfjngMj98v4O6nuX2m+w3yKev6xlgHWDFup7T+2X22NDq+jg+KWY3+r
e7mny9MnaVninqRNiY8l7UlqTHosaVFyY1JCUp+kt5POJDYm7aOcYKVHO700
J56jHLDVfatnBXUGW93rXQ2uw9RBJFMf8YHzCGUAs6PY/oC9FPuAeygHzKAe
4D7zBxT/jArgHPAgTQGMCv4RSgN8AYiOnUIZYAo0RXthB1ADv6BvMeU8Rv/3
bgHcL28829UFuAjPmjStJPxc4rtSier+9sMG9XykqH4IY2Kdcn5b4fYzSbf+
wbj8lQewf8Ymp0G9fMTLryGg7z0XeWAlunyZByX+xYdROoEZ6AYmo5fcrTjx
Wbg5VyvvT1ioe8FMXQrtKtH426sx2KTsfqnFhhqnoc5hDkwAQRrdxlwf9Jcd
X4hu746FGXFs1ruA32T43zaaDAeRJnysSRFGkh/M+u+IE0iofvZNgf2fVz9/
qLoOy2cXtVHOGv2Qi0sQtXwD3I+udr+6Nu9Q//bu2Go3w9+9O2r/Mng+FiHH
NyMzTEAOWAtmlyCF+qmy/QJwOtdhuhb+gKA1hYmxUH8awZE9VT+vUpE58no9
OvqVqPIrFb0rOUOygfR821D7VyreU6q+qD+diBDdfX4utQJFNgnYnZ34itZF
ivM8b6FKsM8Ufa7lQD/NB1Ofc5wV+W429lysankUGz6+eW+M4tteChx1WDNv
kappumN5w8+sGubucuynU+TbKPL5xnd/QgHF/iVzrOUziv1/2P5H8/7j9iDE
/irnStdo92jq9YckTUh8JSkl6cOkb5OyU6JTdidHp/yc/H7yN8mL6HGKMsDb
SYOSe9FbTZQZhtCfa6cckEZ9gc+z3FPiKad5INjNG0PeFPIk0Ig74S3UA/zH
9g/bGMwBN1rmWj6nLuAjMAY/BiZ4C2UAVgxqABpQNAGYATgO+B9WHZY+pw+Y
/2egVrgGqH9B/03A8+UcLiLt2CB1h/rffuh/ieu3XI/W4fq/E6ifFao+Y6D+
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
Qvw77vc5xi9EiD+cbPWkdqwD4ug8/j8Ryk20Y+vA/6dziH3BOZp0pqnD83UZ
VDn6QNH6aFQLLlvMdfkQ+lwzoYbPzjt/xjAizg1sPDtv8H7vE4r6etz0wxLO
UeQzp67G/Kj5MM3SuVTxP7NU0HSdQdFls/9qe9x+1t7mOOLgPf/trvNun2e+
Z1NiQdK3VPnvTenv5T5+TdpH1OUv8g2gWK/IuCcjPOu6rKuy/pP5eFZQ9sjM
W7IeyhyZ+R96XJcVmZmdcTDjJ9+/fU9ljPWdSs/1cc/wXOrHqb7U/t5g78GU
hpRHkl9JKqAuoA9ywHyPz7PAXe6+gC6gwznYecRxv6PT/rrtKnuGzWGLsn5t
ecnC/QqrB96Z8AQYAawczl0O3wFmggPITqF74ANaABXDo1FN+N4JE4C/o33B
F7Xi+9yX3rNfnU/mYONaotpfovZ9nn6yzP9doBdAQ/FTnL1ku3MIu6FtuA5d
AKpbNn4LFUkqaNKeiia9CGZYT/X4EYV3wZpfVD646Na+j8gXtQnRlZLO/4hm
gCPqOdWIbqBWO3KD6SNKnEHKyTU2+ObAHVBQAAbKx6y12nhPiG7hDUSOweGV
Om4Gymip6g1xJ1KraKBGk+EsHIpLoT/QiTTq/GHkGH9g0vArRlC6f6/eDG4J
E7a1wb7mOPFhK7ZcEcH7scfriwpZhIxep3OdqLy1w/eF80AKNsGCAeNb0DLs
AzciF8zG3xEcSF9FhIn71VrU5ImYCyeq4uB5RO86bOpGRy4IbPB4W7gFu4Is
/H6F6u+IV0SrPpMORJ5X3e11ytgRp7052Gv2VRXOvjrRNOPr68TuIgVcnVNg
6rH/xkzd6/Oznr31GtAFZ8YFYyLuT3Xx7rjrqUK+E9+XauX9CczcTTbXmD8w
XzK/hDn/35Z/UkUtpVl/k/0Wmvbvd2ygqt+TIu+Qa4G71b3fU5eYQvW5I3ly
yptU+Z9D9L9Mcbw1Y0zGGxl3U4z/N/PVrOKsj7NCs0OzvfTyKr11NuvxrJuz
w7NuyUrPejLz+8x7Mv6ReXXmZ9QtnEq/Kf27tDvT6lP/lnq3t4zmgOyUmfTv
v02zRV3i0cSrEm/17HT3oD5gGzLAYecVTj8YxHwRLKUpQK4BMyyPmq80f0QZ
4OP4B+O3wFno3djs2G9ifkY+7AU9UL6BDAEDkHkAR1H5N0Lxr1l9f0xQ/eI9
8py/aEvNQd8v11dRADgA7M86ZHEXftIuuPweAs9PnH0EAyDYnl2K8fWgoleq
jncOXr8fLpr+HeG7VX2qMkKUaLlPkN3fblV9ls5f9Geqofo3SDn/G6BIvRoM
AEPnT3zq20yXXb39Ju9f4szQ4pNe3uD7GCy9kECOCNLNvBddAEemsPTNf7nt
1aKzWK1KY4JAkPkjFB8J0pvjZY/BxgD6sDGwV2gyGarDokocZLrsE85f5yQg
c8Sd7kCk9OM+7QGmQcPGFCVXcBMUneqAgSnCtNyMXN+JX89oL9ANahBr0BXw
VXgZPrIG0bZMeUTNuAzwXnC5MolFc2QzonQtJoN14IPWIyvZdTskEc7YkPOK
1+UO4IDu8/l51A9bBWGYz1FNM2acrlUUA/8/ZK9fp7Mq4/dSokWP8xL093mz
fypaUDzR1Os/DZ+8Buz1b8M17xMgeNOp0/+S6n13qvffodv/nOKeFTZutwyg
KX8rdfsjbd/T41V7qGOpY7zztOMkdfy7XLfSLD7NU5TYnPh2UhJ16O6Uh7y+
1C9TeaeXkn67j2v+PRm/Zj5EkV9LEf9WTjw97s++mPN5zuns6pxker06Oz4n
KHtD9rGsVykXcJa4m/78GJoIrvU9gxxQSHOAL3WBl2+IHfRZliSlJD1GPYAp
sYta4Fs9090nKP5jXIudU533O9poDvg/ygAO6gG2WpkZkGh5mTJAslmUAn+I
YwTjZGgUvg8/sEvAADIWuAk5gL+Pwv4/Aw3wNEyN3eH9MwG5QNS/lkNFZg70
Uc9j/z9x6HF4pEwHY6RVvShdqiMhE8Au6DWsVPeVE8D7HgISTJCikzX2Odon
R0isS33fDaa5uLSLYn1MhKi/C/u8A1pyyer2MQheNacR/cL8E6+P1epI16i7
N8HlmLXHFuZ/S6DP9ut9LcTkD/T2hv6HcX0z+H6Gs4fEpaj6+wOTxWrNOhL7
/JW0AAFg4H8FBSCzgqiPyn6Bv0qDYSj5yegHjC5AOoH+8FXfgpu4qFxwbE0E
KnsadgISpRNQN3n/L9iuCZjwTVB5bVbVl30BFPxG+FiewT2gWT3h2/Eo0vgz
Ia8UAV+wA0jjtUAcSS5Yrl1iPeaC44js43CIYcSIeBYxZ8yuUe/De3tgw8cd
pQ//ynxUHmE1dg2Vuj8biP12fK0JwKs0Qr9qD5jtS6DDvQg3/Gyq+m8Cw/ci
ePpl0Oj4JK6Eov5BqvkfU7/fm6bkXxJOmZ8x3wEU7+1Q6braxmo9jOS/xR5C
3bXf0Yv67M+dM2jaZ9bOdYj8OKrJN6Q8TLE/MdWWemfalenPpF9Lnfxnvn9k
2iiei7OWZtdmH8nem704Z1ZOZe6qHE+uJ9eVty03P6cn/a46Z15O75w7KQeY
KUe8k/UrTQYjM0szx/p+8r2VPjj9l7SN1AU8R12A0+tOWZU8LvnbpCVJTUlF
lAGYL8BTQAPNICdoCpjqZKYw6wf9aptm20lN+1jqAG4yDzazjwCjlfkWwNqk
D0MZcAr2IR/CnZARQML/5y5gDbbCZ7AdrtM9sQnV4px2lBNR/yei3zsOpWQf
Ov8tuvcZDWVJZmIvUB+fExGiuC6K/icU4ytabgMD/D7p9gcixkXt9aJyyTp0
+8/bfo/eAg6Dbz4P937h/YhLTT5mf3GLF60vUfncjshrU91v6dCDFGt/WX3T
uP+b/xLbwug1nLu8JmH7Gjs6c4Cda9bcYWD52wL+4kuVdVCre0fR/TAwgPLZ
JRP5NS8YKkQhupdoxPa/VjePtXqd4K8oCvuzSdieMUJvAaJfZjMf0Fr1uAjy
bbxO9/8Su2noBWRn3g4PO96cMSaWESAFuAt2Yi9wFH9ijcZdO64DdeDQiDa8
aIpMU+2cLlWH3q9qhP2gUFyCaxFXcrs6x/bDFlH6R2GS1gNrMBG9RBcumZxJ
6qLkwbu9oqh9uFBxj8I1qwDXfJ712eWSOe7fxPClOxs7fXbZc8b9Hss4mNvi
JsJBp2+ChR4bqc9n/f0PqOafMsda5lr+sDCf5mro8N1i/97G6jynqdsf7/S4
clzbXNPd02j2npDYmVibtIdm/d007X9CVf+51DCa9l9Ov9F3uy8646mMDKri
tqwRWW0U+1NzLuZ8kLM451Du7bm7crflLsjbmXeBMsDc3JW5O/MO5c7IvZgz
MHdWzirqDo5k+7PTaRq4O/OFjIqMa6gP4B6gb9rwtImpK7zB3jdTXky5IeUR
ygLMIDIlzvGUeLaCPbzelU/xP9XZRB1AkMNmZ6WQnTS1fAalsFjLRwlrwAmo
j/8kTjjBHP+L4An2NjRAWyh7pkD/8wwQAM2qd8p5Pi1KfA+kF5Cf7DT6ma3F
3r8Emv921aBfgeq/ANifKNT/cuAAL999tgEBwvwOjzIAtym6vwFM0N268TsM
7emLqP89Iy57vMToBXA3tn7jcfnvQAYYFLj594JnvXhXL1XvWpnCGwOM/KUB
7K9c2vw6Ye9Tl55jQPKcDQtRbl4IVH94/y912EADewP9uF8xRZwN/OgljKtj
I/wGlqrOSGMAB+xVNpJfZxHDDcys0S5fkbF/MG4KxmbAqx3IJNzdZbNmqHoa
d1k7OvAdULJdCy5Al15y+kYJDmACuoF2RFc77mZn0A10o366G/bBggbbB2dY
jr3Z2Ajuw35wdoAjUgeNuC4wbSYAQXwOODzuDEQtXpSJlw8VFClXdjs6fQPB
Ny3gKTUHfcQ5MHasUKIuwl56DS4W/FXUgJXfAv4aV7Ep8LnaHcMu2G7s9X6n
Snc3mHrr4sLjf4vrniCo/S+goc/3vGfM11K9z7X8m+r9VusL1n/YMqjTf9z+
rP1xextF/mDnPGeMy+Nah4o/3zM7ke9wVySvSm6giXyd953UT6ju35l2B0Xp
y+ljqepXZPye4cgMyh5BdT8+5y2KfY7zXbmteVF5VxWcz7Pn+/J35vXLNxXc
mn88b2T+C3m7cg/kLczdmnc79QXVlAHM1AWkZ5VmRmZenfmTb6yPkQLtaalp
16f+jeaAEykNKT8nT0k+lZSQxDwh3gSWeNa5Xe6erhmuwc69jtWOs3ZWFXTY
rrYdpPj/N/3/hlmYHZyaMJy+A8wJZufQ6NiXoAs8JWYPvo9NcDBqop/5GuQA
YUTy/qcO2d6qXLFz6v45Bz9Dxp0Jx9oHtw/Z4ZaDM35ZQyoL7J8TESdU+VOU
vGfg9mf4rwpT1IPePyfCUJlkXqihDrkbnf5AMMgPB9QmZN8/FR4T1bj5V6tL
PM/8RzB5t6gvtXH/86MeG+rewsqXfZpw9y77/YqWj8H6FfyPWXf+Mu0b/l5G
HhCFMMkFXuwb96rTiPhjbtCbQ5teHIx7n+wDW7T/N64Joh5k3CTN2jnIDbJR
81ao6QR0UwUn2x+aV8KFXRDZY6h4V9Xjp9SFy/051QHqHiWsjgno4ZuhcnsG
6I9mcMBS4Al9FPVf/K64F+ijStGd6AiW6SRhVU2RLihlMwOZ/3XWHWP1bBNy
juEdvRlo5PmKU54P9Z39ujtYjudVFyqMCbxF7leOaofSDV/PEEypr4CdzxiW
ODBaeKfFdb8B/Hz2wrlNL/nsl5VKE34hPf+/SxiMLv9aC+/2WKHnn9bfrQ7b
Q7Zie7F9hH2Tvdax3RHvXOz8wHm7a6HLBd7uZk9dYh+avKuSk5IrU95NGepd
4L0rtZDqcnz6o+m5vkW+MVT1HdS7h2c9kOWlfj+f+vqFuYdyo/JeyMvKi8hf
nj8yf3/+/Pxf8+fkpxWMzJ+WX0TZoF/+2vx++Qfy3si7NX9b7oncytyeuUey
r8jxZ3spCzyfuTUjO2MY5YBY3xc0B3xJ8W9Lfcj7dEp0yof0tSxLvC5xQuJV
iV3UAxxwb6MuYJUz39nmCKUO4FVgAu+xMh/5sPkPSwFlO+YFnIMyQFncp5Qf
b4h1QxWApwBWAWYXM94Cih4IqwC2K1ZU6kMReq/NYFPNwU+vRHe+57Fz8g2d
hB2v+H2L+qL4ewmmI0u1GbcB9VWpvmyi9VGJKaAn6r7g/GOg/DoQWlCy9xd/
H6MzOIne/6Qq/o+H6nc1ev9eUP0Wb1px+hblr6Xo/v2q/GF4fF/24JbaK8re
/sDcLZc22fntCzuminyi9mf49AYFeoFQxfbJNm8pOgDRF92gztdt2AL4MYE0
6VfRojN9rclQIggN7PwMDGKtIgpbkLm8+pWK5tB6XFWEE+9C7E+C6s0BbN9l
urZjEujCz01wfSbcdeqiDDZgnfq9rEG07YuSS9Ay6EEyLpyzQDvU7/vgOnAG
c0An/s4y9AFSqbuju5iAmdHQHGpGBqjD/siELV4XtpJFii7lXaIR9d2RleoU
odCOf5MvEgmqxpNCcf8hUHzsuNULkf9+jKjdMXZvFPyxr4dr7ms033eHIl8b
dfsF5kSK/LmWzyxPWZ+iPv9JmpOvorj/P5rwG6lyLqa4v0gT/lzXTvdW6vVN
iczea6GKvzv5hpSDKXd7t3ivT30t9Saay4f5nknPpqi/hip+aebzma9mfZn1
albvnJuzB1O3vzB3dN7ovPK86XlzKO5NBZvzrytoL2gu2FRQ61+e314woaCT
3i4qmF2Q4LcWdFFWiMjvkb+AJoOTOeNzBtO/EpL9QNZVWTxLZGfc7rsvPT79
tdTuaeGpjAt4N8Wdsii5IKkgyZS4LPE8mMJZlAGC3fPof9Dm8Ds22dPtz9v+
Yfvd6qYMMBfXQI5/VispiWefkHfhStoBfzBWBduDfNoINdAURQN2Ir8X4dmx
ETnABAWwzdjvzlcseD/FAPWDAqjsoafjIpUFVKjoRkTB+5OxoP2hzjwXj4Vg
+DPzq6cqveVAG0bUIC9COfowlKRER0YmApkSekJhrkP5fuJZPQiYH4PzzxsA
xv6ID/1qbAL3BvC4lzf1cq8zXDe9OscbV32pvKLuK048BiM/RDuEUOQEo2KH
ALMnegKN6jHUplfA1doNyNQv0W/Wvb9f47pFfxekUd9iMpsMDwH++8Z2UO4O
/FUJrkKYMy6dA9YpDmcBUFk9NP7XYqaeA22wc+gEupQdMBvTgGwGJ6D+d2K7
xlV/CLzh27H/4/rLdYJvBAZSnHuDIsXczlbV7Ha8Nql/PPcY+3R+NObK2UAl
icKcSaeIOmyZ6zBt9sVlYh++EsOjqgla9UuiGcOWF9MBZxvW4Xw69mmKfSc9
r7+C/u1Eep6z2xbzYHpT3L8Fx52XtM/nLv8qqvasrud1MJtuqrOBon6XK8Jj
p0F0v8ea2C2pNikp+dukG1LKvGVep/dvFH0fpfVO35N+Kr2C4v5J6tD/l/lO
1rGsO2nK3569IftzmuPfop4/h7r5kVTXrytIK7iuwEQxvse/xz/EP69wUOEe
f6P/W/8VhQn0niZ/gn9fQZP/aMEQ/xnKDXMoA2zOd+XNyB1L/07vnL3UA1xH
s8DBjJd8ub5T6YPTh6d1T6tPzfQyjzA7ZUoycwTbE4sSl3vOu+s9We5DrgYX
q4nupWz2qv17ym8O27+s/6QMsIjif7A52Xw/ZUP2DdtCObIBnOD3qQNgFkSv
GN6gclfVhOp/Bigq7vfqlC86mypCHa6+m6E0I7ywelX/WquXgAMBFenRqPmT
1PEvGEgAqf0ngP/dpepuu6D0WRkRoxpRoiPFuN55iPHLelK7oQ55EvpRJ+Hx
vFiV5cfDSU5c/gahA4gD8ncv3D5kA3gF+oLVGn9tJkNp049IDVFsbahu+UMC
ah+yC5Ta3wk9buEC+E2GEqCwfwX7X2sylDy9ev1rwewvsd+in79FPQdbTKGq
OtJkatILgKFCblZ+kln5h6HoKNoCeEB5zZ9f1JQv4JrSH13XJN3CTMedLULx
sz7cA5frRt1gCe7APT8N9b8I3Ty/1Qdz4GzVg+eKvwYMcUGK99GLcZ9oYdAf
jRLfqDrsBNqhKLBPXTNEQ3sCfpU+fg06Ca7padg3dIfjZJ1eIo8qOrlZM0uK
6tM9Bt39U8rQ70DkR8PpSjD7Q+Nui2NfbNbA+zKefXQ/SnjUzM5Z11put0RZ
77GOpHr4K3X6zNHPd1Y7+ZI317XexTobt9Ic/Wri0cRvKe47qN7/mfxuyife
L1PDMd/Hpz+T/pPvJ99BqsffU5//MXX5p7Pbsmfl9MzdRrV+bO7AXFfefIrg
SXlWquxc61P8EwoWU8QPKswr/KZwXKGn6Omih4vmFb5fOJN+V0Xv44/mUVao
KkwqbC84Q13BVQU++jcG5O3KnUE54M5sP/UB/8100OOpjEvp96WnpHelPkcz
QDCuAYuSq5I3Jc5O5BzAm8AB7oWuSpoCeA/IGeD/7Ca7OIm4rYxjuI++G8sS
+A7wWvxDcewXbPgEJwEJ0KSM4BaNf8YDd4uW/k64Iu2qBbQZGNA5mNim4ZnF
WWBSJGtGTVff+dGK/TwRsUIRoFmR4ux9IuDXtFAZvzNUC+5ieE+t7QMjxO9x
scb/YXi9r9L5gPNBDrKFeFNOVQ9Jwfz2Us+PI4g70f0/bZoHr/jTygJsUnSe
V/l34vEThA7c8OMzED5ek6Hwabh6e8H2EYc/UQc7pqxgP3b6/KfbtF9v0u3j
du1ANuhk0BKY/Ju072/RK0CTKTRwlzD0h5pMohHq105AFEJl/3AIejnCrymP
PBHhUux1OTQy+DorHm2GTthE7G660MWJ4jV3BXXY2U3AbDAbP/d29YLep8iA
5iieDl+Jltct6nv9GBBkCTozDsHfm6368X11npigqprLovap0hazDfi6wDVF
Zoh92DZ1osNgfu5GYA8KoEl3CRt+VuNi3w3W4uPYvwFMvRfB0xsV90Pcg3De
YL/s7yjye1PNX2TJBTu/1PY/m8l+C8X9Fc5Z2Ok1uI677Z5bPedott+UuCQp
LjmPZvvJKZUp4TRn16eWpG5Mu0S1PtH3hy+bZvtfMzOo2ifn3J+dk+uhLp27
9RfyptEkf5zifiQ9IvKPFuyjR4v/bX+K//3Cd4tuKBpU+HSRs3hL8YtFrcVl
xT8UBxe3Fk+mPPBJsafoAn386aJVhZOLxhV2FK6inNDi7+N/lqaC0vyteStz
Y3I/z2nL5lkgPOt5+uxf+9wZH6QXpt2Zdi71bu9k6gHeTHkk+bGkTYnWxLTE
fp517p00BcwAP/gK5wZHp/1Zmm3YVegNiv/PLGMtN1oGmz+iSYgRwXdjC8Ba
pu5YYQRWUQZIgSpADZAAvG3hHD8b21f+qQ6JrkN9KAL2Yy36gPngAPlwa9oS
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
WAI77W1MGEzP2Rstiyj2/2ndai21mew2O/P0kp2HnS56xq9wNyd2JiZQ7P9J
E78tNSxtYxrv99OzNmSX5x3PG+I/7X+4aHLRqOJzJWGlvcs+LBtT8UbFa1R/
r6TefB498qu31QyoXVkzbfg1FNe/DrcPv4qid8iIJSP8FNlHRiTVr6rfXT+u
/kP6/ekRveqvqP+zPmfkhyNW1XtGflPvHPX3kX/WPzyyV/2s+oaRs+rvHfk0
vR5XP6X+G3q9ZMS9I6vob1xR31m3ibLF8dr91CPYqZ94qja/+v6qs8PaqkZQ
FnBXPFJ+quymMr4l3FWSWfxp0e7CuMIh/rSCfvlb88bmzsrZkB2SfWvm95mf
+d5KfzQ9Ne3L1B+8/b1/Bx6IHcX2e/Z7ujw9PAfc7BrECiFXOPkiEEQ9wFXU
Bey03kMZ4N/oAtgz7Mv4+viv4j6NZV7AwwG/wCrgAmfGvAItJd4MNmEnKMjP
ZcBtCU9YvAHnq39cCR6iCMneAK2q6NgKnmowdCBFCeAQNgFz1d1THD8qofzb
gQ5gceDydxjYv3m6AegIxP0s9AOi9s1X/u2m7er0W6t4/9V6ZW9TjI0fOWCD
Ku34odLvNxm6GmZl1oYqFtjIB8ZO0GDfXfb7NHjBxwIOnaHAC5sD1b8Wfb/w
j68AK9HQJBcccKPJ8B5u+sv1wFD7Mu4QQcpFDNGORbYTj9NnFTT1CThxnYgQ
t4Vd0Nzm2G9Vp44F6ADkPnNcvXN8erMVnYAIeOX5wNf1oStYjp/pWmiJz8YW
oBm+Qe2qELoMLPxu2Pk/hrm/KZpdJRhLOiXmEjb6U2Jks38JCJ4qzPiPYMp8
Ce563yADVND8+TAQqaLO5aRZf0tcCby2wqjqM38n2RxLz1mOfe75TXa/w+yY
5fzcOdB1wsX6+Fcl1ibFJdOTM2WU98HUZTTxX+tj5b38nJzc0vxp1PNPKbyt
+K6SNaUflT5a9nX53dTjm6u+HBZffU0tR/v3wyfVdhuxnCLeO6IbVfF59eYR
U+obR+RQDD888oaRu0aeGOkcdWLkV6MyR10YeW70baP4rV0jnxg9dNRvo0pG
F47pGn1udMnoLvrI5tHdxywYlTrmudG/jeo3+t6R/UZ/Mqp11IpRo0bdRn/3
z/rFlA8aKYf0oS5h5PBp9BhQO712MPUBzw57gDqReyquLU8s/6X0iZK7Sj4p
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
4wx5dQ2Dqo+MvxR61ijJu+Myzf7vmJmaO1i0Csqh4lhaSazVNu22Q+1L7Gsd
3zjNcDnhusI9zXOdl8x7tO9N30n+OwI+DqoK/iakOMw1PJ92/Qtj4qDr9xZ6
JvwvoTbpnMgrJSLFIu1S2r708swIcVHW5awV2eezD8v+kS5UjFINz1mpPKfK
VKXm/pXbkotTe4v8W9DjxxbkF0wsvA+x/xXEqLv2RWEj1PbPSoxLbha3lr4s
vVa6tmxxWUj5n2ULy6eXdZYvLPcuTSxfW3av9PeS06WppbtKJsNnrijOK/m9
5JcSp+LH8NgLH9cUny/GLLCiuFfbpx0POKEVvsMrjZ3mTcG/6tiCePWC/LJc
nAk8gpzUqVgsV8mM5JOlftL9kr3ZehLLLKXYWuyT+Spzc/qcjG1prtAPuKZ9
kPJIdDvpYtK8pJIEQeIXwhhiC1rGNEe/ioqKmgs5YHSER1gKYIE9wY7BU4Lr
A8cRW0jsi5zh/3nhjvBLjwvuA90PuO6kmWCm02ryFJ5k52t700Zs02l12Wqc
VbLlEsgCaYACvrTYTJ3ANtIPHGt2GdCbpSlebqFC6xnSEbxB+O8C6UOiQlQ3
Pb4lF3EB937VwnMLn3NLqVdlLJXI6Uy9WjcFOMsdQbD2z6aLIJz/7aHZn04Z
EBGACVcEU/OJgJrfAwzg80B2FYCzgIBpTG9L58Gne8328xI+d/vPv0/P0IVf
/eguBHoNdHO9Hq7830P7+G6KeBajrErrEHsf39jpNETZBKHPQKcuMpjrEPQZ
CPnV4GDONxjMr30Yz3eNgW7r2EkzRswxmAmuEepnWMqId1YeVN9FhAlENN0v
oT7/IG31WPX34Bd+7E4rjOKfeXLfJTVw5AMIZrLIX0vzQPzdjZ2J2cCNsD86
wwloxtNDfj5M+Wsf6X3dIpe+R1T9UcuvAh42Jsj59YKox61/M+l4450/VpI6
M1TwryTXniWWSVZONtU2D2yN7AUOFxy/cd7pkuDm4OHjmew12Ge072y/w/5X
AlYGbYLuH7X37aJQyaMuNia+DLr+PxO0iW9EucmfJm9Le5oWk3EmsxQq/3zJ
COlMWST012sUGmWmapOqBTrvu3nSfIv8u3mr80cW+BcM13wJVf97zTqo0Zba
JO0iqNemxU7FxlD3vyg9XIpR/r8y/YqgCnVlZ/mUyicVbyvTq/ZXmFSaV3SV
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
oXgdumcXgBiZ3bwqd5EiGFMG08V+N+/jg/o1A/sMXPpVBvU5FmC4Qc9Qd2HI
PmbbvoXEM8K3+F4DvF9k8JKi/yWxeoxopndtegnFPPNmPUgan03k77WWdvs4
gTlIu32c8V8hN/e1/NZvB+H/Jtr936Xa/3wG83rCPIBZgGWDEK740s19upnD
TyC5Aa8k/V8TYoYdhejfALV/hskr4/vGSpNDJj/DAzfI400ROR4wxc7/klkg
1BMHi98tfhMoLN+x0kD3P8zOyv6u/RbHoxD/Itc7EP/lnq88g3wCAP9/7b8W
6tc3ITahY8NrIqZHN0evikVV7YWJU0TpySkpd1NRm8daPC1ro3S29H2ZVDFG
qVGm56TmluUm5teoWzWPCnI0pVDvg4uCiwoB5ccVj4ae/U5RZGllyY6ySaVf
lO4oayr7FeJ2JVT1oIo9lfZVu6psqp/XzKj2qLlUe6k2sdaitqaupq6qfl9d
Vl1xzaKa1bW7qq5Wp1Yfqm6Bx9mqluoRVaMq4yAfTK6qrlxZYQiIoKu8qHxc
uWfZxLIRJQ4lv5RsLImDbuBt8daiS/CTrIIc1Kf9tfCM5kPNSvXzvCH5HnmL
8mbkzlMKlWsAvSjkRvLZ0q9lk2STpRnSpxJzSYIkW5KUFZrlKd6QaZyxO2NF
+tO0u6lLU84mRyc/EmWKkDs8NOGwcHb8+bi6WL3YP6NRWzAr4nlYTcTS0J2h
o4IlQT2BLf6R/gMgB6C3gJ3nXvexbmGQA6IBBzjT5bDKDrPxcugFVlnLIAes
s3zP8r5gmQVyhH40Rx+W+YADFpmOp43gDJN08hZ+Q7xAVIavpW3gH6QTUk98
gOfECi4h9ZmdtAXAqxS8WH/AnQKv0z3gdVIGiaZ7AKYOMpmmALpJYAdXAVPz
WcAUUgdUU/SPgjwwhW6CcDeIOmF4ebuf2ACMEaBTBWOsHFb3XfgWTmjInAHY
9I9pcPznB9ZJFb/7/2z6u6n2d1J/3kVIoLs/fns5W5ihAcbi010PDeZXheyq
oJf/TR/nFvVxbZEuqvn4VRsg5jtp/ofvNRjgZeUEutfFC6sJNNO/R5c9EygL
hJE741qq7yfJ4/Mg+Tbdpct+1GxcPEM68yDX/g6j1x40qRVRzmAdAOP9MxWA
5/D5jAvIXEIXUBewbSZufZ3pEvACafv/O2u4MSrI5ZJjJ7p4LDFJoVufF6Tr
i9qeuPerI6Uf9PD6x+K+YJzVGqsg6002R2wn2I9z6HbYRKp+37rN8fjd4zvA
/wG+70PFuue/Mmh5cG7IkHC/yFbo/+sg/psSuhOXi2akHEwdQ7c9fVnns/Ok
n8j+lOsrBxDqX51/S/1LwX3Np5rColBtXPH8ooyShyWnS38v2VUyvSwZuvZr
peHQwbsAhr9Ysb9iZYVv1YDK5ZXRVYeqG2s8aobUDqldVJNY+3fdhbrY+t31
NXXH6u43TGxcVn+r7tOGb2v31a2si69DPCCveQ3/5mzVkSrMBxVV9lWfVuVW
HYceorMc88q48nDILy9LI0tnlh4pURdvhGxwBDDHy9IA6AiKtOugF0AG0aX8
Bfl388Ly7HPsc1yUXYoiwAL/k49ThMuHyt+XVUrzIL85SCdLt2fpSwZL3oOu
4EzmDxn70velm6XfTTVIW58yPHmUKChpXOLahPCE9nhxnDhOP/ZU9JeRZ6L+
jlgdfjfsA+gHjgUlBt7z/8zvto+pr8w72et3j0D3bLdgt9fON5z2OQ5yFDjc
JZbgY5tN0AnMt+4kFPAJdAIPIQNshtwdaB4MOKDR9GeTaaalJrjhSSfdELwP
cpzN3APMuHdEN1QPvCc5yZVmjWaspwuV03QZPJM4wRtJyWojvwpOJ0aQL78M
xOsfnAMgC/gxzQEDCAGI6T6oGvICMv6YKrAJcQLE/D5Y5xJymzoArPxs/8a2
bbX9m3l9Q53LrsRw8P+5DWL4vK9f86ubb/uZD0AfdeWsH2ggPNDFNUJ6+Exw
sKGOM9jF1QIk/X5ePQa6ToLlAXZJrMsCCymnNFDV7yYUsJAmARj/VjTxm0D4
X0RVX078fSt67cF9vk7S2yZy9mGOjc+pv2d6DXc573cHRfsO2tSySS3zBsfq
v4MUgHT/Amc5Wvh4G3lCbSO+Vy1dgaI3eCxt//aQsj9qekfQc0JpUmx61QTV
pjH6LcxcofKjc2+WeYyFscX7gsOC6ZYyq06rrdaPbWztSiD+nzksc2pzPuRi
6v6j+yTPZK+F3vsJ/ysCBgU9Avy/PQz5/g0xx2PRc6MzMT35bPKQNL+M+5l/
ikdD9CfLGxRBSt8cq7wXuT/l/6veB7VfDyp+Rsn7pe9DtLWWKsqeQV2WlQsA
pRuWJ0L/vqWiq1y/4kblW6jde6Czt6+aAJEfWPcTRPWxukf1VfVj6mY1VNX/
1bio6a/G7xqbG3Machoe1f9S79Owpa4eUMEftVrIE1l1brWNNRur/gJMcLXa
t+ps1Q34ercrBlXoV6wpXwhYwK08GfqCiWXvQ9b5p+Qe/EStpaMBC9wpSih6
UZhS2EpsomDoVtbnFuel54xSpecMUq5UPlHqKzshD0gVhoom+dcyb+gMJslu
Zt8hxZITWag5+BvggWUZ8enx6fVph1IeJG9I7hB1JmoTU4VH4pfH6cU+iX03
5svILyPnRvwUrqQcMCjoC8gBm3zn+/R6v/J8CDlggdt6lzPOb5z8nSSOuBdY
b3fWttomwEZjrWdtaOVuNdHyN8EkwUgLvBd6ajYVugHs5/4yWWKCuwDmK5Zr
jL6C//Ir4UF0GVBPU4C7NGkSUb3C6EeNeqYM8oD8bK5T/L+mKQDeBaeTPhDu
BDdNm220h24AxXQJzDxCA2gjeI47Aogp2lncx1EeYP7gF/kFzlauAVbLcYCE
OwQF9e/m/tMDYZN4/f5poJ5hH+/yezjvH7fyOhSg4+YvpPf0DHWqQLpJXh+/
Hu7j/cB/n8X0/thXxu+HOKCTvmYvxTrr/xdSnsGPMAtc4/2/iNCU0QzG6GdZ
YShlgsWE89dyb4aDtMs/STy/K1D/2X3fQajpd2dgV8b4flfot4N8P3bDdZBU
3U5SvzCEPB/uEgdgNbE70Beqh3TA/pip4e4/qPKN9z7p8AyoMEb0j2z/aTTz
LzaVk9YHcv6mmheQm88yUvVPtmywumxlajPVZqadh73WYYvjAKfXzktdtrlt
dv/Sw9Prf16jfZf7lvkvDggKGh5yKPRE2N4I9N5bFTtTeE3Yk/hN8tWUbWnf
ZK4TH5egDk+Rolo1QBWWtzrfID9H815hQtEqQvutpTml4yDK91c8KxdXPgGM
f5t6+8nQwVdXdkD3HlepgrrtUbO++kpNY82N+tW1znW36vzr4+t8Gv5qvNpY
2riu0b2psSm4eVHTdngb1WDZ9GFDRGN+fVrDhbqR9f71gdAdaGsH1U2oeQaI
YGjN1eoPqr2qb1dUVAnh+7pU9ADGSCz/DrDAwvKJZYsBf3gCAvmidDJgAdPi
40UntOO1l7UphT8UOBT8q45XX8kzynudY5Prm2OUNxnwwBvVReUzRaZqocIN
8kCI4nfpEWkGPfZLArIHZh/IGg+PV5kbMuemr0gfmP4a/t98k/wkySVpTaJK
uCs+I/54bF/MV9E+UVkR2eGHQr8JeRJkFvRO4NeQBbb6fOXl6fWRx2j3E64v
XCJcPnTe5DTI8a49eouctR1he9va3DrJyhA6gcOCfyBzV1oUmK8w/wl+owdM
P4ff8VVAesgMmmWMF9/5UAtqKf5ryUMM3STdCEnuoKkUTquvEYddRVwApmLJ
boKYY/BGI6YT6kuqYOwqcIQRuwRYzjWC4/p1wZ1IEZipApvw+6BRhAaekAfn
Ku7As7WfASjkGwA2D9Tt+5geoIR3BXp8K6/HXXl0M8AuzsVhuhydPM51rKDu
/m1ddz9zoJNfEeu4QeyrorcAq/Z9xPbv4nu/NQZJVPd76f1OQv4N9GdF8Bpz
5wSq8h40T5VzV58w6vvXUl9QQhM/jGH2ljGxkOlnyCu8gG417tLGT0B/xrZ/
zwkLYL1Ht3DW+SMfsJ7QvyHpPEip9qMnGOI77PWOzcKrf2QAoIfnLFL7QO/e
YYD+x5taktaPgVkC1P9t1Pkbk97HYcFEy/9Z9lqZW9+2brdNtbtmZ+iAnt2f
Ok9zDXOtcb/lPsvTxUfP57yvyn+pf2egf3BFyJWwp+H/RCqjj8eqhFcStiT5
Jr9IGZieIp4veZz9ONtTvgW6fqs8bb5xAXJxL2u3Fr0tPlJyquxaaVH5yopz
lWerJldFVttUD6veWf2y+mhlOqD2ndVraZJXVi2q+bjuGfT6W+ou1ZZDxf+y
PqrBq/FVw4GmiMbCZnGLQ+uPLQUtg5vPt2AWCG36qvF+w4aGrxqTmtoa7jek
NA5v+LfOuP4CZI166A3kNWerXkJPsKdyRvV1QBWPKkdVCiskFSaV+pCF3gEU
ogcdx+KyIyWTSwKKE4qOF/VqQ7VF2r8ICQxSr85flBecvyPved7neVfyDuWe
U51TPcjxh87GRJWpGqW6rVyoWKMYKl8rx53hLulD6AxuZmdLUL8wRWyXmZkx
F7DA81RR6oPki0mjRIqEl4AF9sbNhyxwJmpk5OrwaWGoKYKXxC3+b33Rcfiw
p4PHt26ubnL4DcxyRneRcQ5ldrZ2k21n26LH8jirryzvC1ohB8RYOFjspXlg
tlmYaaPpEpNm4gUhBtgD8c98hTWAAP4g1RjtTFZdmvqfu+xKlXkGozbYa+IC
noXIv048YNQJm00v9pwNeJMzgZYTM7ia+oBquhASUw5gCMCJ7wIGUA5g/iDz
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
AvoAvBKeZXyDtOGOkVr0mFkLiEfmRh1lEz1nh5JDxUvSrS+jmwBUtMRrgGHT
0zkbyJ6UAUYYMWXQt1wfkN0Eb+KXQWruFcQuAplPIPMHcKI+YAr34l1FOeAJ
d+Kr5boALAOYkz+wkG5/Xfg9PrsNElLUDv4/87seA50+n84XkHF+OvmdThfn
APTxeYE+dwtiXmK6r6bTFmK7Rd3Ev5M6ftb341sZVX+BgTv8iZxu+uT8sldO
EW9EWr6ME7yWa/s2cY/PxYS1DGnWj9V9ASH4emLzJ1LkG1JU1/OXEGL44LZf
yv0/xvZnBy31AAL6CgtoB4B+MHgFhOp/GP/DSS12Fil+vTJOMUHdiDBTEcT/
fIj/FeYOFjMJ+79niVc/LtZTbSpt0yH6U+2Q/XPM0cTplmOb8wuXu6533GI8
fDwneh3w3uoj9n3g1xQQFNQRXBpqEL4i4vuohNiOuIz4Z4lHRa+TzdJnZX4n
firxlmmUR1U7c1eqfTQybU1xe8np0lGV16vCav6tO1Y3p35ZfWnjpw2NTdub
tkJ9D242hSi91OwENXtFS1xLTGtcy2etfq2jW8rbzsNHX7SFt3/VHjLn13ZF
+8I5y+e6zQnqqO3om7O2/X/t4+ZMb7dt+7oN84Nt26S23yEXZLT+2R7T+hH8
e0QOetBFjG5phDyzu76t4e86bW19rbR2R41HzV3IRxur7KtMKo9UbaqMqywp
G1eOvGPvUtvSh4AAzheri58WXdY6Fa+C14VFMm2o1rrwvcLvCicWlmvKNcsK
lkEeSANEkA/ZoFWzT419wTHIA/j2eZ6zujEPH7ugHzgLL7GQA+YpxykkSmv5
BPk/0kjAAnhfZJn1p/hVpnHGv+mi1OepXikdonlJJxMihdtj+mJao/ZGbAsv
DXUMHhN02H+57wnv+55/u7u67XRJdx7lNMgRt4K7SEe0lzOEcR+wAjAA3gc0
mqK7A158otPjG1IMRW/YLaQd/YyeewJimq4lzhkqhBnNaIHYX0rV/wNiBaM6
+C66BzpCN0HoEISXQY/JIQxfxLT9X06sAF31D6C5nwn3CMX5/35SCZxCTjy3
DW9zpVDm0aUxZJNBXS+AHYCGLgMGc71Qfc4DcuG1n/GBu/vRfCfnBPfymUAv
r/G9PP51d8E633DW5/+nGdzNP0uPq4myW79uqvudNAPAqs+4f5gBkgyuTRdx
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
ljqrPJsw2TbZNH1t+tkk/Xj/6N7h0oHDPzf13e3T7YvuTkE9wKP2gdbA1r9a
xJrjG/gbmZoGGzQbLRp4a7bXBlePVClX6pfe+Mxd+OO9Tl75y2M55x8s3Nx2
PeuKThrDhepU7xSLU5OJhxJGYm1jnp5IizwdLhH+KyQy3DqYHT2Ug+oDtwat
QT1AsN9lX4wDPuvl7DnscceDzUPFbdxNypXJNcfFzMXCeZeLpyPVsdtB1WEd
7Rptt72ZvbxdNO1P+2P2wXZ77Cztbtst2l62raW62yZTVWD/54Pmf6wF5G8t
aDWKov8zmgB2mv1C0b/J+MpxVaN1hrEGzQau+mO6X3TmtJ5oyR87rfFGfb2a
gkqeUoBCpXytnL2slrSOVJ3EG9gDJIqqoingJ8oARwU8+bJ4H/NIwyawigtj
Aj2AGcjDgT9JA+AdXM2qAD1qDekZ9Bo630gSAdcIOQDvAb8e4j18DrBAsYAF
roQZwIUJTwA4A2CnQGtQB3YnlQEJdyCsCoSdAWt/q4O+IrH8hE8wFWYD6u/7
H7H3pyMxAAQLwADYAxSIf2WyLyA0A0p+6wGXQM1f1vxcftUDKgDRcPnfBmg/
YgvYSOKcCccvnBcYgd8vgf4/e0P+w95pGBdVD7yfVbDtp8K+zxMu/jhf1sB9
X4R08NsH2z+83WdnDSFvKwrQXRWSPVYaqPvcgTkAI31dgJFBzP845rFmYzzq
APD2H1/+ClD8D6C6j/d+GP+HdQBn0ByAp/8j6H005LSF+98Pyih64Pk/jUuO
m1ADUOPdytfJd1RAQNBYSEI4VyRejGACvJLbosyiulrjzrEenVb9zuM0syWL
ZOqf9nedjriVeR0KcA8+heJ/TeLUacML1Rnltz0fLTyne8dSfLzidnXG9572
7p59fXeGFYajxhQnts7um7s7xz6XOXMXZYBVsz+nPkxenORDczr3TP3MpjnW
X/8OHbQFPbIXPvzaNHf71/3Z7OmfUxrTGyf3T9CNl41WDf813P/T7OdYr3jv
3T6T7jU9ezpVfsy17m250ajyPadxV6M2iv/62k31f357Vr25akeFfBlvSVJR
ZcGbt49yc5/lZa28d+WG+rUnlybP7zpXevrXqdok8/iPcZLRPNHOJ/QjesPW
hX0PLQy+FEwNKg6aCDQKPBRw3r/NT9F3pS+9z1VvTa9hD6wB3uHu69qPev8z
ru1OC05jjlscTzmWOKQ45NM0aDtRBhCwx5j/b7YJdiO292wt7ebt0tHUr2er
Bs7gdNQmNP8XWA1ZDlluQPO/B2AA1M0Om7YbhxobHKceLzWUNvyg/0lvv94b
nS86BVoob2swaOxQF1JdobJdyUnhKOoB1GTjpOWklSSnjuBbgIIo3gM4CQYL
fOOn8lH4HvPEcQuiGQBrBK6kYN/QBg5jDqwUfAGUwtsBg14D+jSroNq9hj7Y
juTB5MPNXB1Ywe/IOYAZ1AErof4TqgDYLegHbABCof8nXAIxJ7AYLgHppDoo
UfOX+YHp8D0ZYt8TIlyckVAFJfwBMhmWfT+2khpiPQz/cQcjMD7E38gkN355
5FUwBfqATMgPy7f+VFLZo5S8B0yRjr+qwH58DWo/kYD5twPXL07S65Ng+uFe
QIxE++ELP+4E7oN3L774v2Bdgg2AAsz6VoDsx3MAvva3A6/vBXAvdKH+V8O2
rxDN+hjvrwVqfy6w9cNdfzy8wpf/W4D9Xw+7fzz9f2fvZ8caAG+AA+DFGYHi
HyvA/6AIo/7/T+6PqP7LcUvzxPBsBxSAIn+lwA3BVCEDEW00Afwl9VjmgZyT
QqGKo1qNZpl2pb7B8fWmuRYx1sF27E7b3OY8n/npBRdFKMaWJC6dCbt4O9Px
9uBj05dqb2c+01V61/7R1tzF/3PdwONRzdHp6arJrbOX5lpRxReZM5o5MfNo
zHLSf3TlxPEx+cljUzqTY6h3D5h//S/RAVuW1i1ILFJnredWzZ6fCpz6NqEz
OTn2x+id4dwh44F3Py36k/pqe7l78rufdCV0prTPtba1nGnSbrjQENuYVJ9U
b1dr9s2kZmP1ZIVY6Y4SsU9MHynvQvJGn1k8fnlv1+111xwu16EJoOZM/ukH
SSmJu+PpYt5GsZxQiMwOWx9qFM4a0hkkHmQQ1BdACVINtPTD3gB0PmVeO7z9
vSo8R9273Jbc811jXXJQBrjh0u6k65TlsArFfx+tjNZHM7OfR5EfbKeIKj52
W/9iw2G7xy4ZxT89tcHmi02PjSTq/2Osn1rdsvKwSLTca/nZPMMcTwA3TP8x
SULz/6njK4wnjL4a3NNL0vPSfaTDpy2ntaR5RIMXdQBCqquUtytdlN8jPyaX
IvuHTJikjeQ7cU1x7BWQJRwt1Cx4ib+TT5lPjdcPfEODuX5QRCn7UQZo4IhC
HYAm+2H2FuhDsfoU1qErYikh/W0jQfXWiFmVjH9jYATfOIS1AbBz8C40BXwA
LPBtcg+wSKKB7oI+mDXogq1AvUAxKALWAhbgAekLlPw7C9TCZBBO+gUTOuFb
GQmdz57fV7wS0AY2IJEB9CT+n7gUTv72ARFnrP/NCMgieUD0oCp0DaIf9zOl
wALKhnsAsd/kBt6TBNz67AD5b0dqfdSTfh94/lcCr58D4OpxisT81pAKXldI
FS/MqtoEc38aRH8a1P87EPV3QNsDX1tw3Q8Cfg/u9YntH0Zk4rvfLTa8BbwA
e/8CUP7jZ8fcf3/0Tmmyl7NjffdydhrHQfADfIR6AJwB8AbwHmWJ8pxLh1QC
0EDxz8N7nDeZr5aPVSBHMBvF/13RG+JcEjelt8olyF9RPgcYoFiDA8eFTEYt
mqzn7ZQdj7ht9UkNGA7WjzCMWXEyJDU4LefqzO2R7DO5+9+7FFtX7Wxqab3Z
lT1QNHRvwmFadaZpOmAeI3ddfq2ZUZ0JnowYfzpiNWw66jzCM/ZmzGG6eWrd
dP/8zgXfhX+LDyhdYEJdQOhc3syTKdvxN2Oao2WjLSNKQ0cGZ36290kNNHUX
9oX3CnTNdjW04x7Apvn0d1pTaP1w/URtZK1fTSqK/6avPhWPSl4UOX249H7p
tenLdU/+fqh0r/s6e4b5Jf5zbqnxp4ROOSQsxsZE3Trx9MSpiNKw2dDy0Ash
1KBV6DERuB3Vf+wPYO077tPv1eC91vsfT2fPRI+T7pFu6q7ZrjTXIDT/szvt
c5JwqHdgouFN/5BdsN1G1Pcv2rrbpqMMIE71QpHvRaWjRqAnD5r8m6z/tr5l
pWV1x5LNMtdi1OKyBadFlNlncykzU9Nq4w0mY8fvGtuhGQB7hP3Q26rLg2aA
tGMemhkaNPVWVRbVLcoTSrIKSagD4JH9U7pG8rVEv7i/uJUoVcRbuFnwmcBd
fmU+KuoAytAMMARK4dgx6Av69KzlwP4SQehzhvfOuC7VABvAE/xrumEGtvuN
BcDdMnYJySEZQZgV3Mr0C80AWB90D8oBe0he4F2YAZLAKRgzA7EmyANGdtAG
eEWqgr8CTnDtb3TQK3L/RyHxQHS/Vf7ySB4PwQimI1HBBDK4h2HZ/W8r6Qm+
vBfoIVlAmaRGaCnsMXA3k01e/HvhiW8CRqDw2wgOIdvgtQT4/NkxE0yfVeDo
RSj9nAJkLxWwPxjpgzMm1vPDu39dqPXs0PfrwpSfBnlggZwBqoHfg7d9xL6/
GnYAGAWAFVovoNiXQ8949H5oQdXHvf8udjz5Y+Y/P2QAf9ABPAgqgL7AAbDl
rAMtYBuKPHp3XUEJwBnV/0M8krwpvCW8ovysAsyCUmgCSBNtQRPAJ8ks2Y3y
JUozapyaZ7Xl9fOM+E1fm5tar6PpOp12s/dmDAwNDjzRFWOQ1J6akCZ7Vene
7cffX2p8NC4JrYptdO0c61UZjBh3nqqfGZv9vGi88H3eaFH7180p+cnjY2FD
w8ORg7lDW4Ykx0xH+0cNx39OnZgZRr17zr/ECOcuXVmaWFwxxzhzG80XTaP2
Y1bDS+h/7d1PzAfS7XvWr9qz0HezK7qbr3tzx/6OuFbB1g0N2g1TTbV1W+q8
a7GquP/Xe6VXSzg/uRZkvrXM25G74vmrRyvvrbqx85r05cfnQlJ/Jr9Kok9i
i/OKkUH1Xz+iMSwgtD90X7BIMCUoPMgkQCOAL0DW/4NfmK+hT5cPvY+pV5zn
P5657mHu4275aPp3cjnsgpV/xdH8n02bpsmi2f+9/aLtTfuNdsXUV6jmJ1N7
bN7Y2FLf2By0eWx91hpX/hlU+/us5az4rD9aKllYWXJaMJj3mr0zfWRWYLLL
9JZJq8kK4yxU/wMMKvWFgBH8VptF686xe5oH1TEnUFdFQklDUUh+/9ETsk0y
H6X0JQ0ljI/Ei+mK1gtj12ALgVq+ZL4sXgeev3nkUHcoz/WJ8pATOwfTUAew
lgPXF7wF2IR60RpgrhFuYatYIgH/hjWzsTpgNCCBpEAlvBlNAMfAJwRjAdcf
sgA0gAW4BFUfJPAASaQ2sPVBggvwAGL/FakNRCiDFZPqYFTYAXiSm0ECA/yf
Ck8weeuhzydUPyYB6UdHOoES+kAU6AGI/7KEdALtIXkAdIylEOulcP3LByYg
vgISKj+rwd+HG7iPGPtIYH4mgOtH4H0wNjoXtv6n4OJXA2o/RYDsI7Z+7HDr
swJ0XyL0//jGnwb7v2oSZ/0C+n98+UtD+XYBtn1a0PlbQPwLQs3Haj8FoPdT
wYbn/cMo8k3Rcz16hav/DPrZGY4dkAHOcLxG7yPWAdOnvKR4UEZRDqji0uJ+
j+Z/DR6MA97K94DvE3+CwKxgoxCnyLCo1JGPUiYyxXKlik9VN2se0ubQizS6
ZbLBqsn6vP0mp3G3td7n/YVCPkb+FffiZMy585duXLW59z7nzzd+H+PKLzSY
tjl0B/XPjQxN1s/cmJ+dP7CE2ftLS+KoLz8yro+6cZmfsT+f9V8dGB9cGH48
KjmmMl41uWKOMsu08G+vgrPzInOLc7WzGtMCUyrjPWNRY3IjvQO7fl4daO8b
653oOdqf0iPUb9Cb3S3dzdFxqzWwlev7uUbluvb6gG/Xar5+C65+VelWdrUk
qPhDgej7v/Ojcne9DMgpe+h4m/s6ffretOHU3tMbT0knCMcdj34T3R6ZEZ4d
ph2yMSQ8aFNwfaBE4JrAzMCb/gmo/i+i+f8Rqv58XlUeAygDFHi+dht1L3XN
dz3sEu9c6BTqVOuoQYumPbGXR5V/o91Fu3uo+7elrrRtQLEfQd1h02BTZk1H
xT5gj2yeWpWh6Neywhzgz+Y2Ft7oSWgBfTe1QBkgyMTKeOy4t9FPlAEu6hvq
TuqYaj/RCjn2UrNLA98BXFStVBoVZxVGjhqgGeC9NJtUnYQtIAJ1RU8L/xQM
FtAWGOMrQb2gBpoB5LhdUQfAgToAQ04GlAHWcpSzPwV9uQ1sBGItF3Zb9WT3
izXvGUnXUHwtx4xgjAb8Sl4Cd5GMoASmo6j+4w1A4cERlAUugTYoVgbVQzMA
oRA4Bv5AyTANLGeBMbIfIPDAdKQmAHH1y2LAOh7Evb8eFD2XvT9SyG3fMjqA
wAT+x1G0HjJFFqkNjqeIaOj48ZRPdDLb4K5J8Jy5oeZjn09GUELAOeAh6H3g
mx/eh24BlD/h3eFJKvmNkoy+TRD7iaDZuwlw/eww97sBlwdjfNqh968mnT0K
4fLHwiYHvT/e8mOFn3bg+VrA3G8Bez8ZFPW7UA7AGu4yqOrzo+i/Dl7ANHB4
iOL4wsGA3kVDTpzNsRsIdgXdiyaANq4hrjhu7BDJCK4geAPwXrBUiCqyIHrw
SJ2Ehsy3o/mKBaqGGgNaI3qphhdMbCzKrDVoBo6RbjNeqQG3Q9Iij8VXntJN
PX7F+JrGQ89nN9+4FR2vqGzo+rGlt2Po2eS+OdXFsN+R2b0YPis++2ZMF9V+
lcF3PzV/cg6dHFoY9h91HH0wnj6eOXNunvYvOcKrUJ4xWrwyGz6bPa03UTV5
fTRuxHhg3YDUwOGftb30vZ69C33x/dV9d/8XcW8BVWXe7g3bMc44dsxYqIg0
mw7pls4Nm9p0N5vuEEVURBFMTCxExURRwRaRlO4WRRQFBAy+/3Xdt57vXc95
13fWOc93hnttRR1do+yrf9Ef+fZ+r0n3584lHRJtkQ3ZzfPr+2sOV6VVNpUv
qYh+lUTqP9eTvgf993+7x7615kZe3uVzz06zj9sfEjuwKP3j7sLUzu1Htt/b
lpV4MT47TjGWO+ZiZG1kScSV8LWR18LAJfBR6BHS/98JHkEvIIMg5aCcwFh/
ATIDFPnMJT3Ad69hMv/PdvdwB7VfmPylyOuO81bnYKeFzq8cWU5jjgaOTeQR
ddzoqOv00CGT9P5+9odI9X/GdmJvsbtkt8/W1U7PdoOtj3W11RSrVVaCrMWW
Sy0ymTFmtaa1prNM2g1TDf8wrNPfor9Ez0AXOgBrzXCN22pBqh7Kg4q8irIK
+7a8lz0vs0b6vuR2iYPih8WYorqMU2QC2CTcTt4hneS98kIgW2CGwHp+eFdB
l5mCzuF++H6OQxzQGp5LyH0vIfVQBznBVqgPOr6xBacA6AAqN7ThDhD0wW/g
BADXgPPICTpPaj9gAQANUIveAM9pd/BjdM+f9mv7R6kEadPqX330hT+P9vYr
ob19j6Pz13Fa2fenP9jPqKe0hCnNz+lcJb/cw+tR/3cb7v9dN+1HlM8o7vth
D8ghn+9FnR9LVPinWNDmPJQewjQeyuFbFvGRlJdnDap7pGKunE/insL9OCDS
xw83+7dw3w8aXuDBNg+7fErRRwLV2HnwW9D3/bCZ4vtlIeJHldR96P9TSPUf
IDNABW8YIrU9SS7wJE8+mf1P8SmgnsMo6QAa+AHPFSSwWnCqoIzgEcE/hM4J
RQl9E/IWPkMmAH2RxQwRxjFRfjIBGEpckVwjfV7mgNyfCjuUmKotGhe1P+sb
GVmYylvusuqxU3D65irt5eRvEHQyPDzGLrE85XQaK9P6yLycvrzIW8+LTpRU
Vjc2CfedGFD4tHjs+fil/2OnZzYR+iXocxeZxjcMlA5oDRaRDBD94fuHE5/8
h7nGEsduTfxPGUJ7yKuNTBFrxwXHz4yu/aw8tPJj/rt5b2P6/fsL3jx/U/Cm
v/dWf2Jf4JvFfdd6VvTc6YxoK2i528xu0K7bVnOjurPqeeVEWWbZyxLtp9ce
xRf13/98Z90d2RsxV37LlcgJPfngiEJm9H72nlc7l+08sr0syS6xKmE0Nj9m
aWxeBGiilUQ8IN3/mTDDsNchvqGrQxo4D4IaOOAIujFoZeCkv1+Aq1+4j55v
m3eWd56HtudJ92K3crcWN19Xe9c/yewf7HTZKZ1M++udFJz6nJY5jjidIJP/
Q4eHDnak8hew/yZ9/1TyvLC7a7fIbq/ddhs92xzrSGtpK1Orblah5TTWFQtD
5k7zC2aXTV4ZnzGaMBoyyNZ/qdesm6XzYetFbXmtNvU29SlqgqphyiYkA1ze
UiS3XM5PxlVqXGKTxGsxOVFBUS5Gq/AOYcADwx1ARnAGqR3gFbKEP4O8x67z
AgIVOtSaXwrha2hdgF68ijWial4ocoFAGzR84ybS/28iXUDUBtAGg03g78gI
+IEzwC7MAWbICqB8wqkOAFhBzogGjsOoT0PkP6UUIkjf9gRpZ+8SWtunhEb0
p9NY35+OX4KoAyhIu4EL4uxQiO4h1BaAmiJA/7MU0b2juPuXR88jSt3XchP8
fAKtglqC7IdLqPEL9Z/a/VHeXua0Zzfl4wFafjXo2rUKsT7zEd0Pyp2A8AN8
bwfW+p84n5U0ykeVF7IA6Huo4r84ZIMU7P19eAfw0p9F6r8nycjQ8YP/N0z9
wP0DP4dTfMD+AR4H7P4a+IUw/ike8AVS/+2FgAUEroAbRTaKJIt8ERlhnMcN
AEPSUspPpkJ2nfxNRTnVs+px2uv0JUj8e1istBZgTzgMuk7z3Oq3hCMaPjdm
IjEzZfZe3cyP2dxn0y43377xsLWssSaiTam3gFT/+f+i+HXg27Tx3cMDH3eT
qN/y/jFuAHM+Phia/vnpsNIXt7HhH1b/w/p/cXLN5P3vb7/99bV+7PcRoc/T
P8sOdg0avLPsA9eg0N7xnvAe174rvav6NfrVu3s6czs3tnOaY1s8G7/X99aq
vH5dda8irXJ3aWPJnqd5T5Y+Xli08f7Uu99vzr7mnTt0Yc/p89nih1My7qbX
7hJOrUse2QYYQPN45ZjZsWrRZlFfwovDvoQ/CF8RVhzWGVIX/DnYjSPC6ePo
cpZwYAtgGlDgb+mXT7r/7T453hc9p3jJe+wnGSDKVcnd32W1SxDp+t2cEknX
30Rm/lkkEzSRqf+hgzfG/x/2UvYL2AFsmPxf2G2xa7Rdaqtnq2hrQKb/btZF
Ev0JlqUW75jFTEezbtN40/UmosYrSfxfMLikP0uPW/f7VmdtjtZ9zU0ar8kM
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
6cNmNqqrUJE/F6O+Fe/6FRjZFZgVKsh/ARcAQAGtxBnAh74BwvfXyRRQgftB
SgHAhg+yNGwB9HACOEHin9IABxXgv0n9BwawqnC5sKiItcgrkVfIAnZGBMBZ
Uv+5pA7JGMid2GKimKl0TNVLI1DbU5fH6JjpGpae7VXH3S7nvbwD+UNSSP//
LmX/3tiDT84szsu5pfBgqHRNXXqHaf/Oka9f/8nor5n0+rZ2PO2z7ifZwVX9
Z7tzSHUfbTrRxG5gN7xvSGgubapqHWhralfvjurm7/qrexC3gkrtNS3hjab1
BXW5lZ8qe176PF/+oveJ4uOgoj+LV9xTLJh3a25+/6Xs85xTX45szVqzb+Gu
szvSksuSpBO64mvi98adje6ImhJ1MnxFmCOJf4vgB0EsjgGp+jZBqoErA88F
bAyKDrgZsIXM//k+ZT7fvdjehR7g9VnsZuvW4vaXq4mrr+sFlxjyPHdOc5Zz
7nMKc8xwnIdqH1qk949lL7UNsc23ESOVP4VEf7XVLitt1krrQJawpbDlNosW
Zr9FJvOR+UezG+YxZlPNck0vmzSYrDWFCYDX8JlBgv4M/a86KTrSZAJo1CzX
8FWfonZPJVMJ1EH3bVku90SmV8pSaqnkV/HDYs9F5URZjFMiraQDWCH8t9AF
8r75TOJ/H2qDQneZwTeBO+hIdKGiUG3zNwfSCqEl6Ig3g/bRBE5QPnYAXqT6
H0CPAJWN739pg8AmEKaATox/SiWUcgsBdWAK/5OG98A4rP3TaQTQdFrZ4+ck
30cjeetpdd907AFYNNefuvMV/kIJF64roTcBFDMYroNX0PMDLn6L8P9fB9nN
lhj1lMsfeHuAmi98uwD7fcgFR5HnE4d8f8D/UUqffHTE89FMP7j/n8O5HzA/
TzaDhg+VQ1OQwT+AXF64sIAPkxiZ6YHVX4EzAaD+IrHip+D95Tr5lSzsD6Aj
mIt67cAAAAXQMr5mPujU8hEDtI8f0H9bBaYKThWEbY6U0B8k/quEIP4nhPVJ
76/A0GX0MRaKQga4IV4s4SolKy0he0DOScFO6bjKWXWO1kOdCwZyppnMh9YF
bHXXVV7m/hbB/lERiREp42k3Dy04zXtx1U37h3UvlWpOdGwYeDskPdH1D8Z/
7OSlH2vHt3w2/cD9TvDN1XbvNsUmjfq4Ou26wLrausamRc2PyQTQ1P6ja2rX
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
YFOYe2zDtt/3iGR6nUg7f/Ja8v36J1/KKxvsu23f2QytHQ/5B+Of86N2PHno
xXvDngstVk3MOp1a0PXaWP6g/E7lwerKatfaVfV76rKbVdsk2sARTLdjXptR
G0/b1uavDdcb9tS1vL5dda/CrkyiLPXVhdK6l8tfHHh0p0jr7slrgpfrzp88
qXs04OCafU92h+68sF13W0rivMTxmPAY6ajECED//wgJCr5H+n8RVP8E1t8i
PyE/d98DPmI+N7yNvb96R3oXeNZ75HnUe/S797tbuyd6AAt4k9sj16ku8c4j
TmnOD0jnL+I0xxGq/xCp/3V2W+3cbW1sDtjkWM+zLiCTP/T+rpa9ZPZfbFmC
9d+WGWU+SOZ/E/OD5mZmd0y7TZ+bvjQJNrlqzGNkZzRpsNtgq36jXrPuk60O
W5naC7RnkxnAUW1EJUPZTslJwUL+q+w82QJpjhRD0lZis/hqsVxRLkaGyACJ
/yqhx6QDoDzC4JYEXqFjfHAJLOPjJu87uEwDSwXcwsDT4hnew3vRI0B+E+Wj
vQE1AcZpXRDQB7elt4BzNx7c8IjEP7gFGqNGcMz68yQPaOIlEJ47qAr4iZ7/
KXeQ/8ABC+IEMELv//JoVY+f/p55OAcUosZX4jrKCTwPp4L6X1mA8v8cWSeM
d0vq/g87f9hhJKC+CaB9snHyH0aVz95Na5DztwYVP+Du+Qw7/yG8+j+jET+Q
Bc5hDuigNX0o784PiPiNxHv/ddzlcfMBe3eAF5g8wOU34KvAyM6hlb0GcBMA
GQDm/eWIwoauH5A/ycj9NyBfjSX8yXzg4DiLH1DAzXzuJPrH+OACCBiAUf5L
AnDNlUKldwmS1Y3IBLBM5IFIBnqBMUVryQTAFgctcEupi9LJcpe3rFZQUj6v
xqXlt5Wjn2wczjxgc86+x1nSWyNAJcwnOijZMC0r4/SJRedLr9kXbnisX67W
sL6juv/qkMeXF/+/XPb/ax+9P9aS+G97q9LT2tbYVFI7sxZ2eukVr8oXVnZX
Xqg6W51QO7+er35fE0/byractgftqm2HWnPa7jfpNfk0ONTr1I6/3lktV3m8
oqJsslSg9Przd49EHlgVjF47f0XrQuqZxUcVMvemL0+r2tGwrYz0//MS5eMq
owUjgyN2hKmEfQ42C9HlrA0+FfQw0CbIO/Ci/wu/JN9R32Yf4P1VejuQ6j/f
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
eo51VrU6tZQ2RbTNa7vavqTj926XTpUew55H3fbdp9qB//umqa65ssGzcQv5
rLLhflNgXXfd7aqKMq3SyOcLnq4tKr638ta7/KZLb89uP9Fy2HT/jT3au9R3
iGz7nsCb8CZWOSYlelcU+P/tCPsY8jrkaQiogNQFy4Tc42wMago6F2Aa8EfA
C7+9fub+5v49ftP8m32W+o75dHhFekeSacDfa9gjlMwAKm5TXZ66/Omy2qXH
ud/xpZOoY4OTn30Bif+p7Mu2QnYhtqdtIq1hC2hs/cRqlVUt4oAKLZ1Z8pb1
JO4BD6BkwWVZzoQewJpkAWuSC8qZj8zbzFcwO838zfpMtE03Gk81YOhF6hze
ekXzN43zJP4jlJ4qbJX3lOuQmSKzR3pUEnDAB8X9SfxD/WcxRBgZIqAJArgR
XqG/hWJJB5CGqrJBAicQZ5JMalkWalFkISIYNOxS8RKmgb6XMDODR2Y29tTg
r+FOHuoisJ08KrRX6CNaGfQJuoQcRlUA0ASbjz1A7i8scCBOAXK0HtBaGscr
yEVN/oUY4SMY6z/1AH7iAKhOgPqshFYLAT6A5SYuVPnUQQUTytcAZn/4v6YY
P7LI94XOX3oz5IBV6Ow1iRs/iufvgC4+Djj3U2q+37HnP4d4H0AAqdKYP2X6
ZidC+icr/LYZ93sZuOU3wK1gKzICDHAfwI1bVjH09m5Gjk8GXvoMMAe8xU4C
/owxmvcH7r8Q/5f5t5I+bZ2AkMALkq8BAwzzP/T/UUI7SQawI9EP+38WAzaA
P8j87yWxVPKNpJ/MB5l8uUvyc5TTVa5pHNXepzdh9M18D0uWnei0y+txQFVo
aezH7TPSNx2ee0Lrwnj+0N0zj7RK7au1WsZ7Et5nfRweu/+95p9MAJNe354O
Jw9tHHIf2P7u4pvfSaSv7ezr+NwZ1Fne49/f1Hu/dz951Ls7uwABtJtkB4vm
BS2fmwdb/27lNKc0vHsd/vpT5cuSuy9LH98pEr2ferPxWl5e37kZp6yPJGXq
7S1J/Zx8YtvfCSmJpbEhsR+iUqKnRC0kU8Bs0gM8IlPAnzgH8IcEkS7gBKc9
4HuAuf8z8vAGxJJpQNZ/N8kBtj6V3m3eN7z5vC56Hve45tbuau/qT+p/DHnB
JeCq4xzHTAd1kgFc7S6wt9jp2b61CbfZZ6tmPcu2zGae9XcrUys5lhyLSeYA
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
BnJ+x2iXr4/IvI7FP2mM7v2pjT8D5341/KP4uY5fCGcAXNj/W5GO7Sjp/6Wx
gzsrHC/MIjl9Pen/rcUsxZvFz0uoSYIPwIDMMzmGwgKlBpVQjQCtEL0hIxHz
6bZnHBd5rvczDB6LqI1fm/Y5U7QweJfhvl9Hn55Zc0X0TuzTL68XfjJqr+he
M5w8seW/9AroP/468z10Ys7o3qG5/av67/S97i3r6eiW6rTlHGwT+zz0sbL+
2uvTTzUfr3h46k5DzfwLX08EVYaWeews2bas0CU/Jnt5tiw7j81hLmLVMfPY
i1iLWEIsR8azjGcZEyQLOGfsShdNeZ8ymHA5oTShPX5f3PR4o7izscAPqIps
CFcPzwmrDmUEwy4wIXB+wFW/cpIDxn2++nb5nCJdAOiD7yEZYKqnnmeEZ72H
ksd+9AWqduF1TXHRdJ3sku5s6DTbcYPTRfseh3MOF+23OFTb3beDiaCt7Tvb
9aQDuGnda9VvedzikiXEfw3pATJNV5mGGT80GjWcbXBEr1xng/afmpM0Hqua
qqxWPqG4VEFV/ojsa5lUmULpU1Jdko0SWyQ0JAZJD6ArFkXeKV8JYswUdhYO
FHYlCOAeeUeBvmwBqgNB9QGvwBmIZaEHaCD1vwmZMHdJBhigN2jD2GsD4x60
Ac+gT2AcQQDQAVCXABD/d/EakHIJ1sb9H6iCH6d7AGtEAbrI/qE8Pdat/+3o
Q20CijDar9KdP3w2ILWfmgIYYPzD5D/qf5v/U6pl3rj/o5z9qJj3xOovRyK+
Bef/wG6WQX8/GRr7A+sXbnxebvl946eOGIC69buFGn7iGP2xeDndyaeEiL0G
41VBoAJvqhj4tbtBfjYW4/0JzvWf0M6+oO4lws8iCGAMa74jXv6fQbdPQ7z1
ryfRDt0E+P9U0T2AgsA0gv1H+SMErpAMAE4gOoLzhI6iF8B3IXXSAXwQAQ3w
EdH54rniGhImku+l3knLyM6Vm6HwUHGWqrz6uFaqbplRufk1mwqnc26ZPvbB
qhFdsQJpR9ldBcG7VlQUHxY9G1396XZNbdGbyI9ObSd6vIa+fF323wz//1uv
6l9Z35InMkdXjioNnus/1/+jL6V3cc8wZ07bmpbqTyveT3/z/eXAo+Ja63un
r327aHlq0yGz8pg9StuvFB0oEMy1y/mU9ZNdwBph7mU1s7XZPsxiph3TgHwo
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
ZqKR2X64T+Xrf7UT+H/uNfDr9rfwcZ+xNcNjA3m9Tl2P26VbZzTdqr//Vurl
uucKdcw7H65xV+88/erorwOte9V2+25v2qpTfKBAtDA5zy7nbFZM9rzMxMxL
7AjW6sx77Dy2Hol/JaYBif9o5iYGb7pkhlb6wrSk9LepjBSXpAcJ7+K/xvXG
LI/7HLMz5nLU/ghVggDehgyFKAffCDoS4BYATkFmgaLBtwP/DPwRsI50BNP9
jAgCCPX66TXkKetl47nUY6P7LPdzbsvdc1zvuB525XV96Ozt/MtlrUu685jj
Bqe5pPuXcki1K7cttau2m4Lxb2TDtt5p9aeVtmWaRazZRjNT0ySTX8YCxjMM
2QY8+tW673TmaAVrSmmCJtBn5dXKEYrTFFnyz+RWkRywVkZfegPBAMESR8RD
SQY4KaokyiLvnHjh70KgEB6GTMCHpL7AxrkG+eidyFyLRT/bbuQCg0/IffTO
badnbeC5Q/kE3kBt8M0bpdAXEPyBNTYcoTcAzdyWiP5BCWw+yQGw+yvAK6BU
3PuvQyWwEbz6GaFdva7SasAnafUP2ABQc0AD7ANgCyiM1T8K6/802vXPGy+A
3qHu5xTc+3ui7p8Ozv2pm/9S5P4m4QwwBDkAL1HdOwsVPk1x7+eCCh4NOAN4
hpM/VXRM6EYfD2Na6ZuFF32GGM9K+AG3+9PI1xA6d2Due9HPKK25CHVfBCMf
UAN8a4/cywqMdnv8vUKo0ASYYTF6AEegBjjcAExGpPZLUFrosNAuoe9ClAbI
dRGWyIhouegbsYvif0ockHwkpSPzUtZR3kZxjkq52matdp0bBnNM/7BqteN1
veS1KYgRuS9OIM0883m+9s7+sryjO0/XV2+40/Lo5BvW51rOrr6osf8p03/q
lfLL5dvJMemRqsFjvXe/vOnY2l7VNPRx9vtHr0eeVdUuubvzVtiVd+cEq2Yc
tt3vuZd3l8KOgeKyojMFcAf0OPtgVhg7PmtW9j22c5Z55gK2RFY/ey9mgGKm
FwvYwRbpOela6bzpDRlWaeLJdxPzE9YlnIpbHrcxTjPmjxj36M6IkDDncIHQ
U8HTQuKCNAITAu2DjYOuhAiEngmaG/g88I1/NcEAB30Oef/prY0KIY/dRzxm
ua9yY7k7u51zy3ENdJN2fe3S5mzj3OFU4XTAcYXjDgfwC2u1S7b3tLOwBwQw
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
4vuLu2d2N7dIt3p/7HunQrD/rscHHirf8SPV3/7sxHHWIdF9nns/7Rba4ba1
q+BAwfy8u3lfsruy1rDD2Cnsx9n97FfsAtZktgJLjxXNrGLake5/EWsPW5LE
/4X0wIxd5HNpmm3qqZTdiSfjx2M3xq2MPR/THK0XVRcpFMUTPoCOoR+DZgYb
BqsGnQkKCOpA9+D3wZWBcB+w1fepj4SPtleoF7+XpRfHY4ZHnccX9xL3bhL/
0q7zXM1d3zqXOU92EXUaddrmCM8Nx0qHl/ZSDtV2pXb5dum2TJsuaxPr2wQD
JFvaWMhbLDW/YzLH9ILJkJGvYY9+JUEAJ3WuaYtqn9c8ovFA/YvqctVule/K
HkrgE65MUECT7IBMrfQjqS7J2xL3kBN8VfQ6iX9J0gMAq/woOoXC+xS2zjW4
seLmh34XtAGBGwOXQL9QRXcKzzvU2QI1MPtNT9Ed2AlvAJ5v2In8H3AEPULQ
/xHUAQcNwFb0Ar2MzB9dfNbhDgD4PxyudTTyf0fr+//W+zxJb/8yaM7f/8kC
BibQ6CZFVP/tIPh/MU4m0jH61+LVvxz2/lbo8h2O2h+pPHyo9ke5fPOhxjdM
AODm9yJ+2/e35wdcAD3DTSA8/rgH2MQHCr+glaaK+wBVVPWAuX4ViWE91OuS
FdwjSKl2vcW5HWB3wPLArQBeAKUeBmwhcGOBvoGDH5AFFAQo7R/wa+UiUT8N
FYAiBEC93YPg/xRBUHPXRA6gM/oAqYgsEc0Q5Yi2it0Td5E4I8mUmiKjLvdE
Xk7prIqgerDmsI69oYqZq9Vd+7lut72dgsQi9OOt0prZ04ru7Hq3//ux4XN7
b1y8v/TZw48b2nn7isbs/0v2f/t+bPmmNvpq2GYoeGR47M34f+x3cf18/s3h
q8Qob9+8PvmOyS0hDcUfyt9cfv71aXHt8N29N1qu5J//83Te0ZyDhvtqS7/v
stt+rFi58ExBfm5rbkx2YmZiJsR5BEH8QywGqfqXWUOsemY9U4lkgMlsuAzc
xFiV0ZBxIV2VsThVNTkoSSaxPD48YWOcROztGNloryihqI0RIWGfw8JC20Jm
BrODnpDYnx10jUT/NtIJcIUkBDYGyvu3+437fPJx9T7qtcV7ryfcA4y5c3s8
dudxW+W22nWVmw3p/mH+V+js66TsZOwY7fTcoccB2IB37dttbW0PWhvZbLAx
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
j/1/egDvn/nYb1//un7M6GvM1+yR4bF/Uis08qf+2KXhqsGSgfSeLZ2pHSc5
19rbOY/bPTsEO1o7Xn45QPDAwt63Per9ekO3+r2GFAgmYA3UDPL2VfdO6W36
otK+sm3/Z8MPF98dfZH0+NmD9XcHb+hd1j939viMwxcP/lUWvjd4F9eOFdvm
llgVOxVI5ffn1eYws+9kbs5awA5jC7E4zP2MqSwWQ4l5miGXZsCUzOAhuP8C
qfxhaflpr9NOpDJSfFNUkzWSLifsizsbKx3zM9orihEpRnqA+HCP0IWhi0NE
g7cFzQ28S6r/XdL51/qpBh0JeEDygL7fEr/pfmd9gr2Pe6aR6N/lqu722XW1
azWJ+jZnBedp5FnsHOn8xDHLwcWhyT7ZvtRuoZ2irZHNTWs/m5k2m63VrCWs
71k2W062nErqfw2p//Xmy838zZabqZsGmuaY7DGeTHoAX8MnBmyDLP1B3XYd
bx2mNiiErtGIUI9V5VHpVS5U5FZQla+Umy+7VmaD1AHJ2ZKgEF4rKiK6X6SB
xP8c4UukwwQ9INAEVkItUNC8gvl/H2oAVCOPRo4Htm366AkcQ6r/p41d6AkO
XoCHNgD2/8ndz/2TVP9Q2gEQGACD6AGUSjsAemL1h+cdxn8RHftX6bueIroD
gLhfj1X/9+ZfCXGAHeaDWi5QI4X6740biRM4lwCd4rXI/p3C81v9F3BLPn3/
D/y/FpIHKP8fLbwGgD3gLvQAu4uc4CbsB2Ar+JKeBK7Crt8UPwMDoAEzgDhq
goEeWB1O7IHrC9d6eaivDDxgflRZgj3gCQEOrRtKKQgCbwDugBm47avAnQC4
CzBQiwWYAfbICqznh92BlwBMEoYEYK94j2SBYKHDQneEvgutFO4WbiAYwACv
gN+IPZeYKaUsVS3TJCuiYEXin6OmoflVW0rfy0jMrNmy3FbPeZ3ner+3If3R
+QkljL/yjLctKXWpdDjBd0H2puPDm688Ps1pU+4+OtzzbdP3sF9rf536ofhz
/LvT95k/4M4uijyXh/KGlw5qjoyPTh9jf//n/IJ8f2SMnR/xGurrM+t80LGv
3aHdr31m+6n2s23X2jM4XW2n2qU6b3e+7+7prOwv7b3TF9mzoz+6e3HPt07d
jpntT9tEmnobGB9y342/WvVkxcNttw2uK1cvObf5+Ojh2v0HKvbuPb2najvX
jrDiyKLxgm/573J0cw9mmWdeYmuz+QkCiGXosbxYb1mOOP2vzHiRrpV+IX0g
TStdJv1+2ur0aakByePJAclbksrj9ePPxq6MzYsOjZ4R+ThiaaRWWFioVeip
4M4g4PxeDOgJbAoYJFX/gb88eb74fvUV83XyWelzySvN08ejwe0ZegJpuqa4
tJGqv9bF3umaE8PJ3mnMsdNxkv18+3bbY3ZLSOe/1u4RyQDj1iutE636LX9a
ulq5W9pY1JvXEPQvYu5oBprAz0j0vzBpMV5sxGVUZvTRoNPglv5uvVLdch1l
0gE0auYSBOCj9kL5s3KbYrRCpVyCnAxBAOulQRvsiLi2eL1okehGkUzh7cK/
SGXJI/j/Ct6gzEBva0C64AvahGy5X+iiBdd1taTudiD+ByegbegFeGjDebwA
BB/Q3Xj5n4v1f3D9fG7Y/j9A7R9PvPvXxUs/yvuXQ2v+UBjg98Vv0d8dwG/l
jyicA1LsnwxkBkVxTcOtfyTuAOAO4MrmQswAwP5ZiLc/wP4txe1/NckGA6j8
cx8xgAVyALRwCiiDekB96AAK3wM+kMUW4AT+IHlAknxrihfCoIYQhF8RmAXM
xnvACd4b6OFdQ8/t09CzA+o+sHdhJgBuS2+xOwBmz1LU/KS8BOwx1hmoGFJF
TwPr0AcoGtUYGegNACxAuA0AFsECnCu+EgQXB/B0hPg3EtkvMp38Ow6KJYtn
S8RJbpA6Ka0lKy6voPha6bTqJA1R7WO6i41WmV622GpT6ZDpdtMnKLAh/Evc
aMrnTMPCEzuyyxmHZ58ZrT57+/Djs6+uf77XMtRTMeg6IjNhOfHHN6fvuuMv
J96Me47/MbJ9dOrQ0sHlA6wB44GRQYlRh6//9rbgP/9qmhgeWzI2ayC6W7cj
g3OSI9G2oEW6dXLL3uY/Wsc+T+eotS3sWMKZ0nHkS1DnUM+RL1mdP74Idgxz
Atri2uqbFjWHfTpXv++168uUR9Pqlt05fa3nYvMp1omPhyL3u5Qz92zefWKH
+LamrfpFUvnsgtTcx9nbs1Zmbc5qY9UxAf2LMGuYxcw2lhDLNEOdoP/AjKb0
Y2l3SPwPpFmleaTpp9oT9B+UVJpQGz89XiJ2D4FraVET4S/C1MNTQnPCToR0
BG8KehKUFdjqPymAL8AiYIq/sJ8fif1PPptJ7V/p88BTz3O/+4TbC9LxfybI
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
rDAAXkA43jXh/mcW9ERdyfi/gewPiD0FMA94AvhEuP/vhFvgWFq8ublMh7UA
ksEPqI8hi3GUaSdCADxsmezhHG5ctDzLvJf4uwVlRLvEE6VfyHcrbdDs16E3
ajFztxl01HFz9OzyK0IdwD93Ox+mx9uk3M/ieSlRcuatY01PQ25rQUdZt1Kv
Td/FD839sYONHzhR/b0y3jl2fqp8cvVT9vzUZ8OV+9+Uf9L+j/CAxv7I/ZJe
P7l247vyysOvTcs/l0rn12YLZ5omBSZoRq+NVQ7ZDSai/w0D/Vf6inu8Oja2
W7YwtlA3TjT010fUUtesVd6r8nnr8ZqqLLgoriAkPzrHKIM/1T+ZI54ubunh
83tGd7ZHbbjVdlsyXODmqdD3wa5BcwG6AZjna+Tn7R9POuXv7e/gx47elZLU
SZIkBt98n3LfSZIpabvvOVKq9x5vVU9HzyZ3a7eqGwdc7jivOmk7/XR85bDJ
3sje1O6ibb7NA+urKPrtrYotGc0DLH6g+u9jcsukz+iAsZTRc8NBg1VDWcPn
hrlGZ42fG15CmGBd/5T+K/1w9MTrftGt0H6qvU1HQcsHxb+4xiF1Z9QBCKi2
qA6pdCrXKEci7B+g6KbQiqr/M4T+l2WLZB/L9sgkSudKr0l6S1BKKklskLiN
8D+f6D2EAGqEzgpeEAjmx1qgPTx93LJcsRwGHCIczmw3WD+y2DLj+X8TbP/D
aNlob9HgfTXeU2P1P6xyi1mvhcCLx5s/HP1iqML6g9/GN4p+CgYKPgqrS8zg
/lkF7j9XLv5V/jS8MA7KP5j5Pw7anwT+N4b47z3HBQwgR9AB3gycgF4yAyjh
P+ePaHLsm5F7AIIHTFwD4L2AP9R/Z5SNnEEBHOv+lV4m+v9amPTXwgYQz/mx
fwGu/cXkm9+rsOv/Q2kHnF9c/8PJjL9CmACygOrpA7j6I25+WiEHDFIxAe+X
Ca4jLGGCT0zyDwNeX4U6fxjq/mGo6dtASSEfWILYNSQfMoAlKKw2o/8a54Fk
VPkxi1iTzAwg4v8CKItgZyGszIb5RFhX9AxoAdbQUNH6ov5/AdV/7AncgjqA
N/Qf6GkYjRntmfRQByDNWs92m92Gc5VrI++u6zP8CsIyopZSt1AHcFk1QrNW
74uxiJWz3UZXLk8G38Cgo2FHovjvXXosnXQsdSkv/BXL67VKUs2tRqlW2w7h
jsYun94rfem92QPeg10fXw7RjDJPuEylzJ6bL513+XxodfxH4Pr/jHdw8y/z
dcOf6qufvkV+ubayuhy7yLL09BPPVOp46vi+sUvD7YPvB9gGb/bR9Jzv3tXJ
2qHdktYU1SBUN1RnWv2y7sa7qsrNFW9fx5ZJFysU3n3B+jwm2y99/dndJNUn
Ao+MHp6IYb/7KRLPAOjCmW9eCzkQ/CDgTeA//rH+piQqf3VU6Yv9OP1YArDi
L+4I+HyJ+b+Vjz/JyifCS9mrw+u7e7RHkrvijSLXBmdZp5eOuo7hDr4I/6vb
5dt8sz1pbWONnQBJlpmWSebfEQK4Yhpm6mPiZFxnTG8kazhncNjosFGJ8VHD
64ZuhqEGf/SGEQ74Vw/PA3N1GHRmtfW01jXRz0fDWT1PDV8A4Pv/IZUM5Y2o
/48G7v8OBRaUAf7IiqH4n5CRkDGX3iZNIfVAckSCVbJYXFV8v/h5sR8iP0SU
hcYFEwTc+If5HHgneAK5+bg9OWM5llH1P8LKzHKcpZPpACOe/ulC/ceqtdzg
Ayh9DaNbFvDDJmZ/uGqqUNYDxxb32wcv91PcRegfq39cvoSx/0MU/7/B8+sR
OP+dJu//cfePPX9I4PzrSFb9xFVfHBzBiTxAaALhOyAXYABrkP2+Xcj3fnTk
2//zUPld0Gf8Z0xR/B8ENrLpZZyXCPbvJsq/7l+ZwPjDDACs+6cEs4BlQAJK
0Pt7w0e7/+Z/aXARGAtKwHj2jzf+8uALmIKen4AABuHuZyfc/jChyl+Banky
iultMK0nrneJyZ4r+lwB10G80PmbX8NZIhgqvyVgh2TADvlXL0AngPH/HeAQ
0cPs7w5M//A+MR6ugCWov6DPZ+C2yBeuAPH8P4z2OOrf5OEO6Dn4gWQxbmA6
yZzK/JGFjm0TezoHE8IA13gFr18QsBIxFeOX+iNbosSjfk+bxUDObMQq3MH2
xgPvTX53gjTC/71z8EFOHPXTxDSuXPZXu16feRtXk1h/onmu2bD9eKdcJ1fP
6d7mfr4PBoNHh5fGDk1dmRWZUVnYsXz2i/GPvT/51v/vmn3/7/8Y/VH507ZW
/VMSRf/9by++nVk58CVliXueb27/NM30w3Hb8a8Igyx/VBzc3cfeW98t0Cna
ztiS0Ujd6FpPWedda1odUnWvat9b1krB12OlNwtrC/Y8r8/xzYhJHXvaltD9
xDa24b5NTHz0SvSTiEPh928uhJoEmwUlB74MYPcXQ6i/h1Tr14Vwv4rfH78o
0gpC/9t9cR+Q53vR96mPpi+/j573Bi88/7/uXnCD1kXK+ajTnOMphwm7MVT/
39utWT+1uWibYn3Seq9VnWWcpbjlJzMrs49mcmaiJj4mDUYuRtgHHE8DzFAO
eGnQrp9icErfWz9W/7Feo86q9hZdCu07Oie0bmopaWL1r/PqW9UvquELIDnV
JeVxpTqlLKVgBUuFBTlrVP0V5YQRAtgnGyUjLW0uXSn5EnUAHaj+b5DoFeMR
sxC9LOIl/ERQSsAC4f8iXj+eRO4KrpucixynOfzZLFgFWHayPELxb8bQQreA
eshRuP0zgW3VhWsx4HmFuT/4Fg73zZmUJPD/xP3/QWD/30D1H9/+X0YdAPb+
wNv/PbD990EZYC9of+69kHW+m+z6awzMf1Xo9VXJCsBPYBJA6IDWw/VPNPj/
EjcAOcD6J3w/NcisHzz9dyHv/zALiQ5mf1Go7peStf9WLmPVD2Oo/nuhz1cC
9vLe/6aBSlcIHzARFPHs/039w2FTWA0aAHj6j6/9BcnuYClUhAs4vv7Dyt94
N1qJ3sWgjqACssBh0O87DHt8Av/jPV4MxLvrNQIhxKA/h1XVm2FekA+4AWcD
vBvYBl3DBdgL5l4jVFhzYZKI+b9YPUwCrohKQQcMXwHUgB/gAm0aMIAH6WLo
tehn6OsZVBn3MnUyLTHpsASxrqAOgIUzmOsgzxhv6/U6wV0ivWIN0pTy40r/
apzS32zMZZlnG+M06WHlE+7PEdJ2u/YOx8PUhMqUlqy259PF3mU+bx/V3qzz
RREW3Xqm3aozr8uxR7vff2Bm+NaYzOT+6Z2fpOeeL3/5IvPd52fA6oaf6r+n
1///XwRM/jb6M7/W/WNlNWc16bvM94WvO5Z3L/nPz37aiTqA0Im2cY6xL6NH
hx9/rP0o3qPVZdE13hbQatTo27jz/Z362zXq1b3Va5WXq0oqLpWLleqXHSuS
fHk8/0DunTSWlLinlxMxC9DtXvhdlTt5UTa3996SCdMPjQwWDKAIXPTv8sv0
M/DPRJFv5Gfnj72/TEk8pEkSn2+/7z/+W0hV3nm+bSj6MQK44R7qpuOm7Grm
HOx0CfX/bA5sDqV207bxdt9sy21vWj+y2msVYTVu2WvRZP7J7Lq5l6m72R7T
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
y5+MvpsPcY53BkzAD9YG3wBtssN6DMT+LOwPNMERiFACTAQtAawolAi7/3iy
vjhWF8T6glitSR+cQN+h+v8LdQBzCAMk079BrwDU0+FL4CzUAbAyC7C4s5iy
ObPVsntyVnDlcqfxzV3PEnwmskHignSs3G9lLo1/9JVNUqw9HH0RBjAl0Qfd
DdO7XXtn4kH3E7nE4NTRjKU86oItJXUVpJrWutz6E80mbZ/bDnV39zD1+370
Htw28mFYeUx07O3Ewnj5ZN4k+wz7zNUZ1tn8T7GLssutS7LLYwt2CMEXzKpO
B01qoT/RPf19UmDi08TemRuTLlM00zdn02fuzEmgrBA/v7zgjer9iaXQpVjU
S/Av6y4toqxRu+D+aXHGACGAu5P3J26NHR3OHnAe0PzwtJ+/P6K3pdOnfbxt
pmWmxaPZrimqwbW+utamLrPGoDbv3XyleMX18vclrYXxLzfnPs/2Sy9N1kuI
jjv+KPC+fMz7aKbIzRGHwhVDO0NMgn1DtgXRByUH2vkb+YWjHqDRV8XPmbSF
VIuwwB3fi74UPqnea96ZnrfBAfCLC63LlLObk7Xjsr20baOtpu1TmwJrT+sQ
G2PLFQsuSzqL7+ZHzIVN2xDyrzG5YhqAsH+f0RzC/R4GR1H3/0pfBeWAMT1q
vXO65Tp8Ot90LFHvP6/1SNNAs1bjqua4xnl1HvVytWeqd9UEUPX/raysjK//
XBRplIIVGBUW5NrlhuUo5TfKSiD87y9zWHqnlLaUkORuSVXxHDFJsTxRd5Ew
4TZhccFogWR+yuvv+KJ4uHmCudY5atmL2bey/WC5zHKNSZkpgWGGXp4OM4Ax
tsQqNX0o/vFlK/a5xPpXSqhuZpK5/1Hg/Y2VP/kosOa/AOj+VEH1H71AXP4Z
wvRvA8z/ukH5A6t/EdN/4oU7gK9w83vgfD1EewJZ+wvP+8vIbj/nyXc/LuR9
P3EBIEVmAqPqfw77feLdfzbofmPVPxXYUajA7U8cVP1i0PstBsW/vTD5x7f+
3qDwhx1/YqEX6ICZH0b+OOPZAPeXBRx/MAKwId/82pDv/7AGcCVM/yyBCYD7
ewqIZ0vo7fH8Pwbm+jEwCcB9/yx8r5mM9t3IN4Mx5N3hAHCANYEDrHmNmCNi
5u83cAKLBCdhvJ+JpPYF/b8MVP3/IfsA2dLuQj8/azoZehl6RtT9azBIgR6w
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
tu62s20c7dHdVp3N/RX9dz6cQllg49jSmOq06RTrLMOcLKr6bbM2s/1zbQj9
F84sznTMBE1enKQZ3TjmNjw4VPsxe+Bpf3pvSKdAZ0R7UftnhEwCWr+28ra+
ahprFG7a+Z6h3qDWu5bhXWrlm3Kj0t2Fmi+ash0yLqQdTP4dzxbLf4/iHl00
6+0DEUlhl296hQrcDAw6HLQ7QMTfzl8M9f5RJB5Skm+Fjzrpns8Vb3avPd5X
vYLcg9yFbzx2dXKxdDrqFOpI5VBql2ibaDuAsP8jqwJrY0suS5LlB/Pv5hfN
r5juMrMyu4WiH7N/sdNPsqG3/m4DSgMDfSp9MT1fPTVdc52NetLg+0uh7YOq
f6aGuMZW9V4U/zzqFmrq6gUqzKr3VbH3729lEyV7ZSlFF8VLKP4F5fHtnwNC
/+9lJGQapPmk1yT5Qf0Xe4EniN1A+H9JqFOIQ8hEkF4ghl/wuiLfBM8d7mAU
/13s6mzSrMdZwpj3ov5/KwO+IFWkXUb4H9+ZmoP2Xyv6jWehwpURd8wqoKjf
C7O/b6j+H0Hxj3d/VqD6jfv/pQujF5ZQ7KeD78desutvCYp6Evh+P4HNH1b+
PAveP5vP/73yKwPc30tW/quH7X80Ocr/sn55gQ3kAh8DyPx/s3OE41826P7W
gy6xMez9SKD0tYwywFVg/hHqRUQWWCYzfmNh+lcNqv+xMPmPRdGOWf+xVzDr
ZxFu/3ejRw/Uv/EOQB69KuF9K1wCWwKad4P+nh9UwPCUD98E4PvpfED6loAL
gqHTX4U+oYLsGoDzxgD0B9hreRXugnnBAfQC6P5zU7++hnV/S1EWwLo/+PYP
u7RipIbjPwzFfyzs/y6j7v8y3QtQApWhn0EdgBSDBkM0AxejI8IA6UxtzMdZ
trMeYfUHVSA+7i88y7wz/HWCMqKq4sekdslzKBtriOmdNH1kNeh41H3eO9af
NrgpzP7WZPTU/Y+PfOJrn0qnsWR9z3bPP/8ypXCwkKps7vWTirXKoHfptf82
1jY+a45tOtqyr/Fn80JTWhNl84vmU007WjRaqzq625JbuNrMWiubxRq5G3bX
PapdR09hbW49/3tLFJ2UzdwNg82HW9s6mDuv9K33VvSzDDUgBDE83ju1gjqB
81N7Z1amulFHMDKjMBs3zT6TOT0zyTh5f0JidMdw5VDGR6OP8yi/NHbpd9h2
zLREtHO11bRbtjS03mq0a+JuoG2YrztR9/2devXJyuBy2hKmonv5UjnWWcmp
35J6497FJt7PvJMX1YEwwA8U/2yhtMENQduCFv19/XpI/iRpXz7fm96mJHef
NW9Wb0/vCK8cj1C3S+6dro9dS1y0UfU/4ehr34hqP7+Njo2IVbflkLWjZYKF
usVWiyPg+MVmOoqqv6hJgxGj4XOE+hX1Y/V1DRz0bull6Pnr9ujm6pzTTdS5
g7B/rg7G/iKaEZor6uyaPOrR6JFRS1A/rvqMrP5fonRA6YzyV1T/jyrIKMzJ
h8u9klORLZWJkpmWnpXKlxqSZJIakfCG/t9Z7LtoiAir8BVhURT/H/h/Xm8F
L2AnHgquSk4Rjn/Zk1jdWa4w2zNpMDTRa9G306bRFoFT/RZqzWsVoGuNr/+r
of/fewU7aeDdOr60w8rfF1H/3wKzfzz910PRj7n/uPrbQ/03JE//cO+Pd//j
5Lt/zP9RhbsfXPtx/19Pjvky8tVfDqAAM7LHJ3HrGw3XQP/7EujvDsAfbpFK
4e5XBTS/9lMSjn/GkAGw2s9V2PoRV35Y4w8jf29g+y6S530doPRPaP1Vw3cL
ISt0XHkJk3+MAl6C+v9N0P0i9P8rqQj1b1lA/s0w4XcjK4LFkC8CcWb4SRVD
nvcR6ICY9+eTMYAb4ITkq/Tg+oUZRMQUcAocwLhBPxQ/3NTYRyCezP0zAv7f
KI0ibRjtMG07in+M/wfpftLJ0F+n3wGXgFsZpBhUGbEr0GeEAvBFsCZsAqs5
LLnoucd42/lcBLyE34pUSyRKy8svKY9rtOsfN1O343XOc6clWQdcCzkfnhSV
EhP5ICGu5Aldsk2KSsZUTmSu0PPpF5sKNry6VRpT/vrNhTd33/lXb62+XdNV
41izv4a9Vqk2riaqur66tiau5nONzDueatWazJpD1fOVl6tCqnzedlccr0qt
PPP2JHxd/q6jlrVOpXGhKbnFpVW4Y2c/U/+3D8KDM8N1o8LjiuPlk2dR3TeY
mZzqmImeejRThTCA6dTFyYVxr/FnE1mjxR8nENqI69ne9aPzYUdBx5n2rDaN
1t/toc27muWb2ZokGmTfa7+fri+u8a8Wr3hceqrMrWhnPuvzMxl6KXKJZ5/4
Peh5MB0VEnk7giZi103DkI0hboFmQev+mP+PFX8ZfEN8rHye+vz2InlWe6l7
4N3fNVfhGw3O3C7yjrJO7Q7DDt9sGWzzbYSsZW06rAqtVizKzZvMg8xx/Hea
hJluNFE2oUHVf5tRisGy3rr+gn6t3rKenf4pfQc9WlD/ytVh0nbXbtN6qSWk
dUJrXGNFvVhjv4a/uiTq/plVP6kKqAqD8+dGZTWlBoT+LyjGKAzL/ZJjQ+i/
RwZf//dLb5GplFSQxNq/6xIbJJzFGkWDRD+KtAmfFO4WPCsYgOq/DL8+ny9v
FA8ftzaXEgc1uz/bPRZb5hLGPobn9Jfo8W9REQ3hUqt5DV+nYOdvvAsvBPUM
vEvHU3Z/8P3lg9n/PbLqdxW4/o7C3W81eft3FXS/OcgZIJJ8+3cWlD8J3f8D
5P0fofybAL1APXkP4ALOfxrkfl+DPPeXAh9gDegGCA/ASdj7OQPrl+D+i4Hq
Xy04fhIogB3Yv3ag9XOaPPW3A41vrPOLsf9uKsL1owNm/4vo31LC9m8RfIDx
81f9/wToAFKgv5udcANgCfW9Gb3HPD/Lq6vQ/TfDXSDR82uDP4AlsASYIPaT
YdNXARlhAHqCCpgI4quf13D/kwjeP1vQTwJrh2Dl8Gxw/8B6IthlHHuLL9Ng
teY0Wn14hhEGsKYLpWOkb6ELRtkc9wBSCNcdYsBs4DNMnxmvMNsiDCDNmsda
zL7OIcvVgHoARv7NgkVCZWInJBukExQ/qg5p/TTIM6e1k3Lu9UjyPRr4LjQh
vDxKPmbpIePjPQkryZQp8en6mVSZjrmdeTr5/xY8KJQuViupKT3++ufrhDcN
b8zeuLyRejP1JuHN5gqTitdvrF+zvN5Rzlhu/Vqx7PjrgyUmJd+K40u2FVOV
RZU4oEhcKNMqf1JxsjLp3fnqm3W59W6oY0hoTepq7JL+kPHRbjB3ZN9Y59iH
SfFpgYlN0ytTjtNDsxEzSZOTU1qT9VNbpz5OKI4PDk0MmA7s72nsWmpfao9o
l+ucajVrPdwa2ryt9RTqSb40PG50aJSuF6rjrNlTaVJRVBpY3FVw6OXZ3FsZ
7M+mk07HU8UOxpRGM0WejZgJa7lJFeoUPIKi/7Yfp1+Fj5xPlfeQt5xPgfeI
116vbs9MTw+37e4LN3xduV2mnAcdg50EHTPt+20rbPJR929gFYd6/+/mqpbP
zHIslkzum42aPDYxNOFA1Z/LeJsRce1XqxeOcD9WAP6i+0XXX3eL7gCKfgYd
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
TChPUnka/iz8mU3KhbSfKcdSe9I5MtTSV1Oz0yVQ5e94djit+tn6M2/0UKaw
pIw825ZmjvLAtrSNqF94nOGQsYCwgXWWWU7Y84/56i8rC1FX/npfqV/Fs6rb
Ncfe/2kMbVZGtdwZYYBzA74fsQJ58vDEqMno8YnhcZPR6JGzo7fG3IaxL1Dp
QPHH+b6d/Y1deV0PO351JLR+aPnecqJ5sDkDxb90/et6oTq72pd1W6un3wW8
2fd2rDSjVLYoruB3nk+eUUZimnoya0J93Oo9kbvukU8ivELvBPEH4qv/Dq8I
r2iPEoT8LdyXEOrf53rYucfljvMHJ0anSsdb9ua2a9YF1ulWj6y4LPPM6Sys
zNpMmc3YTA1NlE24jJ8YmxgfMD5r3GSYaCRvcEr/lt4yOH/06B7U1dR5ipD/
PYT8RzQ7UPTHaWzQHNdwVlfVKFdjQNU/RPWZ6n3VKhVFlXGla8riSvSKAaj7
D1bYoXBJYU5+WVZYrgfVfmcZc2n8uEm1Ivy/KMEq6S0RJx4nri6GHUAvim4X
PSkcIXRGSFWQqP9UfBt5p7lXuQQ5l9n3s1uwrjGzMm9g4mVgpGeh06d9TINV
Zsxh/08B+z+8D8MqepzA/eVB+F8apv/bKeQuXUbVvw1F/0lQ/sPXv9j1pwPV
fmXyBTDOAoT+DzH7IwEH0JE8AThwntj5E+ofxP1vAmQDIhe4kFVAiHsAjf+0
/wPI/QHG/5NQ+1cuc8LknxougEjkLSDh8TtG5gHbweRvHbQ9sar3CdD42w2s
HhZg+9nA9/QAC3iCv68n9P965C6A0ABsBQVgfAGMHybg+xyDWOeH7p5wTiLe
WQI7IBhYP5jzQ6gDVCDMrw1qH9Jw638HOD8NsPEzh4ygiXoAvP0/B87BBPMH
ZwI8DcRuwhPUmAWEuYCjNGwo9jtRDlim+V9UfQVUlvn2tZ1jO8bY2HR3d3d3
dyghoqCChHR3p4SEdHd3g4Ut9tjt+P3OeV69/28964UXBmfN9XJin7PP3mao
BshD+oDXJBfcI7G/i2WMZQfrGF4GCrNlsS1njyI9wDSHD8EAStzRPH28u/nz
BJ4K1gsbillLuEgpyDbIPVaWUCvWSjJcMLexH3aR8azz0faLDRQPyQj/O5o3
Ti3+ZxxzEk+KYdrHdLeMuByFXKHct3kzeT35BQXfCujzd14dL3C4ulAgnc9V
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
3nirdV1XOun/tSZ3TQeSDPDqxsZ5+vn0OYVZ5Zmh8YuTFyf5JjMmVo2PkFq/
f/jSsPzQ5aHaEd2h/cOvR+qHT40wD0WjG8j9vpxuvR7G3q9d6p2cXYttdG0j
rWbN1o2mdWXVMzUs1XmVK8s0SrILCwpscp2z3AgCcI5XiAmPqA1eE2DjG+4j
5/3sXJpnrAedR5Jbw+nNp9udv5Dev8CJ3tHKIcuexX6X7S7bf2w2WTNY95Pa
n21JZ/mMVP/rFjssNpu+R4WvxyaxxvymT43bSfRzG/5rcMLwp8Ep8jGSoH8m
Uvtvkur/WvuudjKJ/l4tBi13TQFNYVL9q9Suq+9WU1bXUJ1EtY8ZlXqVPhVB
5a3KbEqxSnk49VdX+Fc+VX69gqb8E1lQ/n8iWyHzlPT+yjIvpLmlHkg+ktCS
lCP1/5mYsthL0VqRS8JNJP6fC6jz0/Pt5xXi+c7ZS/C/MNsIwf+hJP6ZSf3P
pYcuF7hyD4/D7T/wa2DXPkyif+xIHlZ/qP+mmAEA/1OXv1okA+z9s/3PwLvf
qEOPcPLviy8d9P4+gAhgC7p+LmLsN9Mw/5ZDzdgBUHP/GNoVsD4N8VM3gP60
/t/2oBWqfTVg3YfqD+8p9e8Z9P0B7q80+v2FofYn5ftTiJ5/cP2XcoLC/OO4
26du/J2x5jsj268TO/1x2vT/KO78OknnD7P/SnrAACp4z78T73hyaf4/rKR/
Ak2PXFT6VsJdH/D97LDbp678/ZBlAT7f2Tj1Z0aH7xsMfhj3c6T2g+LvQbz8
KWWkLn+jUAcArv82EQQAdV0De34NZPutI/W/lnyGG4CTzLAFhA4BdML24CRw
AzMPyQChJFcAJ9gefYLAJeARezjHBOc5LgPuT9wzvFz83/n9hE6KKItNS+bI
/CufqbxKI1Sb14DRNMOK3vG6e8654UsZQT+CP4Z5R7JFP43+FasWb5QgmPQ8
YQNBApeST5JIL07OSIpKepz0JeFSsnXSpWQpgvankwtJ5V+aPJekmCifdD1h
a9Km5Mfkn4WmrCNdwIkskRy9XI6rfkWipRsrTlcoVR2vk28UbrvStaxXbdR2
3GxqfjZ13mpu4zzL7Lu5Y9Md0zKTx6ZZx6Mmjo8ujA4MJfULDnEMbOyT7Pcg
Ff/S8J6ReyNzQ/zDRwfWDnD3Z/XY9Bh3veoM77jaadHxqD23NbjlbdPWxoR6
07qzVV8rm8sUy3aUil2VKFDNlslkSa9PHkr8Sup/2hU1f6VLvD4V5154FXsu
P1PgVuv6+NTm05JOr5zCHfsdBBwOOATaBdr52Exbu1tZWLdYylu9t2qzAI8v
LvN7Zr9MS002k9ffxpdJ/N809jR+buRMqv5uw1SDEv2NBprko4dejN5Z3Q6d
Dp1dOg+0zLT3afmhytcqjVvqthrx6uyk8p8ntb9WdUblJHb+75UPKt8knb+B
UruitwLM/o4rpMrXyffJLZFnkWWR3SxXIZMv3SEtLn1O2gXjfznB/mUE/TuJ
FoqEEfSvKxQreFvgO6n/m3lvkvp/gjMK5/+irG8JwmRmBB3KnfQSJzVxR9aA
WzW4tDlE6r/SUbj83YmXv6D74YO7//+Q+xeOvH/A/hZ07w5Rd78Z6P3hS9P+
t6Lt/gVIfV+Omj8xtNr/W/tvkOYGSk0EY5DlV0ab9v3uA347AGWR+Ic5Xwk6
/QLn9yHGPnj9SKNqQSQ6gFP7f/oTYaT61+FH0Ptbj3P/qROw7efCbl8CWT4S
+H4Bp/8FmAPgEgI0/6mr/6NY8eGu7yiq/u7EvX87sv85cNo/SvMA9MTbHpgD
eKK6jx1B9sDxE2RUQn1PwPvwHrA/6H1lk8/yJPIP4o6fGXd/fqj6r4uVH/j/
0AUwMC0l9R9Yf7+Yagm2l2KGO59jLPcQCwD/R4O5ngkeV/QJLcZJQC/TOhZq
GijBssDSwRLPuo0ggEWCAXo5wCs4AfnA5nwS/MxClsImou4SV6U8ZNsV55SZ
NEV11xp1mv9t5+jM6rHRp8HPOqgjJCvsfsTh6OgY39jxeLrExcRY8vAl6yZl
JNUn3yZdwdYkz8SAxPYE/UTWxINJaST2fyULJ+qSzKCbZJ00lPg8Ad5bJ4Wm
mKSmZj7IlM0zz19R5FOyWOZXXlG1ueZS0+NGzi653oND18d+TH2YLZtdf+PU
fB1B/vYzQrN/kb5/+cTL0bfDHkOd/Rv7dHqVu4dJd+/RU9CfN7CB1P63w14D
PX17+1h67LvZusW7/urs6nzWqt+W2AJKA6WNSg0PazbWfr9uet2qfNe1TcUL
BRfyVbMfZaxMP5jUE6cU/SSs/kqDH9sl//Nl54293M/QeVS7dbrddMk8Vem8
05nb6YP9B/sRu9V2Y7b11pus91kLWF2z+miZbXnLwsHigtmkmTlB/PymHqT+
g8L/c6PDxreNVhnfNdxLKv8SA17y+Orb6GWR6GfRM9TdpfNG641WvZYc6fyX
E+x/S31EfYGg/iq1WlUuNR5VeDaR6G9SzlQeUhpVNFLMUzyqeFyhWmGnYiqp
/+D6uVdeT1ZItkzWkGD/F9Jj0mZSfxH0v49U/23iXiT6X4uYidSKDAhtFWoh
8Z+CPqD23Jxcpzl02BXZ7Flhg/SYEZQovOiBEX+f1Mu36PsJ07/Lx54eDTxq
R/C/I+n+xY/A9g+6f8nDb+jggc1/OCr/0iMDYAldP87+IPYbUfvLDaf+VjgB
gO3eIE3/d5HG9IfdP8T+byXAM/9n6u9PywYxNO1/RbwEjsQ7X+D4/cJ3wPX7
hTc/v2ja/w9R/5PS/wXXL3D6Ao0vyufTGfv/33wfmPfB3t8UWT5qqPL98iSw
gF+epDIAB0358yiq/FCeHqDkxUHz+TqKHEC46v9CT+l4w9QPdv6wFwCGD8R/
LN75MjNmk3zgxziEnB9dUvth7qeLDszMiAOYyaOLWECX5v4B+0C4AColfUAx
0zTGtQ92/SYE299DL6BdLN04/dvAXMzEQH7Klbzq8U4I+EE8OAl0YvnGsgYV
ws6wCbD7scMUcIKTjTuQm5H3Xz4OATpBbWEnUTmJK9J75VuURNUfaLnpbzbl
s/Z1mHRNPivt0+dXHqgRrBB2NVIpmi3aNXZZLFe8dNzLeOf47Ym5CS/ja+Nu
J6yP/xZ/O4Ervpp8jif5YDFxIf5g0naSJewSTeJzE3YmXE/ITvRMvJS8IUU5
DfhAvnmn8pcWd5ecKWOrGqyurhNtTe1Y0mc9tGNsbFphFhh+++c05xvmhmdO
TF2Znp1oGT81smGks7+vd6yrqsun83tnfQdbt2/vhx71fugGnPvp+252H+ua
6HzQkdAV1b6y7XxLR8uulg3NLs1+jTM192uNK9dWLpbdKt1T4nV151WrPMfs
bel3Up+T/+r2qCOhnoElfrcvMnnbn7PwbHMfdwtzbTj9+JSny05nbycb+2aC
+8dsHW0TbX1sGq32Wftb+lvaWq6yvGd2xOK12XHzBtM008cmrcblxnbGbKT2
ryLxz2EE+r68BuYGT/QG9YZ1L+tV6HLqrNb9oT2tlUpw/yNNJk060vfHaOxW
MyKxv1stRfU1ifyTqqcI6s9UfqgSTWq/vHK2Ep0SqP0cV7ggPyUfLq8jRy/f
IKcgG03q/1fpYYL84fJHXeqipIDEO4ks8etiR8SCRdVEZYUfCmsL2wluFzwq
cJ8PLoDPcb3irOOQY2dlG2NRY3FlsmaEqTTsteEm7hdi6GUY/x7o/MN2tP3I
FfT8Bt0vYP/C5R9MAOtQ948Pd3+n8f4X9n+zuPnPoE3/rBD9b6F5gFLXv804
+6e0v8oQD1AcAMoN+Pesrwz3fv44BQQWILh/+R8ENP/rOC96eULMX6DV+reo
+8mL3h97aVc/wPtdf5Iedb1/b/5h/vcSOX8Lf/B9Nfb/a+lD0OXLm5YFgPUL
yJ9y+6E4f5T3lwOqesTjd0eR/wd6/quw9nsi1+cGbv1v4P5vCP08V5C/ZU/8
Duz7KM6fPN77w9WvPIl2YGGvwOin7n/8kBEIKuC65J8/xkngW9T/gMkeVH4T
FhOWFGZwApFCDsA08gNlkSOchp4h9egYLoXXgYkswYgC4lm3sC9nf0cwgAtn
Mmcc9zC3L+9x/jwBP6FJEWFxGcmVsnXyS1VgCshrEGF61eYfp/Nu4l4hF3gv
Cwfuu7IuRCBcPVIo5krUcPTN6FNx9HF9sd7xlrGXY6TjBmJKYi1jB2L4Y/ti
GWN3JlyI+zduIT4kfjQhNyGFvFcjecEkXjiROWk6+Ujax/SurLHsZXnfCpqK
jl3bV7G6ir9mrnFL+7ouwaGXow8ml819mK2bL5lzm2OaU7/RPMs9tW+yfJx/
mG1Quo+/93B3eAdrm2JbRvu7dvXOhK6VPYM9FSQT9PUe6zLuetf+oMO6XbS1
rO1li0vznmbLJsFGlfq9tZ+q7l7fV7GtbE3pDYL9I/P254VnRmX8So5NtIlx
jIoLfem/wlfygt75dV6NZ7Jx99d06ruTkouzU53jZgcmh79J9T9Gqv9fNhet
l6Ozr5FFvMW4eQrJAG9NGUnt1zXJNpY3aTdSMRIx/mL03bDTcMJwiUGf/n59
IT0B/ct6h/Rade9qr9Px0X6kuUnLmqD+5aT+O6h/I9H/WvWH6i8VM9L5b1Dd
o5qm8lgZtL6ilZWUEhQPKsO9TzWJ/ySFnyQDaMqXyO1HzZ/PMjkyraT+w+1/
keQbST+JFnFb8TaxcdFg0UkRFxG4/oPo7+QP4ysh6L+SaxeXFocAuy3p/7tJ
xYD6L8wAujV1yJJJx6v6QeT+bD0WiKr/lUdeEfTfdTgU0T/l+lGHvh9LyDs+
8jyiRX7GH96fDkb+ctz+Lx4UQG7PILoAf8T5/jzuACk2YMxBihGcResAqDmA
Lc0Z+AzGvyLuBu9jVJsjnz8Mr/xS0OW7h6bw34MVHzy9QPETNH9A2/c3y9eU
pvGXhL7eEPtw87gTvXyTcBOwE3X8qFvfb6j3yUHT73SgOfpQqn6gAjCKc39g
AisxsOKefzuN4QcTfjvE+Tew6weFP7jvs0auvyB+bEH+L6AAuPuFPSC8dydR
D9o/zJgBVjAKog54JvIBIAOcJPUc7n33EGS/i4WLPNALmDE/IPXelQkUw0E3
zJXkgXrMB9AHFJKfgFlhMM4BrrOuZGsmPcASDguOE5zGXCLcH3gaeE35Pwm6
Cq8TbRODm+BOBVeVKM1h3TyjNRb5tmLOXG5mZyUvaPst+PsF+QSfCauLWBs1
EWkXfSdKL8YzuilmRczlmPmYZbEi0fMxItEV0UrR2rEeMbVx2rEfYo7Hn4rb
E2cZyxv3KzaExP/9OKOEqKR7Kc3pK9PHsvnzuAqMrvoVjZR2XQ+rnWtUbFvZ
AzdA/0z9N8k0Rz//ZFZnTm+WaW7l7Ni0+8T1Meuh7/1Wvfld/e1R7a+bc1tF
W6+1i3dpdazriuv+2jXWdaUrtHO6Y3n7lnaTlpctUs0Pmzwbgurz6oNI9F+u
rrn+13XbMrVr90q+XOUq0MvNI+h/TdrypPH40pi4aNHQ3IAmX2kf0XMnz0ad
WePO5ZZ+Wvv0hFOSk7mjs9Myhwq7F7bsdudI9V9utdyq0UrRMshCxaLQLNi8
0Kzb7LLJexNmkwDjVmMPgv/ZjCcMPY3FjEDjYy95Mek/0/2qk6M7rMumu07H
RfuiFp/WAYL6YzS2azxTV1b3IrX/OKn9ZqpSqoWq9SqbVGDqL0jqfqwSOP2B
2o+kgrPCOIl+SYWHpPNvkBOS1SPxf1iGTSZQ5rCMOKn+DyRPS75D989vovmi
XKK/hJcKuwt9EjQQNBLYzd/Hm8nzifsFlyoXAwcTexvreRZQAColv3fQz0KH
PEVqpy8y6Urx8g+6/79J/T935BhB/6bI/YfN/xtU/tH6w/19d4hS/r2G3N+M
Q++Q+e+L/f9y3P1Rqh+gARpzkIp/W5wCzKMHYDNN82MQO/4sGucnhpYRsv54
gsYcpLx71qNKOTj2hdHcO3pQ7w+ivRD1fUHVUwJZ/monwdMLVH6oTh/u/6ux
uw/BPf/CSeh9kki070SHL3D7BJU/2AB60ZT9HBD3Uzu/tbRsEISZADi/Acjs
BzYvzPo9kdtvQPr/ANz5Q/fvjvENl36g8jeETAA7VPwEvX+4/svGGyAqDwAb
CCJfEFnAfjgVHEA3AD6MaqrWu2APANW9EHf+D0jvr413wo/xigj4g9qoHQ6X
gsAKBtewlyxtrN9Y/NEvfAlHKKc4FyeXEjc/bwrfK/5YQUvhl6LWEqrSh2RX
KS2oMWjN6y01XWXJYt/qEuy2zkvOO/YSR8DyIKcQw9AD4Rcjvka5hXtH3onS
ijAgmWA0ii36bqRp5LmouOjW6FeRItHiUV+jcqJXxDDGusYqRT+NjoyNJr3B
5ZiF+IJ45iSNlCNppzN3ZoO2qNq1HaVvKpbViDQot57o9O7fMKI8JjNZNT0x
9XlGev7vmc8zLLPg9XVrbGDoQt/lnjcdZW2Lbeta1rTuaN3S3t8+3fGqU7Lz
TQdDx6YOufbFthttEi33mrWb+JvsGozqi2r7atxqGmpUKxvLl5eblVgW517t
yb+THZ4pk1mV+iZ5e2JhnB1B//eCX/qvvuTrne9V7Jnt8dM1zHXFqefOV5z/
caJ31HSMId1/sK2onZmNlI2AVb+Vv+WIxUvz8+bryXPSTMMswrTVONY4wPhv
Y1D3X2s0atRpeMpA3bBP/4NeiX46qf+Buiv1EnV+aCdrn9Z6p3lDQ1czSJ1V
Y0Q9SH2cxP4P1RQS+Ywq/CpLVVwJ7t9P6v9NpZsk9rOVjBS/K3grfFcwVZAk
nzfK98mZy/PLDco2y26TVSbRnyAtjs4ffJJ8BPsvisPmD7R/T4psEtYVGhIM
Ehjnr+NLx/h35LrKyUDqfxCrCctJZlkmUP8apU9CPhzsyilGjd4xIfT9sEPu
ryOp/1fQ9e8Eqv5O0YHyP8X+lcHIp6K/kcb9icIXbP7caJd/B2j631sOUfv+
j7R5fxbt9r8MO4AyWgagrv6z/jB/hDEDgAbAAs7sJVDNA/z6QLFoN3oWSqCK
F1z33Ee1jxCafxdsNatpPn4heNNbjVv/BVqfb4RzfNDzGEeFr5e46086GU9z
9hHDmz+48OWgRTxo/wTR9v6V6OUFF8Cx6OFFcfyB7U/t/qDyt5DXIrp7tKDa
D7yDXAAKgBDxQ+j7BTjhBioB6dL4AIKID6h8UIr1Hy6BobcvJvUdmL61eAXw
C/G+LGoEwpUwTAszaXeD+2i+wRtwVrCOdADfWM4SDHCIzYr9GnsdwQAdJP4H
eS7wVSMGeCu8RixVMkH6vrydEru6hraVfpPJDUs9ewMXRQ+Xs1beqy8l+W8P
hGngjlDl0MGwvyL/iuyJoI8oivgeSR/BG/EufG9EY3hI5JuI0xH3I1IjKqMS
SBYwIPnALjowmiVGL8YytjYuJF4+iS+5LU0nQybzaY7D1cXC4GvNZdHVsQ1r
WlW77vZ/GhwabxlvnOCcrpnSnXCcXj1jMXlx8shY98jtgZle1a6LHX91Hmm9
0DzT1NFyvCWxRbhtS3tWG10bX4dwm2Hr8ZaTzZuaLJs2NYXU7a39t3Z/zZVK
3xrjytSKI6VO19yLDAq5ClbnnMvem7ku9VeyYNLPuPmYugjl0LmgPZeNL7Kc
Z/D0O3Pd/adrrevD03nORY7mjs32WQT9K9sZ2lXZgs7PaWtFS2ur6xag77/e
/KHpW3T2kDcRNLlpDBd+R40kDTmMvA1TDYoMPuht1t+mx6Yrqhuna6irqlOj
Xa81TWr/I01bjQU1ZVL3u1UvqJqo8SDTj19FV1lbZT9B/bp460OnBFO/nYqm
pPf/V/6UfJLCfXlfOV+5aFkPgvyFZHNI7HdI35U6IcUt1St5QspP4gbp/kfE
TETviYD730Ghrdj9H8fdfyZPB9cVriIOBg5WNlHW16SLhE4TdtbjJK7qTvxC
LW0rUv23HmMhvX8c6n7mHdmJ9d8Hlf+cUfkrlXb5Y0FT/mrEe99+3Pi74SOA
un9ytNjfQvP9/e3+t0jj+lIawIqYB6iZYMyfm5+sP9NAYewBQBEAunFg5LzE
a72XuKkfR6V+4OpA9ebCHj8EL3cLkL0Dm37g8ICOL3B9QM1TDbt+qO5r8ZYf
7nY7EQ+I0VNKv0ex0u/En6nE7t8LFT/F0M/b4Y/ez3PMAID0wc2HFXf8AQxK
yPkNwDm/PMHvsNkHxA9bvwBEAND7g+bXCsYW9P2CG0DIFcw4DYSZgSDi/gGc
BgAO8MMOQBYxviUqAfsww8QfcD6wBEAlDDQDS1EzhFINfc/oirzBDaQDAMxw
HvUBlVn12bLYHrHPsltwmHI6crWSDACbwOcC1kJmIp/F+iXYZEAXyEu9Rlvd
8KHpe6tWu8xTYu67vA6dz7to6dfp7xWw6crZ0DshvuEZ4bwRTOGN4QfCUyN0
MPpZwpaHy4Xrh7mRr8IjkiONo1IjHKOgN7hDMsHf0Zax/8Z5xw8lZiQtpvun
X80qza0u0CjZVvaisqfWrHlLe0Pvd9IBnBlXHK+fXD7hPtEy7jexapxhsmo0
eDR66FQfS8/dzpi23NaU5nvNXC0jrW+bbNsE2gXaW9pcmlnbglvSmrqbmRvb
661qeGs9qg9XZVZfqUy+3lj+rHSy5Ebht4Kkgg+5ldmL6Z/T7qUIJo0m8MeO
Rs2GHwvxDNzsd+JC3Ll7Z1d5cLmZuGmftnO57/jT0ddhs4OCPaj9VNk62k5b
P7BmItj/Oun9JcwbTMPMHptYmm41AWev20ZiRnlGIYbVhicMLxqcMhjU89V3
I9i/QldZ11gnUedv3Rc6ydontJdrZmnEqwvjfT/U/XvkOakK+t6XSOzPEdR/
k/T925VWKcVi59+pwK1Ajz4/M3LrFUrk5mUPkWcb6f0PyyjLvJIyk5qWlJTS
QtWvMnEn0R1i+aIuImnC74V0SfR7CSzw9/C95f3AY0+6f1NS/bewK7OOsZgx
X8LdHyjUQ9/cc+LhcXD923x8nsQ/zP4N0PO3knQAXYj+4fZHEnV/KM9fyAB7
8eqXuvvpx9kfzPvdaL4fB2gfqcvf+YPUxxiM/BjMAlk0758YWjbIom37bWla
wNQ88Aztu8CspWOgrm3FcBcPijw7UVt7J9ZnSqkX9DooLX4xEv/wcy+xw9+J
vTxU+AV07VBBVw4OdOvJxVjfif9WI/wTsOnjQIyvgte9RrQ/8T/kDzkBZn/A
AaImfLE4B4hFhR9BUuezcfoP+l6g8T2E3T90/aD9tR27A5gSQIdA9QnymAk+
kQwC2aEUM4c1eYErMEwEYQogi7fArugJGEE+a+Nl0CbUCn6Pe0N3RsABUbg1
0EYcAJ0CbAx2kQwgyqrMCj4BB9i1OHo5kjkruaJ5ZHnD+FQEvgi4C+WLfhOd
llwpWyS/QfWWepxunYGEeahNkWOFy3YPVS8m76MXL/mZ+OsH2gZOXzkW8jXk
RchYiH1oYgh7aFZYXGhOqH1oR8j10K8hI6FCYVlhLGEyEUtIf6AV0RMxESkZ
qRSdE/02tiR2NGEgaTr5c5pzlnqWd8FiodO1ysq19RFNfB1PetoHjo/ODLOO
pw3fGBceXxwXHTsz/nrk5Ijg0NDg5t6+3u+dqR22bd9a1FoKm8Oae0kXYEiy
QXxrS8NMk19jUt33up+1G2v5a1ZWb6u+ev10xfJy0P1OK84soisMy1+W155t
m3497UfKnhT9xJLYr1EnIuNCu4MX/AMu/edj7MXg2eZ+3K3ktKfLqPNFR26n
EoeV9jl2+baGdr3W/1nvs86wumFJZylhvsai0/yt6YzpQ1M7YxuTw8YixquM
XxlKGpob/GuwWf8RecDXQ0hvmES/qo4jeWq095Ha/0hTTrNFI4ZU/yo10PU+
pTpD8D5UfQ9S9Q8qryCoX4nUfQMS/5WKoPMJ875w+b3y9PIlcjpyWbKg9Rso
EyfzVXqXdI2UJKn9WpLhkv0SAhK24s8I9g8W1RB5K6wtLCgUS5D/UQEJ/vt8
zTw3uXdxqXNqcbixs7OuYYXa4ccIiBWca7iw+qej6vf+4wqk9487ynZUhGD/
O6T7h+3/1cMTpPdXR/wfTgfan3Xo/KOFvt/vsAPox9sfuADQwecAxr4ATfmD
mvl/RMb/PEZ7Ge1ZpGH935NAW9oUUJ+GD2JoGmC2B7ORQwvYGm7s4tFXGz7T
oa7+KM2Th1Lg8EJmHlRsQOkqWOXjUZcDdPipqF+LF7ztqNkjhnEOHB5K4we4
PpWo3hePmUUMGX8cGPvtqPbhRcMBz/GqH7T9WPHKjw5V/aCy2zFAXC+SGC9n
gAlfNr4XxL4e3rsz2uEkELzAylH//xPJAvKIF24wUJuBRQY/0hno4lYQtgJQ
4aneHjSBQSFgHxO4hEDFB/4w1H4/fA3gw4fsgWLSAwBPYBdLMIsTwQDXWbex
CRAM0M/+hsOHc4z0AHv5zPk6+T8J1gtLiAqLh0ptk01QHFDW17DXXWvkYMFp
S++ofdqB9AC25+t82C499Kv2Fwz674pP8L3gUPKcD/EJZgkTDT0fcjLYJ/i/
K/fI938E3wq9Fbot7Fp4c1hPRAbpEIoi6iLyojyjL8c8iXGOL03iTH2UcTVr
WV55YW6pTIV5LWvDy5aJzrIeo4G+YdnhHWOvR96Sj0ZjaqP7h81GCvrp+8QG
Lve4dO7qOtBe1bKjtYPkAI3mqhbZph/NWxt1G4PqYxuq647X7a+xrzpc5XP9
xPV9JPrzr4mWppR8KtxeeCH/UK5Cbk9mWTpnKlR/xtiG2FSSn46F6AaZX351
geU8z1nmMyZuDacvnzJweeV0wumRg7+9vR07qf1dNq9tIqzpLG0tn1nsNv9p
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
jdqNxeunrh+8VrejqP3T6rK2oa2Vq6asqFo6d/HB5kfNBk3pje3zv6zPqpFW
8yrNygxKBhXa52/NGZetTH+f8mPSqsQ3CeO1V2JPx5THhERNIF+ff8P9wq+G
Dwx7HVYQMjN0L7D+qZpWzaqg4IC8gAv+of61/lb+m4Hto4tfpfdb70rg+/pe
dZ6o6r/sMRzyPs7yngHOb+aW6FrrOs/lqYuPczHk/U3OW1SZ5OFjThv8/gK8
L3KSOS1R3FGgm98G+XJ4vgI5v8QxyvEn4PxtDtMdFtvtsDtsZ2l313aoLc74
osf3Qqj6+4D5JwLztwb0PxKYCxL4F3h8qyvcA5adFoMs/qaJH+yZ48nYrtkn
aC4et2eh228czft/b6CBC1X/66D2x+r/6cynNPn7FXv+/yPpfxqo82+sF8Vu
/TpNCsDPMUBFpwD+pP5Vsad/b6mCf0uIN2V7AT0099NDZ3yd7N6fZlYDnMPW
/fHs7j9UAcuBvaD3VSpc9YTqCML8HnK8fUbPe0jresH8spmhuQNUuUU0AYvR
ACvfy+SYWUTuufepWog2Ra8dITxvI1YQQFv38BQNuwSIPDxhyKVM/ISQjX5+
542ZzI0Ix89+dgK+DQ+NCSoSamjrdzedFyYaYzfhCLkFHKH3c+lcsoreamha
qJfOMbvodEBL1f8a6hJoSEHAnHu20MaQXvqohbqIGK+yKDK00ElCL9UMXeyF
3cQ+6hJI6OSgnLaK7IPYN5xeNTwHSAD8oy/INC7farnVOp6Mf1YQQ12AFkmj
9GeIAL6OoQqVaiIQ4RveHv57Nf3Dl0ZGxIkTZyXHpT1I/yErKvdy3uCCV3NP
FFWVZpS/LN8CWf5B+bDKZZWelcMqS8uvll8rm1H2TblZ2ZESWemh0uEQD2Jr
5HUJ9bfqpzfsXuDSbLxIurR+xei2O2tWrHfexNt6cnvfzhN7nA9cPdh5OP/Q
oMOnj/ge9T/SfPhu78XejIObD4oOfti7bO/EfQt3xe3q7i4C7u/auWLLjE2x
kPd91r/pyFxXvXZ3e+vq6W2j256teLvUb/n7JdEt1yHz2zc9bLhVX1+XUXuj
Oq1iVPnx4lVzU/NG5u7KfJDunDYrGev+O/HH42Jj0NULHf2vhYnCReGvw86E
dYecD/EK/jZ4VnCDpizobOA3QUv9qwMm+S/3uwLI9/UV+4z07fJeDJW+LTD+
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
EMYJpdsUAWpYjZAB6xnO7ATXoQ7hbYoeTC9Ryvb/tMTqq0gNdI7YhpQiQRXN
FiAXUFOVP2MOwxqqaIqIqQHU9DUt+YvksvrogXRKgBVAEzmMHyR3YfQSQJ/Q
VHg1/zS35fwAr0iT5TRuA/cTd7dVH38Rv0dgLDwmGiLuFp+xuSw7anvLbpPj
esVC5WQXM+C1iV5ZPnK/wMBhwYdCl0b2RifFb0mUpa7IuJZzPO964fOiMWUW
pauA+WeU/1XypMSx+FJxa5FX8YZi66LakiElY8pGlb8sD6s8X/W+qqnmTA32
AncvONP8z6Ivl7Qt+3f56DaLtSPW62yctLWns9/2vdstdh7tXrQzZnf1zsBd
CTuX7yjasWm7f1d5V2Wn27bNkPlDNgz79uZai7Xh7aZtg1Ylt05bfmaZdOnL
llEtTxdcWhDT4N8QXJ8870yNa/UvFcryS8Wbit4VTCiIzcnP+jbTLG1wqiIp
M3FE0l/x/WNHx/RGJ0bdjYyMkIRJwsaHGoTMDb4U7BhcojkVJA5C1+7xAUf9
L/ld8N/th959sT5Y8ed7HQPGf8zzskeFWwVN8Vio7SDvT4ZKH8/29qusnVWq
/Spz5SInC6fvnUIVblDlhyq+kr9w5BPyp5Ge57TDfcfH9k0Oj+0x6+PZfqf9
Dru/bePtg8nN+67tM8j5EZD5T0pFUtzsiTq/c4D/p6IUkYNovlBpPcD6Jn8w
3wMqf19uG535uwH3TwXuvw3Qj3ca7rUJn41uPyNmYe2/Gq4xhgNp20e1wQX9
C4D+Wn10/fwwcwjw/3vEAJitf/fJ+4Px/WOm//rR7u+HbOcvhhRAKjoDULG9
f1Pi/J/9f5k6gJkAmE4OQdfZWuBzP5BRATez2qDPHADx/x11rbBvfdT8I3la
JZOOxY2zkxStHYBxdLnKg/v5Funb4i3ecQZZjLVADpQDr8Ug+FjXop3ew+/B
WIBnYF/CddQ8zHyn+QqIAntoj9ZL2rftB1iZZsrs41nN8ug+YNSoE+qieb8W
0lJpyAfsPCkBFhPyURd4hPzC8mmWIJHiQo0xblvqhvc01ANU05/WErv/zCyY
SYLFxlqWW0gpxmgIzWp2zvAcq2JCf6FcmojAU4U+2iwwZk4Vu3uA6RHcoD4m
qgIZ9eBI0gO/JH+wSRAp78Irh1sCHwID+MRNtSrgyfhxAqW1tdBd7C42sxkp
3ShLtm22f+F4ST5I+QpYQH/3CI/DXlt9nvk9CkwJNgs7FmkaMypRnRqdzsle
n3+4YESRdVFoybqSlGLH4hNFr+aOKDo991ORosiu5EeKANrS7LJHZfMrllXO
q1xWya2Kqt0579H8DQsqmtMWvV8ycnneSq/2tWtXrO/eMHvLsy2POw90pW/n
dD7uzOwK6jTZruq6te1sZ+HWj1situhs/HG9w7cWa5PWNKx2W7lveeqKlqUO
i/9cLGp509y38EXj2PmpdTvnNdaer1pWWVEWWDarePRc77z+uflZvMyDad+n
Dk7NTDRN1E04Gr81xjQmP6qGTvtnRywM6w6ZGDI5+Lmmn2ZLUE+gRcD3AYMD
Qv3raV8nzvEF+MSSe9cOqPp5nh89pkDmP+OmVXdBvd/tOs/lR+dWYPsLIOdf
V+J2viRFntNgp91yZk9POuT4NocGQP40qPBHA9OPhXw/1r6Sqvwge459BzD+
3wH3lnZLge8PtU22/Rl+C7Nlw2WbpdiZGWMjgcpfLXEXLxMdA/S/tD5l/Y31
WUEf3woqfz5wf9zzOYETBrntpWk5dbTfw32I+61/nHVilvEs9M1/ZHiW3H7Q
7wen/jD/F5Du117/0syJxAE2UAcQ8f+JOgBMD8AXsO+k95PuVNIAtVH3n+H/
zOZvZv/vdF2m48c4fX6hy7j+M1OAzE6Qs//fRNBZ4v6d7NTPZz8QjALmM7C7
7wBVuwPl/aOAfXQxxvt3kIUb5PoEQvRYC8zy6Hf7joPo/x2iQZDFWYtBFlKo
ch9bPIb3eywqITb0WByGrxyG79SFr06An/MndQiT4fGRKoLZtGUPFYboqNNE
igEJuXIgr1YTWpEDoPYPT/+eUO0/jt0GWGN8/r+ZwnyIuzhNdJ6iATNJxKG6
AXmDhp0c1CPlAFNbMNvC8YRQasL8XUxGbyF3QewPVtEpAIcUCky+P8cqBnKJ
OWiIDzymGoFRFgaQo2jTnAxyBpGTM9BO+F8vhtfrrIW/ZbmlEzfcagPUALoC
G0GM9XxhuGiJOMDGT+pgW2hr6pDumCrPcxqgGuZy3nW1W4RHh9db7/X+o4KG
hOwP14teGq9KrEr9N31l7oa8nRAFXAqtiw4XTJ9bWZhQoFv4au4vRT2F/YoO
zN1UtKE4tMSm7ExZbunM0m/KiysKK6XV+2qXzvuxcWLTkSbFoqxl9SvOrrq/
unrtfEB37saPWw5u8twq2PJxy/AtjZuHb8nY/Oum/pvNNqk3KtbPWWfe8bT9
7Sq3lR9XbFu2bPHGRVdbvmmZt2ADZH63+uV1WTVPqvZUPCi/XXJ6rv9cy4Ly
HOccy6zZGYdSk1J+SXqT0A7Yj4griT0X/XvU35ErIuQRwyO2heWGtoQ+16QE
i4OqA9C374L/X/61/h/9vP1Qz9/kg9n/MCD/rifPEz27St0b3fvTjk4d9UWX
eS6/QLXfzzlT9Y3qnVOe006FhVOt4hLU93iSd5KYvtDxgMN0qO8rgePfgOdO
+xv2P9jdsH9nV2PnZqdvd9S2xs4TXnUjwL6RLc92ku0UmbdspTQacv9Cm4WQ
+WWSKolGwhWniLxEPsJT1hWCbIGGb8G3h+xfwm2y7IR7+yhUt6iT2zYHFWbo
Y4sOmJFQ++O870FD9PpzoU2fWgMN6/eJjp9M5x+7f8vJ9Zs/M3zmC72vZ25i
8R/Fen9PhbdTqf9/gPh/EymA/WkXQBmdADKYP8ueAD5mPb97WNwzMwGV7CaQ
djoFiCceEMSeB1aS9w9GgMukW0s2R/3qBcA+MnzcdF8DyK8B/AdDLEDM1wDf
14Wcf4uD+rYgwHqlxQ24cOb9hgXGxbcQBW5Y5MDXpPDZIGAIYyFO3II/iT+n
DnLiUKgvmFPG++S8uZI0xUJTxqOvl3Q3iEYtneujC1gu+f6iH2A3dfrO0ybQ
8+y0MKqt3akbiHPKOvSVxcbMnOJ5Yw1FEC11BfBMEfWGavISfE8qghYT5nO9
NGGgpu/toojAzBJ1sbMGvaQamkGeg1LiAI+JVXSxu4ZXkwryDEWARlN0D+PB
/1WfqiT0Bdtq2cr9ygo3hOTxKwSPBC+tw0U8kVYSa/OrTYRsKFQBJnDnFija
lVdVXi5PXPu7p3nkezX4XvDPDOoK5UWaxC7SzkoWpRdm/prTlCPMXZmbnrsv
d3aePO9FbkKBW8H6/EUFgwqnzz1baDq3BCqCIyVfFd8uaSl9Wf4dxICqau+6
zvm+jQZNvy3c0qKz9OcVnq3XV/HbResWdoR/67P+l/VjNhlsqNnwfoN245MN
/6wfsO7quplrD6090DZi9Z3W2SveLv1yyf6WvoVayPvGjbqQ+U/WBtTsqVhR
0V3CL3aBKHQ5b2TujqzhGWfSZqauSzmbsD9xZ/yGuIi4gJhx0RMg70+OfBm+
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
a47ZE2eH8HQQq4FU4FulhLNt5FN+jk7oGUWujgnTyR9HXUHU+2CWZ1wBztO5
4HuKBudJB8ShWMExYVRCHIoeemzObyGtXy/rNN5L7qESmlA6Z8LMKGAnspxO
/BmHwCzK/v3JB01J6MdZ6stmddT7O8zpsfAn9NcD+i34ffyxglXW+62NRA6i
ySK8W3UgLwXYdEH+x9Oo+VQBrLc9bFdp/9jeH7iuieN9Rw/FXwrcR9+pNHaO
hAhw27VFPdCt0f2yR6HnVp8mnxe+2wNUQa2aJSF+UH3viuyIEsekx36KjYjL
SZiptYrfrj2k7ZdUktSd4p7Sl7otbVW6ftbdzFtZVdk3sp1znHKdc37NmZ5z
MvcLwnxNVl2mXda3maegahiV/lvq4NTQFFT0Xk9YpP0jviguPbYy+veoY5GR
Ec8izMIGho0PDQGefy+4QSMO6gnsDLwJqF8UMMn/GeBe7lfv98k3y2e0TyVg
X+wzztvN67KHwCPD/YxbtptGja786Mtv7LzJ2dp5vypTNVZ5yKnaaT0gH7sf
x+UnHaMcG4D1tzmMdkBHTmT9xbJnsgeQ9TOkZjYSGw0w+SXi94Bnd9Lt3BV9
C9l7HiB5LmTyXaIPornwSn8rwhyfL94leiriQFQwENdADOBCnFDTNh/095ks
whMZdPhcJhohvArofyQYK5DxL8HdvBzyf5MlogJV8J7mlyH/4x457Ekj/ucC
/nH256pRGUQA3PSL03+LaN/XTIM/WAVQLTv9hxMAl2YenzmLHEC+pjjwgkX/
feoDMi4AD0kF9HkH0Oc94Iz7pylNAjNzv4zun5kEQKU/4wWeQ7Hg8/av/537
57Den64zzOm9HRwp6fqa6Yy/mXCPmhV/Uvfg+d1pS8SqCZ3tCeG9+4DdVKsS
eNyHSv8T5P5UwLojIH+DlT1vudUkHuL/qRXe9butdsNn6yES1EN02A1/4iuq
EPYCb0AG4QvVgBMX6wvUDkstcI+mJWep+V1z1CUUQqTFyaGh5rPNSoFdX6OJ
Iay6JXMYVX4V6wg+jnrzHNL9LKYJQKbzj/OAuew0IVMrMBtNGAUAh/1zj2lG
aCBN+FSx/T30KHpM+f4xeYUyG4eZXeJnSKuIW4Fwe1h/6vuvhAtnfxgHkJ3m
qI+OgddOCBGvyErGX8vPFuAEsDVkl2EiLtyBdpCZZtjE2iil0wD9m6UPpJdl
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
1rSsRfT/ZaH2z095D1qp+OfLd1vpTkf0Dz33dttHIgdcRR9rxuzP0zt27+zU
WZtvIjY56RsTPx05DggHOBbZ4RRitq6bJ4TT0fVn4StG7HNGvoxo/hgVv1Rn
ZTfxnXPxvAfqaG1lkixlihY6SeR3b3WdQDaZIs3P7z0PS/Wbft+N5PBL1f/X
Mf/HoW5XoGufj/qfJewvNUDrFNCfZ6PO9QYWTi7M0qzPPoCnfdz3D1JnMB1Z
44sA//Rg/Kn5AU4RdA9d7LviI75/MbJMNy9PGmvI4aMrssAcD71+B3rmeLgH
YOZr71mgPYbX1dCZKMW/xo4B0jmjpiE9zzrYyKymkhIVQD/LG58XyGuL/v8N
eX6OMkeaqdHCLo3eH3Yz0YAuPKOSO3WBOM8dzCEqiL5LfbP7CvdzXm6gk9Xd
F2cNFDK0OIvYENb/2qj8PC0eKIRflHh+5PncTKejzAmd+B0IugC65BJK3nlM
Bt2/qUWzXf3nDN2Nq9X/nxN/lV3sNd3Nx9T51tbJ/yvJHZKJ/OP27w9E/kti
/1P5u490/6kBuDP+PCb/mvG/xP0izM/GWKp/1ImdH2Pwfj2o/q9Hd5b6z59y
ASmI+iuyv9g/4ZEPa/s3Gt1/3fDp2v2bQxui/6f6P1l/xUL90/n3H9V9Q++r
g94S/29MAIz2/fIAXiEnsEt6ZjCApgUrv7EJrKfO39gAGAoBk1KGpzaWx9d6
IX1Hqu6XS/d3lio/u4BZUgEmKspgB3fT559S1nxKiMmZqv70Tz8nLCU9BY0t
wC35g9ySPmCuNIGmBzexlbWfIQa4mRiAs7X/42kueR5kfp7NJvrv9Zwd2eT/
H8yZj6rRKpdeXsQAvGlqh+n/XxNVpzl3vmupL70+X1Cfu0T8vxtWsveX28jV
q+k4JuSv2bkIkzj3+PVd7Od5MrcVtZxufHXd9OK+KSwgt2DxiOpOmvur4nEZ
OWOlzgvHoj6y6nMaKHMTJWdMDjGI8Ax09uyjN7mNfDJXU8QmTBXNPFEeZoBu
iP0m3oGY/cMxgd/19vav8tPpkxN6Ber1Lf984fJjCm75t6Cyt0C9pxbgq9oC
fIRYHyQHYKr21MEz4vldBXGI9geE7K3wc454FH/HQj9PFHpj4l+FB5H9wzD3
78I1E7mg2Puw92XUfyqQOTy/4v89UFnQjZ/jjJNcSMZ/IfJmmIM+Rv9I49Rp
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
oIse73onMl/ClM/t8tAssk6HSt9viry92fM3yyqTblWZtCnoctNTqpbTUJ8O
a/o/Yusk3v9T2oXzXe/Exz66/p2X6h81fzdbLlv+Y3nY8hmivyjljOnw60wm
6zcjaQfq/8VEqv2vwPTfEtU/N3Ei5v6OCRXKAKfjn0T9vzr+pbgSsX+26/rv
Rf2n+ucseX/7hQFoH5sYu0s3gE1S/52m3n+kGEEh8QCShANg7BMNcMrUA9ki
FuD/zwKarum/Qh//uQMOQ/TTv/xAGj0NSrXl/Bg/63xlgJfxNfcAX+A7nH9e
1vfofPiyJqIY2zH1B9RHokLSau1L6vH6LRV7kh+jM4gIIj+IsU91FSoJsQNo
IY2wWfJd41R2InOBfpsLsgyOxnH5hxoM79flGvhNzhJ5hrfEO4PoUCJE3s/n
5ngBssBe5IBqMYJeRQYgJ3ij2ECcANLlDPKup413sqepNyw2wEAfcUCrfCfx
sdbfN7hImpY1iHXevodK5Ypa4UQAL9TXBke4Bv90EHNy08LSUJtCemTTKYu6
IPQGJeeeyv/ji04JC5gQGY8+4Adpf3BLNw7Vf1wkA7Wfitxjit9AVb8aM/4+
5IE/pO5bhLh/W+5/d5XS7WNbyRrdBa8WJugaefjWFHeTd9jBSJ1UBcgyPhQm
5ocM32+kZE5lY2J2efUfG6wSds8bnKVqvzOQhzifJf7TSlT9ZD/RPFRGITKS
WaEB39mMR63fL6UP1v8B/hv9ddL9JttvqW8Opqm5Yvy58fqme6jAvtHFbv8G
127M/L00jVHtI995l/xb33AQ93ezPH94+afe1wkpvMzMp88n/Z/qEPNJuvxT
+zspj7/zK6UME4NKUGL697myu+N9wlv/fr1nuqt/7CteD1n99POskbp/96yp
eo/x407hfWfJ6Y6+ttNMFZs8cd54web2mri31er+ueM6pnf9QszJ861E/lH1
ryq1a2pO6sOI/z9Sbkf3fyR5b/LPQv6x/j8rxT+qftDlj7o/xP4skdcPmf/f
xP8UX4DofyduHrr/c/L8mYLon6IN4AbE/05dABKRAfrJA7RRWiC1mv2nafZP
UtzniQfE2De8gJaaO4ClpiPwRJMDVCm8zxwz6itMHqA9Jj7tPumYL0Nfw77/
lbR2mnOoccaegNPAWSmeUfe0i2aDPvj4rrIBNyODrdwQnrXSHY3o4K3CDe21
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
5PsYOP9k/NNSxP0oH+N+FSr/Hsz9e5Erm3q7eOju+4ub7r7pnig31Zaew+z/
nOtGzFnk+RJ98aKDl9h1mPvvtX9n35G/A3l5B7qzZ1H3qfJv5IEV8vUixzcl
19D1oGt3W6l51YgLSl0Icvbp19NXHN4NmPlPCMnH3r6JPOv5uTKdGj4VQpkR
eV6dbvhbGvWfm/4t6glWCZlKrmq9FK2O4J35go3v0UFi+x9DBRtsJSOO2hjL
tON+JY01MT6tPypmo+WyHL9GyfOLqp83J1Pzdwym/1+E/U3o2k/131D/pv4f
EUAfJixJKEQGaKXq/4AcQGPQAcyLe0lbgP3oAaZ06Y4MMCv2QuxOsQCHyw2I
OiBl2gI2qvMfKS7gAN3/6AWWJCWwPTHGFoB7gD3/sn8rTfevcrPmL9X+P6wt
QC9Lg4VMxs2W/qj2AfkZ34ls0GipSqXKAbcAly0f4KsqxPtX2g98r+9yFvgg
dRhyIruAKHkiMksSOVSK+De4xKORO+db+Zo6pSTGPoC7QGoKcgsQ1s11gnay
edrSrsgIaW97SX4MmzOIDbyUYfgzn8iMEuKLveBYqbuxPkzShiiCHoB6wb+L
HUhGOfWl6BFglVvwXQVPoP4/56Im/Veu5ugCungMbcCznqZeOlav8RLbUu+1
I/736CKQrKpIdFCjn7WQ3uE9/UTLEx/nl24Ab+YjtBNoHkxEdO0Uw2aWuoPm
mr1PBLabDCJq8IyWg+hRMQc5sT+CyeAncQfTkAkqEckfSr2Xvr09MP+3lIso
o54I/xXS9SfHn0oDWwsrEfvPh8k75GWB6KNJmDDIWxiNTHAc//90+eAesDn+
38cGLwgRwAmGl86dgWma/fPwM7Hut8e8M9LP3odd/ygfXZMGytd7uu+IXFQ6
e6mk6JbKb7r8/bK0+6fKJzl/l53EXdzovMI5sKCo4GbHd3Y+MuxPOwy0z635
rP/XoxOok6bz7Lzfpe5Rjo909EnLoeLDpOy16Pub5pAJSo/IBXLqjNLH9mKN
sTKs0PuFt/3K9OnC7k83nSmnq6Pckn5KmHPjwkdnyyZmf0BE2lxhUohPeUqz
KdUvv7UWi+9Lvs981C1WMu63F+oGFoUaxzoYQAZ4y/Kw5XVEf1HKtuQ1yc7k
v5JY/3n9YwfQT/O/r+tsxD77/8V4BBX/ZP/2wgxADtAM0wOIKKC1iH6XmEBt
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

    "], {{0, 512}, {512, 0}}, {0, 65535},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag[
   "Bit16", ColorSpace -> "Grayscale", Interleaving -> None, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16, 
        "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
        "Black Is Zero", "FillOrder" -> 1, 
        "StripOffsets" -> {525958, 542342, 558726, 575110, 591494, 607878, 
         624262, 640646, 657030, 673414, 689798, 706182, 722566, 738950, 
         755334, 771718, 788102, 804486, 820870, 837254, 853638, 870022, 
         886406, 902790, 919174, 935558, 951942, 968326, 984710, 1001094, 
         1017478, 1033862}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
        "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384, 16384,
          16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
         16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
          16384, 16384, 16384, 16384, 16384, 16384}, "XResolution" -> 72, 
        "YResolution" -> 72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
        "inch", "DateTime" -> 
        DateObject[{2019, 10, 4, 12, 55, 38.}, "Instant", "Gregorian", -6.], 
        "Artist" -> "Created with the Wolfram Language : www.wolfram.com", 
        "SampleFormat" -> "Unsigned integer data"]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImagePadding->{{0., 0.}, {0., 0.}},
  ImageSizeRaw->{512, 512},
  PlotRange->{{0., 512.}, {0., 512.}},
  PlotRangePadding->Automatic]], "Output",
 CellChangeTimes->{3.779204022252078*^9, 3.7792045369885187`*^9, 
  3.779628596364328*^9},ExpressionUUID->"d5d585e2-351c-473d-a677-\
2706a554202e"]
}, Open  ]],

Cell["This will export out the mask image to the analysis folder", "Text",
 CellChangeTimes->{{3.779215645966916*^9, 
  3.7792156536473556`*^9}},ExpressionUUID->"1f5a8698-6fde-4ab7-a8b4-\
0a694f7bf228"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymask", "=", 
   GraphicsBox[
    TagBox[RasterBox[CompressedData["
1:eJzt0kuqJNcVhtG6arnpKWgW7rrprowHIOGycKcMJYHw7CVjgcv1uHUfEWft
E/EtyISEbBz+b3/7w7+++8c3b968+ekPv3199/0vf37//vt///WPv/3427uf
/vnju7d//8u7n9/++Pb9n374z9/efPP7J0mSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS5KoeHh70E4I8
/E6/I8DDB/RbstbDx/SDss4n8TuA+/hs/A7gFr7YvgO4vsfj1//Kvtq+A7iu
p8XvAC7p6fE7gKt5XvsO4FJeEL8DuIgXtu8AruA18TuAzb02fv13dkD9DmBX
x8Sv/5YOi98BbOjQ+vXfy8HxO4CdnBC//ts4p34HsIXT4td/A2fW7wCGOzl+
/ec6P30HMNOq8vUfZ236DmAOUb7+I7j0HYCly/+XXuGWdPQP6S1uSCf/P3qM
29HBP6LnuBvd+xN6kHvRtT+lF7kVHftz9CY3olN/lh7lPnTpL9Cz3IXu/CV6
l5vQmb9ML3MLOvIj9DR3oBs/So9zfbrw4/Q6l6cDf43e59p03a/TC12ajvsU
eqML02mfRI90XbrsE+mZrkp3fTI91DXpqs+gp7oi3fRZ9FjXo4s+k57ranTP
59OLXYqO+RJ6swvRKV9Gr3YduuQL6dkuQ4d8MT3cReiML6eXuwZd8RX0dJeg
I76G3u4KdMNX0ePtTxd8Lb3f7nS/V9MDbk7nO4CecGs63hH0hjvT7Q6hR9yY
TncQPeO2dLij6B03pbMdSE+5JR3tSHrLHelmh9JjbkgnO5ieczs62NH0nrvR
vY6nF92LrnUCPelWdKwz6E13oludQ6+6EZ3qHHrVfehSJ9GzbkOHOo0edhe6
02n0sJvQmU6kp92CjnQmve0WdKQz6W13oBudS687ny50Mj3vfLrQ2fS+0+k+
p9MDT6f7nE4PPJzOs4CeeDQdZwW98Wg6zhJ65MF0mjX0ynPpMovomefSZRbR
M4+lw6yid55Kd1lGDz2V7rKMHnoonWUZPfRUussyeuihdJZ19NIz6SoL6aln
0lUW0lOPpKMspKceSUdZSW89ko6ykt56It1kKT32QDrJWnrtgXSSpfTYA+kk
a+m159FFFtNzz6OLLKbnHkcHWUzPPY8uspieexwdZDW99zS6x3J68Gl0j+X0
4MPoHMvpwYfROdbTiw+jc6ynF59F1wD05KPoGILefBQdA9CTj6JjCHrzUXQM
QW8+iW5B6NEH0SkIPfokugWhRx9EpzD06nPoEoiefQ5dAtGzj6FDIHr2MXQI
Re8+hg6h6N2n0B0YPfwUugOjhx9CZ2D08EPoDI5efgidwdHLz6ArQHr6EXQE
SE8/g64A6elH0BEkvf0EugGlx59AN5D09hPoBpQefwCdwNLrD6ATUHr8AXQC
S6/v6QKYnt/TBTA9P6cDYHp+TgfQ9P6cDqDp/TW9v6b31/T+nA6g6f05HQDT
83u6gKXX93QBTM/v6QKWXn8AnYDS4w+gE1h6/QF0AkqPP4FuIOntR9ARID39
CDqCpLcfQUeA9PQz6AqOXn4GXQHS08+gKzh6+Rl0BUcvP4OuAOnpZ9AVHL38
DLqCo5efQVeA9PQj6AiQnn4GXcHRy8+gK0B6+hF0BEhPP4Ou4OjlZ9AVID39
CDoCpKcfQUeA9PQz6AqOXn4GXQHS04+gI0B6+hF0BEhPP4OuAOnpR9ARID39
CDoCpKefQVeA9PQj6AiQnn4EHQHS04+gI0h6+xF0BEhPP4KOAOnpR9ARJL39
BLqBpLcfQUeA9PQj6AiS3n4C3UDS24+gI0h6+wl0A0qPP4BOYOn1PV0A0/N7
ugCm5+d0AE3vr+n9OR0A0/N7ugCm5/d0AUuvP4BOQOnxB9AJLL3+ADoBpcef
QDeQ9PYj6AiQnn4GXQHS08+gKzh6+SF0BkYPP4XuoOjdx9AhFL37GDoEomef
Q5cw9OqD6BSEHn0QnYLQo0+iWwh681l0jeX04NPoHqvpvcfRQRbTcw+kk6yk
tx5JR1lITz2TrrKMHnoq3WUVvfNcuswSeuTJdJsV9Maj6TgL6ImH03nOpvcd
Twc6mZ53Pl3oVHrcHehGZ9LbbkFHOpGedg+60mn0sJvQmU6jh92F7nQSPes+
dKlz6FX3oUudQo+6E93qDHrTnehWZ9CbbkXHOp5edDM61+H0oJvRuY6m99yO
DnYwPed+dLFj6TX3o4sdSo+5I93sSHrLHelmB9JT7klXO45eclM621H0jrvS
3Y6id9yWDncMveLGdLpX0vNdgE74Enqza9E1n0wPdV267KP0OLegI39KL3I3
uvf/6CVuS4cvvVb6uyv9zZX+7kp/d6W/udLfXeVvrvZ3V/ubq/3d1f7map8P
1D4fqXqSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmS
JEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJEmSJBP8CgR860w=
      "], {{0, 512}, {512, 0}}, {0, 1},
      ColorFunction->GrayLevel],
     BoxForm`ImageTag["Bit", ColorSpace -> Automatic, Interleaving -> None],
     Selectable->False],
    DefaultBaseStyle->"ImageGraphics",
    ImageSizeRaw->{512, 512},
    PlotRange->{{0, 512}, {0, 512}}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"analysisFolder", "<>", "\"\<_mask.tif\>\""}], ",", "mymask"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.695765046835212*^9, 3.6957650613840446`*^9}, {
   3.7055137992181635`*^9, 3.705513800518238*^9}, {3.7136419255917816`*^9, 
   3.713641926390827*^9}, {3.7152789467933197`*^9, 3.7152789476543694`*^9}, {
   3.7156096401608987`*^9, 3.7156096508625107`*^9}, {3.715638199950425*^9, 
   3.715638201410509*^9}, {3.7700338284675865`*^9, 3.7700338298874083`*^9}, 
   3.773076316951456*^9, 3.77359354775279*^9, 3.7792156348592806`*^9, 
   3.779628629891246*^9},ExpressionUUID->"51b024b7-e397-46aa-b3ce-\
10c4b3bd52d6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Creating Transformation Function (need to only run this once per imaging day \
to get a transformation function for that imaging day)\
\>", "Subsection",
 CellChangeTimes->{{3.6515232012801285`*^9, 3.6515232091525784`*^9}, {
  3.7792157387032204`*^9, 
  3.779215770463037*^9}},ExpressionUUID->"9f776d27-e6a7-4d44-a752-\
fb224e0da7d8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dirBeads", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"ParentDirectory", "@", 
       RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], ")"}], "<>", 
     "\"\<\\\\Beads\>\""}], ")"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6515233788132825`*^9, 3.651523475464811*^9}, {
  3.7796286897196674`*^9, 3.779628692007798*^9}, {3.7796288143767977`*^9, 
  3.779628854152073*^9}, {3.779628916296627*^9, 
  3.7796289164246345`*^9}},ExpressionUUID->"83ba9313-a312-4e02-be32-\
fd076948e659"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myFiles", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"\"\<*.tif\>\"", ",", "dirBeads"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myBeadsImgs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Import", "@", 
      RowBox[{
      "myFiles", "\[LeftDoubleBracket]", "i", "\[RightDoubleBracket]"}]}], 
     ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "myFiles", "]"}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDims", "=", 
   RowBox[{"ImageDimensions", "@", 
    RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "1"}], "\[RightDoubleBracket]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorCombine", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ConstantImage", "[", 
        RowBox[{"0", ",", "myDims"}], "]"}]}], "}"}], "]"}], "//", 
    "ImageAdjust"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose an image to calculate the transformation function and CLICK\>\
\"", ",", 
     RowBox[{"nRefImg", "=", "data"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"data", ",", "1", ",", 
     RowBox[{"Length", "[", "myFiles", "]"}], ",", "1"}], "}"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6472842488313336`*^9, 3.6472842802491302`*^9}, {
  3.6472843380484366`*^9, 3.6472843498251104`*^9}, {3.6472843849931216`*^9, 
  3.6472846989050765`*^9}, {3.6476199272898703`*^9, 3.6476200105786343`*^9}, {
  3.6476207275146403`*^9, 3.6476207335459857`*^9}, {3.6476207720271864`*^9, 
  3.647620795722542*^9}, {3.6484024981878595`*^9, 3.6484025788674746`*^9}, {
  3.648402631659494*^9, 3.648402640107977*^9}, {3.64840269085988*^9, 
  3.6484027018515086`*^9}, {3.6485688255122385`*^9, 3.648568839433035*^9}, {
  3.6515234645531864`*^9, 
  3.6515234936248493`*^9}},ExpressionUUID->"0935b445-fd79-430e-91ac-\
36a65abe00e0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRefBeadsRedImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nRefImg", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRefBeadsGreenImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nRefImg", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myRefBeadsRedImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdRed"}], "]"}], "&"}]}], ",", 
       RowBox[{"myRefBeadsGreenImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdGreen"}], "]"}], "&"}]}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Choose thresholds and CLICK\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"thRed", "=", "thresholdRed"}], ",", 
       RowBox[{"thGreen", "=", "thresholdGreen"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"thresholdRed", ",", "0.01", ",", "0.5", ",", "0.005"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"thresholdGreen", ",", "0.01", ",", "0.5", ",", "0.001"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.647284738342332*^9, 3.6472847566733804`*^9}, {
   3.6472870495625267`*^9, 3.6472870798832607`*^9}, {3.6476066050868835`*^9, 
   3.6476066416629763`*^9}, {3.647616071455329*^9, 3.6476160716063375`*^9}, {
   3.647620819450899*^9, 3.64762084254622*^9}, {3.648402606340046*^9, 
   3.6484026099952545`*^9}, {3.6484045377655168`*^9, 3.648404538013531*^9}, {
   3.648404585229232*^9, 3.648404587589367*^9}, {3.648568868680708*^9, 
   3.6485689240248733`*^9}, 3.648568962481073*^9, {3.65524317128572*^9, 
   3.6552431720297623`*^9}, {3.70266730914184*^9, 
   3.702667309451858*^9}},ExpressionUUID->"e26d1601-8c67-4f77-a85d-\
b7c5edbc340b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myRefBeadsRedImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myRefBeadsRedImg", ",", "thRed"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myGreenPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myRefBeadsGreenImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myRefBeadsGreenImg", ",", "thGreen"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<   `` red particles and `` green particles were found.\>\"", ",", 
   RowBox[{"Length", "@", "myRedPosGuess"}], ",", 
   RowBox[{"Length", "@", "myGreenPosGuess"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6472871195535297`*^9, 3.6472871600828476`*^9}, {
  3.6472872536111975`*^9, 3.647287254323238*^9}, {3.647291607334216*^9, 
  3.647291611030427*^9}, {3.64760669330293*^9, 3.647606693582946*^9}, {
  3.647606739886594*^9, 3.6476068095835805`*^9}, {3.6476161035591655`*^9, 
  3.6476161113906136`*^9}, {3.647616714199092*^9, 3.64761671451111*^9}, {
  3.6476208578180933`*^9, 3.647620903682717*^9}, {3.648383804191662*^9, 
  3.648383913465254*^9}, {3.648384596706857*^9, 3.648384602902068*^9}, {
  3.648388533593933*^9, 3.648388542173948*^9}, {3.648388651943741*^9, 
  3.648388653191743*^9}, {3.6484031152761555`*^9, 3.648403123347617*^9}, {
  3.6485687322569046`*^9, 
  3.64856879756064*^9}},ExpressionUUID->"c10728c6-f957-4d6b-993a-\
0b24851d3917"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"16\\\"}]\\) red particles and \
\\!\\(\\*RowBox[{\\\"16\\\"}]\\) green particles were found.\"\>",
  StringForm["   `` red particles and `` green particles were found.", 16, 16],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.648568985201372*^9, 3.6515235201513667`*^9, 3.653246218124297*^9, 
   3.6532527077294817`*^9, 3.6532552039882593`*^9, 3.653256957552557*^9, 
   3.6550425296257057`*^9, 3.6550575945573378`*^9, 3.655068691610053*^9, 
   3.655217274388502*^9, 3.655228553207613*^9, {3.6552432007644053`*^9, 
   3.6552432154442453`*^9}, 3.6553857869982815`*^9, 3.655646328235388*^9, 
   3.655820969340288*^9, 3.6559035980123777`*^9, 3.6563471108824816`*^9, 
   3.6563627214073524`*^9, 3.6573794707367115`*^9, 3.66351859333272*^9, 
   3.6655118560080605`*^9, 3.665946320648436*^9, 3.665946353678325*^9, 
   3.66594638978139*^9, 3.6659464553431396`*^9, {3.6670006452102585`*^9, 
   3.6670006780331354`*^9}, {3.6761452388342323`*^9, 3.676145321048935*^9}, 
   3.6761453609462166`*^9, 3.6761464958351283`*^9, 3.6783201265379095`*^9, 
   3.7026673472260184`*^9, 3.7088149561854625`*^9, 3.713665244365506*^9, 
   3.7151036992870455`*^9, 3.7172612538728075`*^9, 3.7172760508300533`*^9, 
   3.717440488591755*^9, 3.717441278619813*^9, {3.7186374483658915`*^9, 
   3.718637480311954*^9}, 3.733241520700554*^9, 3.771174562600373*^9, {
   3.77342713591558*^9, 3.773427172025024*^9}, {3.7734272235248103`*^9, 
   3.77342727939942*^9}, {3.7745205064866505`*^9, 3.7745205227731934`*^9}, {
   3.774520558809702*^9, 3.7745205848463664`*^9}, 3.7765463447114077`*^9, 
   3.776546385409731*^9, 3.776546808474712*^9, 3.777391834560398*^9, 
   3.7782702047318125`*^9, 3.778270261424819*^9, {3.779628978187167*^9, 
   3.779629047839151*^9}},ExpressionUUID->"584c6388-222d-44d1-a103-\
fedb78823af3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedAbsPos", "=", 
   RowBox[{"BeadsFitting", "[", 
    RowBox[{"myRefBeadsRedImg", ",", "myRedPosGuess", ",", "7"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myGreenAbsPos", "=", 
   RowBox[{"BeadsFitting", "[", 
    RowBox[{"myRefBeadsGreenImg", ",", "myGreenPosGuess", ",", "7"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "myTfFuncError", ",", "myTfFunc", ",", "distanceRaw", ",", 
     "distanceCorrected"}], "}"}], "=", 
   RowBox[{"BeadsTransform", "[", 
    RowBox[{"myRedAbsPos", ",", "myGreenAbsPos", ",", "5"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{"myTfFuncError", ",", "myTfFunc", ",", 
   RowBox[{
    RowBox[{"Insert", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"distanceRaw", ",", "distanceCorrected"}], "}"}], "//", 
       "Transpose"}], ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<Distance Before Correction\>\"", ",", 
        "\"\<Distance After Correction\>\""}], "}"}], ",", "1"}], "]"}], "//",
     "TableForm"}]}], "}"}]}], "Input",
 CellChangeTimes->{{3.6472917775439515`*^9, 3.6472918674140916`*^9}, {
   3.6472919395192156`*^9, 3.6472921294710803`*^9}, {3.64729216005583*^9, 
   3.647292204343363*^9}, {3.64729223768727*^9, 3.6472922638717675`*^9}, {
   3.6472923420242376`*^9, 3.647292344791396*^9}, {3.647292377799284*^9, 
   3.647292382471551*^9}, {3.647292597439847*^9, 3.6472926420633993`*^9}, {
   3.6476167011113434`*^9, 3.6476168305597477`*^9}, 3.647619593401773*^9, {
   3.6476200713801117`*^9, 3.647620079346567*^9}, {3.647620137890916*^9, 
   3.6476201587781105`*^9}, {3.6476209285711403`*^9, 3.647620985123375*^9}, {
   3.647621041082576*^9, 3.647621051891194*^9}, {3.647710782554494*^9, 
   3.647710782794508*^9}, {3.648384062470116*^9, 3.6483840627509165`*^9}, {
   3.6483842823091035`*^9, 3.6483842897503166`*^9}, {3.64838861160007*^9, 
   3.6483886246104927`*^9}, {3.648389210430524*^9, 3.6483892208045425`*^9}, {
   3.6483912901037827`*^9, 3.6483913257040453`*^9}, {3.6483913568583*^9, 
   3.648391371119725*^9}, {3.648391426798223*^9, 3.648391471012701*^9}, {
   3.6483917247137585`*^9, 3.6483917651700726`*^9}, {3.6484010898193054`*^9, 
   3.6484011325947523`*^9}, {3.6484011932102194`*^9, 3.64840120301078*^9}, {
   3.6485690330251074`*^9, 3.648569059400616*^9}, {3.6485690926485176`*^9, 
   3.6485690984008465`*^9}, {3.6485691294816246`*^9, 3.648569207153067*^9}, {
   3.6485692641953297`*^9, 3.648569271000719*^9}, {3.6485693716974783`*^9, 
   3.648569381953065*^9}, {3.6515236902010927`*^9, 3.6515237054009624`*^9}, {
   3.651524094618224*^9, 
   3.6515240992494893`*^9}},ExpressionUUID->"97eb1b14-5102-4bac-ac45-\
dcf3a432b5f8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.09642763480379665`", ",", 
   RowBox[{"TransformationFunction", "[", 
    RowBox[{"(", 
     TagBox[GridBox[{
        {"1.0021683112183828`", 
         RowBox[{"-", "0.005234304272249327`"}], "2.967684441413481`"},
        {"0.003434681669921556`", "1.0031388068557532`", 
         RowBox[{"-", "1.5447471065377567`"}]},
        {"1.7723229367625066`*^-6", 
         RowBox[{"-", "1.207885124712566`*^-6"}], "1.`"}
       },
       AutoDelete->False,
       GridBoxDividers->{
        "Columns" -> {{False}}, "ColumnsIndexed" -> {-2 -> True}, 
         "Rows" -> {{False}}, "RowsIndexed" -> {-2 -> True}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      #& ], ")"}], "]"}], ",", 
   TagBox[GridBox[{
      {"\<\"Distance Before Correction\"\>", "\<\"Distance After Correction\"\
\>"},
      {"1.366948196692234`", "0.0788383800732613`"},
      {"1.638896347679539`", "0.014867090419512058`"},
      {"1.3593784047100834`", "0.1585314003257685`"},
      {"1.4205703353228945`", "0.13524818846510925`"},
      {"1.0127490238753851`", "0.08459513073317304`"},
      {"1.8280588027431464`", "0.10241870104272521`"},
      {"1.676887839654676`", "0.12253253353944302`"},
      {"1.804699103493598`", "0.14894520786938542`"},
      {"2.41014411107482`", "0.01586527423520311`"},
      {"2.1408589329032788`", "0.20712138347808445`"},
      {"2.955528001754205`", "0.02909372058900858`"},
      {"2.7850696313851575`", "0.07638552241835508`"},
      {"3.2153191101015532`", "0.07533274005937972`"},
      {"3.1102021653129635`", "0.10021161400474453`"}
     },
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[2.0999999999999996`]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Function[BoxForm`e$, 
     TableForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellChangeTimes->{
  3.6635185995400753`*^9, 3.665511858304192*^9, 3.6659463234365954`*^9, 
   3.6659463606367235`*^9, 3.6659464052352743`*^9, 3.665946457019236*^9, 
   3.6670006489394712`*^9, 3.6670006805312786`*^9, 3.676145241122363*^9, {
   3.676145278987529*^9, 3.6761453621992884`*^9}, 3.676146497711236*^9, 
   3.6783201296460867`*^9, 3.7026673805329237`*^9, 3.708814959763754*^9, 
   3.713665246278051*^9, 3.715103702726384*^9, 3.7172612562908115`*^9, 
   3.717276052873657*^9, 3.7174404908325596`*^9, 3.717441280242216*^9, 
   3.7186374516976976`*^9, 3.7186374818155565`*^9, 3.7332415222925587`*^9, 
   3.771174564426576*^9, 3.7734271414126606`*^9, 3.7734271762148333`*^9, 
   3.7734272437797284`*^9, 3.773427285799102*^9, 3.774520528162259*^9, 
   3.774520587665322*^9, 3.776546388067443*^9, 3.776546814928611*^9, 
   3.7773918364770546`*^9, 3.778270267632159*^9, 
   3.7796290561636267`*^9},ExpressionUUID->"dd5ea553-1734-4688-9561-\
70519a46ecaf"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
     "\"\<TransformationFunction.m\>\""}], ",", "myTfFunc"}], "]"}], 
  ";"}]], "Input",ExpressionUUID->"40989a75-87c4-43a7-96d2-93085f09d702"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTfFuncInv", "=", 
   RowBox[{"InverseFunction", "@", "myTfFunc"}]}], ";"}]], "Input",ExpressionU\
UID->"4cd80e42-06e4-4a13-b5d5-cb3c20a2bdb9"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Running z-average (use this if you want to make a running average of the \
movie; I usually do not do a rolling average so I leave the avgFrameN = 1)\
\>", "Subsection",
 CellChangeTimes->{{3.642337220641624*^9, 3.642337230681198*^9}, {
   3.678313774559597*^9, 3.6783137753366413`*^9}, 3.6783160899130273`*^9, {
   3.779215790319173*^9, 
   3.7792158121754227`*^9}},ExpressionUUID->"ad52af19-3242-4b69-b0bb-\
51f783040403"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgFrameN", "=", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myMaxN", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
     "myColMovie", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], "-", "avgFrameN", "+", "1"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myColMovieRunAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{
       RowBox[{"ImageAdd", "[", 
        RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", 
          RowBox[{"j", ";;", 
           RowBox[{"j", "+", "avgFrameN", "-", "1"}]}]}], 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"1", "/", "avgFrameN"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
      RowBox[{"channel", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
     RowBox[{
      RowBox[{"ImageAdjust", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "threshold"}], "}"}]}], "]"}], "&"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"channel", ",", "1", ",", 
      RowBox[{"Length", "[", "myColMovieRunAv", "]"}], ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"threshold", ",", "0", ",", "0.2", ",", "0.001"}], "}"}]}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6423382732288284`*^9, 3.6423382777220855`*^9}, {
   3.642338308730859*^9, 3.6423383088428655`*^9}, {3.6423386993952036`*^9, 
   3.6423387003632593`*^9}, {3.6423387599876695`*^9, 3.642338760298687*^9}, {
   3.642338798179854*^9, 3.6423388086594534`*^9}, {3.6483102143678484`*^9, 
   3.6483102325378737`*^9}, {3.6515228854160624`*^9, 
   3.6515228856970778`*^9}, {3.678313684729459*^9, 3.6783136848644667`*^9}, {
   3.678313715858239*^9, 3.6783137159772463`*^9}, {3.678648513961624*^9, 
   3.6786485140406284`*^9}, {3.6786530916647177`*^9, 3.6786530917427177`*^9}, 
   3.7174404993405747`*^9},ExpressionUUID->"04d42832-4860-4c51-82ca-\
aaacc100ffd3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Checking Transformation Function", "Subsection",
 CellChangeTimes->{{3.6483887123676476`*^9, 
  3.6483887334296846`*^9}},ExpressionUUID->"683400fc-f610-48de-903a-\
66b3e8ed039e"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"ColorCombine", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
        RowBox[{"data", ",", "2"}], "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ConstantImage", "[", 
        RowBox[{"0", ",", "myDims"}], "]"}]}], "}"}], "]"}], "//", 
    "ImageAdjust"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose an image to check the transformation function and CLICK\>\"", 
     ",", 
     RowBox[{"nCheckImg", "=", "data"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"data", ",", "1", ",", 
     RowBox[{"Length", "[", "myFiles", "]"}], ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.648404118652545*^9, 3.648404125492936*^9}, {
  3.64856940301727*^9, 
  3.6485694140098987`*^9}},ExpressionUUID->"2f0ebc76-9d71-42ae-9081-\
16fa03037457"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myCheckBeadsRedImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nCheckImg", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myCheckBeadsGreenImg", "=", 
   RowBox[{"myBeadsImgs", "\[LeftDoubleBracket]", 
    RowBox[{"nCheckImg", ",", "2"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"myCheckBeadsRedImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdRed"}], "]"}], "&"}]}], ",", 
       RowBox[{"myCheckBeadsGreenImg", "//", 
        RowBox[{
         RowBox[{"Binarize", "[", 
          RowBox[{"#", ",", "thresholdGreen"}], "]"}], "&"}]}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Choose thresholds and CLICK\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"thcRed", "=", "thresholdRed"}], ",", 
       RowBox[{"thcGreen", "=", "thresholdGreen"}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"thresholdRed", ",", "0.01", ",", "0.5", ",", "0.005"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"thresholdGreen", ",", "0.01", ",", "0.5", ",", "0.005"}], 
    "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6483887532573195`*^9, 3.648388796801996*^9}, {
  3.648390090354471*^9, 3.6483900905260715`*^9}, {3.648401539475024*^9, 
  3.648401539675036*^9}, {3.648401584090576*^9, 3.648401584226584*^9}, {
  3.6484016287071285`*^9, 3.6484016531065235`*^9}, {3.648404129261152*^9, 
  3.648404129388159*^9}, {3.648404642357499*^9, 3.6484046502619514`*^9}, {
  3.6485694291687655`*^9, 3.648569447672824*^9}, {3.7026674353740606`*^9, 
  3.7026674356920786`*^9}},ExpressionUUID->"095f9840-cd50-495b-85b9-\
d847b530c2c5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedCheckPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myCheckBeadsRedImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myCheckBeadsRedImg", ",", "thcRed"}], "]"}]}], "]"}], ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myGreenCheckPosGuess", "=", 
   RowBox[{
    RowBox[{"ComponentMeasurements", "[", 
     RowBox[{
      RowBox[{"ImageMultiply", "[", 
       RowBox[{"myCheckBeadsGreenImg", ",", 
        RowBox[{"Binarize", "[", 
         RowBox[{"myCheckBeadsGreenImg", ",", "thcGreen"}], "]"}]}], "]"}], 
      ",", 
      RowBox[{"{", "\"\<IntensityCentroid\>\"", "}"}]}], "]"}], 
    "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "2", ",", "1"}], "\[RightDoubleBracket]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<   `` red particles and `` green particles were found.\>\"", ",", 
   RowBox[{"Length", "@", "myRedCheckPosGuess"}], ",", 
   RowBox[{"Length", "@", "myGreenCheckPosGuess"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.648388871717328*^9, 3.648388885414152*^9}, {
  3.648388936491642*^9, 3.648388950095866*^9}, {3.648390120868125*^9, 
  3.6483901256573334`*^9}, {3.6484015647394695`*^9, 3.6484015650184855`*^9}, {
  3.6484016700824947`*^9, 3.6484016702105017`*^9}, {3.64840316133979*^9, 
  3.6484031700442877`*^9}, {3.648569478513588*^9, 
  3.6485694871920843`*^9}},ExpressionUUID->"0b944e34-1bec-44e2-956d-\
8fb2511e507f"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"7\\\"}]\\) red particles and \
\\!\\(\\*RowBox[{\\\"7\\\"}]\\) green particles were found.\"\>",
  StringForm["   `` red particles and `` green particles were found.", 7, 7],
  Editable->False]], "Output",
 CellChangeTimes->{3.6485694876981134`*^9, 3.651523578047678*^9, 
  3.6522146179874964`*^9, 3.6783201839781947`*^9, 3.7026674506189322`*^9, 
  3.703441248860548*^9, 3.708815000326171*^9, 3.7136652879714665`*^9, 
  3.717441239123143*^9},ExpressionUUID->"8acfa498-b868-4af7-b01c-\
e3fbf8a9ab8e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Reading in Parameters (only if parameters exist)",
 FontColor->RGBColor[0, 0, 1]]], "Subsection",
 CellChangeTimes->{{3.678552493212551*^9, 3.6785525007159805`*^9}, {
  3.6786508024734793`*^9, 3.678650831977167*^9}, {3.708815029062045*^9, 
  3.7088150299114723`*^9}},ExpressionUUID->"ed676a96-70fe-4bfd-9483-\
c9dc33cd57aa"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myMaxN", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
     "myColMovie", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], "-", "avgFrameN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myColMovieRunAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{
       RowBox[{"ImageAdd", "[", 
        RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", 
          RowBox[{"j", ";;", 
           RowBox[{"j", "+", "avgFrameN", "-", "1"}]}]}], 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"1", "/", "avgFrameN"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.6786492212580795`*^9, 
  3.6786492291705313`*^9}},ExpressionUUID->"1dcbdac5-4bef-403d-a1f2-\
1db00ed03ac4"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"redRunAvp", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redspots.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678649299490554*^9, 3.678649305386891*^9}, {
  3.6786493359696407`*^9, 3.6786493362346554`*^9}, {3.771102207764485*^9, 
  3.7711022122879486`*^9}},ExpressionUUID->"dc84fcc4-1460-47e0-988d-\
250acd3a0578"],

Cell["\<\
Syntax::sntue: Unexpected end of file (probably unfinished expression)  (line \
43001 of \"C:\\Users\\TSlab\\Dropbox\\Work Folder\\Postdoc\\Munsky \
Lab\\_mirroredFiXiE\\20190909_u2os_multiplex\\smFLAG-KDM5B\\Analysis\\MAX_\
Cell01_redspots.dat\").\
\>", "Message", "MSG",
 CellChangeTimes->{3.7715911872997417`*^9, 3.7723637130689898`*^9, 
  3.7728102473483467`*^9, 
  3.7774069069475145`*^9},ExpressionUUID->"52f2c0fa-d963-4b60-9708-\
e5c35a56651d"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myredtracks", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redtracks.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678649274450122*^9, 3.6786492825785866`*^9}, {
  3.678649317097561*^9, 3.6786493250110135`*^9}, {3.6786493763939524`*^9, 
  3.678649387642596*^9}, {3.678649458082625*^9, 3.6786494586896596`*^9}, {
  3.771102216304854*^9, 
  3.7711022167532787`*^9}},ExpressionUUID->"cd3a86f1-4c3c-47a9-a543-\
0c5797c13513"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",ExpressionUUID->"3a1d404a-9293-4e5e-9560-50b066a643a4"],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.772810268790841*^9},ExpressionUUID->"c70db2e7-290a-4a7f-b72f-\
e9b9965f3c72"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTfFunc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
     "\"\<TransformationFunction.m\>\""}], "]"}]}], ";"}]], "Input",Expression\
UUID->"0ff34014-0a5e-4ec4-9f9b-8e4f2a2d5f58"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myTfFuncInv", "=", 
   RowBox[{"InverseFunction", "@", "myTfFunc"}]}], ";"}]], "Input",ExpressionU\
UID->"d6fd1693-b025-424e-ad51-b08f9b81b136"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mymask", "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_mymask.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.714220631806486*^9, 
  3.714220643566139*^9}},ExpressionUUID->"2b92866b-8c10-43b1-91a7-\
36668309d539"]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Find Red Particles from Running z - averaged Movie (Red laser) \
\>", "Subsection",
 CellChangeTimes->{{3.648582517877397*^9, 3.648582532363226*^9}, {
   3.678314933279872*^9, 3.6783149871069503`*^9}, 
   3.6783160864648304`*^9},ExpressionUUID->"5dac7600-5d4c-4fe6-8fd8-\
cb15f6fc06e7"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{"redRunAvp", " ", "is", " ", "list", " ", "of", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"x1", ",", "y1"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"x2", ",", "y2"}], "}"}], "..."}], ".", 
      RowBox[{"{", 
       RowBox[{"xn", ",", "yn"}], "}"}]}]}], "}"}], " ", "in", " ", "each", 
   " ", "frame"}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.648310502039258*^9, 
  3.6483105068292646`*^9}},ExpressionUUID->"f0c7504e-6ed5-410c-9414-\
db428bbbe253"],

Cell["Adjust threshold to see spots nicely", "Text",
 CellChangeTimes->{{3.7794579862239857`*^9, 
  3.779457996768589*^9}},ExpressionUUID->"6373dab2-032c-4f13-8347-\
33546b17d523"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
     RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
    RowBox[{
     RowBox[{"ImageAdjust", "[", 
      RowBox[{"#", ",", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"threshold1", ",", "threshold2"}], "}"}]}], "]"}], "&"}]}], 
   ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Choose threshold such that the dots appear nicely and CLICK\>\"", 
     ",", 
     RowBox[{"thred", "=", 
      RowBox[{"{", 
       RowBox[{"threshold1", ",", "threshold2"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frame", ",", "1", ",", 
     RowBox[{"Length", "[", 
      RowBox[{
      "myColMovieRunAv", "\[LeftDoubleBracket]", "1", 
       "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold1", ",", "0.001"}], "}"}], ",", "0", ",", "0.4", ",", 
     "0.001"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold2", ",", "0.03"}], "}"}], ",", "0", ",", "0.4", ",", 
     "0.001"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.7782723283809314`*^9},ExpressionUUID->"db6ea7eb-27b6-4e7b-a278-\
1b6320ec0039"],

Cell["\<\
Choose a threshold setting to where you can see nice well defined spots that \
match the left image\
\>", "Text",
 CellChangeTimes->{{3.779458062784365*^9, 
  3.779458079792338*^9}},ExpressionUUID->"d6ad9471-edb8-4b54-8caf-\
93d93e004df8"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"max", "=", 
     RowBox[{
      RowBox[{
       RowBox[{"BandPass", "[", 
        RowBox[{
         RowBox[{"ImageMultiply", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
             RowBox[{"1", ",", " ", "1"}], "\[RightDoubleBracket]"}], " ", "//",
             " ", 
            RowBox[{
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"#", ",", " ", 
               RowBox[{"{", 
                RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
               "thred"}], "]"}], " ", "&"}]}], ",", "mymask"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"lowpass", ",", "hipass"}], "}"}]}], "]"}], "//", 
       "ImageData"}], "//", "Max"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"imgb", "=", 
     RowBox[{"BandPass", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", " ", "frame"}], "\[RightDoubleBracket]"}], " ", "//",
         " ", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"#", ",", " ", 
           RowBox[{"{", 
            RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
           "thred"}], "]"}], " ", "&"}]}], ",", 
       RowBox[{"{", 
        RowBox[{"lowpass", ",", "hipass"}], "}"}]}], "]"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"GraphicsRow", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
          RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", " ", 
         RowBox[{
          RowBox[{"ImageAdjust", "[", 
           RowBox[{"#", ",", " ", 
            RowBox[{"{", 
             RowBox[{"0", ",", " ", "0", ",", " ", "1"}], "}"}], ",", " ", 
            "thred"}], "]"}], "&"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"SelectComponents", "[", 
         RowBox[{
          RowBox[{"ImageMultiply", "[", 
           RowBox[{
            RowBox[{"Binarize", "[", 
             RowBox[{"imgb", ",", 
              RowBox[{"max", " ", "threshold"}]}], "]"}], ",", "mymask"}], 
           "]"}], ",", "\"\<Count\>\"", ",", 
          RowBox[{
           RowBox[{"lo", "<", "#", "<", "hi"}], "&"}]}], "]"}]}], "}"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "500"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Choose parameters and CLICK\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mymaxred", "=", "max"}], ",", 
       RowBox[{"bandpassred", "=", 
        RowBox[{"{", 
         RowBox[{"lowpass", ",", "hipass"}], "}"}]}], ",", 
       RowBox[{"thred2", "=", "threshold"}], ",", 
       RowBox[{"dotsizered", "=", 
        RowBox[{"{", 
         RowBox[{"lo", ",", "hi"}], "}"}]}]}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"threshold", ",", "0.1"}], "}"}], ",", "0", ",", "0.4", ",", 
     "0.01"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lowpass", ",", "1"}], "}"}], ",", "0", ",", "10", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"hipass", ",", "7"}], "}"}], ",", "0", ",", "10", ",", "1"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"lo", ",", "5"}], "}"}], ",", "0", ",", "20", ",", "1"}], "}"}],
    ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"hi", ",", "100"}], "}"}], ",", "50", ",", "200", ",", "1"}], 
    "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.655156342343388*^9, 3.6551563855198574`*^9}, {
   3.6551569541843834`*^9, 3.6551569562885036`*^9}, {3.655157024720418*^9, 
   3.655157031384799*^9}, {3.65515707720842*^9, 3.655157094113387*^9}, {
   3.655209648674336*^9, 3.655209654147649*^9}, {3.655209687963583*^9, 
   3.655209718291318*^9}, {3.6552195662525887`*^9, 3.65521958129945*^9}, {
   3.6552198314277563`*^9, 3.655219859378355*^9}, {3.6552208955876226`*^9, 
   3.6552210658043585`*^9}, {3.6552247276228027`*^9, 
   3.6552247439917383`*^9}, {3.6552921896374087`*^9, 
   3.6552922480687513`*^9}, {3.6552923080771832`*^9, 3.655292327054269*^9}, {
   3.6552927204457693`*^9, 3.655292790844796*^9}, {3.6552929072794557`*^9, 
   3.655292943668537*^9}, {3.6552930057180862`*^9, 3.6552930359018126`*^9}, {
   3.6552930800953403`*^9, 3.6552930930210795`*^9}, {3.655293177245897*^9, 
   3.655293196566002*^9}, {3.6552932696371813`*^9, 3.6552933387971373`*^9}, {
   3.655293386239851*^9, 3.6552933890070086`*^9}, {3.655293444293171*^9, 
   3.6552934504225216`*^9}, {3.6553852703427305`*^9, 3.655385282727439*^9}, {
   3.655385448528922*^9, 3.655385450655044*^9}, {3.6553868241846056`*^9, 
   3.655386824280611*^9}, {3.65564328578937*^9, 3.655643291765712*^9}, 
   3.656170007881769*^9, {3.678314318159689*^9, 3.6783143273252134`*^9}, 
   3.70266762559094*^9, 
   3.776546947666997*^9},ExpressionUUID->"fdaeafdf-e9b7-426b-bace-\
b12bab0a121c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"redRunAvp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FindParticlesWeighted", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", "i"}], "\[RightDoubleBracket]"}], "//", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
         "&"}]}], ",", "bandpassred", ",", "mymaxred", ",", "thred2", ",", 
       "mymask", ",", "dotsizered"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{"\"\<   `` red particles were found.\>\"", ",", 
   RowBox[{
    RowBox[{"redRunAvp", "//", 
     RowBox[{
      RowBox[{"Flatten", "[", 
       RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Length"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.6416671590710993`*^9, 3.641667160981102*^9}, 
   3.6416672208711853`*^9, {3.641667289681282*^9, 3.641667293321287*^9}, {
   3.641667594711709*^9, 3.6416675968717117`*^9}, {3.6416676942218485`*^9, 
   3.6416676965618515`*^9}, {3.641667731801901*^9, 3.6416677801319685`*^9}, {
   3.641667834062044*^9, 3.6416678341320443`*^9}, {3.6416678809021096`*^9, 
   3.6416679270121746`*^9}, {3.6419201148249674`*^9, 3.641920115121368*^9}, {
   3.641921141663178*^9, 3.641921157093605*^9}, {3.6419220920442543`*^9, 
   3.641922096739862*^9}, {3.6419228275921583`*^9, 3.641922829776162*^9}, {
   3.642340312445465*^9, 3.6423403442652845`*^9}, 3.642704345076248*^9, {
   3.642726079737813*^9, 3.642726082409751*^9}, {3.642792989459677*^9, 
   3.642792992539853*^9}, {3.6428827624754*^9, 3.6428827661706114`*^9}, {
   3.6440627900178404`*^9, 3.644062792687993*^9}, {3.644062842960869*^9, 
   3.644062858231742*^9}, {3.648308689078539*^9, 3.6483087109765697`*^9}, {
   3.6484755081417904`*^9, 3.6484755158372307`*^9}, {3.648475893885854*^9, 
   3.648475894221873*^9}, {3.6485787564642563`*^9, 3.6485787724401703`*^9}, {
   3.648578865240478*^9, 3.648578892761052*^9}, {3.648578994033845*^9, 
   3.6485790123688936`*^9}, {3.6485850086688623`*^9, 3.648585011277011*^9}, {
   3.648585278382289*^9, 3.648585281013439*^9}, {3.6491771572658987`*^9, 
   3.64917716035609*^9}, {3.6514995376416454`*^9, 3.6514995401737905`*^9}, 
   3.6532316008052344`*^9, 3.6532460744960823`*^9, 3.6532524994165664`*^9, {
   3.655058313586464*^9, 3.655058315713586*^9}, {3.6552247012882957`*^9, 
   3.655224702843385*^9}, {3.655225079158909*^9, 3.6552250959988728`*^9}, {
   3.655225342662981*^9, 3.655225342918995*^9}, {3.655385627791176*^9, 
   3.6553856300433044`*^9}, {3.6561736238625917`*^9, 
   3.6561736249116516`*^9}, {3.6786485529138517`*^9, 
   3.6786485710498896`*^9}, {3.708252364800526*^9, 3.7082523648942785`*^9}, {
   3.708257068603965*^9, 
   3.708257092495367*^9}},ExpressionUUID->"1d5455de-3c79-45fe-8062-\
e7f2ddbd992f"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"49100\\\"}]\\) red particles \
were found.\"\>",
  StringForm["   `` red particles were found.", 49100],
  Editable->False]], "Output",
 CellChangeTimes->CompressedData["
1:eJwVz31MzHEcB/C7sNVt6twmV3d2CtclpTujFPI5JRltFTkxrFBCdy6WEjtp
VqenU0u3PHQ9abOSCLNW6PRgcytdiiUit7Xvr2Npa+bx8/njvdc/7/cfb59k
bfxRPo/H02HezAQutKcyKBG+g5g0BnUeieHRlQweHcpWPL/OwHVqej1ZVLIs
hzRKkuKmaxjwNG568pbd6eZE/zRNepHPPpVlfEeNtf3ZgRYGnwTSx+SoeHY1
v5bBK2l9GGl4EbCVHG4UpJAzUskiF9TdTb2WDBlTFv1rZqDRzA7wWxhUqV2/
+bbiriuuX43a24dCV7QxkJ2XXSC1IfL8M2hQl18zOV6l+EJ2+T12PYt+LYEA
srI1O5Y8YtPrSJs0K5c0xiSZydbfgqfk/UuBH8nf35W/Oh5iP0i47SUaeTlp
qqCDQb4qYY6sqLZ4FqLeYkMEaT5YcJL0793rU/2cgbh8cxhZ0jAXdQN9Y15z
uQa9KkupJtPLw3kWNBVGSutQq0dIfD2qhQgDWVGcwcg+0TY/2QsGTlFwDKnr
Mp0lg49/aCJb4rfk+qLea2Iru7sZqH+mOUmXBWcWW9HejTfXkbONhcmkLnJc
4dWDv/kZpgL0RKZtiEyO0ooK0VCVIIkc+ZFwhdwu739F9vI2Xb35msHfuQMm
MqdInlk1wGCnwHCLlJgcg6TNot91epABxF3cT+Yc2NhuE3Mw9kD9gUOtzY7D
aRIOip8tn1eMXiyrc5BOu+hUObnP3SSUcjAaCyOblnJgvsPdS5Bx4KlSBexG
a0zzo0jN57FO8liyyncPOrpT95PMbVAKE9HbS7Nclcs5cNmgWkLecL61vF7B
weTCiSgbKbclkH/dG6OH0OjNlfWkZnGQ1Y5e2dHNG0Yj0/NCyY6Ju6U5cg7+
PKmIPo+2lU6XkpHvMhxkz7W+tbmoIi/TSLZ89hki3//TiS+gwnOy/E4FB8Er
9atE/hz8BzE9yeI=
  "],ExpressionUUID->"b82cd680-0f54-4762-9a4a-3f6d52a6a5b5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"redComponentMask", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageTransformation", "[", 
      RowBox[{
       RowBox[{"FindParticlesWeightedMask", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
           RowBox[{"1", ",", "i"}], "\[RightDoubleBracket]"}], "//", 
          RowBox[{
           RowBox[{"ImageAdjust", "[", 
            RowBox[{"#", ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}],
            "&"}]}], ",", "bandpassred", ",", "mymaxred", ",", "thred2", ",", 
         "mymask", ",", "dotsizered"}], "]"}], ",", "myTfFuncInv", ",", 
       RowBox[{"DataRange", "\[Rule]", "Full"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.708256750602844*^9, 3.7082567908996572`*^9}, {
  3.7082571018227262`*^9, 3.7082571287134533`*^9}, {3.7082578925158763`*^9, 
  3.708257893190201*^9}, {3.708584356025682*^9, 3.7085843756888323`*^9}, {
  3.7085858710205374`*^9, 3.708585874580758*^9}, {3.708585926807132*^9, 
  3.7085859272551336`*^9}},ExpressionUUID->"be9def9a-ecac-4e77-a39c-\
462f88b77dfb"],

Cell["\<\
This will show you the red spots that are being found in each frame (this has \
not linked them up yet)\
\>", "Text",
 CellChangeTimes->{{3.779458183280257*^9, 
  3.779458197984098*^9}},ExpressionUUID->"7915ba14-59f3-4a42-b96a-\
3c35500bae07"],

Cell[BoxData[
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"Show", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
       RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
      RowBox[{
       RowBox[{"ImageAdjust", "[", 
        RowBox[{"#", ",", 
         RowBox[{"{", 
          RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
       "&"}]}], ",", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{"Red", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"Circle", "[", 
           RowBox[{"#", ",", "7"}], "]"}], "&"}], "/@", 
         RowBox[{"(", 
          RowBox[{
          "redRunAvp", "\[LeftDoubleBracket]", "frame", 
           "\[RightDoubleBracket]"}], ")"}]}]}], "}"}], "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<CLICK if you want to save this dataset\>\"", ",", 
     RowBox[{
      RowBox[{"redRunAvp", ">>", 
       RowBox[{"analysisFolder", "<>", "\"\<_redspots.dat\>\""}]}], ";", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"analysisFolder", "<>", "\"\<_redComponentMask.tif\>\""}], 
        ",", "redComponentMask"}], "]"}], ";"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6484729196047344`*^9, 3.6484729346525955`*^9}, {
   3.6484732663805685`*^9, 3.648473273579981*^9}, {3.648473375579815*^9, 
   3.6484734015733013`*^9}, {3.651499239413588*^9, 3.6514992801819196`*^9}, {
   3.6550583209618855`*^9, 3.655058323098008*^9}, {3.6558511741399035`*^9, 
   3.655851183930464*^9}, {3.6786485847056704`*^9, 3.67864859710238*^9}, {
   3.7083821491925735`*^9, 3.7083821580510836`*^9}, 3.7083824341543827`*^9, {
   3.708382475808323*^9, 
   3.7083824842332134`*^9}},ExpressionUUID->"899d21fc-8749-4d15-9aea-\
2c4f34c55557"],

Cell["Just a plot to visualize the number of spots per frame", "Text",
 CellChangeTimes->{{3.779458207264629*^9, 
  3.7794582250396457`*^9}},ExpressionUUID->"1f0f644e-39db-47a1-90ea-\
317c8320f765"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rSpotNPlot", "=", 
  RowBox[{
   RowBox[{"Length", "/@", "redRunAvp"}], "//", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.6552256984433303`*^9, 3.6552257065547943`*^9}, {
  3.70881642686051*^9, 3.7088164766993337`*^9}, {3.772466055662245*^9, 
  3.7724660569948854`*^9}, {3.778275490147872*^9, 3.778275491771949*^9}, {
  3.779629478536785*^9, 
  3.7796294798008575`*^9}},ExpressionUUID->"f4bdb803-f1f5-42c8-b564-\
afcf03833851"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJxdmMuSFEUUhlNXLnvhwoWL0jAMwzCM9n6HBARvKM0AiqBMzQgiMDjNdQZX
+Qj9CLXwAfoR8hH6EeoR+hEMrf9L4/yzyfjqP5c8mSezqueV/cOdW8+nlP5+
LqV/x+lve/K/ofZZD6axh1+YxnFPPJvGsit+UTr2Lxm/PI0d/p3iw6+a/WvT
OMCvG79h9m9qPvBb01iZ39vKty+eT2PG/h2N2L9r/u8pPvy+4uH/gXTq+VDj
DY0fmf3Hlv8Tjfh/Oo1tvT6bxgH+XEw9Xyge+gmLd9L8s+IrfxG39Ts1jdRf
Tpl+Wvqven7a9DPTSL3ljOX/Us/FRZyo56zio5+1es5pJP45y/+V6lO8Im79
83WMV4zTN6aLW799q/qIL2Y903fmL670w/lpZP/LeZvf94qHv7jt7w96jr+4
nacL5n8h2qdFzJ/FnP+yiPGquO3fRdmpP7KY81MuxnqqcdqJ+fKO+cP4i9v6
X4qcL5m/mP6tl+J802X5Mf/LcX7F9GqcrsiO/FdivgIzf3E77z/GfFlMfxTT
K7rOW/pJfrLP4nbexJyfCpP/quLvy/9qnF8R078Vpv6fY7xsXGDNt4oL/X9N
81X8fC3qBWb9xe0+vh7rzddt/uL6i0aY9dPzbCP3dRFznlsc+p849A/3IP7o
+LMO1H/D5s8+cl6x66Nfe06f4b9rdrCN7X7oY/52b1GP5W19ZXk5f+1c48e4
G+3a+dmLz9s9RX76gvx7Zmcj91JbZ5j8pvOeoT7eE+0+FLd9glmH/TgfzhH7
U2Hyk491+i3OrxPTR1lMn/XY02fo6uvB/Cu6+nYU09fpZpxvdzPGz+K2/uLW
d2L6YjCuxJP/KG59dktxlK8Tt/sYnb4Vt/tVzH4M2LP+xNP6jPhzfn6XPedc
zH5nmPWHZV/wl/1gehWzHyNM/tuyo/9h1l/MOelNL7fj/AfTK/7sv7jdc39E
vYNZf9N7MfdqEXNvD+jc+6aPxBOnO9IVr4OpX9zu+TuWX8x+DthTP/acP5j6
70b/Dia/mP3tYdYfZv3vxvqqmPUeYfb/XvTv7kX/LOa90xsX8x/Mv8Lkx571
P4j1dWLe0xmd/DDrfxDrG9DJfxDnM2Iv/3Q/xu/Ebf/R+U6AyX8/zneAyY89
54/45P8zciemfzI69Yv5jiimD/hz/o1Hs0+Hll/MeuTD6N+jkx9/zh/23H9i
+nmE2f+l4kififnO68Ts33wZ55uxFy+Ix3nFXvuzJB7fgfirvhU66wkr3trm
W/HXd+3G4o/omv/W/NMD6bKfGXcw9cO8H0xfiFmf3uItYa1veRDrXaGrngFd
/mviy7+KOR8b/Hnfoct/a/HSQ9nrd8VMzP51Yvprjs79gC5ewNT/MNa3JB/f
9ejiFaz9GbBXvWvic74s/4b5cd/gL/ut6elRrHcm5ndUB0ufP4rxstkv0DWf
Hp39Ny7kF69gfpdhr3xrcfvdZf4bWPMZbX5b80+PFUf5ZmLWpxO38/84zj/j
T//D1I+94i+JT/2Wf2X2A/npf5jfwZZ/gz/7b/VsYa1HeqKR+p9EvYO1/nPs
qR+mfnHrfzHneQnT/8Yr8vE+I570NTrvN5v/xng03lp96anic//D3H9i7t85
Ov1v+uJprKcXs35L8y9mv8Ke9xnx6X+bb7X4G3TuP+MtzPk/kj/3/1HUOzH3
6fwo1pvR2X+Y/oc13yX52H+zX5Gf71nLt0anfpj6bT4j+dh/dPb/WP70/3Gc
X4fO+Re371N07v/jWE8Py36JP/+fgHn/mf/AfLj/bT7V4m9gvreMtzDff880
cv8bd2L6Y45O/6Oz/2LWs0fn/kPn/jN9ZfEG7Dn/ptdnsZ6NzX+0+W+N01/R
fiZu33/o1I/O/v+v/wNPoV0x
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 84.94999999999999},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 420.}, {88., 149.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.7088164574144373`*^9, 3.708816477368363*^9}, 
   3.708817566307314*^9, 3.7088179129746695`*^9, 3.715103863445738*^9, 
   3.715108507942505*^9, 3.7151085773258753`*^9, 3.7162248924665375`*^9, 
   3.716290126292033*^9, 3.7172761059417515`*^9, 3.7172766530417867`*^9, 
   3.717440554248085*^9, 3.717440881535104*^9, 3.717441310153469*^9, 
   3.7174416133560157`*^9, 3.7174418920035105`*^9, 3.7174421697932158`*^9, 
   3.717442542536085*^9, 3.717442768671488*^9, 3.7174430319183593`*^9, 
   3.717443327432092*^9, {3.7186375368352804`*^9, 3.7186375443470964`*^9}, {
   3.7186545176234713`*^9, 3.718654524615284*^9}, {3.7227251962596054`*^9, 
   3.722725199988819*^9}, 3.7227253124122486`*^9, 3.722725561187478*^9, 
   3.7227258850960045`*^9, 3.7227262494118423`*^9, 3.725383950943302*^9, 
   3.725384151046747*^9, 3.7253862902021*^9, {3.7253949718986645`*^9, 
   3.7253949768509474`*^9}, 3.7253951723311286`*^9, 3.725395975286055*^9, 
   3.7254012220851545`*^9, 3.725402774246933*^9, 3.725403143817072*^9, {
   3.725403996619849*^9, 3.7254040000180435`*^9}, {3.7256543326699343`*^9, 
   3.7256543380072403`*^9}, 3.725654604724495*^9, {3.725654959391781*^9, 
   3.725654963322006*^9}, {3.725655371544355*^9, 3.725655376406633*^9}, {
   3.7256611564922347`*^9, 3.725661162278566*^9}, 3.7265153929307566`*^9, 
   3.726516098460204*^9, 3.7265164036665072`*^9, 3.726516654414195*^9, 
   3.7265170176829667`*^9, 3.7277392100922794`*^9, {3.72796737589651*^9, 
   3.7279673815166845`*^9}, {3.727967907062636*^9, 3.7279679265259666`*^9}, 
   3.7279684129226336`*^9, 3.727968980049556*^9, {3.7279693360927753`*^9, 
   3.7279693407839775`*^9}, {3.7279698821808243`*^9, 3.7279698898100414`*^9}, 
   3.7316803570203753`*^9, {3.7316804018390903`*^9, 3.7316804163651295`*^9}, 
   3.733242786643281*^9, {3.7332431260986614`*^9, 3.7332431366974945`*^9}, {
   3.7332435373720217`*^9, 3.7332435455702477`*^9}, 3.7336868933895454`*^9, 
   3.733687019401968*^9, 3.7711027498573337`*^9, {3.771164415844719*^9, 
   3.771164428575447*^9}, 3.772465950305168*^9, 3.772466057462886*^9, 
   3.7725409915385637`*^9, 3.7725428819857197`*^9, 3.772554141223503*^9, 
   3.772554392439864*^9, {3.7728103964331264`*^9, 3.7728104128394938`*^9}, 
   3.77342743871507*^9, 3.773427750041646*^9, {3.7745207673292475`*^9, 
   3.774520791394392*^9}, 3.774521743187362*^9, 3.7745219857716913`*^9, {
   3.774522908678932*^9, 3.7745229258081074`*^9}, {3.7745237277245665`*^9, 
   3.774523743021764*^9}, {3.774525589009605*^9, 3.7745256068430653`*^9}, 
   3.776547046890097*^9, {3.777391960403399*^9, 3.777391961263043*^9}, {
   3.7773932257206426`*^9, 3.777393249878333*^9}, 3.777403494560466*^9, 
   3.777403560796919*^9, 3.777404233422861*^9, 3.777405931987735*^9, 
   3.7774065448781834`*^9, {3.777407021541546*^9, 3.7774070325537043`*^9}, {
   3.777407452824517*^9, 3.777407468547745*^9}, 3.778270358908457*^9, {
   3.778271835449094*^9, 3.7782718496627564`*^9}, {3.7782724137859855`*^9, 
   3.7782724430937595`*^9}, {3.7782731021283712`*^9, 3.7782731245927186`*^9}, 
   3.7782737520282726`*^9, {3.77827441902677*^9, 3.778274440830553*^9}, {
   3.778274996255535*^9, 3.7782750166616735`*^9}, 3.7782755543231435`*^9, 
   3.7782756753074927`*^9, 3.7794581757208247`*^9, 
   3.779629480589903*^9},ExpressionUUID->"be24f4b9-d942-4a28-a2f7-\
9310660f8a22"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Linking red tracks", "Subsection",
 CellChangeTimes->{{3.64254041315073*^9, 3.642540414480732*^9}, {
  3.6425404664358053`*^9, 3.6425404781358213`*^9}, {3.642540880429388*^9, 
  3.6425408812693896`*^9}, {3.6425409505334873`*^9, 3.6425409508134875`*^9}, {
  3.6483100576456265`*^9, 
  3.6483100640456357`*^9}},ExpressionUUID->"840ac6a5-06e1-4907-88ee-\
f0db5df22803"],

Cell["\<\
This will link the tracks; set the pixel jump size that you will allow to \
link red spots; you can get more artifactual linked tracks if the \
maxJumpDistRed is higher than 5; having it too low will cause you to have \
partial/fragmented tracks\
\>", "Text",
 CellChangeTimes->{{3.779458243023674*^9, 3.7794582801117954`*^9}, {
  3.7794584670724893`*^9, 3.779458474591919*^9}, {3.779458578160843*^9, 
  3.7794586415364676`*^9}, {3.779458681504754*^9, 
  3.779458696592617*^9}},ExpressionUUID->"7f0c0e5d-6482-417a-a5dc-\
6d68af7fefcf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"maxJumpDistRed", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"my488and561Interval", "=", "2"}], ";"}]}], "Input",
 CellChangeTimes->{{3.6484765380766993`*^9, 3.6484765505344114`*^9}, {
   3.6485791838487015`*^9, 3.648579204208866*^9}, {3.678316141946004*^9, 
   3.6783161778030543`*^9}, {3.67831628944344*^9, 3.6783162895144444`*^9}, {
   3.6783163214922733`*^9, 3.678316321762288*^9}, {3.6783163693640113`*^9, 
   3.6783163761714*^9}, {3.678316418771837*^9, 3.6783164188668423`*^9}, {
   3.6783164783402443`*^9, 3.678316478683264*^9}, {3.7711080326770816`*^9, 
   3.7711080565254884`*^9}, {3.771164388515616*^9, 3.77116440171408*^9}, 
   3.773427759122051*^9, {3.774520684381596*^9, 3.774520690034786*^9}, 
   3.7745229399254017`*^9, 3.7765502140039167`*^9, 3.7773919658282523`*^9, 
   3.778270428872538*^9, 3.7794584824333677`*^9, 3.779458565537121*^9, 
   3.7794586761614485`*^9},ExpressionUUID->"2707b321-a107-4e05-9cae-\
544f27530fe5"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"myredtracks", "=", 
   RowBox[{"LinkTracks2", "[", 
    RowBox[{"redRunAvp", ",", "maxJumpDistRed"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<`` red tracks were found by allowing `` pixel jump, and the average \
length of the tracks is ``\>\"", ",", 
   RowBox[{"myredtracks", "//", "Length"}], ",", "maxJumpDistRed", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Length", "/@", "myredtracks"}], ")"}], "//", "Mean"}], "//", 
    "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.642538579958152*^9, 3.642538586658161*^9}, {
   3.642538786164441*^9, 3.6425387862844415`*^9}, {3.642883694363701*^9, 
   3.6428836961238017`*^9}, {3.6428866887429695`*^9, 3.642886725174053*^9}, {
   3.642886823230662*^9, 3.642886828141943*^9}, {3.643139322152774*^9, 
   3.643139391104718*^9}, {3.64313945425633*^9, 3.6431394638798804`*^9}, {
   3.6431395717610507`*^9, 3.6431396151045303`*^9}, {3.6431400019896584`*^9, 
   3.643140002560691*^9}, {3.6431415705373745`*^9, 3.6431415942497306`*^9}, {
   3.6431416834658337`*^9, 3.6431416894341745`*^9}, {3.643141863171112*^9, 
   3.643141865746259*^9}, {3.643473089089744*^9, 3.643473106553743*^9}, {
   3.648475694477448*^9, 3.648475701765865*^9}, {3.648476554158619*^9, 
   3.6484765642621965`*^9}, {3.648477027086669*^9, 3.6484770373752575`*^9}, {
   3.648579056232402*^9, 3.6485790602726336`*^9}, {3.6485793513222804`*^9, 
   3.648579354025435*^9}, {3.6485854937596073`*^9, 3.6485855238063264`*^9}, {
   3.649177306571166*^9, 3.649177324329824*^9}, {3.649372827183387*^9, 
   3.649372830471014*^9}, {3.678648827753572*^9, 3.6786488625615625`*^9}, {
   3.708253323883111*^9, 3.7082533299185143`*^9}, 
   3.708257051402505*^9},ExpressionUUID->"93bb11b9-6ef7-4586-9ce4-\
5b5efe59c212"],

Cell[BoxData[
 InterpretationBox["\<\"\\!\\(\\*RowBox[{\\\"3841\\\"}]\\) red tracks were \
found by allowing \\!\\(\\*RowBox[{\\\"5\\\"}]\\) pixel jump, and the average \
length of the tracks is \\!\\(\\*RowBox[{\\\"7.554543087737568`\\\"}]\\)\"\>",
  StringForm[
  "`` red tracks were found by allowing `` pixel jump, and the average length \
of the tracks is ``", 3841, 5, 7.554543087737568],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.7026678688028507`*^9, 3.703441927994506*^9, 3.703442424311594*^9, 
   3.708251127075818*^9, 3.7082527541271524`*^9, 3.7082533318549423`*^9, 
   3.7083834554110856`*^9, 3.7088165160233593`*^9, 3.708817928496825*^9, 
   3.713665384953915*^9, 3.7142267587337275`*^9, 3.7151038949453297`*^9, 
   3.7151085843262167`*^9, 3.7162249078063645`*^9, 3.716290128335637*^9, 
   3.717276115058168*^9, 3.717276653915388*^9, 3.717440560373296*^9, 
   3.7174411425591717`*^9, 3.7174413127898736`*^9, 3.7174416162732205`*^9, 
   3.7174418945951157`*^9, 3.7174421721176205`*^9, 3.7174425450068903`*^9, 
   3.717442771822693*^9, 3.717443034648364*^9, 3.717443329647296*^9, 
   3.7186375545405183`*^9, {3.718654520150676*^9, 3.718654530605695*^9}, 
   3.722725203600025*^9, 3.722725315421421*^9, 3.7227255638706317`*^9, 
   3.7227258916303787`*^9, 3.7227262521419983`*^9, 3.725383952575395*^9, 
   3.7253841529638567`*^9, 3.725386295554406*^9, 3.7253949792700863`*^9, 
   3.7253951802835836`*^9, 3.725395977891204*^9, 3.725401224218277*^9, 
   3.7254027764560595`*^9, 3.7254031475772867`*^9, 3.7254040027251983`*^9, 
   3.725654340615389*^9, 3.7256546145480576`*^9, 3.725654967462243*^9, 
   3.7256553932385955`*^9, 3.725661164421688*^9, 3.7265159082460995`*^9, 
   3.7265161023026466`*^9, 3.7265164080432076`*^9, 3.726516663037414*^9, 
   3.7265170210833855`*^9, 3.7277392156369486`*^9, 3.7279673896534796`*^9, 
   3.727967936396201*^9, 3.72796841943005*^9, 3.72796899486971*^9, 
   3.727969356389282*^9, 3.727969897666215*^9, 3.73168042527678*^9, 
   3.733242788719887*^9, 3.7332431391951017`*^9, 3.733243549713657*^9, 
   3.7336870247226067`*^9, 3.771102764473042*^9, 3.7711644368439198`*^9, 
   3.7712470900893803`*^9, 3.772466121247198*^9, 3.772541070094386*^9, 
   3.772542992507468*^9, 3.772554489309278*^9, 3.773427781342312*^9, 
   3.7745208411833754`*^9, 3.77452203969451*^9, 3.7745229525038953`*^9, 
   3.774523797636753*^9, 3.774525612578313*^9, 3.7765470554698067`*^9, 
   3.7773919747201695`*^9, 3.777393322905697*^9, 3.777403630513981*^9, 
   3.777405976511125*^9, 3.777406584751506*^9, 3.77740707612813*^9, 
   3.7774074750403566`*^9, 3.7782704343117886`*^9, 3.778271865783908*^9, 
   3.7782724582506685`*^9, 3.7782731333412886`*^9, 3.77827376737921*^9, 
   3.778274454559265*^9, 3.7782750244507575`*^9, 3.778275688573907*^9, 
   3.779458263011818*^9, 3.7794585160652914`*^9, 3.7794585942707644`*^9, 
   3.779458706281171*^9, 
   3.779629552106993*^9},ExpressionUUID->"fe4f6182-b448-4962-ae98-\
6fe22d4fd4ce"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myredtracks", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_redtracks.dat\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.678648868490902*^9, 
  3.6786488727061434`*^9}},ExpressionUUID->"4ab3ef33-43fe-4a30-8745-\
dd0809e15e6d"],

Cell["\<\
This will filter out shorter tracks, I find that anything >40 helps to ensure \
you are tracking real RNA and not spot noise\
\>", "Text",
 CellChangeTimes->{{3.7794585000163736`*^9, 
  3.7794585333762817`*^9}},ExpressionUUID->"6d28e7aa-f140-439c-93e5-\
8d8973089ead"],

Cell[BoxData[
 RowBox[{
  RowBox[{"shortestTrackRed", "=", "41"}], ";"}]], "Input",
 CellChangeTimes->{{3.6484757566900063`*^9, 3.648475765734524*^9}, {
   3.65512178235567*^9, 3.6551217825156794`*^9}, {3.65515259338896*^9, 
   3.6551525935009665`*^9}, {3.655764080892455*^9, 3.6557640815724936`*^9}, {
   3.655846201517486*^9, 3.655846202325532*^9}, {3.6558477053505*^9, 
   3.6558477059905367`*^9}, {3.6670002780732594`*^9, 
   3.6670002785292854`*^9}, {3.6761449442743845`*^9, 3.676144944794414*^9}, 
   3.717442821723383*^9, {3.7711080649180903`*^9, 3.7711080860465403`*^9}, {
   3.771343771196644*^9, 3.771343835540076*^9}, {3.7713438656578064`*^9, 
   3.7713438818590665`*^9}, {3.7724659306999846`*^9, 3.772465936276458*^9}, {
   3.7734278008619566`*^9, 3.773427801167116*^9}, {3.774520700999058*^9, 
   3.7745207015614567`*^9}, {3.774522967181566*^9, 3.7745229750171003`*^9}, {
   3.779458536273447*^9, 
   3.7794585467690477`*^9}},ExpressionUUID->"8e62790b-e259-47ef-b046-\
5a3207b5adc4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mylongredtracks", "=", 
   RowBox[{"myredtracks", "//", 
    RowBox[{
     RowBox[{"DeleteCases", "[", 
      RowBox[{"#", ",", 
       RowBox[{"x_", "/;", 
        RowBox[{
         RowBox[{"Length", "[", "x", "]"}], "<", "shortestTrackRed"}]}]}], 
      "]"}], "&"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringForm", "[", 
  RowBox[{
  "\"\<   `` red tracks are longer than ``, and the average length of the \
long tracks is ``\>\"", ",", 
   RowBox[{"mylongredtracks", "//", "Length"}], ",", "shortestTrackRed", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Length", "/@", "mylongredtracks"}], ")"}], "//", "Mean"}], "//",
     "N"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6425389130486193`*^9, 3.6425389355786514`*^9}, {
  3.642538966830695*^9, 3.642538972310703*^9}, {3.6425399119100266`*^9, 
  3.6425399119700265`*^9}, {3.6428837130837717`*^9, 3.642883717557028*^9}, {
  3.6434731736335793`*^9, 3.643473178601864*^9}, {3.648475205109458*^9, 
  3.6484752053814735`*^9}, {3.6484757139595623`*^9, 3.648475842221898*^9}, {
  3.648475908638697*^9, 
  3.648475908965716*^9}},ExpressionUUID->"cc2a17b6-79f2-4a2b-bcaa-\
f994d5a2a85b"],

Cell[BoxData[
 InterpretationBox["\<\"   \\!\\(\\*RowBox[{\\\"55\\\"}]\\) red tracks are \
longer than \\!\\(\\*RowBox[{\\\"41\\\"}]\\), and the average length of the \
long tracks is \\!\\(\\*RowBox[{\\\"67.58181818181818`\\\"}]\\)\"\>",
  StringForm[
  "   `` red tracks are longer than ``, and the average length of the long \
tracks is ``", 55, 41, 67.58181818181818],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.678316238236511*^9, {3.678316298038932*^9, 3.6783163271615973`*^9}, 
   3.678316382879784*^9, 3.6783164256152287`*^9, 3.678316485821672*^9, 
   3.678319774164755*^9, 3.678653356646783*^9, 3.6792543430695086`*^9, 
   3.6792543840318513`*^9, 3.702667869120869*^9, 3.7034419441555824`*^9, 
   3.7034424339996424`*^9, 3.7083834557079687`*^9, 3.7088165162267957`*^9, 
   3.7088179286374493`*^9, 3.7136654300543327`*^9, 3.7142267588647966`*^9, 
   3.7151038954875164`*^9, {3.7151085850146437`*^9, 3.7151085873095617`*^9}, 
   3.7162249100839686`*^9, 3.716290128522837*^9, 3.7172761174981737`*^9, 
   3.7172766585485964`*^9, 3.7174405681047115`*^9, 3.7174411453827767`*^9, 
   3.717441316892681*^9, 3.717441619268426*^9, 3.7174418968259196`*^9, 
   3.7174421754328265`*^9, 3.7174425475652943`*^9, 3.717442774147097*^9, 
   3.717442825030589*^9, 3.7174430370683684`*^9, 3.7174433319727*^9, 
   3.718637554758919*^9, 3.7186545309020953`*^9, {3.7227251730222764`*^9, 
   3.7227251748023777`*^9}, 3.7227252057311473`*^9, 3.7227253167454967`*^9, 
   3.7227255650586996`*^9, 3.722725892932453*^9, 3.7227262529810467`*^9, 
   3.725383954796522*^9, 3.72538415441794*^9, 3.7253862967514744`*^9, 
   3.725394980760171*^9, 3.7253951811406326`*^9, 3.725395979989324*^9, 
   3.7254012265224085`*^9, 3.725402778266163*^9, 3.72540314851334*^9, 
   3.7254040041092777`*^9, 3.725654341943465*^9, 3.7256546152120953`*^9, 
   3.7256549681402817`*^9, 3.725655394435664*^9, 3.725661165919774*^9, 
   3.7265159124312916`*^9, 3.7265161069674516`*^9, 3.7265164119398527`*^9, 
   3.7265166648273315`*^9, 3.726517024310541*^9, 3.7277392185238457`*^9, 
   3.7279673898525143`*^9, 3.727967936591721*^9, 3.727968419568904*^9, 
   3.727968998734647*^9, 3.727969356620885*^9, 3.7279698978494225`*^9, 
   3.731680426367222*^9, 3.733242789936693*^9, 3.7332431407865076`*^9, 
   3.7332435500724573`*^9, 3.7336870248060117`*^9, 3.7711027707431483`*^9, 
   3.771102859728627*^9, {3.771108068575361*^9, 3.77110808938939*^9}, 
   3.771164471744502*^9, 3.77117998009332*^9, 3.77124709015178*^9, {
   3.771343820664624*^9, 3.7713438372280817`*^9}, {3.771343867394414*^9, 
   3.7713438826886697`*^9}, 3.7724661223412*^9, 3.7725410746726327`*^9, 
   3.772543012350591*^9, 3.772554497533708*^9, {3.7734277907270603`*^9, 
   3.773427803046914*^9}, 3.7745208552356787`*^9, 3.774522054501336*^9, {
   3.774522956269395*^9, 3.774522976343224*^9}, 3.774523813607641*^9, 
   3.7745256147958565`*^9, 3.776547059923601*^9, 3.777391977488302*^9, 
   3.777393325628978*^9, 3.777403637179163*^9, 3.777405983026455*^9, 
   3.7774065905460997`*^9, 3.7774070809731565`*^9, 3.7774074758203583`*^9, 
   3.778270438846105*^9, 3.7782718720809155`*^9, 3.778272462467043*^9, 
   3.77827313597128*^9, 3.7782737707744412`*^9, 3.7782744611267185`*^9, 
   3.778275028046793*^9, 3.778275691182651*^9, 3.779458266939042*^9, {
   3.7794585196074944`*^9, 3.7794585478611097`*^9}, 3.779458714287629*^9, 
   3.779629581964701*^9},ExpressionUUID->"ae180d41-d184-435f-8601-\
b11b2de31aa6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"mylongredtracksf", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mylongredtracks", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.642539945260073*^9, 3.6425399477700768`*^9}, {
  3.642539980762123*^9, 3.642540101124292*^9}, {3.642882956696509*^9, 
  3.642882958979639*^9}, {3.642883739316272*^9, 3.6428837407643547`*^9}, {
  3.6428843711884127`*^9, 3.6428843719094543`*^9}, {3.643473298073697*^9, 
  3.6434733047940817`*^9}},ExpressionUUID->"c8fb956d-d10a-486e-8fa9-\
4beb8f48c777"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Manipulate", "[", 
   RowBox[{
    RowBox[{"Show", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
        RowBox[{"1", ",", "frame"}], "\[RightDoubleBracket]"}], "//", 
       RowBox[{
        RowBox[{"ImageAdjust", "[", 
         RowBox[{"#", ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
        "&"}]}], ",", 
      RowBox[{"Graphics", "[", 
       RowBox[{"{", 
        RowBox[{"Red", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"Circle", "[", 
            RowBox[{"#", ",", "7"}], "]"}], "&"}], "/@", 
          RowBox[{"(", 
           RowBox[{"mylongredtracksf", "\[LeftDoubleBracket]", 
            RowBox[{"frame", ",", "All", ",", 
             RowBox[{"2", ";;", "3"}]}], "\[RightDoubleBracket]"}], ")"}]}]}],
         "}"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"frame", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.6552430875899324`*^9, {3.6786486060098886`*^9, 3.678648615953458*^9}, 
   3.6786487384634647`*^9, 
   3.7279699027196465`*^9},ExpressionUUID->"90a6ddea-b2e0-428d-b9eb-\
bf15532fee38"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rSpotNPlot", "=", 
  RowBox[{
   RowBox[{"Length", "/@", "mylongredtracksf"}], "//", 
   RowBox[{
    RowBox[{"ListLinePlot", "[", 
     RowBox[{"#", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}], "&"}]}]}]], "Input",
 CellChangeTimes->{{3.6552256984433303`*^9, 3.6552257065547943`*^9}, {
  3.70881642686051*^9, 3.7088164766993337`*^9}, {3.708816666933374*^9, 
  3.708816669753731*^9}},ExpressionUUID->"54349282-88e5-4ee4-b856-\
8f00ba111449"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, {}, 
    {RGBColor[1, 0, 0], PointSize[0.011111111111111112`], AbsoluteThickness[
     1.6], LineBox[CompressedData["
1:eJx12Emu5TQUxvEDI4YZMGDAwDyVEEIIhb6nDn0PoSh6KExB0UOFvhl5CVmC
ByzgLsFLyBK8hCwBoXc+If8l3uTol2P72I5vct+97er1S9duNLO/bzD7N57/
HRfP460eF3z0TfAUMUW8Gb4FVr8zXL+A6xf+J94O3wHfCd8F341xZvge+F74
Pvh++AH4QczzIfhh+BH4Ufgx+HH4iYjahyfhi7CPLrA9hTxsTyMP2zPIw/Ys
8rA9hzxszyMP2wsRY38KbC9GjPtVYHsJeVn9X8b4sL2C+ck6j6+OLrC9hvqw
vY48bG8gL2v8ZbTDBW7yWcQ3I8bn2OECN9guoT9c4AbbW+gPF7jJWv/liLE/
DpfLY/sG29ujHS5wg+0d9JfPoj/cYHt3tMtaP9xkPYffixjPaYcL3GTt//uj
HS5wk1X/A8xf1v7BTdb5/nC0wwVusH00ju9wgRtsH6M+XOR4HjTYrkSM54PD
5crYvsH2yWiHC9xgy6MT7HCGC1zhJsd+dNg+HZ1ghzNc4CrrfsEdtqujE+xw
hous+nCDO2yfjU6wy6oPF7jKZ1Ef7rB9PjrBDme4wBVusvYftmujk6z1I5/h
Ale4wR22L1Bfjvk7nOECV7jBHbYvRyfY4QwXuMIN7rB9hfqwwxkucIUb3GH7
GvVhhzNc4Ao3Od4/Xdb755sxn2CXVV/W+YMr3OAO27ejE+xwhgtc4QZ3OdZj
341OsMMZLnCFm6z6yNv3qA87nOECV1nfN5DvsP0QMc5Dgh3Osr7fwBVucIft
+ugEuxzzzXBB+wo3uMO2juNNcIJn2OFFjvEzvKJ9gTdZ5xn5E/IN3mW9b+ED
th9HT3CSY/wZdjnmt8AZ7Ve4wBtc4RPGb/AOd/iA7afRE5zgGXY57u8CZ3iF
C7zBVY7P30nW/yPwjvYdPmD7efQEJznmM8tn59HhBc7ov8IF3uAKn+AG73CH
D9h+GT3BCZ7lWJ/DC5zhFS7wBlfUP8EN3uEOH7Lu/6+jJzjBM+zwAmd4hYsc
53eDK3yCmxy/u+5whw/Yfhs9yfG7boJn2OEFzhh/hQu8wVXW+uEG73CHD9h+
Hz3BCZ5hhxc55p+RX2Xdf3iDK3zCeA35He7wAdsfoyc4wTPs8AJneIULvMk6
//AJbvAOd/iA7c/RE5zgGXZ4gTO8yjr/8AZX+AQ3eIc7fMD2V8T4vE5wgmfY
//M/6jhReA==
      "]]}}, {}, {}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0., 420.}, {0, 13.}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.708816670430659*^9, 3.7088179288034377`*^9, 3.7136654447074356`*^9, {
   3.714226758980096*^9, 3.714226771619815*^9}, 3.715103901940466*^9, 
   3.7151086085745125`*^9, 3.71622492097359*^9, 3.716290128678838*^9, 
   3.7172761245003877`*^9, 3.717276670025617*^9, 3.7174405776327286`*^9, 
   3.717441153871192*^9, 3.7174413239770937`*^9, 3.717441625728837*^9, 
   3.7174419042453337`*^9, 3.71744218300384*^9, 3.7174425570199113`*^9, 
   3.7174428333262043`*^9, 3.717443042637578*^9, 3.717443341769518*^9, {
   3.718637554961719*^9, 3.718637561836732*^9}, 3.7186545366509056`*^9, 
   3.722725210712432*^9, 3.7227253225458283`*^9, 3.7227255702269955`*^9, 
   3.722725899026801*^9, 3.722726257661314*^9, 3.725383959444788*^9, 
   3.7253841585571766`*^9, 3.7253863024438*^9, 3.725394985614449*^9, 
   3.725395181319643*^9, 3.725395984375575*^9, 3.7254012311636744`*^9, 
   3.7254027824304013`*^9, 3.725404009857606*^9, 3.7256543462647123`*^9, {
   3.725654615401106*^9, 3.7256546198543606`*^9}, 3.7256549720425043`*^9, 
   3.7256553947036796`*^9, 3.7256611711160717`*^9, 3.7265159220283346`*^9, 
   3.726516114074129*^9, 3.7265164180805063`*^9, 3.7265166704046144`*^9, 
   3.7277392244083853`*^9, {3.727967390079545*^9, 3.7279673940277834`*^9}, 
   3.727967936787363*^9, 3.727968419769938*^9, 3.727969004183512*^9, 
   3.727969356823451*^9, 3.7279698980083113`*^9, 3.7316804264312253`*^9, 
   3.7332427921636996`*^9, 3.733243142602512*^9, 3.7332435501192575`*^9, 
   3.7336870249153967`*^9, 3.771102770865803*^9, 3.771108095827104*^9, 
   3.771164475311779*^9, 3.7711799837505283`*^9, 3.771247091025382*^9, {
   3.771343874088438*^9, 3.771343884689077*^9}, 3.7724661286682897`*^9, 
   3.7725410747921476`*^9, 3.772543012492213*^9, 3.772554497580508*^9, {
   3.773427791023805*^9, 3.7734278051836834`*^9}, 3.7745208553693233`*^9, 
   3.7745220546170263`*^9, {3.7745229563910694`*^9, 3.7745229783057394`*^9}, 
   3.7745238137452803`*^9, 3.7745256149382925`*^9, 3.7765470600797725`*^9, 
   3.7773919776023083`*^9, 3.777393325738178*^9, 3.7773934271659536`*^9, 
   3.777403637234166*^9, 3.777405983082458*^9, 3.7774065906085*^9, 
   3.7774070810199566`*^9, 3.7774074758837585`*^9, 3.7782704390648355`*^9, 
   3.7782718722996254`*^9, 3.778272462607634*^9, 3.7782731360962515`*^9, 
   3.778273770883792*^9, 3.778274461345419*^9, 3.778275028281149*^9, 
   3.778275691307621*^9, 3.7794585197245007`*^9, 3.7794585537984495`*^9, 
   3.7794587144196367`*^9, 
   3.779629589970159*^9},ExpressionUUID->"498fbe51-b65b-4808-99b3-\
625a2dc98855"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Check all tracks (and double-check transformation \
function)",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.678656482400874*^9, 
  3.6786565180001364`*^9}},ExpressionUUID->"aba60a1f-c31e-46aa-a784-\
ce5e317d090c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mylongredtracksColReg", "=", "mylongredtracks"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"mylongredtracksColReg", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "All", ",", "2", ",", 
     RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"myTfFunc", "/@", 
    RowBox[{"mylongredtracksColReg", "\[LeftDoubleBracket]", 
     RowBox[{"All", ",", "All", ",", "2", ",", 
      RowBox[{"2", ";;"}]}], "\[RightDoubleBracket]"}]}]}], ";"}], "\n", 
 RowBox[{"Clear", "[", "mylongredtracksColRegf", "]"}], "\n", 
 RowBox[{
  RowBox[{"mylongredtracksColRegf", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"mylongredtracksColReg", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", "All", ",", "2"}], "\[RightDoubleBracket]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", "Sort"}], "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.678656043431703*^9, 3.6786560875329804`*^9}, {
   3.6786561598079076`*^9, 3.6786561750647345`*^9}, {3.67865622941523*^9, 
   3.6786562349688396`*^9}, 3.7174434694759455`*^9, {3.7711029160040407`*^9, 
   3.771102923310584*^9}},ExpressionUUID->"6fa69a90-5e3b-4228-9aca-\
c7b0522f01e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Linking red, blue, and green tracks",
 FontColor->RGBColor[1, 0.5, 0]]], "Subsection",
 CellChangeTimes->{{3.6786547016865463`*^9, 
  3.6786547243377857`*^9}},ExpressionUUID->"71e85a52-838f-49e6-a667-\
2480ee1d4463"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tracksr", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Append", "[", 
       RowBox[{"#", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "0", ",", "0"}], "}"}]}], "]"}], "&"}], ",", 
     "mylongredtracksColReg", ",", 
     RowBox[{"{", "2", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tracksr", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", "All", ",", "1"}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Range", "@", 
    RowBox[{"Length", "@", "tracksr"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.678900911216363*^9, 3.6789009372048492`*^9}, {
   3.6789010307171974`*^9, 3.678901093315778*^9}, {3.6789011440456796`*^9, 
   3.6789011642058325`*^9}, {3.6789012128626156`*^9, 3.67890121940499*^9}, {
   3.67890129021404*^9, 3.678901301349677*^9}, {3.678902151039276*^9, 
   3.6789021582796907`*^9}, {3.6789025134420047`*^9, 3.678902522757538*^9}, {
   3.678902654264059*^9, 3.6789026763353214`*^9}, {3.6789027446572294`*^9, 
   3.678902753245721*^9}, {3.678904333521107*^9, 3.6789043889832797`*^9}, {
   3.6792550147929287`*^9, 3.6792550165440288`*^9}, {3.681844558966263*^9, 
   3.6818445797824535`*^9}, 3.6834835180407495`*^9, {3.7711024103707685`*^9, 
   3.7711024107896414`*^9}},ExpressionUUID->"c1e95933-0dec-42aa-b72d-\
245542fddb9a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Fitting Red Tracks with Gaussian and Making Parameter \
File",
 FontFamily->"Gill Sans MT",
 FontColor->RGBColor[1, 0.5, 0]]], "Section",
 CellChangeTimes->{{3.683894372287684*^9, 3.6838943796241035`*^9}, {
  3.7711029450557013`*^9, 
  3.7711029758956423`*^9}},ExpressionUUID->"21507333-7ab9-4560-987a-\
4f50033655c2"],

Cell[CellGroupData[{

Cell["Setting Parameters", "Subsubsection",
 CellChangeTimes->{{3.683898386499284*^9, 
  3.6838984034672546`*^9}},ExpressionUUID->"79cb851a-71e1-4bd0-b89a-\
ae099ea057f7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pad", "=", "5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTrimSize", "=", 
   RowBox[{
    RowBox[{"2", "*", "pad"}], "+", "1"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.655828154591261*^9, 
  3.655828157255413*^9}},ExpressionUUID->"f00a35f0-1dc6-4ef1-9766-\
04e15369ac80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Fitting red tracks with Gaussian", "Subsubsection",
 CellChangeTimes->{{3.648311925933276*^9, 3.648311951456312*^9}, {
  3.663966516753745*^9, 3.663966552696801*^9}, {3.7025907355437713`*^9, 
  3.7025907367299023`*^9}},ExpressionUUID->"42c6dc3e-f037-4f7d-96be-\
0cc13acdfb80"],

Cell["\<\
This is doing an intial guassian fit of the red spots and their positions; I \
use this information for the positions of the spots below\
\>", "Text",
 CellChangeTimes->{{3.7794588933928733`*^9, 
  3.7794589420326552`*^9}},ExpressionUUID->"8f1ce227-2b17-4d7e-90fd-\
f288e425a0b8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"ParticleFittingFixedSigma", "[", 
    RowBox[{
    "myColMovie", ",", "1", ",", "tracksr", ",", "pad", ",", "myTrimSize", 
     ",", "1.5", ",", "avgFrameN"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.651521936358779*^9, 3.651521980680314*^9}, {
   3.6515264178271046`*^9, 3.651526418963169*^9}, {3.6556528271791067`*^9, 
   3.655652835579587*^9}, {3.655729675004551*^9, 3.6557296844890933`*^9}, {
   3.6558241615248704`*^9, 3.655824168428265*^9}, {3.6558256423425684`*^9, 
   3.655825656478377*^9}, {3.6558274714471874`*^9, 3.655827472615254*^9}, {
   3.655827961488216*^9, 3.6558279616002226`*^9}, {3.6558404104252543`*^9, 
   3.6558404277352448`*^9}, 3.6558444753967576`*^9, {3.655845038598971*^9, 
   3.6558450410451107`*^9}, {3.6558454088221464`*^9, 
   3.6558454140694466`*^9}, {3.663965639584574*^9, 3.663965640275614*^9}, {
   3.6639665554099565`*^9, 3.663966556994047*^9}, {3.683898975251959*^9, 
   3.6838989796792116`*^9}, {3.7025907384638786`*^9, 3.7025907393389006`*^9}, 
   3.702593757430551*^9, 
   3.771102447176633*^9},ExpressionUUID->"6bf130a0-3e20-460e-a303-\
7d2d3d049d4c"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,542,24,23684670005717102413,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.7794587584971576`*^9, 
  3.779629636123799*^9},ExpressionUUID->"6500ee87-172a-4c69-a3d3-\
4da7e13e8621"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,542,25,23684670005717102413,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.7794587584971576`*^9, 
  3.779629639000963*^9},ExpressionUUID->"ac327e1a-4199-40e3-b092-\
441be9c8562f"],

Cell[BoxData[
 TemplateBox[{
  "NonlinearModelFit","cvmit",
   "\"Failed to converge to the requested accuracy or precision within \\!\\(\
\\*RowBox[{\\\"100\\\"}]\\) iterations.\"",2,542,26,23684670005717102413,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.7794587584971576`*^9, 
  3.7796296405910544`*^9},ExpressionUUID->"87582799-9c7c-40a1-b8e0-\
c986c951a980"],

Cell[BoxData[
 TemplateBox[{
  "General","stop",
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"NonlinearModelFit\\\", \
\\\"::\\\", \\\"cvmit\\\"}], \\\"MessageName\\\"]\\) will be suppressed \
during this calculation.\"",2,542,27,23684670005717102413,"Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.778270528569352*^9, 3.7782718874898133`*^9, 
  3.7782724776106853`*^9, 3.7782731788273516`*^9, 3.778273774015074*^9, 
  3.7782744984775925`*^9, 3.7782750403416295`*^9, 3.778275694601248*^9, 
  3.7794587584971576`*^9, 
  3.779629640627056*^9},ExpressionUUID->"194c5375-bcf6-44b1-8e8f-\
86c10c863a14"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6639664986737113`*^9, 3.6639665014338694`*^9}, {
  3.6639665597462044`*^9, 
  3.663966561266291*^9}},ExpressionUUID->"0b96285b-dce2-44fc-b2f9-\
cf0e74c5f28f"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}], ")"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.656699657352935*^9, 3.656699679889224*^9}, 
   3.6567711080776825`*^9, {3.6639665057051134`*^9, 3.663966508489273*^9}, {
   3.6639665643934703`*^9, 
   3.6639665659695606`*^9}},ExpressionUUID->"35369436-9d61-4196-9f79-\
23f6a891be44"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedAllParametersColReg", "=", "myRedAllParameters"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"myRedAllParametersColReg", "\[LeftDoubleBracket]", 
      RowBox[{"All", ",", 
       RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], "=", 
     RowBox[{"myTfFunc", "/@", 
      RowBox[{"myRedAllParameters", "\[LeftDoubleBracket]", 
       RowBox[{"All", ",", 
        RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}]}]}], ";"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{{3.6556550070447874`*^9, 3.655655038013559*^9}, {
   3.655655073245574*^9, 3.655655159853528*^9}, {3.6558419501863236`*^9, 
   3.655841961905994*^9}, {3.6838993982921553`*^9, 3.6838994284438796`*^9}, 
   3.771168052861079*^9, 
   3.7711746584909687`*^9},ExpressionUUID->"e0e8644b-913c-4a64-a17e-\
2fb69ed556e6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mylabel", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<TrackN\>\"", ",", "\"\<FrameN\>\"", ",", "\"\<X (130 nm pixels)\>\"",
      ",", "\"\<Y (130 nm pixels)\>\"", ",", "\"\<Peak intensity\>\"", ",", 
     "\"\<Background intensity\>\"", ",", "\"\<SigmaX (130 nm pixels)\>\"", 
     ",", " ", "\"\<SigmaY (130 nm pixels)\>\"", ",", 
     "\"\<X min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<X max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<Y min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<Y max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<Peak intensity min 90% confidence interval\>\"", ",", 
     "\"\<Peak intensity max 90% confidence interval\>\"", ",", 
     "\"\<Background intensity min 90% confidence interval\>\"", ",", 
     "\"\<Background max 90% confidence interval\>\"", ",", 
     "\"\<SigmaX min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<SigmaX max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<SigmaY min 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<SigmaY max 90% confidence interval (130 nm pixels)\>\"", ",", 
     "\"\<R\>\"", ",", "\"\<G\>\"", ",", "\"\<B\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedAllParametersColRegLabeled", "=", 
   RowBox[{"Insert", "[", 
    RowBox[{"myRedAllParametersColReg", ",", "mylabel", ",", "1"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.651501541625267*^9, 3.6515015675997524`*^9}, {
  3.6515056381085725`*^9, 3.651505651915362*^9}, {3.6515225150488777`*^9, 
  3.65152254060034*^9}, {3.6556552001338315`*^9, 3.655655201364902*^9}, {
  3.6557321908504486`*^9, 3.655732192306532*^9}, {3.655840561476894*^9, 
  3.655840614977954*^9}, {3.6558419246388626`*^9, 3.6558419361055183`*^9}, {
  3.6838994667480707`*^9, 
  3.683899477419681*^9}},ExpressionUUID->"c2ae3abd-dba2-4337-9dd5-\
0a5b44c59fa8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
    "analysisFolder", "<>", "\"\<_FixedSigmaRedAllParameters.xls\>\""}], ",", 
    "myRedAllParametersColRegLabeled"}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedAllParametersColReg", ">>", 
   RowBox[{"(", 
    RowBox[{"analysisFolder", "<>", "\"\<_FixedSigmaRedAllParameters.m\>\""}],
     ")"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.648319854940589*^9, 3.6483198620705986`*^9}, {
   3.648319895152645*^9, 3.6483199454877186`*^9}, {3.648319983187793*^9, 
   3.648319985987797*^9}, {3.6483202401841755`*^9, 3.648320240454176*^9}, {
   3.6485877198879347`*^9, 3.648587745048374*^9}, {3.651500654319516*^9, 
   3.651500664374091*^9}, 3.651501351168373*^9, {3.651505715675009*^9, 
   3.651505716779072*^9}, 3.65150683429299*^9, 3.651520145559351*^9, {
   3.655732200122979*^9, 3.6557322064913435`*^9}, {3.6557593689049444`*^9, 
   3.655759375376315*^9}, {3.6558406279206944`*^9, 3.6558406349530964`*^9}, 
   3.678321873722842*^9, {3.7026700557049346`*^9, 3.7026700682136497`*^9}, {
   3.77110578462695*^9, 3.7711058487154303`*^9}, {3.7711104409653807`*^9, 
   3.7711104421295033`*^9}},ExpressionUUID->"1a456fff-2370-4891-9e48-\
7657e1b98d1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Making RGB Trims from Red Tracks", "Section",
 CellChangeTimes->{{3.6574596442643747`*^9, 3.6574596461844845`*^9}, {
  3.6949760931994843`*^9, 3.6949760978029575`*^9}, {3.717791367390662*^9, 
  3.7177913807046976`*^9}, {3.771103017894242*^9, 
  3.7711030340073*^9}},ExpressionUUID->"23f58fe8-ea52-4f75-8cfd-8b402ddf8899"],

Cell["\<\
This reads in the movie again if you need to; if it is already defined from \
running the code above then you do not need to run this\
\>", "Text",
 CellChangeTimes->{{3.779458965649006*^9, 3.7794589822409554`*^9}, {
  3.7794590353449926`*^9, 
  3.779459044336507*^9}},ExpressionUUID->"ce6746bb-0f76-49f0-a733-\
b1a994e0a3b1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"FileNameSetter", "[", 
    RowBox[{"Dynamic", "[", "mymovie", "]"}], "]"}], ",", 
   RowBox[{"Dynamic", "[", "mymovie", "]"}]}], "}"}]], "Input",ExpressionUUID-\
>"a046aee7-5d3c-40e2-a796-5d3882261d41"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TemplateBox[{Dynamic[$CellContext`mymovie],"Open",All},
    "FileNameSetterBoxes"], ",", 
   DynamicBox[ToBoxes[$CellContext`mymovie, StandardForm],
    ImageSizeCache->{49., {3., 9.}}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.656795102013057*^9, 3.716140965116562*^9, 3.726513137268983*^9, 
   3.726514023196082*^9, 3.7265140764461975`*^9, 3.726514264561371*^9, 
   3.726514311524082*^9, 3.726514407590603*^9, 3.726514471202034*^9, 
   3.7265145845727196`*^9, 3.7265173334296703`*^9, 3.7265176264380617`*^9, 
   3.7265176787990313`*^9, 3.726517794540041*^9, 3.72652514819083*^9, 
   3.726525259676759*^9, 3.726525337995654*^9, 3.7265254879826317`*^9, 
   3.7265256300932217`*^9, 3.7265260165801125`*^9, 3.7265260478155265`*^9, 
   3.726526089312591*^9, {3.7265902671447487`*^9, 3.72659028884599*^9}, 
   3.726590725830984*^9, {3.7265907674183626`*^9, 3.7265907880255413`*^9}, 
   3.726591051029585*^9, 3.726591295803585*^9, {3.7265913877538443`*^9, 
   3.7265914224478283`*^9}, 3.72659148366933*^9, 3.7265915749225492`*^9, {
   3.7265919971717005`*^9, 3.726592039430118*^9}, 3.726592073957093*^9, 
   3.7265973495678406`*^9, 3.726597470510758*^9, 3.7265975813300962`*^9, 
   3.7265977121055765`*^9, 3.72659779242117*^9, 3.7265978655873547`*^9, 
   3.7265979276549053`*^9, 3.726597983613106*^9, 3.7265980729162135`*^9, 
   3.726598244610034*^9, 3.7265999829214597`*^9, 3.726600104000385*^9, 
   3.7266004031174936`*^9, 3.7266005474277477`*^9, 3.72660064940058*^9, 
   3.7266012543941836`*^9, 3.72660131709577*^9, 3.7266013840826015`*^9, 
   3.726601433797445*^9, {3.726601484642353*^9, 3.726601512965973*^9}, 
   3.726601549500063*^9, 3.726601596620758*^9, 3.7266016705819883`*^9, 
   3.7266017102092547`*^9, 3.726601760318121*^9, 3.726601811964075*^9, 
   3.7266018730085664`*^9, 3.7266019590214863`*^9, 3.7266020740840673`*^9, 
   3.7266021201987047`*^9, 3.7266021573618307`*^9, 3.7266023239413586`*^9, 
   3.726602413400475*^9, 3.726602489876849*^9, 3.7266027960623617`*^9, 
   3.7266028922308626`*^9, 3.726602955864502*^9, 3.726603036736128*^9, 
   3.7266030934883738`*^9, 3.726603170749793*^9, 3.726603227241024*^9, 
   3.726603400943959*^9, 3.7271046019865637`*^9, 3.727107400622527*^9, 
   3.7279788731001406`*^9, 3.7279789435242476`*^9, 3.7279791409572535`*^9, {
   3.7279792035569406`*^9, 3.727979230947837*^9}, 3.727979295712389*^9, 
   3.7279793602475233`*^9, 3.7279794322033634`*^9, 3.727979484682637*^9, 
   3.7279795232199516`*^9, 3.727980278564742*^9, 3.727980388207359*^9, 
   3.727980463276144*^9, 3.727980540320875*^9, 3.7279806381892757`*^9, 
   3.7279810448063345`*^9, 3.727981555173532*^9, 3.7279816381358852`*^9, 
   3.7279817056207027`*^9, 3.7279818419037333`*^9, 3.7279819128521814`*^9, 
   3.7279819564083176`*^9, 3.7279820918956394`*^9, 3.7279821394059134`*^9, 
   3.7279821808214846`*^9, 3.727982217605812*^9, 3.727982361804166*^9, 
   3.7279824607872095`*^9, 3.727982529725978*^9, 3.72798264070816*^9, 
   3.7568414606973996`*^9, 3.75684149672546*^9, 3.756841550850556*^9, 
   3.7568417670909243`*^9, 3.756841822406088*^9, 3.7568419258930073`*^9, 
   3.7568419745307894`*^9, 3.756842066947075*^9, 3.7568421750012555`*^9, 
   3.756842251556634*^9, 3.756842311011035*^9, 3.75684241863319*^9, 
   3.7568424518858566`*^9, 3.7568425730291653`*^9, 3.756842610725446*^9, 
   3.756842645536765*^9, 3.7568430369549484`*^9, 3.7568431328919697`*^9, 
   3.7568431779534616`*^9, 3.7571691192871833`*^9, 
   3.757169821098729*^9},ExpressionUUID->"73c8d88c-3b49-448d-bdb2-\
25c4fe24ec56"]
}, Open  ]],

Cell["\<\
This will read in the movie and partition it as it does above; doesn\
\[CloseCurlyQuote]t need to be done if you have already defined it from above\
\>", "Text",
 CellChangeTimes->{{3.7794589546563773`*^9, 3.7794589589126205`*^9}, {
  3.779459048192727*^9, 
  3.779459069504946*^9}},ExpressionUUID->"37757d87-6c41-4329-9947-\
5b518edfb846"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mymovie", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"FileBaseName", "[", "mymovie", "]"}], ",", "4"}], "]"}], 
      "\[Equal]", "\"\<AVG_\>\""}], ",", 
     RowBox[{"StringReplace", "[", 
      RowBox[{"mymovie", ",", 
       RowBox[{"\"\<AVG_\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], ",", 
     "mymovie"}], "]"}]}], ";"}]], "Input",ExpressionUUID->"f1343a04-feca-\
4032-94a5-53908f7c1a2d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myColMovie", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Import", "[", "mymovie", "]"}], "//", 
     RowBox[{
      RowBox[{"Partition", "[", 
       RowBox[{"#", ",", "3"}], "]"}], "&"}]}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"DirectoryQ", "@", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
        "\"\<Analysis\\\\\>\""}], ")"}]}], "\[Equal]", "False"}], ",", 
    RowBox[{"CreateDirectory", "@", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
       "\"\<Analysis\\\\\>\""}], ")"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"analysisFolder", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
    "\"\<Analysis\\\\\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6515063970679827`*^9, 3.651506411178789*^9}, {
   3.6515066477483206`*^9, 3.6515066488673844`*^9}, {3.6515067054626217`*^9, 
   3.6515067061716623`*^9}, {3.6515265140116053`*^9, 3.651526514107611*^9}, {
   3.6783130580806165`*^9, 3.6783130585136414`*^9}, 
   3.7055111247331915`*^9},ExpressionUUID->"064b2ddb-292f-4660-9c9b-\
5a51091c124c"],

Cell[CellGroupData[{

Cell["Reading in all saved parameters", "Subsection",
 CellChangeTimes->{{3.6574596491006513`*^9, 
  3.6574596608893256`*^9}},ExpressionUUID->"e6ad2f2f-d52d-49ff-ad76-\
1dbd54d2bf60"],

Cell["Reading in parameters from the above cell", "Text",
 CellChangeTimes->{{3.779459142721134*^9, 
  3.779459177457121*^9}},ExpressionUUID->"0467252e-f5f4-4d33-8800-\
b2b37f9445fc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"analysisFolder", "=", 
   RowBox[{
    RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
    "\"\<Analysis\\\\\>\"", "<>", 
    RowBox[{"StringDrop", "[", 
     RowBox[{
      RowBox[{"StringDelete", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"DirectoryName", "[", "mymovie", "]"}]}], "]"}], ",", 
      RowBox[{"-", "4"}]}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FileExistsQ", "[", 
      RowBox[{"StringReplace", "[", 
       RowBox[{"mymovie", ",", 
        RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}], "]"}],
      "\[Equal]", "True"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Import", "[", 
       RowBox[{"StringReplace", "[", 
        RowBox[{"mymovie", ",", 
         RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}], 
       "]"}]}], ";"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"avgImg", "=", 
      RowBox[{"Mean", "/@", "myColMovie"}]}], ";"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImg", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"mymovie", ",", 
     RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.717256246764773*^9, 3.7172562614830003`*^9}, {
  3.717256331268729*^9, 3.717256367000797*^9}, {3.7172564058132687`*^9, 
  3.71725643367292*^9}, {3.7174995778871717`*^9, 3.717499589644394*^9}, {
  3.717499693030506*^9, 3.7174997042933292`*^9}, {3.717499798888921*^9, 
  3.7174998188225617`*^9}, {3.722949243962117*^9, 3.7229492994162893`*^9}, {
  3.7711038992633777`*^9, 
  3.771103918419525*^9}},ExpressionUUID->"17dc5d1d-1575-4829-9b7c-\
b9a0ecb94e35"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mymask", "=", 
   RowBox[{"Import", "[", 
    RowBox[{"analysisFolder", "<>", "\"\<_mymask.dat\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImg", "=", 
   RowBox[{"StringReplace", "[", 
    RowBox[{"mymovie", ",", 
     RowBox[{"\"\<MAX\>\"", "\[Rule]", "\"\<AVG_MAX\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avgFrameN", "=", 
   RowBox[{"IntegerPart", "[", "avgFrameN", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTfFunc", "=", 
   RowBox[{"Import", "[", 
    RowBox[{
     RowBox[{"DirectoryName", "[", "mymovie", "]"}], "<>", 
     "\"\<TransformationFunction.m\>\""}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTfFuncRev", "=", 
   RowBox[{"InverseFunction", "@", "myTfFunc"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myMaxN", "=", 
   RowBox[{
    RowBox[{"Length", "[", 
     RowBox[{
     "myColMovie", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], 
     "]"}], "-", "avgFrameN", "+", "1"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myColMovieRunAv", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"ImageMultiply", "[", 
      RowBox[{
       RowBox[{"ImageAdd", "[", 
        RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
         RowBox[{"i", ",", 
          RowBox[{"j", ";;", 
           RowBox[{"j", "+", "avgFrameN", "-", "1"}]}]}], 
         "\[RightDoubleBracket]"}], "]"}], ",", 
       RowBox[{"1", "/", "avgFrameN"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", "3", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "myMaxN", ",", "1"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"myRedAllParameters", ",", "myRedPos", ",", "myRedData"}], "}"}], 
   "=", 
   RowBox[{"<<", 
    RowBox[{"(", 
     RowBox[{"analysisFolder", "<>", "\"\<_redfits.dat\>\""}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedAllParametersColReg", "=", "myRedAllParameters"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myRedAllParametersColReg", "\[LeftDoubleBracket]", 
    RowBox[{"All", ",", 
     RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"myRedAllParameters", "\[LeftDoubleBracket]", 
      RowBox[{"i", ",", 
       RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "myRedAllParameters", "]"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedParameterColRegSplit", "=", 
   RowBox[{"myRedAllParametersColReg", "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.656776915246834*^9, 3.6567770411270337`*^9}, {
   3.656777794704136*^9, 3.6567777949281483`*^9}, {3.6568621692991114`*^9, 
   3.6568622644904785`*^9}, 3.656862713412467*^9, 3.656862761616552*^9, 
   3.6568628067474313`*^9, {3.6591097466730127`*^9, 3.659109748619124*^9}, {
   3.6591110230040145`*^9, 3.6591110236840534`*^9}, {3.6591223641256895`*^9, 
   3.659122391069231*^9}, {3.6949786906683617`*^9, 3.694978700467176*^9}, {
   3.716303884402073*^9, 3.7163039054082737`*^9}, {3.7163039645296555`*^9, 
   3.716303973122147*^9}, {3.7163076320705976`*^9, 3.7163076417398167`*^9}, {
   3.7163081887392216`*^9, 3.716308191885828*^9}, {3.7163123949520054`*^9, 
   3.7163124037205067`*^9}, {3.7163127842162695`*^9, 
   3.7163127894485693`*^9}, {3.7163155499314594`*^9, 3.716315566059382*^9}, {
   3.716316313896281*^9, 3.7163163455965495`*^9}, 3.71631666076558*^9, {
   3.7172563266421204`*^9, 3.717256356556378*^9}, {3.7174995599087286`*^9, 
   3.7174995735323634`*^9}, {3.717500029993186*^9, 3.7175000357363973`*^9}, {
   3.717500071197281*^9, 3.7175000749718885`*^9}, {3.71750020651776*^9, 
   3.717500248011449*^9}, {3.717500477008795*^9, 3.7175005122270613`*^9}, {
   3.7265250997029552`*^9, 3.7265251009998302`*^9}, {3.7711033012542624`*^9, 
   3.771103302588061*^9}, {3.7711038784514184`*^9, 3.7711038791189857`*^9}, {
   3.771169006697932*^9, 3.771169010577157*^9}, 
   3.7711690977804003`*^9},ExpressionUUID->"6ac183c2-1ebb-41a5-bab8-\
b89763a92c8c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"avgImg", "=", 
   RowBox[{"Mean", "/@", "myColMovie"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"avgColImg", "=", 
   RowBox[{"ColorCombine", "[", 
    RowBox[{"ImageAdjust", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "avgImg", "\[LeftDoubleBracket]", "1", "\[RightDoubleBracket]"}], ",", 
       RowBox[{
       "avgImg", "\[LeftDoubleBracket]", "2", "\[RightDoubleBracket]"}], ",", 
       RowBox[{"ConstantImage", "[", 
        RowBox[{"0", ",", 
         RowBox[{"ImageDimensions", "@", 
          RowBox[{
          "avgImg", "\[LeftDoubleBracket]", "1", 
           "\[RightDoubleBracket]"}]}]}], "]"}]}], "}"}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"myRedParameterSplit", "=", 
    RowBox[{"myRedAllParameters", "//", 
     RowBox[{
      RowBox[{"SplitBy", "[", 
       RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
   "Grouping", " ", "tracks", " ", "together", " ", "from", " ", "Parameter", 
    " ", "list"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"RedCentroid", "=", 
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"Length", "[", "myRedParameterSplit", "]"}], "]"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"myRedParameterSplit", "\[LeftDoubleBracket]", 
           RowBox[{"i", ",", "All", ",", 
            RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], "//", 
          "Mean"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "myRedParameterSplit", "]"}], ",", "1"}], 
          "}"}]}], "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Taking", " ", "the", " ", "mean", " ", "position", " ", "of", " ", "each",
     " ", "grouped", " ", "tracks"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"posRedLongTracks", "=", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{"Red", ",", 
       RowBox[{
        RowBox[{
         RowBox[{"Circle", "[", 
          RowBox[{"#", ",", "7"}], "]"}], "&"}], "/@", 
        RowBox[{"(", 
         RowBox[{"RedCentroid", "\[LeftDoubleBracket]", 
          RowBox[{"All", ",", "2"}], "\[RightDoubleBracket]"}], ")"}]}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"Inset", "[", 
          RowBox[{
           RowBox[{"RedCentroid", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "1"}], "\[RightDoubleBracket]"}], ",", 
           RowBox[{"RedCentroid", "\[LeftDoubleBracket]", 
            RowBox[{"i", ",", "2"}], "\[RightDoubleBracket]"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "RedCentroid", "]"}], ",", "1"}], "}"}]}], 
        "]"}]}], "}"}], "]"}]}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Making", " ", "dumb", " ", "little", " ", "circles", " ", "around", " ", 
    "the", " ", "average", " ", "position", " ", "of", " ", "each", " ", 
    "tracks"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Manipulate", "[", 
    RowBox[{
     RowBox[{"Show", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"myColMovieRunAv", "\[LeftDoubleBracket]", 
         RowBox[{"1", ",", 
          RowBox[{"start", "-", "1", "+", "frame"}]}], 
         "\[RightDoubleBracket]"}], "//", 
        RowBox[{
         RowBox[{"ImageAdjust", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", "thred"}], "]"}], 
         "&"}]}], ",", "posRedLongTracks"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"frame", ",", "start", ",", "end", ",", "1"}], "}"}]}], "]"}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.7177693020572615`*^9, {3.725912471899654*^9, 3.7259124741667833`*^9}, {
   3.7711033264725003`*^9, 
   3.7711033274353333`*^9}},ExpressionUUID->"5526b6ae-c35a-427e-8392-\
129648ed4eea"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Making Red Track Trims with either Blue and Green aligned to center of pad\
\>", "Subsection",
 CellChangeTimes->{{3.7711679957490234`*^9, 
  3.77116801774336*^9}},ExpressionUUID->"21a5c1ba-1682-4d12-b697-\
acf7b95be5a1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "=", 
   RowBox[{"myRedAllParametersColReg", "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"myRedParameterSplitColReg", ">>", 
  RowBox[{
  "analysisFolder", "<>", 
   "\"\<_myRedParameterSplitColReg.m\>\""}]}]}], "Input",
 CellChangeTimes->{
  3.77117439821412*^9, {3.771180738368869*^9, 
   3.771180758758812*^9}},ExpressionUUID->"d1881963-5bee-4270-b642-\
e450b70e5b00"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pad2", "=", "7"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ClearAll", "[", 
  RowBox[{
  "myRedParameterSplitColReg", ",", "TrimRed", ",", "TrimGreen", ",", 
   "TrimBlue", ",", "Trim3Colors"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "=", 
   RowBox[{"myRedAllParametersColReg", "//", 
    RowBox[{
     RowBox[{"SplitBy", "[", 
      RowBox[{"#", ",", "First"}], "]"}], "&"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "TrimRed", ",", "TrimGreen", ",", "TrimBlue", ",", "Trim3Colors"}], "}"}],
    "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Table", "[", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"tempTime", "=", 
           RowBox[{"myRedParameterSplit", "\[LeftDoubleBracket]", 
            RowBox[{"myi", ",", "i", ",", "2"}], "\[RightDoubleBracket]"}]}], 
          ";", "\[IndentingNewLine]", 
          RowBox[{"tempCenter", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"(", 
             RowBox[{"myRedParameterSplit", "\[LeftDoubleBracket]", 
              RowBox[{"myi", ",", "i", ",", 
               RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}], ")"}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tempCenterColReg", "=", 
           RowBox[{"Ceiling", "[", 
            RowBox[{"myTfFunc", "@", 
             RowBox[{"myRedParameterSplitColReg", "\[LeftDoubleBracket]", 
              RowBox[{"myi", ",", "i", ",", 
               RowBox[{"3", ";;", "4"}]}], "\[RightDoubleBracket]"}]}], 
            "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"tempRed", ",", "tempGreen", ",", "tempBlue"}], "}"}], 
           "=", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ImageTrim", "[", 
              RowBox[{
               RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                RowBox[{"1", ",", 
                 RowBox[{"tempTime", "+", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"avgFrameN", "/", "2"}], "]"}], "-", "1"}]}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenter", "-", "pad2"}], ",", 
                 RowBox[{"tempCenter", "+", "pad2", "-", "0.1"}]}], "}"}]}], 
              "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ImageTrim", "[", 
              RowBox[{
               RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                RowBox[{"2", ",", 
                 RowBox[{"tempTime", "+", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"avgFrameN", "/", "2"}], "]"}], "-", "1"}]}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenterColReg", "-", "pad2"}], ",", 
                 RowBox[{"tempCenterColReg", "+", "pad2", "-", "0.1"}]}], 
                "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
             RowBox[{"ImageTrim", "[", 
              RowBox[{
               RowBox[{"myColMovie", "\[LeftDoubleBracket]", 
                RowBox[{"3", ",", 
                 RowBox[{"tempTime", "+", 
                  RowBox[{"Ceiling", "[", 
                   RowBox[{"avgFrameN", "/", "2"}], "]"}], "-", "1"}]}], 
                "\[RightDoubleBracket]"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"tempCenterColReg", "-", "pad2"}], ",", 
                 RowBox[{"tempCenterColReg", "+", "pad2", "-", "0.1"}]}], 
                "}"}]}], "]"}]}], "}"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"tempRed", ",", "tempGreen", ",", "tempBlue", ",", 
            RowBox[{"ColorCombine", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"ImageAdjust", "@", "tempRed"}], ",", 
               RowBox[{"ImageAdjust", "@", "tempGreen"}], ",", 
               RowBox[{"ImageAdjust", "@", "tempBlue"}]}], "}"}], "]"}]}], 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", 
            RowBox[{
            "myRedParameterSplit", "\[LeftDoubleBracket]", "myi", 
             "\[RightDoubleBracket]"}], "]"}], ",", "1"}], "}"}]}], "]"}], "//",
        "Transpose"}], ",", 
      RowBox[{"{", 
       RowBox[{"myi", ",", "1", ",", 
        RowBox[{"1", 
         RowBox[{"Length", "[", "myRedParameterSplit", "]"}]}], ",", "1"}], 
       "}"}]}], "]"}], "//", "Transpose"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6567771182624454`*^9, 3.6567771483431664`*^9}, {
   3.7156217870305834`*^9, 3.7156218081887302`*^9}, {3.715704817154024*^9, 
   3.715704831875252*^9}, {3.7163113650801*^9, 3.716311372024497*^9}, {
   3.7163114217843432`*^9, 3.716311423096418*^9}, 3.7163125072364273`*^9, {
   3.726525421861836*^9, 3.726525422324999*^9}, {3.726525728805104*^9, 
   3.72652575255311*^9}, {3.771168885973564*^9, 3.7711688988123355`*^9}, {
   3.771168950353483*^9, 3.7711689519115334`*^9}, {3.771174237228255*^9, 
   3.771174239495742*^9}, 3.7711800918844395`*^9, {3.7712542177197294`*^9, 
   3.7712542277829885`*^9}},ExpressionUUID->"44891428-034f-4708-9abe-\
b9595ddad5ad"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"TrimRed", ",", "TrimGreen", ",", "TrimBlue"}], "}"}], "]"}], ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myRedTrackRGBTrims.m\>\""}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7711037850679846`*^9, 
  3.771103806668453*^9}},ExpressionUUID->"4dc744f5-5423-4dfd-9cc9-\
15ea4bfe8f1b"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[StyleBox["Run code above on all cells you want to handcheck, do \
handchecking after you have made trims for all your cells",
 FontColor->RGBColor[0, 1, 1],
 Background->RGBColor[1, 0.5, 0]]], "Section",
 CellChangeTimes->{{3.7796298434806585`*^9, 
  3.779629873977403*^9}},ExpressionUUID->"971c84ae-b25f-4a07-85ac-\
b33e6490db04"],

Cell[CellGroupData[{

Cell["Hand Checking all red tracks", "Subsection",
 CellChangeTimes->{{3.726939354834359*^9, 3.7269393577785273`*^9}, {
  3.7711036881604614`*^9, 
  3.771103705578563*^9}},ExpressionUUID->"76a827e1-96d0-4aaf-ad79-\
ae8eec44a654"],

Cell["\<\
Define all the myDirectories below here, only put the directories that have \
the same construct and the same imaging conditions that you want to handcheck \
below. Always change the my\
\>", "Text",
 CellChangeTimes->{{3.7794592437289114`*^9, 
  3.7794593008491783`*^9}},ExpressionUUID->"ca9e2d39-0658-4f45-a1ca-\
b16f9f7134df"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myDirectories", "=", 
   RowBox[{"{", 
    RowBox[{"(", 
     RowBox[{
     "\"\<P:\\\\20190920_u2os_multiplex\\\\smFLAG-KDM5B-GBInterval_2\\\\\
Analysis\>\"", "<>", "\"\<\\\\\>\""}], ")"}], "}"}]}], ";", 
  RowBox[{"(*", 
   StyleBox[
    RowBox[{
     RowBox[{
     "Input", " ", "all", " ", "analysis", " ", "folder", " ", "pathways", 
      " ", "here", " ", "that", " ", "already", " ", "have", " ", "the", " ", 
      "RedTrackRGBTrims", " ", "from", " ", "above", " ", "and", " ", "that", 
      " ", "are", " ", "the", " ", "same", " ", "construct", " ", "and", " ", 
      "same", " ", "imaging", " ", "intervals"}], ",", " ", 
     RowBox[{
     "make", " ", "sure", " ", "to", " ", "add", " ", "a", " ", "\\\\", " ", 
      "after", " ", "the", " ", "Analysis", " ", "folder", " ", "when", " ", 
      "inputting", " ", "new", " ", "folders"}]}],
    FontColor->RGBColor[1, 0, 1],
    Background->RGBColor[1, 0.925, 0.925]], "*)"}]}]], "Input",
 CellChangeTimes->{{3.771247741693612*^9, 3.7712477670183067`*^9}, 
   3.7712478191247*^9, {3.7712479018723974`*^9, 3.771247901981597*^9}, {
   3.771254046438854*^9, 3.7712540617965107`*^9}, {3.7715912023333983`*^9, 
   3.7715912097266674`*^9}, {3.7715915155938854`*^9, 3.771591544315597*^9}, {
   3.7724664960403953`*^9, 3.7724665042463293`*^9}, {3.7724666251070623`*^9, 
   3.7724666280623035`*^9}, {3.772466671727358*^9, 3.7724666718383636`*^9}, {
   3.77247976391724*^9, 3.772479770950925*^9}, {3.7725626959361124`*^9, 
   3.7725627013448935`*^9}, {3.7745256620136857`*^9, 3.774525697334281*^9}, {
   3.7765477520879493`*^9, 3.776547757260938*^9}, {3.777671680173606*^9, 
   3.777671683597908*^9}, {3.777720489323392*^9, 3.7777204918228025`*^9}, {
   3.778276161155511*^9, 3.778276177465761*^9}, {3.778280114453397*^9, 
   3.7782801165478177`*^9}, {3.77832604845221*^9, 3.7783260517190475`*^9}, {
   3.7794655990464144`*^9, 3.779465617254456*^9}, {3.779630150108197*^9, 
   3.7796301645220213`*^9}, 3.7796302084005313`*^9, {3.7796317451711345`*^9, 
   3.7796317748980494`*^9}},ExpressionUUID->"31d1cccb-13cb-4990-8e79-\
61c2d90b05d0"],

Cell["\<\
Showing the number of myRedTrackRGBTrims (cells) you have in this directory\
\>", "Text",
 CellChangeTimes->{{3.7794656587578297`*^9, 
  3.779465682230172*^9}},ExpressionUUID->"ef8981ff-7991-42df-a234-\
577acdabc192"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Flatten", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"FileNames", "[", 
     RowBox[{
      RowBox[{"myDirectories", "[", 
       RowBox[{"[", "directory", "]"}], "]"}], "<>", 
      "\"\<*_myRedTrackRGBTrims.m\>\""}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"directory", ",", "1", ",", 
      RowBox[{"Length", "@", "myDirectories"}], ",", "1"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.772470011505622*^9, 
  3.772470012957627*^9}},ExpressionUUID->"b1b33f58-98e2-4865-a936-\
e854ebd4ba6f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"P:\\\\20190920_u2os_multiplex\\\\smFLAG-KDM5B-GBInterval_2\\\\\
Analysis\\\\MAX_Cell01_myRedTrackRGBTrims.m\"\>", 
   ",", "\<\"P:\\\\20190920_u2os_multiplex\\\\smFLAG-KDM5B-GBInterval_2\\\\\
Analysis\\\\MAX_Cell02_myRedTrackRGBTrims.m\"\>"}], "}"}]], "Output",
 CellChangeTimes->{{3.771591430601185*^9, 3.7715914559823484`*^9}, {
   3.7715915174839096`*^9, 3.771591547117813*^9}, 3.7716683821878195`*^9, 
   3.7723640364339*^9, 3.772466509752803*^9, 3.772466610409663*^9, {
   3.7724666660022593`*^9, 3.7724666741258397`*^9}, {3.7724700061241508`*^9, 
   3.77247001383303*^9}, 3.772479775870822*^9, 3.772555273097167*^9, 
   3.7725626618995075`*^9, 3.7725627927311993`*^9, 3.7745259402992935`*^9, 
   3.7765478072686567`*^9, 3.776785784441331*^9, 3.7776716855504026`*^9, 
   3.777720494996702*^9, 3.7777205949982452`*^9, 3.7782761800139236`*^9, 
   3.7782801203506436`*^9, 3.778326055202446*^9, 3.7794656524014664`*^9, 
   3.779468729796483*^9, 3.7794691768210516`*^9, 3.779629936882001*^9, 
   3.7796302143428707`*^9, 3.779631779777673*^9, 
   3.779632196144644*^9},ExpressionUUID->"d891bf2b-d323-4fce-8347-\
61c6722d2b91"]
}, Open  ]],

Cell["\<\
Getting the file names of each cell in the directory and then uploading the \
RedRGBParameters made above\
\>", "Text",
 CellChangeTimes->{{3.7794656881185093`*^9, 
  3.7794657589025583`*^9}},ExpressionUUID->"21594733-b5b0-4379-954c-\
ecfd278f6db0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myRedRGBTrimsAllCellsFNs", "=", 
   RowBox[{"Flatten", "@", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{
        RowBox[{"myDirectories", "[", 
         RowBox[{"[", "directory", "]"}], "]"}], "<>", 
        "\"\<*_myRedTrackRGBTrims.m\>\""}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"directory", ",", "1", ",", 
        RowBox[{"Length", "@", "myDirectories"}], ",", "1"}], "}"}]}], 
     "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myRedRGBParameterAllCellsFNs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
         RowBox[{"[", "cell", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", "\"\<my\>\""}], "]"}], "//",
            "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
      "\"\<_myRedParameterSplitColReg.m\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedRGBTrimsAllCellsFNs"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBParameterAllCellsFNs"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.7268499807140965`*^9, 3.7268500277031384`*^9}, 
   3.7268501304843283`*^9, {3.7269371716464877`*^9, 3.726937178587885*^9}, {
   3.726937220443279*^9, 3.7269373238271923`*^9}, {3.7269373976344137`*^9, 
   3.726937442915004*^9}, {3.7269374759718943`*^9, 3.7269374836353326`*^9}, {
   3.7269375145320997`*^9, 3.7269375494910994`*^9}, {3.7269390729002333`*^9, 
   3.726939108211253*^9}, {3.7269391669966154`*^9, 3.7269391802923756`*^9}, 
   3.7269392557646923`*^9, {3.7269393961857243`*^9, 3.7269393982898445`*^9}, {
   3.7269394560891504`*^9, 3.726939457201214*^9}, {3.7269395419920635`*^9, 
   3.7269395440341806`*^9}, 3.7269396696023626`*^9, 3.7711038313818274`*^9, 
   3.7711041911838017`*^9, 3.7711042514230328`*^9, {3.771104345193139*^9, 
   3.771104346721648*^9}, {3.7711060817586875`*^9, 3.7711060821114798`*^9}, {
   3.7711061214627256`*^9, 3.7711061217529497`*^9}, {3.771247717858926*^9, 
   3.771247729244368*^9}, {3.7712477760845385`*^9, 3.771247831915947*^9}, {
   3.7712478880793476`*^9, 3.771247893116165*^9}, {3.7712484891914606`*^9, 
   3.7712484938674774`*^9}, {3.77124856166671*^9, 3.771248564073718*^9}, {
   3.7724700322097473`*^9, 3.772470053032056*^9}, 
   3.779465727537764*^9},ExpressionUUID->"daefb777-ddbb-4472-9c84-\
0a04d0d610f7"],

Cell["\<\
Counting the number of myRedParametersSplitColReg files, should be the same \
number as there are cells\
\>", "Text",
 CellChangeTimes->{{3.779465762037737*^9, 3.779465790566369*^9}, {
  3.7794662662145743`*^9, 
  3.779466267430644*^9}},ExpressionUUID->"a80b36dc-01d2-4257-bf09-\
ac115943cc6f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedParameterSplitColReg"}]], "Input",
 CellChangeTimes->{{3.772469997856886*^9, 
  3.7724700003695297`*^9}},ExpressionUUID->"8c007fb5-ed9e-49e0-a215-\
592336488530"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7724700011981325`*^9, 3.772470039116042*^9}, 
   3.7724702524651003`*^9, 3.772479788112773*^9, 3.7725552848781195`*^9, 
   3.772562817135567*^9, 3.774526007933342*^9, 3.7765478098643093`*^9, 
   3.7767857911401744`*^9, 3.7776716915195293`*^9, 3.7777205039667215`*^9, 
   3.777720603366537*^9, 3.7782761852646885`*^9, 3.778280134254423*^9, 
   3.7783260622336254`*^9, 3.779465657077734*^9, 3.779468733777711*^9, 
   3.779469180934287*^9, 3.7796299456445026`*^9, 3.7796302191591463`*^9, 
   3.7796317846862926`*^9, 
   3.7796321996706505`*^9},ExpressionUUID->"9c0b6c37-8d2b-4cf6-a1d5-\
fa38ea284c9d"]
}, Open  ]],

Cell["\<\
Looking at the length of each track, each number is the length of the track \
for each spot (should all be over >40 in length)\
\>", "Text",
 CellChangeTimes->{{3.779465808054369*^9, 3.7794658134936805`*^9}, {
  3.7794660187904224`*^9, 
  3.779466053110386*^9}},ExpressionUUID->"7445f571-9965-4cb7-822b-\
29e97d4caac0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"myRedParameterSplitColReg", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7711805993826065`*^9, 3.7711806160265217`*^9}, {
  3.7712480415526896`*^9, 3.7712480616763587`*^9}, {3.7712485866536007`*^9, 
  3.7712485874666033`*^9}, {3.7794659441991563`*^9, 
  3.7794659464872875`*^9}},ExpressionUUID->"1028d8d6-c965-461a-92bd-\
302988c0b0df"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "239", ",", "62", ",", "66", ",", "47", ",", "99", ",", "43", ",", "40", 
   ",", "47", ",", "49", ",", "85", ",", "45", ",", "46", ",", "43", ",", 
   "53", ",", "53", ",", "49", ",", "90", ",", "65", ",", "43", ",", "42", 
   ",", "59", ",", "67", ",", "54", ",", "86", ",", "41", ",", "68", ",", 
   "73", ",", "58", ",", "42", ",", "166", ",", "127", ",", "43", ",", "118", 
   ",", "57", ",", "68", ",", "49", ",", "44", ",", "155", ",", "66", ",", 
   "54", ",", "51", ",", "51", ",", "50", ",", "50", ",", "57", ",", "56", 
   ",", "46", ",", "40", ",", "176", ",", "58", ",", "53", ",", "59", ",", 
   "41", ",", "53", ",", "48", ",", "45", ",", "91", ",", "57", ",", "101", 
   ",", "92", ",", "42", ",", "73", ",", "61", ",", "59", ",", "69", ",", 
   "43", ",", "56", ",", "49", ",", "45", ",", "78", ",", "49", ",", "57", 
   ",", "40", ",", "48", ",", "47", ",", "58", ",", "56", ",", "44", ",", 
   "41"}], "}"}]], "Output",
 CellChangeTimes->{{3.77118060124804*^9, 3.771180616993758*^9}, 
   3.7711808304698563`*^9, {3.7712476200521717`*^9, 3.7712476297766056`*^9}, 
   3.771247686180408*^9, 3.771247918385257*^9, {3.7712480382060766`*^9, 
   3.7712480621935606`*^9}, {3.7712485800697765`*^9, 3.771248587794204*^9}, 
   3.7712512793755817`*^9, 3.7712542630685225`*^9, 3.7713441030151215`*^9, 
   3.771591400282593*^9, 3.7715915549466867`*^9, 3.7716683887809205`*^9, 
   3.772364045366557*^9, 3.7724666799195237`*^9, 3.772469990689197*^9, 
   3.7724702541813574`*^9, 3.772479788163636*^9, 3.7725552849249196`*^9, 
   3.7725628171668425`*^9, 3.7745260080320835`*^9, 3.7765478416553183`*^9, 
   3.7767857911869745`*^9, 3.777671691550741*^9, 3.7777205040760393`*^9, 
   3.7777206034134417`*^9, 3.778276185374033*^9, 3.7782801343731356`*^9, 
   3.778326062343*^9, 3.779465838908134*^9, {3.77946594462018*^9, 
   3.779465946778304*^9}, 3.7794687344917517`*^9, 3.779469182254362*^9, 
   3.779629954766024*^9, 3.7796302203922167`*^9, 3.7796317855788956`*^9, 
   3.779632200650853*^9},ExpressionUUID->"81d13c67-116a-4dec-8d06-\
df5c76e1f319"]
}, Open  ]],

Cell["\<\
Reading in the trims made above from each cell in this directory\
\>", "Text",
 CellChangeTimes->{{3.7794660642780247`*^9, 
  3.7794660787738533`*^9}},ExpressionUUID->"450917a9-12eb-4318-8a74-\
92143672c66c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedTrackRGBTrimsAllCells", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBTrimsAllCellsFNs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.726703983688779*^9, 3.726704043797591*^9}, {
   3.726850109633778*^9, 3.726850154608858*^9}, {3.726939399233898*^9, 
   3.726939400392965*^9}, {3.726939458057263*^9, 3.726939458633296*^9}, {
   3.726939545489264*^9, 3.7269395466733313`*^9}, 3.771104191997132*^9, {
   3.771104889255972*^9, 3.7711049167007656`*^9}, 3.7712482310171485`*^9, {
   3.772470259826292*^9, 
   3.772470261809496*^9}},ExpressionUUID->"5967cc81-6707-43af-a29a-\
e01d80d84c4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "Is", " ", "in", " ", "the", " ", "same", " ", "order", " ", "as", " ", 
     "up", " ", "top", " ", "need", " ", "to", " ", "make", " ", "these", " ",
      "both", " ", "compatiable", " ", "with", " ", "reading", " ", "in", " ",
      "multiple", " ", 
     RowBox[{"directories", "!"}]}], "*)"}],
   FontColor->GrayLevel[0],
   Background->RGBColor[1, 1, 0]]}]], "Input",
 CellChangeTimes->{{3.77118063834064*^9, 3.7711806880109787`*^9}, {
  3.771182083612405*^9, 3.7711820929512215`*^9}, {3.771182579156645*^9, 
  3.7711825942526054`*^9}, {3.774618370413349*^9, 3.774618391137732*^9}, {
  3.779466084343172*^9, 3.7794660848862033`*^9}, {3.7794665009349995`*^9, 
  3.7794665017350454`*^9}},ExpressionUUID->"8cf56cbf-2f27-46fb-8b8a-\
9e7cc352b12b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "239", ",", "62", ",", "66", ",", "47", ",", "99", ",", "43", ",", "40", 
   ",", "47", ",", "49", ",", "85", ",", "45", ",", "46", ",", "43", ",", 
   "53", ",", "53", ",", "49", ",", "90", ",", "65", ",", "43", ",", "42", 
   ",", "59", ",", "67", ",", "54", ",", "86", ",", "41", ",", "68", ",", 
   "73", ",", "58", ",", "42", ",", "166", ",", "127", ",", "43", ",", "118", 
   ",", "57", ",", "68", ",", "49", ",", "44", ",", "155", ",", "66", ",", 
   "54", ",", "51", ",", "51", ",", "50", ",", "50", ",", "57", ",", "56", 
   ",", "46", ",", "40", ",", "176", ",", "58", ",", "53", ",", "59", ",", 
   "41", ",", "53", ",", "48", ",", "45", ",", "91", ",", "57", ",", "101", 
   ",", "92", ",", "42", ",", "73", ",", "61", ",", "59", ",", "69", ",", 
   "43", ",", "56", ",", "49", ",", "45", ",", "78", ",", "49", ",", "57", 
   ",", "40", ",", "48", ",", "47", ",", "58", ",", "56", ",", "44", ",", 
   "41"}], "}"}]], "Output",
 CellChangeTimes->{{3.7711806408834443`*^9, 3.7711806885257792`*^9}, 
   3.771180840225706*^9, 3.771247696188246*^9, 3.771248598747445*^9, 
   3.7712542702222195`*^9, 3.7713441094198103`*^9, 3.771591400438826*^9, 
   3.771591564448564*^9, 3.7716683992820807`*^9, 3.7723640651826634`*^9, 
   3.7724666935481377`*^9, 3.7724798037352448`*^9, 3.772555302289048*^9, 
   3.7725628440655537`*^9, 3.774526046927801*^9, {3.774618370710141*^9, 
   3.774618391622288*^9}, 3.7765478475465884`*^9, 3.7776716995817018`*^9, 
   3.777720516342045*^9, 3.777720615085831*^9, 3.7782761909049764`*^9, 
   3.7782801529240427`*^9, 3.778326071500735*^9, 3.7794662313295794`*^9, 
   3.7794687439772944`*^9, 3.7794691985362935`*^9, 3.779630231150832*^9, 
   3.7796317970719385`*^9, 
   3.7796322120698795`*^9},ExpressionUUID->"41604852-0d0a-4b55-b347-\
0779b3983adc"]
}, Open  ]],

Cell["\<\
Counting the number of myRedTrackRGBTrimsAllCells files, should be the same \
number as there are cells\
\>", "Text",
 CellChangeTimes->{{3.7794662386629987`*^9, 
  3.7794662639584455`*^9}},ExpressionUUID->"6a29e3e5-0b0a-4819-ab03-\
9c8941516359"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}]], "Input",
 CellChangeTimes->{{3.772470274391852*^9, 
  3.7724702781385355`*^9}},ExpressionUUID->"dc32408b-591a-43d8-88b0-\
5a8dbe228416"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{3.7724702788873367`*^9, 3.7724798037631664`*^9, 
  3.7725553023202477`*^9, 3.7725628440911818`*^9, 3.7745260470220833`*^9, 
  3.7765478492669706`*^9, 3.777671699597362*^9, 3.7777205164357605`*^9, 
  3.777720615101483*^9, 3.778276191014295*^9, 3.7782801530021524`*^9, 
  3.7783260715944233`*^9, 3.7794662313725815`*^9, 3.779466271276864*^9, 
  3.7794687440182967`*^9, 3.7794691985772963`*^9, 3.779630231182834*^9, 
  3.779632214760084*^9},ExpressionUUID->"86069752-dedd-4742-8891-\
254fd157b4ab"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"my488and561Interval", "=", "2"}], ";"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
     RowBox[{"Table", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"cell", ">", "2"}], ",", 
          RowBox[{"my488and561Interval", "=", "3"}], ",", 
          RowBox[{"my488and561Interval", "=", "2"}]}], "]"}], ";", 
        RowBox[{
         RowBox[{
          RowBox[{"GetTrimPeakIntFixedSigma95Conf", "[", 
           RowBox[{"#", ",", "1.5"}], "]"}], "&"}], "/@", 
         RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "spot", ",", "All", ",", 
            RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}], 
          "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"cell", ",", "1", ",", 
         RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", "1"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"spot", ",", "1", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", "cell", "]"}], "]"}]}], ",", "1"}], "}"}]}], "]"}]}], 
    ";"}], "*)"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Can", " ", "use", " ", "this", " ", "if", " ", "I", " ", "have", " ", 
    "some", " ", "cells", " ", "with", " ", "different", " ", "488", " ", 
    "and", " ", "561", " ", "intervals"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.771254517179126*^9, 3.771254533035681*^9}, {
   3.7723645935944653`*^9, 3.7723645950628686`*^9}, 3.772365735536687*^9, 
   3.7723685999723563`*^9, 3.774525739559769*^9, {3.7745260445063467`*^9, 
   3.77452616039508*^9}, {3.77655031497869*^9, 3.776550361332524*^9}, 
   3.7776716944094687`*^9, 3.7782761887023716`*^9, 
   3.7794663251349444`*^9},ExpressionUUID->"75a051c0-27a0-4e82-bc04-\
8024be03d053"],

Cell["Making file names for the gaussian fit information", "Text",
 CellChangeTimes->{{3.7794663475742283`*^9, 3.7794663586948643`*^9}, {
   3.779466432823104*^9, 3.7794664330631175`*^9}, 
   3.7794687617703123`*^9},ExpressionUUID->"f6bb7336-bbd3-44bf-8cf6-\
686cd1134f6d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedRGBGaussIntAllCellsFNs", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"StringTake", "[", 
       RowBox[{
        RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
         RowBox[{"[", "cell", "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"StringPosition", "[", 
            RowBox[{
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", "\"\<my\>\""}], "]"}], "//",
            "Min"}], ")"}], "-", "2"}]}], "]"}], "<>", 
      "\"\<_myRedTrackRGBGaussIntAllCells.m\>\""}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedRGBTrimsAllCellsFNs"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771339159315649*^9, 3.7713391960674744`*^9}, {
  3.7724699036657457`*^9, 
  3.772469904657156*^9}},ExpressionUUID->"42b7dba5-5ef2-4c52-87ed-\
3410608996fa"],

Cell["Importing gaussian fits below if they already exist!", "Text",
 CellChangeTimes->{{3.779630251897019*^9, 
  3.779630260777527*^9}},ExpressionUUID->"78535fb0-b8dd-449f-91a7-\
e432de2e056a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBGaussIntAllCellsFNs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7713395065739155`*^9, 3.771339513588886*^9}, {
  3.772469871409419*^9, 
  3.772469886766325*^9}},ExpressionUUID->"abd3a069-398e-476d-9d61-\
10f6f68e482d"],

Cell[TextData[{
 "Fitting the gaussian intensity of only frames that all fluorescences were \
being imaged; make sure to put the correct imaging interval below!  ",
 StyleBox[" ",
  Background->RGBColor[1, 0.5, 0]],
 StyleBox["(should not have to run this again and can just skip down to the \
uploading if you have already done this step!)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7794662814464455`*^9, 3.7794663393827596`*^9}, {
  3.7794687690327277`*^9, 
  3.779468769673764*^9}},ExpressionUUID->"132f02f2-bf6b-45a8-90c7-\
c9168f00d8d2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"my488and561Interval", "=", "2"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"GetTrimPeakIntFixedSigma95Conf", "[", 
        RowBox[{"#", ",", "1.5"}], "]"}], "&"}], "/@", 
      RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
       RowBox[{"[", 
        RowBox[{"cell", ",", "spot", ",", "All", ",", 
         RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}], 
       "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", "1"}], 
      "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"spot", ",", "1", ",", 
       RowBox[{"Length", "@", 
        RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
         RowBox[{"[", "cell", "]"}], "]"}]}], ",", "1"}], "}"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{
  3.7794663178425274`*^9},ExpressionUUID->"022bba4d-0161-4416-a1c7-\
6cb72414a2e6"],

Cell[TextData[{
 "Exporting the gaussian fit information because it takes a little while to \
run ",
 StyleBox["(should not have to run this again and can just skip down to the \
uploading if you have already done this step!)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0]]
}], "Text",
 CellChangeTimes->{{3.7794663627100935`*^9, 3.779466393222839*^9}, {
  3.7794664362793016`*^9, 
  3.779466441254586*^9}},ExpressionUUID->"e9e5ac88-1f7e-465f-87c9-\
6716eb5d2e4c"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"Put", "[", 
      RowBox[{
       RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
        RowBox[{"[", "cell", "]"}], "]"}], ",", 
       RowBox[{"myRedRGBGaussIntAllCellsFNs", "[", 
        RowBox[{"[", "cell", "]"}], "]"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"cell", ",", "1", ",", 
       RowBox[{"Length", "@", "myRedRGBGaussIntAllCellsFNs"}], ",", "1"}], 
      "}"}]}], "]"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Only", " ", "use", " ", "if", " ", "you", " ", "generated", " ", "more", 
    " ", "Gaussian", " ", "Fits", " ", "from", " ", "the", " ", "line", " ", 
    "above"}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.771339074563786*^9, 3.771339123283529*^9}, {
   3.771339178676618*^9, 3.77133928520326*^9}, {3.771339335092496*^9, 
   3.7713393351725*^9}, 3.7713393844046974`*^9, {3.771668641582382*^9, 
   3.7716686775972166`*^9}, 3.7723686164695573`*^9, {3.7724699337540655`*^9, 
   3.7724699339880657`*^9}, {3.772469964780085*^9, 3.7724699654692883`*^9}, {
   3.77247176888871*^9, 
   3.7724717691383104`*^9}},ExpressionUUID->"d0970b84-0914-4260-b52b-\
37e5f013119b"],

Cell["Importing gaussian fits below if they already exist!", "Text",
 CellChangeTimes->{{3.779630251897019*^9, 
  3.779630260777527*^9}},ExpressionUUID->"ea27b98e-1175-4640-b8da-\
125a2f2a2b1e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedTrackRGBGaussIntAllCells", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Get", "[", "#", "]"}], "&"}], "/@", 
    "myRedRGBGaussIntAllCellsFNs"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7713395065739155`*^9, 3.771339513588886*^9}, {
  3.772469871409419*^9, 
  3.772469886766325*^9}},ExpressionUUID->"140d8417-2a20-4a55-98e1-\
088eda4063b4"],

Cell["\<\
Counting the number of myRedTrackRGBGaussIntAllCells files, should be the \
same number as there are cells\
\>", "Text",
 CellChangeTimes->{{3.7794664792867613`*^9, 
  3.7794664844080544`*^9}},ExpressionUUID->"9e45e249-836f-4e8a-a56c-\
72689987fada"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedTrackRGBGaussIntAllCells"}]], "Input",
 CellChangeTimes->{{3.7724697669463034`*^9, 3.7724697757132387`*^9}, {
  3.7724698257813845`*^9, 
  3.772469836227023*^9}},ExpressionUUID->"65a39f4e-2686-4f59-899f-\
c961a10aa218"],

Cell[BoxData["2"], "Output",
 CellChangeTimes->{{3.7724697691541443`*^9, 3.772469776463441*^9}, 
   3.772469837116626*^9, {3.772471990804814*^9, 3.772472002230194*^9}, 
   3.77248170475747*^9, 3.772558129869723*^9, 3.772566592115052*^9, 
   3.7745371135305786`*^9, 3.7765491969984217`*^9, 3.776551786083285*^9, 
   3.7776864758713284`*^9, 3.7777205188883266`*^9, 3.777720631354658*^9, 
   3.778279637028822*^9, 3.778288872808666*^9, 3.7783292688288364`*^9, 
   3.7794664645999217`*^9, 3.779468785594675*^9, 3.779469219674503*^9, 
   3.7796302648387594`*^9, 
   3.779631802468557*^9},ExpressionUUID->"e883124e-df75-4be1-a9b1-\
09a336c6073b"]
}, Open  ]],

Cell["\<\
Looking at the length of each gaussian fit, should be the track number above \
divided by the 488 and 561 interval, each number is the length of the \
gaussian fits for each spot\
\>", "Text",
 CellChangeTimes->{{3.77946651125459*^9, 
  3.779466560583411*^9}},ExpressionUUID->"b09372b6-6bce-408d-ab8b-\
b08ae4b7da23"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", 
  RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.771339546115616*^9, 3.771339571043877*^9}, {
   3.772468999298591*^9, 3.7724690052818546`*^9}, 3.7724720248658347`*^9, 
   3.772481730222176*^9, {3.774618365068844*^9, 
   3.7746183850560617`*^9}},ExpressionUUID->"a9887666-da89-4e56-9faf-\
cb5175da6f11"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "120", ",", "31", ",", "33", ",", "24", ",", "50", ",", "22", ",", "20", 
   ",", "24", ",", "25", ",", "43", ",", "23", ",", "23", ",", "22", ",", 
   "27", ",", "27", ",", "25", ",", "45", ",", "33", ",", "22", ",", "21", 
   ",", "30", ",", "34", ",", "27", ",", "43", ",", "21", ",", "34", ",", 
   "37", ",", "29", ",", "21", ",", "83", ",", "64", ",", "22", ",", "59", 
   ",", "29", ",", "34", ",", "25", ",", "22", ",", "78", ",", "33", ",", 
   "27", ",", "26", ",", "26", ",", "25", ",", "25", ",", "29", ",", "28", 
   ",", "23", ",", "20", ",", "88", ",", "29", ",", "27", ",", "30", ",", 
   "21", ",", "27", ",", "24", ",", "23", ",", "46", ",", "29", ",", "51", 
   ",", "46", ",", "21", ",", "37", ",", "31", ",", "30", ",", "35", ",", 
   "22", ",", "28", ",", "25", ",", "23", ",", "39", ",", "25", ",", "29", 
   ",", "20", ",", "24", ",", "24", ",", "29", ",", "28", ",", "22", ",", 
   "21"}], "}"}]], "Output",
 CellChangeTimes->{{3.771339548019725*^9, 3.771339571637911*^9}, 
   3.771591400782464*^9, 3.7716089972226095`*^9, 3.7716686345280323`*^9, 
   3.7716686871553974`*^9, 3.7724684174801006`*^9, {3.7724690029100037`*^9, 
   3.7724690060906687`*^9}, 3.77246935183574*^9, {3.7724719908458157`*^9, 
   3.772472025115836*^9}, {3.7724817048372574`*^9, 3.7724817313065434`*^9}, 
   3.772558129903324*^9, 3.772566592166907*^9, 3.7745371135462327`*^9, {
   3.774618365553071*^9, 3.7746183855714164`*^9}, 3.7765491970609083`*^9, 
   3.776551786098869*^9, 3.7776864759025364`*^9, 3.777720520438093*^9, 
   3.777720631479594*^9, 3.7782796370600953`*^9, 3.77828887290238*^9, 
   3.7783292689382153`*^9, 3.779466465835992*^9, 3.779468795630249*^9, 
   3.779469220732563*^9, 3.7796302662468395`*^9, 
   3.7796318042541633`*^9},ExpressionUUID->"87c763a3-b1e2-4ccb-b83f-\
11caf33e6dd9"]
}, Open  ]],

Cell["\<\
This is the handtracking code, you can either click each spot one at a time \
for the downstream analyses OR you can take all the spots from a particular \
cell not both.\
\>", "Text",
 CellChangeTimes->{{3.779469805321*^9, 
  3.7794698919779563`*^9}},ExpressionUUID->"a71b9ef1-a18b-4d88-8a24-\
c7cb90af1421"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedParameterSplitColReg", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All", ",", "1", ",", "1"}], "]"}], "]"}], "//", 
  "Length"}]], "Input",
 CellChangeTimes->{{3.7796318666766148`*^9, 3.779631876669051*^9}, {
  3.7796319124543805`*^9, 
  3.7796319155175896`*^9}},ExpressionUUID->"d99d63c4-e71f-4680-820f-\
ce7e6d2d812e"],

Cell[BoxData["90"], "Output",
 CellChangeTimes->{
  3.779631877290453*^9, {3.7796319130333834`*^9, 
   3.779631916131392*^9}},ExpressionUUID->"edd1067a-ba12-4507-bbcf-\
75514bdbf296"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
   RowBox[{"[", 
    RowBox[{"1", ",", "All"}], "]"}], "]"}], "//", "Length"}]], "Input",
 CellChangeTimes->{{3.779631896694327*^9, 
  3.7796319009457417`*^9}},ExpressionUUID->"2f0f1a9e-533d-4ca1-81bb-\
ee986812ddd1"],

Cell[BoxData["79"], "Output",
 CellChangeTimes->{
  3.7796319014473433`*^9},ExpressionUUID->"8024d509-f84d-4083-8f46-\
5b85ccad5ed3"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"my488and561Interval", "=", "2"}], ";"}]], "Input",ExpressionUUID->\
"a565eb76-7e41-4d5b-838f-8faf048446ee"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"goodredspotlist", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ClearAll", "[", 
   RowBox[{"lastsaved", ",", "numbersaved"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", 
  RowBox[{
   RowBox[{"GraphicsRow", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ImageAdjust", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "1", ",", 
             RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}],
            "]"}], "//", "Mean"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageAdjust", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "2", ",", 
             RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}],
            "]"}], "//", "Mean"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageAdjust", "@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "3", ",", 
             RowBox[{"1", ";;", "All", ";;", "my488and561Interval"}]}], "]"}],
            "]"}], "//", "Mean"}], ")"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"\"\<Last Saved\>\"", ",", "lastsaved"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Number Saved\>\"", ",", "numbersaved"}], "}"}]}], "}"}], 
     ",", 
     RowBox[{"ImageSize", "\[Rule]", " ", "500"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"spot", ",", "1", ",", 
     RowBox[{"Length", "@", 
      RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
       RowBox[{"[", "cell", "]"}], "]"}]}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"cell", ",", "1", ",", 
     RowBox[{"Length", "@", "myRedTrackRGBTrimsAllCells"}], ",", "1", ",", 
     RowBox[{"Appearance", "\[Rule]", 
      RowBox[{"{", "\"\<Open\>\"", "}"}]}]}], "}"}], ",", 
   RowBox[{"Button", "[", 
    RowBox[{"\"\<Click To Save Spot\>\"", ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"lastsaved", "=", 
        RowBox[{"{", 
         RowBox[{"cell", ",", "spot"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"mytempgoodspot", "=", 
        RowBox[{"{", 
         RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "spot"}], "]"}], "]"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mytemptracknumber", "=", 
         RowBox[{"{", 
          RowBox[{"myRedParameterSplitColReg", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot", ",", "1", ",", "1"}], "]"}], "]"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"mytempgoodspotGaussInt", "=", 
         RowBox[{"{", 
          RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "spot"}], "]"}], "]"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"goodredspotlist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"goodredspotlist", ",", 
           RowBox[{"{", 
            RowBox[{"cell", ",", 
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", "mytemptracknumber", 
             ",", "  ", "mytempgoodspot", ",", "mytempgoodspotGaussInt"}], 
            "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"numbersaved", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Cells=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", 
             RowBox[{"DeleteDuplicates", "@", 
              RowBox[{"goodredspotlist", "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}]}]}], "]"}]}], ",", 
          RowBox[{"\"\<Spots=\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", "goodredspotlist"}], "]"}]}]}], "}"}]}]}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"Button", "[", 
    RowBox[{
    "\"\<Click Here If All Look Good (Take All Spots From This Cell!)\>\"", 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"mytempgoodspot", "=", 
        RowBox[{"{", 
         RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
          RowBox[{"[", 
           RowBox[{"cell", ",", "All"}], "]"}], "]"}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"mytempgoodspotGaussInt", "=", 
         RowBox[{"{", 
          RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
           RowBox[{"[", 
            RowBox[{"cell", ",", "All"}], "]"}], "]"}], "}"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"goodredspotlist", "=", 
         RowBox[{"Append", "[", 
          RowBox[{"goodredspotlist", ",", 
           RowBox[{"{", 
            RowBox[{"cell", ",", 
             RowBox[{"myRedRGBTrimsAllCellsFNs", "[", 
              RowBox[{"[", "cell", "]"}], "]"}], ",", 
             RowBox[{"Thread", "@", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"myRedParameterSplitColReg", "[", 
                 RowBox[{"[", 
                  RowBox[{"cell", ",", "All", ",", "1", ",", "1"}], "]"}], 
                 "]"}], ",", "  ", 
                RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
                 RowBox[{"[", 
                  RowBox[{"cell", ",", "All"}], "]"}], "]"}], ",", 
                RowBox[{"myRedTrackRGBGaussIntAllCells", "[", 
                 RowBox[{"[", 
                  RowBox[{"cell", ",", "All"}], "]"}], "]"}]}], "}"}]}]}], 
            "}"}]}], "]"}]}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"lastsaved", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Length", "@", "goodredspotlist"}], ",", 
          RowBox[{"Length", "@", 
           RowBox[{"myRedTrackRGBTrimsAllCells", "[", 
            RowBox[{"[", "cell", "]"}], "]"}]}]}], "}"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"numbersaved", "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Cells_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", "goodredspotlist"}], "]"}]}], ",", 
          RowBox[{"\"\<Spot_\>\"", "<>", 
           RowBox[{"ToString", "[", 
            RowBox[{"Length", "@", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"goodredspotlist", "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "3", ",", "All", ",", "3", ",", "1"}], 
                 "]"}], "]"}], ",", "1"}], "]"}]}], "]"}]}]}], "}"}]}]}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Red\>\"", ",", "Large", ",", "Red"}], "]"}], ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Green\>\"", ",", "Large", ",", " ", "Green"}], "]"}], 
       ",", 
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Blue\>\"", ",", "Large", ",", "Blue"}], "]"}]}], "}"}], 
     "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.72670444728049*^9, 3.726704494612335*^9}, {
   3.7267045433066792`*^9, 3.7267047126610384`*^9}, {3.726704795575425*^9, 
   3.726704825590955*^9}, {3.7267049120797806`*^9, 3.7267051017542987`*^9}, {
   3.726705199726963*^9, 3.7267052705855937`*^9}, {3.7267053080289145`*^9, 
   3.7267054157802563`*^9}, {3.7267056378195457`*^9, 
   3.7267056866165895`*^9}, {3.72670575329906*^9, 3.7267059095885878`*^9}, {
   3.7267060615217075`*^9, 3.7267061695090837`*^9}, {3.7267062080504427`*^9, 
   3.7267062135030823`*^9}, {3.726706286986806*^9, 3.7267063702133074`*^9}, {
   3.7267064138394628`*^9, 3.7267064216212626`*^9}, {3.7267065324965262`*^9, 
   3.7267067171595674`*^9}, {3.7267067675979524`*^9, 3.726706787920493*^9}, {
   3.7267068220780067`*^9, 3.7267069413148923`*^9}, {3.726707024880151*^9, 
   3.72670707453283*^9}, {3.726707146568262*^9, 3.7267071829611807`*^9}, {
   3.7267072137376614`*^9, 3.726707226477189*^9}, {3.726707268721161*^9, 
   3.726707302184136*^9}, {3.726707347634383*^9, 3.726707364791018*^9}, {
   3.726707439994464*^9, 3.726707443836672*^9}, {3.726707485149291*^9, 
   3.726707558360489*^9}, {3.726707663262809*^9, 3.7267076826881175`*^9}, {
   3.726707923457288*^9, 3.726707964595018*^9}, {3.7267080998717604`*^9, 
   3.7267081237994685`*^9}, {3.7267081725554085`*^9, 
   3.7267081895263786`*^9}, {3.7267085459055*^9, 3.7267085908011274`*^9}, {
   3.7267086217563486`*^9, 3.7267086347398815`*^9}, {3.726708764508135*^9, 
   3.7267087790388036`*^9}, {3.7267088268193493`*^9, 3.726708832284294*^9}, {
   3.7267100793389854`*^9, 3.7267100916891403`*^9}, {3.7267105497390027`*^9, 
   3.7267106182597256`*^9}, {3.726710703067725*^9, 3.7267107579148965`*^9}, {
   3.7267109011065965`*^9, 3.726710911114146*^9}, {3.726711018997254*^9, 
   3.7267110375604963`*^9}, 3.7267110701946545`*^9, {3.726711149049497*^9, 
   3.7267111526568685`*^9}, {3.726711638832678*^9, 3.7267116532205825`*^9}, {
   3.726711841630866*^9, 3.726711845834319*^9}, {3.72671190293672*^9, 
   3.7267119085206995`*^9}, {3.72671220690578*^9, 3.7267122619413996`*^9}, {
   3.726712299968387*^9, 3.726712359745057*^9}, {3.7267124340718036`*^9, 
   3.72671245636687*^9}, {3.72671264181277*^9, 3.726712719831187*^9}, {
   3.7267128089725804`*^9, 3.7267128585490284`*^9}, {3.726712941773153*^9, 
   3.726713016707507*^9}, {3.726713052862712*^9, 3.726713102499483*^9}, {
   3.7267131730605536`*^9, 3.726713182876116*^9}, {3.7267133374342184`*^9, 
   3.7267133411105366`*^9}, {3.7267134272537746`*^9, 3.726713449898782*^9}, {
   3.72671348549842*^9, 3.726713513101472*^9}, {3.7267135864603357`*^9, 
   3.726713620543038*^9}, {3.7267136796934414`*^9, 3.7267137452090607`*^9}, {
   3.7267137995400195`*^9, 3.7267138087567425`*^9}, {3.7267138388582473`*^9, 
   3.726713850168662*^9}, {3.726713884219524*^9, 3.7267139900602913`*^9}, {
   3.7267140387090764`*^9, 3.726714058072736*^9}, {3.726851062561329*^9, 
   3.726851108391531*^9}, {3.7268512070836864`*^9, 3.726851212437565*^9}, {
   3.7269376338929267`*^9, 3.726937649955846*^9}, {3.72693942530739*^9, 
   3.7269394273715076`*^9}, {3.726939475051235*^9, 3.726939477451372*^9}, {
   3.7269395607311354`*^9, 3.7269395635792985`*^9}, {3.726942201797196*^9, 
   3.7269422089576054`*^9}, {3.7277126591881933`*^9, 3.727712691169183*^9}, {
   3.7277234597592793`*^9, 3.727723463874364*^9}, {3.771104192899848*^9, 
   3.771104195167094*^9}, {3.771104705035037*^9, 3.771104709985818*^9}, {
   3.771104917461463*^9, 3.7711049227744875`*^9}, {3.77110502466527*^9, 
   3.7711050636739597`*^9}, {3.77110512218799*^9, 3.771105142580368*^9}, {
   3.771105177821249*^9, 3.771105179501979*^9}, {3.771105559458762*^9, 
   3.7711056152538056`*^9}, 3.771105701396356*^9, {3.771106155045681*^9, 
   3.7711061694322586`*^9}, {3.7711062865343733`*^9, 3.771106353982567*^9}, {
   3.771106687222252*^9, 3.771106747356059*^9}, {3.771106886386295*^9, 
   3.771106887573649*^9}, {3.7711069336719112`*^9, 3.77110693400566*^9}, {
   3.771106991431389*^9, 3.77110699149124*^9}, {3.771107067186936*^9, 
   3.7711071052911644`*^9}, {3.7711071443380175`*^9, 3.771107150450965*^9}, {
   3.771107480175367*^9, 3.771107485779932*^9}, {3.77110758101163*^9, 
   3.771107587390068*^9}, {3.771107630179906*^9, 3.771107731385523*^9}, {
   3.7711087620421023`*^9, 3.771108915167012*^9}, {3.7711102648967047`*^9, 
   3.7711102966488285`*^9}, 3.7711109098725834`*^9, 3.7711805101149397`*^9, {
   3.7711821099061203`*^9, 3.7711821276296186`*^9}, {3.7711822027821913`*^9, 
   3.771182207086851*^9}, {3.771251259809311*^9, 3.7712512724003563`*^9}, {
   3.771251884461932*^9, 3.7712518874811387`*^9}, {3.7712519178713427`*^9, 
   3.7712519414125175`*^9}, 3.7712519766802187`*^9, {3.771252009330611*^9, 
   3.771252038168144*^9}, {3.771252108009365*^9, 3.77125216831684*^9}, {
   3.771252302115879*^9, 3.7712523191461954`*^9}, {3.771252375622098*^9, 
   3.7712523878676023`*^9}, {3.7712524413988667`*^9, 3.771252460644271*^9}, 
   3.7712526148579383`*^9, {3.7712535088818207`*^9, 3.7712535275501785`*^9}, {
   3.771253651863454*^9, 3.7712536851915693`*^9}, {3.771253784371919*^9, 
   3.7712537929475503`*^9}, {3.7712538359869013`*^9, 
   3.7712538460131407`*^9}, {3.77125454601787*^9, 3.7712545506677256`*^9}, {
   3.771663379992488*^9, 3.771663467414769*^9}, 3.7716635013636255`*^9, {
   3.7716635344227858`*^9, 3.7716635440246916`*^9}, {3.771663615007148*^9, 
   3.7716636472792115`*^9}, {3.7716638367324543`*^9, 3.771663868951069*^9}, {
   3.7716639233597803`*^9, 3.771663923672242*^9}, {3.7716639797503815`*^9, 
   3.771663995359022*^9}, {3.7716640595620747`*^9, 3.771664069128793*^9}, {
   3.7716641198277617`*^9, 3.7716641202649746`*^9}, {3.771664433249571*^9, 
   3.7716644789326315`*^9}, {3.7716645942157526`*^9, 3.771664640629401*^9}, {
   3.77166490825998*^9, 3.771664910010008*^9}, {3.7716654484142094`*^9, 
   3.771665486839546*^9}, {3.771665531165316*^9, 3.771665554980791*^9}, {
   3.7716656138446827`*^9, 3.7716657378096695`*^9}, {3.771666138626957*^9, 
   3.7716662384771247`*^9}, {3.771666352457074*^9, 3.7716664157620444`*^9}, {
   3.771666446776373*^9, 3.771666456227687*^9}, {3.7716672400279846`*^9, 
   3.7716672480263343`*^9}, {3.771668411978709*^9, 3.7716684231966844`*^9}, {
   3.771668564555795*^9, 3.7716685668583546`*^9}, {3.7716690607418203`*^9, 
   3.7716690675398006`*^9}, {3.771669170908487*^9, 3.771669193395054*^9}, {
   3.7723705393752885`*^9, 3.772370593484759*^9}, {3.7724818428207545`*^9, 
   3.772481843136241*^9}, {3.7725667210091825`*^9, 3.7725667214600105`*^9}, {
   3.7725668742277966`*^9, 3.7725669095330324`*^9}, 3.7725675314033213`*^9, {
   3.7794667814660454`*^9, 3.779466781865068*^9}, {3.7794697275155497`*^9, 
   3.779469758539324*^9}, {3.779630347146467*^9, 3.7796304106671*^9}, {
   3.7796304528915153`*^9, 3.7796304558186827`*^9}, {3.7796306950193644`*^9, 
   3.7796306986185703`*^9}, {3.779632227357113*^9, 3.7796322396827383`*^9}, 
   3.7796323106202917`*^9, 3.7796324045306935`*^9, {3.7796324350669565`*^9, 
   3.77963245154399*^9}, {3.779632549030394*^9, 3.7796325514799995`*^9}, {
   3.779632676179264*^9, 3.779632676475665*^9}, {3.779633169685196*^9, 
   3.779633254779738*^9}, 3.779633286861253*^9, 3.779633842772143*^9, 
   3.7796339961265855`*^9},ExpressionUUID->"ee063b0b-ee99-42b6-b332-\
2d91584e4eef"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"myDataFileName", "=", "\"\<20190920_smFLAG-KDM5B\>\""}], ";"}], 
  " ", 
  StyleBox[
   RowBox[{"(*", 
    StyleBox[
     RowBox[{"Change", " ", "this", " ", "name", " ", 
      RowBox[{"first", "!"}]}],
     Background->RGBColor[1, 0.5, 0.5]], "*)"}],
   FontSize->24,
   FontColor->RGBColor[0, 1, 1]]}]], "Input",
 CellChangeTimes->{{3.7783295557633715`*^9, 
  3.778329556575842*^9}},ExpressionUUID->"a54b32b9-a50b-4011-8fed-\
df80b8d1e1d4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"HCRedTracksAllCells", "=", "goodredspotlist"}], ";"}], " ", 
  RowBox[{"(*", 
   RowBox[{
   "Need", " ", "to", " ", "now", " ", "export", " ", "it", " ", "out", " ", 
    "in", " ", "an", " ", "excel", " ", "format"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"analysisFolder", "=", "\"\<P:\\\\FCS_data\\\\\>\""}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"HCRedTracksAllCells", ">>", 
    RowBox[{"(", 
     RowBox[{
     "analysisFolder", "<>", "\"\<\\\\\>\"", "<>", "myDataFileName", "<>", 
      "\"\<_HCRedTracksAllCells.m\>\""}], ")"}]}], ";"}], 
  StyleBox[
   RowBox[{"(*", 
    RowBox[{
    "Change", " ", "the", " ", "name", " ", "of", " ", "the", " ", 
     "construct", " ", "above", " ", 
     RowBox[{"manually", "!"}]}], "*)"}],
   FontSize->18,
   Background->RGBColor[0.9, 1, 1]]}]}], "Input",
 CellChangeTimes->{{3.7713437050450096`*^9, 3.7713437479921613`*^9}, {
   3.771591239187114*^9, 3.771591277720641*^9}, {3.771669511339486*^9, 
   3.7716695120245123`*^9}, {3.771669543010857*^9, 3.771669570071046*^9}, {
   3.7716696046284475`*^9, 3.7716696622241197`*^9}, {3.7716700413804502`*^9, 
   3.771670134099656*^9}, {3.771670226904112*^9, 3.7716702372353153`*^9}, {
   3.771670275200105*^9, 3.7716702757329707`*^9}, {3.7716707792752132`*^9, 
   3.7716707943751993`*^9}, {3.7716708304549026`*^9, 
   3.7716708317647657`*^9}, {3.7716709583649693`*^9, 3.771670981434984*^9}, 
   3.7723707357386694`*^9, {3.774618414939493*^9, 3.774618431319171*^9}, {
   3.774618861497916*^9, 3.77461886542078*^9}, {3.7765478859141455`*^9, 
   3.776547889321185*^9}, {3.7765498516388025`*^9, 3.776549855172087*^9}, {
   3.7765499392525144`*^9, 3.7765499607946587`*^9}, {3.77772018997894*^9, 
   3.7777202050275207`*^9}, {3.7777207092009783`*^9, 3.777720711699691*^9}, {
   3.7782768526568775`*^9, 3.7782768551810126`*^9}, {3.7783256407489614`*^9, 
   3.7783256425766616`*^9}, {3.7783260735500565`*^9, 3.778326076502458*^9}, {
   3.7783295364561367`*^9, 3.7783295467404523`*^9}, {3.779470068155033*^9, 
   3.7794700688260717`*^9}},ExpressionUUID->"d16999a1-e00a-4868-b7d7-\
ebdf2fc404c1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorizing Species ",
 StyleBox["(Do this one if all data sets are taken at the same imaging \
intervals!)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0.5]]
}], "Subsection",
 CellChangeTimes->{{3.7712565336887317`*^9, 3.771256549774989*^9}, {
   3.771256895461563*^9, 3.77125690844001*^9}, 3.771667564980994*^9, {
   3.772559085240713*^9, 
   3.772559095860551*^9}},ExpressionUUID->"01907d9f-8a02-479f-aabe-\
dd613c6c8a1b"],

Cell["\<\
I usually make this folder separately and copy and paste the \
HCRedTracksAllCells.m into this directory that I manually make, usually the \
date and the construct(s) name that was used for the experiment\
\>", "Text",
 CellChangeTimes->{{3.7794699690813665`*^9, 3.7794699962019176`*^9}, {
  3.7794700848419876`*^9, 
  3.7794701238822203`*^9}},ExpressionUUID->"c2cf9789-ac40-4685-9d7d-\
aa70f1b66d63"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "analysisFolder", "=", "\"\<P:\\\\FCS_data\\\\20190920_smFLAG-KDM5B\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7716707113715534`*^9, 3.7716707115051904`*^9}, {
  3.7724671164470882`*^9, 3.772467118364896*^9}, {3.772482063581051*^9, 
  3.772482063775577*^9}, {3.7735677788981433`*^9, 3.7735677810405226`*^9}, {
  3.774620998674166*^9, 3.7746210067074933`*^9}, {3.7777202437475824`*^9, 
  3.7777202712616916`*^9}, {3.7777203309798365`*^9, 3.777720333169775*^9}, {
  3.7777207192945347`*^9, 3.77772072129552*^9}, {3.778279923909816*^9, 
  3.77827992657885*^9}, {3.7783256497466526`*^9, 3.7783256509651194`*^9}, {
  3.7783293774348245`*^9, 
  3.7783293800593348`*^9}},ExpressionUUID->"c46d9efc-b4b1-465e-88d1-\
862f5dfa8fea"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCellsFNs", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"analysisFolder", "<>", "\"\<\\\\*_HCRedTracksAllCells.m\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7268499807140965`*^9, 3.7268500277031384`*^9}, 
   3.7268501304843283`*^9, {3.7269371716464877`*^9, 3.726937178587885*^9}, {
   3.726937220443279*^9, 3.7269373238271923`*^9}, {3.7269373976344137`*^9, 
   3.726937442915004*^9}, {3.7269374759718943`*^9, 3.7269374836353326`*^9}, {
   3.7269375145320997`*^9, 3.7269375494910994`*^9}, {3.7269390729002333`*^9, 
   3.726939108211253*^9}, {3.7269391669966154`*^9, 3.7269391802923756`*^9}, 
   3.7269392557646923`*^9, {3.7269393961857243`*^9, 3.7269393982898445`*^9}, {
   3.7269394560891504`*^9, 3.726939457201214*^9}, {3.7269395419920635`*^9, 
   3.7269395440341806`*^9}, 3.7269396696023626`*^9, 3.7711038313818274`*^9, 
   3.7711041911838017`*^9, 3.7711042514230328`*^9, {3.771104345193139*^9, 
   3.771104346721648*^9}, {3.7711060817586875`*^9, 3.7711060821114798`*^9}, {
   3.7711061214627256`*^9, 3.7711061217529497`*^9}, {3.771247717858926*^9, 
   3.771247729244368*^9}, {3.7712477760845385`*^9, 3.771247831915947*^9}, {
   3.7712478880793476`*^9, 3.771247893116165*^9}, {3.7712484891914606`*^9, 
   3.7712484938674774`*^9}, {3.77124856166671*^9, 3.771248564073718*^9}, {
   3.771667358211341*^9, 3.7716673824530582`*^9}, 3.7716703330570135`*^9, {
   3.77167043290154*^9, 3.7716704381023245`*^9}, {3.771670671735075*^9, 
   3.771670703345566*^9}, {3.7716707525986032`*^9, 3.7716707580657115`*^9}, 
   3.7716708885510335`*^9, {3.7725682357142763`*^9, 
   3.772568235867874*^9}},ExpressionUUID->"b30b8d89-0273-4533-a8e2-\
9903cc01046b"],

Cell[CellGroupData[{

Cell[BoxData["HCRedTracksAllCellsFNs"], "Input",
 CellChangeTimes->{{3.77654989058922*^9, 
  3.776549891542282*^9}},ExpressionUUID->"d8e0d716-2d38-4b96-ba1c-\
6e144f4c91c4"],

Cell[BoxData[
 RowBox[{"{", \
"\<\"P:\\\\FCS_data\\\\20190920_smFLAG-KDM5B\\\\20190920_smFLAG-KDM5B_\
HCRedTracksAllCells.m\"\>", "}"}]], "Output",
 CellChangeTimes->{{3.7765498876504793`*^9, 3.7765498922763176`*^9}, 
   3.776550021091137*^9, 3.7765523281337643`*^9, 3.7765527213411355`*^9, 
   3.7765530007827225`*^9, 3.776553543714381*^9, 3.776554359884647*^9, 
   3.7767857988848705`*^9, 3.77772033696487*^9, 3.777720792418478*^9, 
   3.778279974764991*^9, 3.7783258065156527`*^9, 3.778329383248479*^9, 
   3.778329696674202*^9, 
   3.7796307784051332`*^9},ExpressionUUID->"fe178984-2296-4c23-8e3f-\
9cd492ae896f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCells", "=", 
   RowBox[{"Get", "[", 
    RowBox[{"HCRedTracksAllCellsFNs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771667421766527*^9, 3.771667432416176*^9}, {
  3.7716705914173775`*^9, 3.7716706042301598`*^9}, {3.7716710463545685`*^9, 
  3.7716710837966347`*^9}, {3.7724821044041605`*^9, 
  3.772482105531851*^9}},ExpressionUUID->"5c31b0b5-b3b6-4726-8d5d-\
163ea608fc9b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HCRedTracksAllCells", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7716691178736916`*^9, 
  3.7716691194146185`*^9}},ExpressionUUID->"302bf95d-c4af-45a0-bee4-\
5468ec5e9e09"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.771669125315364*^9, 3.771670470106185*^9, 
  3.7716710974780445`*^9, 3.772372437833399*^9, 3.772378846661028*^9, 
  3.7724820676110845`*^9, 3.7724821132562275`*^9, 3.7724823141608334`*^9, 
  3.772558820493142*^9, 3.7725626428481207`*^9, 3.7725682699189644`*^9, 
  3.7735678392674627`*^9, 3.776549437351885*^9, 3.776549877851562*^9, 
  3.7765500254823217`*^9, 3.7765523324980717`*^9, 3.776552726214979*^9, 
  3.7765530056608095`*^9, 3.776553547965028*^9, 3.7765543643004627`*^9, 
  3.776785814975103*^9, 3.7777203480601254`*^9, 3.7777208101403065`*^9, 
  3.778279981551136*^9, 3.7783258261466756`*^9, 3.7783293960430107`*^9, 
  3.778329706412006*^9, 
  3.7796307882826986`*^9},ExpressionUUID->"93d163e3-cafd-488e-a234-\
129d8d051a02"]
}, Open  ]],

Cell["\<\
This is the spot detector or \[OpenCurlyDoubleQuote]species\
\[CloseCurlyDoubleQuote] definer function; it will define 4 types of species; \
all species must have a red signal (JF646, RNA signal); the species are \
categorized as: Red tracks, Red + Green tracks, Red + Green + Blue tracks, \
and Red + Blue tracks; these colors are based on the light of excitation!\
\>", "Text",
 CellChangeTimes->{{3.7794701301215773`*^9, 
  3.7794702687295055`*^9}},ExpressionUUID->"0a0a640c-71e4-438d-ba37-\
96fb49b393ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies", "=", 
   RowBox[{"SpeciesPlotDataFN", "[", 
    RowBox[{"HCRedTracksAllCells", ",", "5", ",", "2"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.772450968071106*^9, 3.772450998178537*^9}, {
   3.7724510310814095`*^9, 3.77245104658282*^9}, {3.7724521805911613`*^9, 
   3.7724521809950485`*^9}, {3.7724535712536964`*^9, 3.772453572131628*^9}, {
   3.7735677916029243`*^9, 3.7735677948069725`*^9}, 3.776549408779958*^9, {
   3.776554167900709*^9, 3.7765541684786916`*^9}, {3.776554372447933*^9, 
   3.776554373777374*^9}, 3.7765550799616776`*^9, 3.776555149396467*^9, {
   3.776556050606642*^9, 3.7765561020595036`*^9}, {3.77655614253508*^9, 
   3.776556146632125*^9}, 3.776556379506573*^9, 3.7777203574985385`*^9, 
   3.7782799860058193`*^9},ExpressionUUID->"53b37473-2c89-48a8-944b-\
7e1e7263a186"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Thread", "@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Red\>\"", ",", "\"\<Red+Green\>\"", ",", "\"\<Red+Green+Blue\>\"", 
      ",", "\"\<Red+Blue\>\""}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.776556684707774*^9, 3.776556686155899*^9}, {
  3.779630879257902*^9, 3.7796309253865404`*^9}, {3.7796311402668304`*^9, 
  3.7796311580738497`*^9}},ExpressionUUID->"f91e2b66-a182-4339-b093-\
2e396feab5e9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"104", ",", "\<\"Red\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"74", ",", "\<\"Red+Green\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\<\"Red+Green+Blue\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\<\"Red+Blue\"\>"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7765566869208527`*^9, 3.7767858343819466`*^9, 3.7777203717777176`*^9, 
   3.7777208294005404`*^9, 3.7782799958056965`*^9, 3.778325854636917*^9, 
   3.778329412060232*^9, 3.7783297221042223`*^9, 3.7796308706144075`*^9, 
   3.779630926054579*^9, {3.7796311459581566`*^9, 
   3.7796311585988793`*^9}},ExpressionUUID->"925f36f4-1c5d-4bef-b5a3-\
d41f2a58501f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Categorizing Species ",
 StyleBox["(Do this one if you have two data sets that are taken with \
different imaging intervals! Do not need to use otherwise)",
  FontColor->RGBColor[0, 1, 1],
  Background->RGBColor[1, 0.5, 0.5]]
}], "Subsection",
 CellChangeTimes->{{3.772558943681994*^9, 3.772558962214861*^9}, {
  3.7794702898497133`*^9, 
  3.7794702942019625`*^9}},ExpressionUUID->"a903b405-7d02-473d-9978-\
a7ba108ccb55"],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "analysisFolder", "=", 
   "\"\<P:\\\\FCS_data\\\\12xSun-KDM5B_1xFLAG-12x-AlexX\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7716707113715534`*^9, 3.7716707115051904`*^9}, {
   3.7724671164470882`*^9, 3.772467118364896*^9}, {3.772482063581051*^9, 
   3.772482063775577*^9}, 
   3.7746210276020517`*^9},ExpressionUUID->"17824144-8bf2-405c-8cef-\
62a7f1b9e865"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCellsFNs", "=", 
   RowBox[{"FileNames", "[", 
    RowBox[{"analysisFolder", "<>", "\"\<\\\\*_HCRedTracksAllCells.m\>\""}], 
    "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7268499807140965`*^9, 3.7268500277031384`*^9}, 
   3.7268501304843283`*^9, {3.7269371716464877`*^9, 3.726937178587885*^9}, {
   3.726937220443279*^9, 3.7269373238271923`*^9}, {3.7269373976344137`*^9, 
   3.726937442915004*^9}, {3.7269374759718943`*^9, 3.7269374836353326`*^9}, {
   3.7269375145320997`*^9, 3.7269375494910994`*^9}, {3.7269390729002333`*^9, 
   3.726939108211253*^9}, {3.7269391669966154`*^9, 3.7269391802923756`*^9}, 
   3.7269392557646923`*^9, {3.7269393961857243`*^9, 3.7269393982898445`*^9}, {
   3.7269394560891504`*^9, 3.726939457201214*^9}, {3.7269395419920635`*^9, 
   3.7269395440341806`*^9}, 3.7269396696023626`*^9, 3.7711038313818274`*^9, 
   3.7711041911838017`*^9, 3.7711042514230328`*^9, {3.771104345193139*^9, 
   3.771104346721648*^9}, {3.7711060817586875`*^9, 3.7711060821114798`*^9}, {
   3.7711061214627256`*^9, 3.7711061217529497`*^9}, {3.771247717858926*^9, 
   3.771247729244368*^9}, {3.7712477760845385`*^9, 3.771247831915947*^9}, {
   3.7712478880793476`*^9, 3.771247893116165*^9}, {3.7712484891914606`*^9, 
   3.7712484938674774`*^9}, {3.77124856166671*^9, 3.771248564073718*^9}, {
   3.771667358211341*^9, 3.7716673824530582`*^9}, 3.7716703330570135`*^9, {
   3.77167043290154*^9, 3.7716704381023245`*^9}, {3.771670671735075*^9, 
   3.771670703345566*^9}, {3.7716707525986032`*^9, 3.7716707580657115`*^9}, 
   3.7716708885510335`*^9, {3.7725682357142763`*^9, 
   3.772568235867874*^9}},ExpressionUUID->"65c56447-9c48-4c90-9f20-\
a799d213c415"],

Cell[BoxData[
 RowBox[{
  RowBox[{"HCRedTracksAllCells", "=", 
   RowBox[{"Get", "[", 
    RowBox[{"HCRedTracksAllCellsFNs", "[", 
     RowBox[{"[", "1", "]"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.771667421766527*^9, 3.771667432416176*^9}, {
  3.7716705914173775`*^9, 3.7716706042301598`*^9}, {3.7716710463545685`*^9, 
  3.7716710837966347`*^9}, {3.7724821044041605`*^9, 
  3.772482105531851*^9}},ExpressionUUID->"c87eb03b-01b5-4d05-b56d-\
f27376c18c21"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"HCRedTracksAllCells", "//", "Dimensions"}]], "Input",
 CellChangeTimes->{{3.7716691178736916`*^9, 
  3.7716691194146185`*^9}},ExpressionUUID->"dc43848e-b743-499c-80bf-\
43ed7de0ae96"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"5", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.771669125315364*^9, 3.771670470106185*^9, 
  3.7716710974780445`*^9, 3.772372437833399*^9, 3.772378846661028*^9, 
  3.7724820676110845`*^9, 3.7724821132562275`*^9, 3.7724823141608334`*^9, 
  3.772558820493142*^9, 3.7725626428481207`*^9, 3.7725682699189644`*^9, 
  3.7746210973504114`*^9},ExpressionUUID->"d17929e9-0712-41e6-a2d3-\
f9f7200494c5"]
}, Open  ]],

Cell["\<\
I am defining cells that might have had different imaging intervals below, \
usually don\[CloseCurlyQuote]t need to use this code; you will partition the \
HCRedTracksAllCells into two lists or more\
\>", "Text",
 CellChangeTimes->{{3.7794703153541718`*^9, 
  3.779470376793686*^9}},ExpressionUUID->"d8ff044c-9f7b-4cde-b1e4-\
8180c5fdc679"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"HCRedTracksAllCells1", "=", 
   RowBox[{"HCRedTracksAllCells", "[", 
    RowBox[{"[", 
     RowBox[{"1", ";;", "2"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"HCRedTracksAllCells2", "=", 
   RowBox[{"HCRedTracksAllCells", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;", "5"}], "]"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.774621072861703*^9, 3.774621105539098*^9}, {
  3.774621267276846*^9, 
  3.7746212696997967`*^9}},ExpressionUUID->"e2146957-ef5e-4dca-a735-\
6186f3802e26"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies1", "=", 
   RowBox[{"SpeciesPlotDataFN", "[", 
    RowBox[{"HCRedTracksAllCells1", ",", "5", ",", "2"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies2", "=", 
   RowBox[{"SpeciesPlotDataFN", "[", 
    RowBox[{"HCRedTracksAllCells2", ",", "5", ",", "3"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7725589811397295`*^9, 3.772558993243971*^9}, {
   3.7725590313275137`*^9, 3.772559032296517*^9}, 3.7725590674136486`*^9, 
   3.772559239452609*^9, 3.7725593834216547`*^9, 3.772568932740918*^9, {
   3.7746211101649323`*^9, 
   3.774621118027359*^9}},ExpressionUUID->"7ea9f0ba-69ba-4fc5-9677-\
70952f8d51a9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies1"}]], "Input",
 CellChangeTimes->{{3.7725591777230186`*^9, 3.7725591787504478`*^9}, 
   3.7725592260824194`*^9, {3.7746212843879304`*^9, 
   3.7746212857469625`*^9}},ExpressionUUID->"5ce7e2cc-a540-4c1b-8acf-\
8cbb86cfacc8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"114", ",", "11", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.77255917937366*^9, 3.7725592264568205`*^9, 
  3.7725592657712708`*^9, 3.772559311235821*^9, 3.7725685545178194`*^9, 
  3.772569017069543*^9, 3.772569192198102*^9, 
  3.7746213323523445`*^9},ExpressionUUID->"5f4fbc7a-a755-4eae-ae07-\
8df9b3356dfd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Total", "@", 
  RowBox[{"(", 
   RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies1"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.772568973410221*^9, 
  3.7725689764256315`*^9}},ExpressionUUID->"cc5215ef-8f8b-4dc5-a8ac-\
526a2f1d9621"],

Cell[BoxData["136"], "Output",
 CellChangeTimes->{3.7725690172871656`*^9, 3.7725691922928505`*^9, 
  3.7746213324616947`*^9},ExpressionUUID->"0cee0828-b645-4593-836c-\
d18b54d35e20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies2"}]], "Input",
 CellChangeTimes->{{3.772559170366715*^9, 3.7725591714265428`*^9}, 
   3.7725592221627474`*^9},ExpressionUUID->"bd7ff16c-9a5e-42f2-85a4-\
f1171e92265e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"329", ",", "10", ",", "3", ",", "12"}], "}"}]], "Output",
 CellChangeTimes->{3.772559172019344*^9, 3.7725592226473484`*^9, 
  3.7725594361279545`*^9, 3.772568554619548*^9, 3.7725689213297462`*^9, 
  3.772569017177841*^9, 3.772569192387597*^9, 
  3.7746213325398006`*^9},ExpressionUUID->"032b6017-9a10-431e-bb4d-\
361590609bd9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", 
  RowBox[{"Join", "[", 
   RowBox[{
    RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
     RowBox[{"[", "1", "]"}], "]"}], ",", 
    RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.772569766486311*^9, 
  3.772569772764415*^9}},ExpressionUUID->"74509835-e59a-4566-bc7a-\
ffe04a7f994f"],

Cell[BoxData["443"], "Output",
 CellChangeTimes->{3.772569773230813*^9, 
  3.77462133264915*^9},ExpressionUUID->"0ec252aa-b09f-4c59-9d7c-aab3d16cbf0a"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myHCRedTracksAllCellsSpecies", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"3", ",", "All"}], "]"}], "]"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Join", "[", 
      RowBox[{
       RowBox[{"myHCRedTracksAllCellsSpecies1", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "All"}], "]"}], "]"}], ",", 
       RowBox[{"myHCRedTracksAllCellsSpecies2", "[", 
        RowBox[{"[", 
         RowBox[{"4", ",", "All"}], "]"}], "]"}]}], "]"}]}], "}"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.772569252306101*^9, 3.7725693249638824`*^9}, {
  3.7725695356893177`*^9, 3.7725695627769384`*^9}, {3.7725695943189273`*^9, 
  3.7725696948457127`*^9}, {3.772569786911812*^9, 3.772569825404396*^9}, {
  3.7725698787755775`*^9, 3.772569912002131*^9}, {3.7725699944418087`*^9, 
  3.7725700541983166`*^9}, {3.7725700934595327`*^9, 
  3.7725701058471828`*^9}},ExpressionUUID->"1867a164-36e8-464a-95a3-\
1613bb8aa952"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "/@", "myHCRedTracksAllCellsSpecies"}]], "Input",
 CellChangeTimes->{{3.7725701136749177`*^9, 
  3.7725701149413795`*^9}},ExpressionUUID->"ab66ac41-86d4-4ce0-8fc7-\
dcad2ca216a7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"443", ",", "21", ",", "8", ",", "18"}], "}"}]], "Output",
 CellChangeTimes->{3.772570115503615*^9, 
  3.7746213327897425`*^9},ExpressionUUID->"c82c1841-9c31-4011-bb58-\
a9d93c307b1e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Exporting Out Excel With Intensities", "Subsection",
 CellChangeTimes->{{3.772454151912381*^9, 
  3.7724541576942983`*^9}},ExpressionUUID->"c7316399-f6c6-435b-bf36-\
ca5f75fa72e4"],

Cell["This is making the labels for the excel sheet here", "Text",
 CellChangeTimes->{{3.779470297274138*^9, 
  3.779470305145588*^9}},ExpressionUUID->"3de14f0a-4f1c-4384-9425-\
a4da7e5bcd75"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mylabel", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Cell_#\>\"", ",", "\"\<Spot_#\>\"", ",", "\"\<Time_(sec)\>\"", ",", 
     "\"\<R_GaussianInt\>\"", ",", " ", "\"\<R_95Conf\>\"", ",", 
     "\"\<G_GaussianInt\>\"", ",", "\"\<G_95Conf\>\"", ",", 
     "\"\<B_GaussianInt\>\"", ",", "\"\<B_95Conf\>\"", ",", 
     "\"\<Predicted_Species\>\""}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQzeIarBt46rWji3aNBYjWWRkirXj2teORtoOyIHrl
une7w6+9dmT/bL0XRE8/W7Tg+fvXjhkhaStAtKBOcfgLIP3ddX00iF6/eH8S
iP7W/zMVRN9/f2nTOyCdHdW4GUSLMFufqWJ+4/jE4u5ZEN178/UVEG0QmHoV
RG8KDX0Dopsk5D+AaDe5E19B9KW4qh8g+l7KQoVqIM3qfwRMh27xT+sG0ncS
CsH0mbA7PSB6x8uPYPr14X/zQbTbEa+FIDqDoXoViP427etqEN317c1ZEN33
xeEciHbQzVqUJP3GsVqzYR2I5hX6sjMVSOe5mO8G0QsPKLwH0Rprl34C0RLK
jKZpQLqowhVMAwAfXK6D
  "],ExpressionUUID->"081db12e-1d9e-4ac0-8061-93df2c0e5593"],

Cell["This sorts the cells and spots into an excel format", "Text",
 CellChangeTimes->{{3.7794703930656166`*^9, 
  3.779470413977813*^9}},ExpressionUUID->"d7105aa8-1365-45f5-a6f2-\
44e110b890dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myXLSdata", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
             RowBox[{"[", 
              RowBox[{"species", ",", "track", ",", "1"}], "]"}], "]"}], ",", 
            RowBox[{"Length", "@", 
             RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{
            RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
             RowBox[{"[", 
              RowBox[{"species", ",", "track", ",", "2"}], "]"}], "]"}], ",", 
            RowBox[{"Length", "@", 
             RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "1", ",", "All", ",", 
             "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "1", ",", "All", ",", 
             "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "2", ",", "All", ",", 
             "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "2", ",", "All", ",", 
             "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "3", ",", "All", ",", 
             "1"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", 
            RowBox[{
            "species", ",", "track", ",", "5", ",", "3", ",", "All", ",", 
             "2"}], "]"}], "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ConstantArray", "[", 
           RowBox[{"species", ",", 
            RowBox[{"Length", "@", 
             RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
              RowBox[{"[", 
               RowBox[{"species", ",", "track", ",", "4"}], "]"}], "]"}]}]}], 
           "]"}]}], "}"}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"species", ",", "1", ",", 
         RowBox[{"Length", "@", "myHCRedTracksAllCellsSpecies"}], ",", "1"}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"track", ",", "1", ",", 
         RowBox[{"Length", "@", 
          RowBox[{"myHCRedTracksAllCellsSpecies", "[", 
           RowBox[{"[", "species", "]"}], "]"}]}], ",", "1"}], "}"}]}], "]"}],
      ",", "1"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.749660209589438*^9, 3.749660294369785*^9}, 
   3.749671966324031*^9, 3.749673005906926*^9, {3.7599208225686803`*^9, 
   3.7599208575103045`*^9}, {3.759954742532348*^9, 3.759954743399576*^9}, {
   3.7599550505242443`*^9, 3.759955051437952*^9}, 3.759955194086593*^9, 
   3.7599555420063477`*^9, {3.7599555768168535`*^9, 3.7599555832785854`*^9}, {
   3.7724542674435053`*^9, 3.772454284028864*^9}, 3.7724606870949526`*^9, {
   3.772460798245269*^9, 3.772460848287587*^9}, {3.772461041440253*^9, 
   3.772461115691059*^9}, {3.772571479087079*^9, 3.772571486055784*^9}, {
   3.7725715703722987`*^9, 3.772571572815467*^9}, {3.77257163710266*^9, 
   3.772571650255706*^9}, {3.7725717644397087`*^9, 
   3.7725717917696686`*^9}},ExpressionUUID->"e9158007-53ab-46ea-89d5-\
5bc75aece1bb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myXLSdataThread", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Thread", "@@", "#"}], "&"}], "/@", "myXLSdata"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.772571749673997*^9, 3.772571862550685*^9}, {
   3.772571961665813*^9, 3.772571964753851*^9}, 
   3.7765495056942024`*^9},ExpressionUUID->"78f7254f-8cb9-4698-b63c-\
67632484f5a6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mylabelandXLSdata", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "mylabel", "}"}], ",", 
     RowBox[{"Flatten", "[", 
      RowBox[{"myXLSdataThread", ",", "1"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.75995555157301*^9, {3.7599555906397734`*^9, 3.7599555947255683`*^9}, {
   3.7724543718597655`*^9, 3.772454381238779*^9}, {3.772460697197296*^9, 
   3.7724607019144*^9}, {3.772460733947005*^9, 3.7724607425016365`*^9}, 
   3.772571913035043*^9, 
   3.7725719695037823`*^9},ExpressionUUID->"4fa71029-60da-42bf-931c-\
57c567fc6640"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"mylabelandXLSdata", "//", "Length"}]], "Input",
 CellChangeTimes->{{3.772482550879939*^9, 
  3.772482551832724*^9}},ExpressionUUID->"fbfe08b1-54b6-4774-bcbc-\
39f40c26d2a3"],

Cell[BoxData["6489"], "Output",
 CellChangeTimes->{
  3.772482552363804*^9, 3.7725701309253364`*^9, 3.772571531878706*^9, 
   3.7725715750179987`*^9, {3.7725716271570015`*^9, 3.7725716541068926`*^9}, 
   3.772571710486582*^9, 3.772571919330225*^9, 3.77257197523059*^9, 
   3.7735680693499565`*^9, 3.774622009052677*^9, 3.776556489500802*^9, 
   3.776785857853194*^9, 3.7777204139181633`*^9, 3.777720834479637*^9, 
   3.778280035690029*^9, 3.7783259422038746`*^9, 3.7783297223801804`*^9, 
   3.779631235030251*^9},ExpressionUUID->"0bc62a9c-32f8-496e-a3f7-\
033f3bf22017"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"mylabelandXLSdata", "[", 
   RowBox[{"[", 
    RowBox[{"1", ";;", "10"}], "]"}], "]"}], "//", "TableForm"}]], "Input",
 CellChangeTimes->{{3.731425527744526*^9, 3.731425532252339*^9}, {
   3.731425618578373*^9, 3.7314256213345823`*^9}, {3.7314256788789406`*^9, 
   3.731425689115365*^9}, {3.7362559540330524`*^9, 3.7362559566092005`*^9}, {
   3.736256239330371*^9, 3.7362562401774197`*^9}, 3.741013860473031*^9, 
   3.748089655325256*^9, 3.7496581014526386`*^9, {3.7496592960985994`*^9, 
   3.749659299159046*^9}, 3.7496594531687813`*^9, {3.749659513812601*^9, 
   3.7496595441842203`*^9}, {3.749659678956129*^9, 3.749659679070837*^9}, {
   3.749660246529481*^9, 3.7496602612994165`*^9}, {3.7496709045254803`*^9, 
   3.749670924205082*^9}, {3.7496709784851837`*^9, 3.7496709824505963`*^9}, 
   3.7599208651767855`*^9, {3.7599221523781033`*^9, 3.7599221533309994`*^9}, {
   3.759954748964026*^9, 3.7599547498858166`*^9}, {3.7599550554537663`*^9, 
   3.7599550565650244`*^9}, {3.772460705987834*^9, 3.7724607229744315`*^9}, {
   3.7724825557671757`*^9, 3.7724826026252217`*^9}, 3.7725377071627903`*^9, {
   3.7725707552208004`*^9, 3.7725707721814604`*^9}, {3.772570841068262*^9, 
   3.7725708587031217`*^9}, {3.772570931789529*^9, 3.7725709422406006`*^9}, {
   3.772571064115486*^9, 3.772571115846696*^9}, {3.772571166377205*^9, 
   3.7725711689058456`*^9}, {3.772571939913036*^9, 
   3.7725719447378464`*^9}},ExpressionUUID->"22531bb8-dc20-415c-b6bb-\
0962f78a340f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Cell_#\"\>", "\<\"Spot_#\"\>", "\<\"Time_(sec)\"\>", \
"\<\"R_GaussianInt\"\>", "\<\"R_95Conf\"\>", "\<\"G_GaussianInt\"\>", \
"\<\"G_95Conf\"\>", "\<\"B_GaussianInt\"\>", "\<\"B_95Conf\"\>", \
"\<\"Predicted_Species\"\>"},
    {"1", "1", "2", "0.013751988891131215`", "0.0042947157714443305`", 
     "0.10125066593980855`", "0.027836378268292085`", 
     RowBox[{"-", "0.0009870256915497548`"}], "0.0019242667903006196`", "1"},
    {"1", "1", "12", "0.012890955733828908`", "0.003791424114404429`", 
     "0.10734550304923914`", "0.028754123621311408`", 
     RowBox[{"-", "0.0010342828671661198`"}], "0.0023417701627395605`", "1"},
    {"1", "1", "22", "0.011260144207847024`", "0.003993413305841161`", 
     "0.09824626233431807`", "0.028832567115228667`", 
     RowBox[{"-", "0.00166692310650648`"}], "0.0022687016369869416`", "1"},
    {"1", "1", "32", "0.01159337053623875`", "0.002973103923604313`", 
     "0.09220341330274666`", "0.026474844498779546`", 
     RowBox[{"-", "0.0006468129758803839`"}], "0.0020152209316346968`", "1"},
    {"1", "1", "42", "0.011046962904543947`", "0.002769097855114872`", 
     "0.10556207118447303`", "0.030951849069358876`", 
     "0.0004797836441040227`", "0.001904221419262246`", "1"},
    {"1", "1", "52", "0.010801482401339074`", "0.003090427002307405`", 
     "0.10501283959558255`", "0.027638679689866774`", "0.002328177347647512`",
      "0.0022682400438450833`", "1"},
    {"1", "1", "62", "0.012505668567661636`", "0.0031521546215801614`", 
     "0.09539135600736222`", "0.031719056256554364`", 
     "0.0019334694123139414`", "0.0018829089238654477`", "1"},
    {"1", "1", "72", "0.015526915938307198`", "0.0029193290741500394`", 
     "0.10938735854735018`", "0.03587228256304989`", 
     RowBox[{"-", "0.0015857357149152902`"}], "0.002178896296386022`", "1"},
    {"1", "1", "82", "0.013825415899866756`", "0.0031309864258001444`", 
     "0.12182625502489153`", "0.032531777291117794`", 
     RowBox[{"-", "0.00129022298423337`"}], "0.0019031108960335778`", "1"}
   },
   GridBoxAlignment->{
    "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
     "RowsIndexed" -> {}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}, "RowsIndexed" -> {}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.7367707324566946`*^9, 3.741883420839083*^9, 3.7418836222756047`*^9, 
   3.749415169673113*^9, 3.749578543402894*^9, 3.7495826580228105`*^9, {
   3.749593315140524*^9, 3.7495933343642282`*^9}, {3.749659292600521*^9, 
   3.7496592995789394`*^9}, 3.749659398088788*^9, {3.749659471148951*^9, 
   3.7496594819687915`*^9}, {3.7496595144286623`*^9, 
   3.7496595506852903`*^9}, {3.749659675716565*^9, 3.7496596796831408`*^9}, 
   3.74965974140127*^9, 3.7496598011236706`*^9, {3.749660254654272*^9, 
   3.749660296969406*^9}, 3.749661310671708*^9, 3.7496618408338165`*^9, {
   3.749670890943482*^9, 3.749670934442072*^9}, 3.7496709831195097`*^9, 
   3.749671449681003*^9, 3.7496715291137404`*^9, 3.74967196883941*^9, 
   3.7496730273325825`*^9, 3.7599216549121695`*^9, {3.7599216852570453`*^9, 
   3.759921688200177*^9}, {3.759922139113125*^9, 3.759922154315146*^9}, 
   3.7599536428811502`*^9, 3.759955600373714*^9, 3.7600409921802635`*^9, 
   3.76045331932522*^9, 3.7605321030130014`*^9, {3.772460724157648*^9, 
   3.7724607448039784`*^9}, {3.77246112051807*^9, 3.7724611290179977`*^9}, 
   3.7724614868673754`*^9, {3.7724825414616947`*^9, 3.77248260354834*^9}, 
   3.7725377074862723`*^9, 3.7725701323930664`*^9, {3.7725706074487715`*^9, 
   3.772570626952263*^9}, {3.7725707609843683`*^9, 3.772570772839699*^9}, 
   3.772570850161954*^9, {3.7725709356611943`*^9, 3.77257094269436*^9}, {
   3.7725710652460036`*^9, 3.7725710702826614`*^9}, 3.772571116703187*^9, 
   3.7725711694274406`*^9, 3.7725714987061315`*^9, 3.772571533849718*^9, 
   3.772571576674818*^9, {3.7725719337872972`*^9, 3.772571944990063*^9}, 
   3.772571975917937*^9, 3.7735682875797534`*^9, 3.774622010146171*^9, 
   3.7765564903443527`*^9, 3.776785861493001*^9, 3.7777204151216555`*^9, 
   3.7777208355731287`*^9, 3.7782800362055273`*^9, 3.7783259431124496`*^9, 
   3.7783297225051165`*^9, 
   3.7796312376784024`*^9},ExpressionUUID->"8d5c3c04-ab61-413c-8eee-\
8f14f7056e52"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"myDataFileName", "=", "\"\<20190920_smFLAG-KDM5B\>\""}], " ", ";", 
  StyleBox[
   RowBox[{
    StyleBox[
     RowBox[{
      StyleBox["(",
       FontColor->RGBColor[1, 0.5, 0.5]], 
      StyleBox["*",
       FontColor->GrayLevel[0]]}]], 
    RowBox[{
     StyleBox["Change",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[" ",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox["this",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[" ",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox["name",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[" ",
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox[
      RowBox[{"first", "!"}],
      FontColor->GrayLevel[0],
      Background->RGBColor[1, 0.5, 0.5]], 
     StyleBox["*",
      FontColor->GrayLevel[0]], 
     StyleBox[")",
      FontColor->RGBColor[1, 0.5, 0.5]]}]}],
   FontSize->24]}]], "Input",
 CellChangeTimes->{{3.778329407419142*^9, 3.7783294716873283`*^9}, 
   3.7783297157600975`*^9},ExpressionUUID->"b78fad86-b8cf-4650-a2e2-\
40538d448a4c"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{
    "\"\<D:\\\\Dropbox\\\\Work Folder\\\\CSU Graduate Work\\\\Stasevich Lab\\\
\\Paper Work\\\\Frameshift\\\\Figures\\\\_Mathematica\\\\munsky_data\\\\\
Multiplex_FCS\>\"", "<>", "\"\<\\\\\>\"", "<>", "myDataFileName", "<>", 
     "\"\<.xls\>\""}], ",", "mylabelandXLSdata", ",", "\"\<XLS\>\""}], "]"}], 
  RowBox[{"(*", 
   RowBox[{
   "Need", " ", "to", " ", "name", " ", "this", " ", "correctly", " ", 
    "before", " ", 
    RowBox[{"export", "!"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.7724611436913133`*^9, 3.772461167049985*^9}, {
   3.772461257394133*^9, 3.772461281097823*^9}, {3.7724614323043356`*^9, 
   3.7724614407480354`*^9}, {3.772570148107783*^9, 3.772570192440937*^9}, {
   3.77257063485015*^9, 3.772570648542541*^9}, {3.772570798398366*^9, 
   3.7725708017194843`*^9}, {3.7725708728034325`*^9, 3.772570908519889*^9}, {
   3.7725709553445683`*^9, 3.772570994318164*^9}, 3.7725711403785257`*^9, {
   3.772571179083581*^9, 3.7725712114567947`*^9}, {3.7725713857989397`*^9, 
   3.772571404908318*^9}, {3.7725715215333667`*^9, 3.772571523455594*^9}, {
   3.7725719902229905`*^9, 3.7725719905918255`*^9}, {3.77356803008321*^9, 
   3.7735680658649178`*^9}, {3.774622019467615*^9, 3.7746220245152435`*^9}, {
   3.7765564976915493`*^9, 3.7765565013599215`*^9}, {3.7767937012473755`*^9, 
   3.7767937039359264`*^9}, {3.7777204288265514`*^9, 3.777720456173109*^9}, {
   3.7777208422472305`*^9, 3.7777208445923223`*^9}, {3.778280047037236*^9, 
   3.7782800507745237`*^9}, {3.7783259752606525`*^9, 
   3.7783259771374846`*^9}, {3.7783293985495176`*^9, 3.778329399606881*^9}, {
   3.778329447550417*^9, 
   3.778329458029941*^9}},ExpressionUUID->"911606e9-9293-4d06-8f0f-\
c34a081061a1"],

Cell[BoxData["\<\"D:\\\\Dropbox\\\\Work Folder\\\\CSU Graduate \
Work\\\\Stasevich Lab\\\\Paper \
Work\\\\Frameshift\\\\Figures\\\\_Mathematica\\\\munsky_data\\\\Multiplex_FCS\
\\\\20190920_smFLAG-KDM5B.xls\"\>"], "Output",
 CellChangeTimes->{3.778325986279167*^9, 3.7783295909148135`*^9, 
  3.7783297304353733`*^9},ExpressionUUID->"28ee183c-3e59-4a1e-a35c-\
56ae1ba1c593"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Making Average Trims From  (*May need to do this later after hand \
categorizing*)\
\>", "Subsection",
 CellChangeTimes->{{3.717792623569831*^9, 3.7177926650643053`*^9}, {
  3.771103393891865*^9, 3.7711034033088675`*^9}, {3.771103458862124*^9, 
  3.771103471776307*^9}, {3.7711035281225777`*^9, 
  3.771103538951401*^9}},ExpressionUUID->"962bcd22-6bd1-458a-b4f3-\
02cb8c711d56"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myCombineMaxRedDelta", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Max", "@@", 
    RowBox[{"Differences", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOR"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYR"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWR"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPR"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPR"}]}], ")"}]}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730668192827387*^9, 3.7306682141864457`*^9}, 
   3.7306684236231766`*^9, {3.7306685007372117`*^9, 3.730668650281299*^9}, 
   3.73067196237479*^9, {3.7306719950350747`*^9, 3.7306719976736865`*^9}, {
   3.730731052855708*^9, 3.730731053089709*^9}, {3.730834879797772*^9, 
   3.7308349024077663`*^9}, {3.7308349384931726`*^9, 3.730834943966652*^9}, {
   3.7308351029633794`*^9, 3.7308351073815985`*^9}, {3.7308354529438753`*^9, 
   3.7308354567350793`*^9}, {3.731865332899798*^9, 3.7318653334598303`*^9}, {
   3.731865393115242*^9, 3.731865400514665*^9}, {3.7324645731870265`*^9, 
   3.732464573744201*^9}, {3.732464607049323*^9, 3.7324646273515916`*^9}, {
   3.7324646618660164`*^9, 3.732464702967209*^9}, {3.732464797294425*^9, 
   3.7324647995582423`*^9}, {3.7324648748025074`*^9, 
   3.7324649666243773`*^9}, {3.7324650860052433`*^9, 3.732465086423814*^9}, 
   3.73246522956487*^9, {3.7324655691983504`*^9, 3.7324655732141924`*^9}, {
   3.771103416495285*^9, 
   3.771103418130373*^9}},ExpressionUUID->"dbe50712-a290-4284-afab-\
9d352cccf248"],

Cell[BoxData["0.004253420978784561`"], "Output",
 CellChangeTimes->{3.7324650328214064`*^9, 3.732465088812688*^9, 
  3.7324652394687185`*^9, 3.732465579484082*^9, 3.7324658434422455`*^9, 
  3.733487146147445*^9, 3.7568414701759415`*^9, 3.7568415161305704`*^9, 
  3.756841569299611*^9, 3.7568417764294586`*^9, 3.7568418596632195`*^9, 
  3.7568419412978888`*^9, 3.7568419914927597`*^9, 3.7568420970067945`*^9, 
  3.7568421983505907`*^9, 3.756842273460887*^9, 3.756842325352855*^9, 
  3.756842427104675*^9, 3.756842463954097*^9, 3.7568425847769623`*^9, 
  3.756842622147806*^9, 3.7568426718798275`*^9, 3.7568430475221844`*^9, 
  3.756843153311212*^9, 3.7568431894904904`*^9, 3.7571691508169866`*^9, 
  3.757169850120389*^9},ExpressionUUID->"6306e293-c46b-449a-bb33-\
a3c456b75a9d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myCombineMaxGreenDelta", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Max", "@@", 
    RowBox[{"Differences", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOG"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYG"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWG"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPG"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPG"}]}], ")"}]}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.730668805183886*^9, 3.7306688204965177`*^9}, {
   3.730672000820094*^9, 3.730672004486902*^9}, {3.7307310703933506`*^9, 
   3.7307310914898033`*^9}, {3.7308349556371155`*^9, 3.730834979305104*^9}, 
   3.730835113686971*^9, {3.730835458008852*^9, 3.730835460731509*^9}, {
   3.731865402799796*^9, 3.731865412004322*^9}, {3.7324646380253763`*^9, 
   3.7324646388337884`*^9}, {3.732464707892567*^9, 3.7324647465080748`*^9}, {
   3.732464919592424*^9, 3.7324649218481827`*^9}, {3.732464971536436*^9, 
   3.732464994484026*^9}, 3.73246523198402*^9, {3.7324655612686157`*^9, 
   3.732465565539256*^9}},ExpressionUUID->"5b7ec886-dcbe-429c-a70e-\
fcb2a034e5a4"],

Cell[BoxData["0.0389166995882988`"], "Output",
 CellChangeTimes->{
  3.730668823113926*^9, 3.730668877931452*^9, {3.7306691343787556`*^9, 
   3.730669161354622*^9}, 3.7306701964674153`*^9, {3.730731035377867*^9, 
   3.7307310952872143`*^9}, 3.730734807349923*^9, 3.7307371155105705`*^9, 
   3.730739140769064*^9, 3.7307393223315196`*^9, 3.7308163678443966`*^9, {
   3.7308349834361534`*^9, 3.7308349919430404`*^9}, {3.7308350876366634`*^9, 
   3.730835114506992*^9}, 3.730835212942072*^9, 3.7308355511574955`*^9, 
   3.730835748434123*^9, 3.73117289361024*^9, 3.731865466971466*^9, 
   3.7324650948850365`*^9, 3.7324652417199855`*^9, 3.732465581797659*^9, 
   3.7324658440734377`*^9, 3.733487147260849*^9, 3.7568414708029776`*^9, 
   3.756841517596654*^9, 3.756841570479679*^9, 3.756841777257506*^9, 
   3.7568418627283945`*^9, 3.7568419427839737`*^9, 3.7568419931388535`*^9, 
   3.75684209938393*^9, 3.7568421996816673`*^9, 3.756842275505004*^9, 
   3.756842326469919*^9, 3.756842427605898*^9, 3.7568424648034983`*^9, 
   3.756842585849023*^9, 3.756842622829608*^9, 3.756842673804433*^9, 
   3.756843048319786*^9, 3.756843154682415*^9, 3.7568431903348923`*^9, 
   3.757169152719095*^9, 
   3.757169852081501*^9},ExpressionUUID->"a4cdac20-44d1-471e-ba81-\
3970829b431a"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myCombineMaxBlueDelta", "=", 
  RowBox[{"Quiet", "[", 
   RowBox[{"Max", "@@", 
    RowBox[{"Differences", "/@", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimOB"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimYB"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimWB"}]}], ")"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Min", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPB"}]}], ")"}]}], ",", 
         RowBox[{"Max", "@", 
          RowBox[{"(", 
           RowBox[{"Mean", "@", 
            RowBox[{"Flatten", "@", "myTrimPB"}]}], ")"}]}]}], "}"}]}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.7306688506067863`*^9, 3.730668875208646*^9}, {
   3.7306720089579163`*^9, 3.730672011707922*^9}, {3.730731075836562*^9, 
   3.730731088283595*^9}, {3.7308350035891433`*^9, 3.7308350640242167`*^9}, 
   3.7308351170972404`*^9, {3.7308354610458326`*^9, 3.730835462945532*^9}, 
   3.7318654182446795`*^9, {3.731865493797001*^9, 3.7318654988032875`*^9}, {
   3.732464757382781*^9, 3.732464779919185*^9}, {3.732464922085493*^9, 
   3.732464926256487*^9}, {3.732465001306808*^9, 3.7324650262136974`*^9}, 
   3.7324652346739273`*^9, {3.7324655493586435`*^9, 
   3.732465554670537*^9}},ExpressionUUID->"810941a7-f464-4ed1-a60a-\
7aef4577ceea"],

Cell[BoxData["0.04328025132417679`"], "Output",
 CellChangeTimes->{
  3.730668875834647*^9, {3.730669134394356*^9, 3.7306691613858213`*^9}, 
   3.730670196483015*^9, {3.730731035393467*^9, 3.7307310953652143`*^9}, 
   3.7307348073655233`*^9, 3.7307371155105705`*^9, 3.730739140771064*^9, 
   3.7307393223627195`*^9, 3.7308163678846664`*^9, {3.7308350654570436`*^9, 
   3.7308350876707244`*^9}, 3.730835117708885*^9, 3.730835212977168*^9, 
   3.730835551183839*^9, 3.7308357484631996`*^9, 3.73117289362584*^9, 
   3.7318654678815184`*^9, 3.7318655021554785`*^9, 3.7324650988885455`*^9, 
   3.732465243954452*^9, {3.7324655578798723`*^9, 3.732465584140112*^9}, 
   3.7324658446184216`*^9, 3.733487148350054*^9, 3.7568414714460144`*^9, 
   3.756841519081739*^9, 3.756841571650746*^9, 3.7568417781255555`*^9, 
   3.75684186580457*^9, 3.7568419442600574`*^9, 3.756841994785948*^9, 
   3.756842101767067*^9, 3.7568422010117435`*^9, 3.756842277553121*^9, 
   3.756842327588983*^9, 3.7568424281313114`*^9, 3.7568424656725006`*^9, 
   3.756842586920085*^9, 3.756842623538411*^9, 3.756842675736237*^9, 
   3.7568430491641874`*^9, 3.756843156072818*^9, 3.7568431912114935`*^9, 
   3.7571691546332045`*^9, 
   3.757169854038613*^9},ExpressionUUID->"1c11d94d-82ce-4411-985b-\
4049837a5e67"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "@", "myYellowAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", "myYellowParametersSplit"}], ">", "0"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myYellowAvgImg", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc1", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimYR", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYR"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYR"}]}]}], "+", 
                    "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<RNA\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc2", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"myTrimYG", "//", "Flatten"}], "//", "Mean"}], "//", 
                RowBox[{
                 RowBox[{"ImageAdjust", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYG"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYG"}]}]}], "+", 
                    "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
              ",", "\"\<0 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc3", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimYB", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYB"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimYB"}]}]}], "+", 
                    "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<-1 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ColorCombine", "[", 
               RowBox[{"{", 
                RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], 
               "]"}], ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}], 
      ")"}]}], ";", "\n", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{"myTrimYR", ">>", 
       RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.dat\>\""}]}], ";", "\n", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.m\>\""}], ",", 
        "myTrimYR"}], "]"}], ";", "\n", 
      RowBox[{"Import", "@", 
       RowBox[{"(", 
        RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.m\>\""}], ")"}]}]}], 
     "*)"}], " ", 
    RowBox[{"(*", 
     RowBox[{
     "Can", " ", "work", " ", "either", " ", "way", " ", "to", " ", "export", 
      " ", "the", " ", "actual", " ", "movies"}], "*)"}], "\n", 
    RowBox[{"myTrimYR", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimYR.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimYG", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimYG.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimYB", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimYB.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"myTrimYR", ",", "myTrimYG", ",", "myTrimYB"}], "}"}], "]"}], ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myYellowRGBTrims.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimRed", "=", 
     RowBox[{
      RowBox[{"myTrimYR", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimRed.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimRed.tif\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimGreen", "=", 
     RowBox[{
      RowBox[{"myTrimYG", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimGreen", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimGreen.m\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimGreen", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgYellowTrimGreen.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimBlue", "=", 
     RowBox[{
      RowBox[{"myTrimYB", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgYellowTrimBlue.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgYellowTrimBlue", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgYellowTrimBlue.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", "myYellowAvgImg"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.716050956291523*^9, 3.7160509799448423`*^9}, {
   3.7160513545357556`*^9, 3.716051369246228*^9}, {3.7160537527593803`*^9, 
   3.716053777182626*^9}, 3.716057320641185*^9, {3.716306413281352*^9, 
   3.7163064210853662`*^9}, 3.7163064633556423`*^9, {3.716306506582719*^9, 
   3.7163065423237877`*^9}, {3.716306829679681*^9, 3.716306854934526*^9}, 
   3.71630860898346*^9, {3.716308666487749*^9, 3.716308668998893*^9}, 
   3.7163124316431036`*^9, {3.717509320786038*^9, 3.717509321191639*^9}, 
   3.7265136593235435`*^9, {3.726525613870813*^9, 3.726525618789484*^9}, {
   3.7265909067373314`*^9, 3.7265909709620047`*^9}, {3.726591765174431*^9, 
   3.726591768802639*^9}, {3.7271056909922047`*^9, 3.727105694188707*^9}, {
   3.727107334217054*^9, 3.7271073468722486`*^9}, {3.727979741928464*^9, 
   3.7279797453830214`*^9}, {3.7279798759943624`*^9, 
   3.7279798812459955`*^9}, {3.7279799680722256`*^9, 3.727980025501054*^9}, {
   3.732465208600317*^9, 3.732465242559874*^9}, {3.7324653007029533`*^9, 
   3.732465307296912*^9}, {3.732465359193899*^9, 3.7324653717693577`*^9}, {
   3.732465458784148*^9, 3.7324654700115404`*^9}, {3.732465752453321*^9, 
   3.732465756739064*^9}},ExpressionUUID->"bfaba94d-79ab-40fa-90a0-\
b5c962165f43"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjWtME3YcRYFOrKDgBEkFJdmGuFFgrDom8L+/BhQRcOM15CUhBenQgEA7
KnU1MnnjWEPFYnlUGAFbuoIKIgOCScFogrK2Y2wxaCSQiYtOFhUH3dw02Yd7
kpPz4b6TXZgodrCzs5NyXyNRdDxcIhHJkxzfSK4of6cg/010/X/HNnzPvC1c
OPZvROD1zSi9uhvCwh24YqjCE1MO9nUfQGxoIVZMB3BDUgZlSije96/EAK8d
5z/5nB2Wq8JaEgQwf7wb854pWFLmw7ZVBb/ZAfBzW1Ah7sEpvRIFASXw+UMF
6/YG9KzW4/W1ne20P1v60AnzGbEwTJ8B054Dr7ceaQ+smJFbcKuoAaapi+B3
9GEooA05KVrMZOSCeyyaxa2/wKIfzbKZh/Voi7sJQ8Mihue2UO+Jt0j8/G0K
Vt/CrLIDfnNnEfm0GT6D1fAr34MRtR9zqtEx/cJjpvbSoMV/HDbJdrI1HaGy
kwepxCmCCsTbKCb2CX7/7Vs4/5CHTI4G8UYHyF6Whq3uckXIlf1IqjMiI5RH
dzWpZFXr6Jr4Z7puvkxBvumk0P6Niq9/weq7o9C7lKAirhIGcQKbKxxnIWne
SPniV8xr+ORh6aLl8s1CjmOUMLDBTVi2qCF7rYBGk+7gReM47qk02Nh0BIfD
1CzuZRKbe3gUyfHXENr3EcnkE9TpBuGXVrlQJyHhN5wxuiSPJEHOOhJMT0L9
WR1IV4fBAg57DDd0m75CdvAwwg+9Rw8k7eTB3yIUeScLTzXzhPZcLa0JF5Dm
5nPs6DdBxq9Fz1Mpsna64OCGu8xRshVT6T3ge6yjoyN7SRSgp9S+SSof05Fx
SUTlMg/KC1pGf6gZYcVNuOdUhU6vEIz8kwyLJB3PghpxQWHCq2F3alTFU8/E
cUo0p5HhkDcZnFcQpbyPgKQJhG26iryiDmSeeMSqKybZi4VY9HZpsaZLicml
CXgNPYP7bQca/8mReqsXMWW+jBjFKOaNpzH9qRHO5lYku9YxBVnZHV42YoIv
sfOl+xG52Ixul1r4/jkGu8HbuGj7Dm2BOpyV6+Ez1w6vTVI0+oowVDnANDe8
YNl1ny1keaIzyxcRbsVg/RqscGoRLW3FB/+W48dXVfjLR4chyCEbr0Tf2kCo
DJGoiVAwF044PGtsLFqZjpPFEZByazB6Zhvs1+/FYmIqoriZcB+pwrKsFftc
EmApCsF/LomFHA==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -194.4}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk2tMkwcYhatTKtYABmUEBgTJROWq4KT0O+9XKlRbGRVxSISQ1AVdXWkD
0yCgwOi4TaHcHFCFVamSIS2QLIqChaaMIiCZsgCRzJm5JWNFJ07IwIwOk/04
J3ly/j3J8T+hPnJyLYfD+WLDah2R58RkZ8tzk5zeQYZcGbFH+W50/T9LAXGw
iaJRrVDj9K5ClL4tgVxYiruiFrAyHXZdroWXoxzqyXy08RV4/WQ3pt7sQMJH
x3FxhwzZFz/BaFIWaoNrYY8qQojaBG/vR1D59+PpXC98267jRpMGepUKc9YU
GJa9Ie/9GFx7MGQDMmwQnoYH9wYSLdWw5VtQnfAXYtLn8Ll2EDV3BnHOVI+9
C7dgDtHA45tT6CliYB4Gzlq/QkdLHuoXTPCa7IdP+zymu9bT45nNVKNzIlHH
S3g192BT7Pco12ghHyuGYF0YPj2fi+dGLczLV9CxdRpLvs40MxlCUUYRSSxJ
xLsmJo31feLp/oGFP45/p/Twv1CHo5oIpB3OxCtS4qHwAQbOvES8MZjOzuYT
L72TuOOD1BjYRDxDLCVzXKhs0zwiCq1ocbmKvfeVWNOiwlJnPS6d12OUv46M
I0dpm62TusN9WUmfiP1l0ZVtKNRSqzSUbKZXkHX/COmDRjiOZyLv/kmULBjg
oezFWBGPQpcOUJXQQn2VLMvhFLG3nMVsXfMA/d5zkByz75Gv4ikGcpuwO+cM
DAc0eD1ahUClGYJ2LjVuCSO3rHrKCfVgswJj2emgbWzMMSOtfCehtHA/cn8+
Btu5SjxJjgeZxGh4Vg73/qtIy3iIlBEncuqSUmV2DVW3Wunr7V20ZbGEitv5
NBziTofFZvhLy5EsdTA/NXtCtu8g/h6qgC+/FjU+L1BgWIY41YVcKiKpZIGl
6bDt5PelK2VH30PIsXKsrD+EmMgZxmVjJ3NhaifiZz7DwNpGvPhTh6FgAxar
rOh1+xmSITvuCYZRSTcR5V0M67wEElEE1B9YmYKJ24JYzDLFbQJkVOxB6+ZD
KFDF4m33qntdF5RrehB/rRr6D6swESTEXHQiRA5nBEyYmdU7cAbL7jBi/mPm
kfYPZiWUB39PV4TaE2Hvk+LZ7RQ4tJlwNebAM06BuNZUyIJOIKB0nPnBjcOU
6f2YLmUDs09Xyv92Vse8+fUKk3B3hLlp4kJRJ8HlvP0QVp7Cb5Fl2BieinSf
Quj3b8V/+2GD/g==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -583.2}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox[
       RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjH1M1HUcx09TRDi500kIR4cYWBhgEDeE3+f9PXwKZIXkCbljPBmPF40D
ZGgpT22ix4P8BkKCYnccnmhhPERKEosBRfLghaDRGiUwSOxQ40EYYrr1x/u1
vfba3o6Hkw/ErRQIBGnmL3AgOmNnamr0MYXZS4mNTnrHM+llFP2/Fev9SP13
OkkWn+1wv97NqcJ0vhfnnbmLogBOoVZw005hXPFNRuZVAlIey6GGNVqKNN6m
z3h3GizbSrqSHfTiRpC/3cDlX9tEwmHet5/xXGPiCS7SxZIbzRDTrlQhlYsT
qOV3KVU99aBOP1Bf33mqUXT4nl+Y9929uIWT1aRznRY+1L1vGy3G1lGvvoAm
7BzIGMqTcTqAEuozKEWhoHBtHQllldwVNxfqf8uL++OLL31719qS21guPZnL
pfDMFHJU8VRyq5CCn3SQ4vEkueXep15PHbl4fEVFVo70KKyU02RXcA5/XuKi
htbSzZAuKk2bopwlVwzqxfA/IsZMuBBXttog3V8Cs55HFNQ+Q+0aG1o47Upd
LV7U1l5JpbHX6PHwJPVq1mNqIgibVXJYnN2L+qb3kfDX60jm30T58gKJ7afp
+Xgxd308jHhNKA3Eael+twW+3ibHbPNBHDacQ9QHV8Fv1wN5FzCeXYT4sTgc
tfJB5tAK4EEoKWVRJLyRRXF235Pa2xqrG2Mgnb2MPa1zaMy1ZP1lm5l1pJSl
mVuxhaq7UH2TgVuJdpA0VpNaoqc7Q79Q8+cmSn9jPzp7NGjZ8ACa6beZNvM4
k6bUsu8c21jS6jLW1EjsZ9tW/OOtxIL3Q+KXB0jUukyi7Bm65HIITFaOd38w
Y6bnUcz1eBcrNNrLZztd5CPVSyxrF89e0a1h6qqTeJo6ScaNHrC2cIX2YykO
ZgWjuUMPO+M6Zq06wUYm51jHXiZfpd4jj84SyuNltWzfxBbWJzoFH40ZThsm
yJ/c0Sf2RNeZCPQ2lEBaPoN/oWR1G39iiSY7eVCErXzUfIoJ+ovY5WYnFiM7
hwDnWBrl88lQYInZ/a8hpyMMDXeUqPm0CSHzlmxDjJo5j2iZKdnAzhScYvmp
AWzsyDO4VWfj9reHqCUwggY3XaXdQSuh7ZIgoMIPdSFZMPukFks6E45+ZMsu
/GbPkubEbNhpEnkDFahThkDV70A/BgbSw3vv0brCNrLpWYW8egHuzkjwa20k
vMqLcVZTixvBLXh1ogknP6yESRePe30W+A+/2Iww
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {Center, Center}, {360., 360.}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
SuNJuyj+C8GOhR8=
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->RGBColor],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> Automatic, Interleaving -> False],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -1360.8000000000002}, {
      Center, Center}, {360., 359.9999999999998}], 
     TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {Center, Center}, {360., 359.9999999999998}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->100,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.733487153527465*^9, 3.756841472319064*^9, 
  3.7568415209268446`*^9, 3.7568415726928053`*^9, 3.7568417789746037`*^9, 
  3.7568418679226913`*^9, 3.7568419452871165`*^9, 3.7568419957190013`*^9, 
  3.756842105808298*^9, 3.756842202247814*^9, 3.756842280419285*^9, 
  3.7568423292060757`*^9, 3.7568424287563295`*^9, 3.7568424664409027`*^9, 
  3.7568425878821397`*^9, 3.7568426241960135`*^9, 3.756842679070444*^9, 
  3.7568430503205895`*^9, 3.756843158264822*^9, 3.756843193042697*^9, 
  3.7571691599495087`*^9, 
  3.7571698597559395`*^9},ExpressionUUID->"f6a87907-9256-40e1-a98f-\
059f936b4da6"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "@", "myWhiteAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", "myWhiteParametersSplit"}], ">", "0"}], ",", 
   RowBox[{
    RowBox[{"myWhiteAvgImg", "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc1", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimWR", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWR"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWR"}]}]}], "+", 
                    "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<RNA\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc2", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"myTrimWG", "//", "Flatten"}], "//", "Mean"}], "//", 
                RowBox[{
                 RowBox[{"ImageAdjust", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWG"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWG"}]}]}], "+", 
                    "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
              ",", "\"\<0 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc3", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimWB", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWB"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimWB"}]}]}], "+", 
                    "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<-1 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ColorCombine", "[", 
               RowBox[{"{", 
                RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], 
               "]"}], ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}], 
      ")"}]}], ";", "\n", 
    RowBox[{"myTrimWR", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimWR.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimWG", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimWG.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimWB", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimWB.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"myTrimWR", ",", "myTrimWG", ",", "myTrimWB"}], "}"}], "]"}], ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myWhiteRGBTrims.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimRed", "=", 
     RowBox[{
      RowBox[{"myTrimWR", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimRed.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimRed.tif\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimGreen", "=", 
     RowBox[{
      RowBox[{"myTrimWG", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimGreen", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimGreen.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimGreen", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimGreen.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimBlue", "=", 
     RowBox[{
      RowBox[{"myTrimWB", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimBlue.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgWhiteTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgWhiteTrimBlue.tif\>\""}]}],
     ";", "\[IndentingNewLine]", "myWhiteAvgImg"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.7157380248592215`*^9, 3.715738030921033*^9}, {
   3.7157383984023046`*^9, 3.715738413575532*^9}, {3.7157387694639835`*^9, 
   3.715738820926676*^9}, {3.715739895055627*^9, 3.71573990242484*^9}, {
   3.7157399415205116`*^9, 3.715739963532353*^9}, 3.715740508677746*^9, {
   3.715964895648266*^9, 3.7159649032922792`*^9}, {3.716051399174573*^9, 
   3.71605143786915*^9}, {3.7163134091460133`*^9, 3.7163134262809935`*^9}, {
   3.7163134580738125`*^9, 3.716313460296939*^9}, {3.7265133708152246`*^9, 
   3.72651337262407*^9}, {3.7265134408834305`*^9, 3.726513442927814*^9}, {
   3.7265135262781677`*^9, 3.7265135639030867`*^9}, {3.726513802109948*^9, 
   3.726513818516664*^9}, {3.726517424212894*^9, 3.7265174251493397`*^9}, 
   3.7265175714225597`*^9, {3.7265255678516636`*^9, 3.7265255713357215`*^9}, {
   3.726590979298482*^9, 3.726590990483122*^9}, {3.7265919570764074`*^9, 
   3.7265919613956547`*^9}, 3.7271057074666176`*^9, 3.7279800304207664`*^9, {
   3.732465271617139*^9, 3.732465277855397*^9}, {3.7324653149830303`*^9, 
   3.7324653203246756`*^9}, {3.7324654044915743`*^9, 3.732465411222539*^9}, {
   3.7324654902201557`*^9, 3.7324654980149508`*^9}, {3.732465757553295*^9, 
   3.7324657598953457`*^9}},ExpressionUUID->"fbe64d2d-54bf-4579-8599-\
586f0d898b4b"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "@", "myPurpleAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "@", "myPurpleParametersSplit"}], ">", "0"}], ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"myPurpleAvgImg", "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Thread", "[", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc1", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"myTrimPR", "//", "Flatten"}], "//", "Mean"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPR"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPR"}]}]}], "+", 
                    "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<RNA\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc2", "=", 
               RowBox[{
                RowBox[{
                 RowBox[{"myTrimPG", "//", "Flatten"}], "//", "Mean"}], "//", 
                RowBox[{
                 RowBox[{"ImageAdjust", "[", 
                  RowBox[{"#", ",", 
                   RowBox[{"{", 
                    RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPG"}]}]}], ",", 
                    RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPG"}]}]}], "+", 
                    "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
              ",", "\"\<0 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"tempc3", "=", 
               RowBox[{"ImageAdjust", "[", 
                RowBox[{
                 RowBox[{"myBlue", "=", 
                  RowBox[{
                   RowBox[{"myTrimPB", "//", "Flatten"}], "//", "Mean"}]}], 
                 ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPB"}]}]}], ",", 
                   RowBox[{
                    RowBox[{"Min", "@", 
                    RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimPB"}]}]}], "+", 
                    "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}]}], ",", 
              "\"\<-1 Frame\>\""}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"ColorCombine", "[", 
               RowBox[{"{", 
                RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], 
               "]"}], ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
       RowBox[{
        RowBox[{"GraphicsGrid", "[", 
         RowBox[{"#", ",", 
          RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}]}], 
     ")"}], ";", "\n", 
    RowBox[{"myTrimPR", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimPR.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimPG", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimPG.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myTrimPB", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myTrimPB.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Thread", "[", 
      RowBox[{"{", 
       RowBox[{"myTrimPR", ",", "myTrimPG", ",", "myTrimPB"}], "}"}], "]"}], ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myPurpleRGBTrims.m\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimRed", "=", 
     RowBox[{
      RowBox[{"myTrimPR", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimRed.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimRed", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimRed.tif\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimGreen", "=", 
     RowBox[{
      RowBox[{"myTrimPG", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimGreen", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimGreen.m\>\""}]}],
     ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimGreen", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimGreen.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimBlue", "=", 
     RowBox[{
      RowBox[{"myTrimPB", "//", "Flatten"}], "//", "Mean"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimBlue", ">>", 
     RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimBlue.m\>\""}]}], 
    ";", "\[IndentingNewLine]", 
    RowBox[{"myavgImgPurpleTrimBlue", ">>", 
     RowBox[{
     "analysisFolder", "<>", "\"\<_myAvgImgPurpleTrimBlue.tif\>\""}]}], ";", 
    "\[IndentingNewLine]", "myPurpleAvgImg"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.717502006755875*^9, 3.7175020115656843`*^9}, {
   3.717502171096034*^9, 3.717502176501446*^9}, {3.726513596821008*^9, 
   3.7265136036145315`*^9}, {3.726513693421671*^9, 3.72651369429016*^9}, {
   3.7265137279895988`*^9, 3.726513733131876*^9}, {3.7265137816309195`*^9, 
   3.726513786792752*^9}, 3.7265175852422566`*^9, {3.7265255775882263`*^9, 
   3.726525585092105*^9}, {3.726590999058612*^9, 3.726591013698449*^9}, {
   3.726591966819965*^9, 3.726591970195158*^9}, 3.7279801922265263`*^9, {
   3.732465285549534*^9, 3.7324652944285192`*^9}, {3.7324653244754744`*^9, 
   3.732465330609195*^9}, {3.7324654181020603`*^9, 3.7324654248129005`*^9}, {
   3.7324655038812237`*^9, 3.7324655124499335`*^9}, {3.732465760787833*^9, 
   3.7324657630282564`*^9}},ExpressionUUID->"d21b96e1-4e51-4496-900c-\
8b3653b915c5"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjn9Qk3UAxl/njfila3IuElkMkZLjLJnKau/zfYNobMND2oQQRFvmAONE
pFweVDs0yCVDwKSQ3xOJkSFgOeUgBA8RcR0Sc+MGWpfAYccPb8NmLcK7/vg8
d597/vkI3s9WqFkUReV6Lo9CpYk6ckR1TOnxTA6osoQRWc9Ozv/Yh1YRjXUD
cboiyLgmjdRKgkj4wUeYdK8kHTOlaOmeBuvLBYS9YIKz4xh8/vGF8WYA3W9g
oJNFoSzEjTrGgjmHC2r5fVxvdkAa+wPO21vQJBrAp+p5PNhSimLzelB7tyFa
Z6ad5u3gSEZoduAVuArakFHUjzCmBo+/rseh6EVUD5lxi/InkvtT4GdlYzmT
8qkX0peOZoJ943OYbnhCY2rD1hM90PrUYYNCDzfnHFyJ0xi40wf/qxXIsRkQ
0x+K5v5T+GzPR3inpQIhqa34ZPZFrBOchby6AY7eJIgbatGk7MQrPTOYaHmT
JCm5RLbrHsKrykHJDiKR+wf82814WGNHio2H/FNadHqJ8Fv8eSRHTuBwlZjw
youJ3d1DWH2lJNgPZF+hBMlxd/GqrwdZzZ9D624Ldjw8A6vjMi4PO1B4egr1
Oi8yozhMhjLWMiVLYG6fZjObLQVk4pEHYRUOY2PjSewaHcFrVA/u7l+F3dfO
YUnWB/fCJLaPCUnb+i5ynSdmKErLtKljmK88y0m6nktWXGhC/MaL4KdbYHhc
hKREHj7OK1tuqIEzjEVEcStIcLeW/J25krkyHccIDngz3EUtIUt+pOp3I4zG
bhwq80VjYDXeTQtFsmqS7nBWovqXt3HV2ADeGQ4pSC0iCRN95KmkkjyYkZKp
sT8hk48jIbcEP3pmYZ6di9FmPygNnbQ0JQ4J2UV4avkClalTmG1ZRKQ/l4xt
iyKxXrNIr6OIfnAQdUcrUGKVY42rECl2DoSbttDfHRfiOD8b/H0xuPVvGXJD
biJq5x2ktj+Bfe8wWD+3w9tLC0tvDeLfGqFfKl6HfIUE1g9kdMZgPT4M34za
/JPIuSeG4LlGPP/TRRjGT0CapoN3owa2IAMEwrW4xHPRabFsfP9Go3i08hrd
bIpG5KIIqUs7ELzpWyzovsF8TjFe7uqET4AOXU9U0P/VQC/og3HBNwVZe0Jx
W9RJ/7rVKlb2mujeuX5x7utyrI7YjyDbWfTJqyDPUyPvvTLE7tQh09YOulWK
gcA1CEjm4D931Y0I
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -194.4}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk31MFHQcxo/XOBQ4DJFTBOFOvCMQCCS4+z1fAwU9dyiT95usToOLSTKg
C1xKFxOJGIHEEAQ8QJHMjQjGi5CszTTvQt4iKs4X8IjyDw+Jt0CJcOuP59k+
e7bPf4/H8YyjqeYcDifbZr2OKnPCsrKUp2OsX0GKMj3wzfRXo8P/aU8TEifQ
lkYGeTQf4kBb5Bwy+5hHLYf+RUD0HLT9z3BJ1Ifp1CUcOnILF+vG4afXwkYX
Bae9PPr1rD/pLDbTpIBPGfvEFK8WkIuJS8pvLGhz+iyClsagYCU4aT2IUtMM
xrnXsGhTidB/eHRMEUoXusRk1cGnL4XedMBXRgd/PkIrC8/gNWBJswvPkWBr
xLHvptA3M4+27k5ETrTDt0BEpYpkGo6S0LhRQF4Ne8jr9Emq4cso80QoLTyw
p7seQ9AF3kKvdgK3LeYRLzXh8PZGfCXbQX83RtCqIJgO1AjoeYSIirZLyOfU
2+SQvJNmz7uQa7gtFUb3w3zfInqrRtCTM4aXV1pR2OVJt6sdyL1HRJN1HtT1
PY+uFrxBS7ytNB03C6u2TfRk0oMuZ1uRm3EGtTduYllfjISYEsiz/MnvwevE
TeORQ64rzf21ArHbKqoarKkq+CUMv/Eps5xPWflreKtvGLloh/pGBRzNP4Ak
KYgOhj+FUh5EZz9bQcfTAcQP6VCYMoQ9zIrs3/sB/iU6+Ba2QiW5jl3NWvTf
VMPLbyOSdi2gsnEF3q4GjN6Zw+dfG6EKMyAvfhROjno4v9aExMg2XElSo6il
HipuLv64PM6Kik3shZRDpsAXmEh+hAAXIzS7tahPrIbftjZ4CytxccsJLB/O
xHC+Hcq8NsClPBozeU3sz6By5im+j747nTB9WIagum6UrmnARPUYXRXD0jpy
3eWMycRVFmVpj8cFG/HFOTOEunOhV/ugM7YaY4vXsLbDgmSxGdgfF41Wjj3u
+YRgW7c5nlRIkL2fj+beC/DNDcAZJsOlT35h86mxbJp/DyGd7bBL3ouwq+cx
ZPcpoiRiGBIkUJj9zmqdA6COOQ53/jnI/fOxWybEiFswfnLskXoMLuJdYQMM
OgWaAqZYzfuncCYvBfrBMLR0J6JiayZUHcusRiNHXGwxc/pogoU7ljHPhxo2
sGEEHdLr4N5vRtpgBDSCDDzMzcHaOwn4cUqFb1W+kDf1sk2P21ltVz9T3d3J
1u/HMXEeSf8D+ll7CQ==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -583.2}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox[
       RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk38w1ncAxx9mdDMkbYyp3BqPH48VxnZ9X58nOmVWcZhfHfXoGEN+hfxo
5yES8jAmzc/VNpQs9uPG4dkKGbvarD+y62bqrJUfZbYjl0x3++P9vnvd+5/X
P2+bqKSAGF2ZTJa2bq0CVJmeqamqrED9ZxCtSnB1SXg2mvyf7DtG4s8lKzHy
9wuiKbUW6/v1dM5WYXS9kTKfCh4XaPD0bCTv9Ffc5SnHgx3E6pie8O/qw7p3
lv4PZrCd+4OD8zVUphbyS20zR8abMLVXM3vnBGN27ZT0XUYepC9+DF4vzKdG
mEo5T9Pxc3yz5xr5RRWM7y1i3yedhE6cxWi6BtPCVuKtKmjzLWDr4zOMpn/O
SmMvM6tVrJaEoTUvhgdvo81N4NypJEyjcqnb0UO67UUWHl5hs/wz9qZcYvhe
EzEhhSj085iRFfBh2nZ6DkTh0X2I+4oCgnfWUL2tjt7OAaqzDER5/SLTtkt4
Wf5LZsgVqnfXEi4V4G3ggIG0GQP1fpqX38U2toiI1z/CXV/L0Vf0RFWDm1hz
FXPl4SLDeqeYS7IU3kMjtGz1wcc7nCPPWfBxYDQJSXvQqcoizF/DSvoC9jf9
RMHAbaE89prSxOeJaP+hTCQHeAidyus8Co3ji15b2hw24nX+KB0XfJDn59Os
/ImwyGUit2uE65KjUibLU87mKpSV+eViZW6LyF5uJ+n5Y5jIY8lRhfGWRyz6
vwcw1dVEsWELbRlP2XUvT/heNFa+k+2pdDOeFV3f+wvHn8ewitbQlJuIrmca
Nkt+FPW/yeTVYN4wb6UhZoivb2v5bcJCLKjyRWxQvRj69LCYVD9itvsC1nMa
6lOyWLdJhVTqhO61ABQdNZy4NcSN7/pYPNSK5b4B/tq9wpnAGbxuDaNJ7OCS
ZTz7tZmsDkeSpvVjy6g7PX4d1J3q5NucGd7f1c10Xgfq+HLGzJMoPKCmLDWB
+YhCKlMUvOcsZ5vRvFRsZ8EDu5cYcaojJ7mFDflXcXuxi0ETDQMNGfT4lDA4
AmNyBV16YRgnuLDxVV3iGi0ZVLtKPU4HpcsZajKcs2jR19CQrKK/zoubL9tj
XxqC2SYXku0duTFiRuhZC8Yffik1jwZJKXG+0qCJasfgyfUsB+kwsbwoWe1U
8M8GCw4nWtA3GoHN3UC8nH+VSr30sFs0RGU2KQWc7JbW7iczfOIu/QfBjYSh

          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {Center, Center}, {360., 360.}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
/d8v8svkXMXBZb0yEflhwPwXIwV8hw==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->RGBColor],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> Automatic, Interleaving -> False],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -1360.8000000000002}, {
      Center, Center}, {360., 359.9999999999998}], 
     TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {Center, Center}, {360., 359.9999999999998}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->100,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{3.7568431588908234`*^9, 3.756843193464898*^9, 
  3.757169861476038*^9},ExpressionUUID->"b88f0e62-41ff-498b-af57-\
d5a927d01028"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"myRedOnlyAvgImg", "=", 
    RowBox[{
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempc1", "=", 
             RowBox[{"ImageAdjust", "[", 
              RowBox[{
               RowBox[{"myRed", "=", 
                RowBox[{
                 RowBox[{
                  RowBox[{"TrimRed", "[", 
                   RowBox[{"[", "myRedTracks", "]"}], "]"}], "//", 
                  "Flatten"}], "//", "Mean"}]}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "@", "myRed"}], ",", 
                 RowBox[{"Max", "@", "myRed"}]}], "}"}]}], "]"}]}], ",", 
            "\"\<RNA\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempc2", "=", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"TrimGreen", "[", 
                 RowBox[{"[", "myRedTracks", "]"}], "]"}], "//", "Flatten"}], 
               "//", "Mean"}], "//", 
              RowBox[{
               RowBox[{"ImageAdjust", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", "myGreen"}], ",", 
                   RowBox[{"Max", "@", "myGreen"}]}], "}"}]}], "]"}], 
               "&"}]}]}], ",", "\"\<0 Frame\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"tempc3", "=", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"TrimBlue", "[", 
                 RowBox[{"[", "myRedTracks", "]"}], "]"}], "//", "Flatten"}], 
               "//", "Mean"}], "//", 
              RowBox[{
               RowBox[{"ImageAdjust", "[", 
                RowBox[{"#", ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"Min", "@", "myBlue"}], ",", 
                   RowBox[{"Max", "@", "myBlue"}]}], "}"}]}], "]"}], 
               "&"}]}]}], ",", "\"\<-1 Frame\>\""}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"ColorCombine", "[", 
             RowBox[{"{", 
              RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], "]"}], 
            ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
      RowBox[{
       RowBox[{"Flatten", "[", 
        RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
     RowBox[{
      RowBox[{"GraphicsGrid", "[", 
       RowBox[{"#", ",", 
        RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}]}], 
   ";"}], "*)"}]], "Input",
 CellChangeTimes->{{3.7157382765748796`*^9, 3.715738282947692*^9}, {
   3.7157383777610674`*^9, 3.71573839027069*^9}, {3.7157400053360295`*^9, 
   3.71574003286528*^9}, {3.7157401831391506`*^9, 3.7157403053393717`*^9}, 
   3.7157404871315045`*^9, {3.7159649251121187`*^9, 3.71596493175773*^9}, {
   3.716051452198821*^9, 3.7160514949942355`*^9}, {3.7160575254201293`*^9, 
   3.716057527830534*^9}, 3.7160576280829616`*^9, {3.71605769191789*^9, 
   3.7160576968684998`*^9}, 3.7160578261529665`*^9, {3.7160585332961645`*^9, 
   3.7160585364865704`*^9}, {3.7161412082977123`*^9, 3.7161412575276012`*^9}, 
   3.716225662329816*^9, 3.7163165875910287`*^9, 
   3.726505127473242*^9},ExpressionUUID->"ad2029b1-e5d3-4147-8eac-\
41ad0f6fbc09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "@", "myRedOnlyAvgImg"}], "\[IndentingNewLine]", 
 RowBox[{"myRedOnlyAvgImg", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Thread", "[", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tempc1", "=", 
           RowBox[{"ImageAdjust", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"myTrimOR", "//", "Flatten"}], "//", "Mean"}], ",", 
             RowBox[{"{", 
              RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Min", "@", 
                RowBox[{"Mean", "@", 
                 RowBox[{"Flatten", "@", "myTrimOR"}]}]}], ",", 
               RowBox[{
                RowBox[{"Min", "@", 
                 RowBox[{"Mean", "@", 
                  RowBox[{"Flatten", "@", "myTrimOR"}]}]}], "+", 
                "myCombineMaxRedDelta"}]}], "}"}]}], "]"}]}], ",", 
          "\"\<RNA\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tempc2", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"myTrimOG", "//", "Flatten"}], "//", "Mean"}], "//", 
            RowBox[{
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "@", 
                  RowBox[{"Mean", "@", 
                   RowBox[{"Flatten", "@", "myTrimOG"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"Min", "@", 
                   RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimOG"}]}]}], "+", 
                  "myCombineMaxGreenDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
          ",", "\"\<0 Frame\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"tempc3", "=", 
           RowBox[{
            RowBox[{
             RowBox[{"myTrimOB", "//", "Flatten"}], "//", "Mean"}], "//", 
            RowBox[{
             RowBox[{"ImageAdjust", "[", 
              RowBox[{"#", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "0", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"Min", "@", 
                  RowBox[{"Mean", "@", 
                   RowBox[{"Flatten", "@", "myTrimOB"}]}]}], ",", 
                 RowBox[{
                  RowBox[{"Min", "@", 
                   RowBox[{"Mean", "@", 
                    RowBox[{"Flatten", "@", "myTrimOB"}]}]}], "+", 
                  "myCombineMaxBlueDelta"}]}], "}"}]}], "]"}], "&"}]}]}], 
          ",", "\"\<-1 Frame\>\""}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"ColorCombine", "[", 
           RowBox[{"{", 
            RowBox[{"tempc1", ",", "tempc2", ",", "tempc3"}], "}"}], "]"}], 
          ",", "\"\<Merge\>\""}], "}"}]}], "}"}], "}"}], "]"}], "//", 
    RowBox[{
     RowBox[{"Flatten", "[", 
      RowBox[{"#", ",", "1"}], "]"}], "&"}]}], "//", 
   RowBox[{
    RowBox[{"GraphicsGrid", "[", 
     RowBox[{"#", ",", 
      RowBox[{"ImageSize", "\[Rule]", " ", "100"}]}], "]"}], "&"}]}]}], "\n", 
 RowBox[{
  RowBox[{"myTrimOR", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myTrimOR.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTrimOG", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myTrimOG.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myTrimOB", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myTrimOB.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Thread", "[", 
    RowBox[{"{", 
     RowBox[{"myTrimOR", ",", "myTrimOG", ",", "myTrimOB"}], "}"}], "]"}], ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myRedOnlyRGBTrims.m\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimRed", "=", 
   RowBox[{
    RowBox[{"myTrimOR", "//", "Flatten"}], "//", "Mean"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimRed", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimRed.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimRed", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimRed.tif\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimGreen", "=", 
   RowBox[{
    RowBox[{"myTrimOG", "//", "Flatten"}], "//", "Mean"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimGreen", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimGreen.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimGreen", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimGreen.tif\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimBlue", "=", 
   RowBox[{
    RowBox[{"myTrimOB", "//", "Flatten"}], "//", "Mean"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimBlue", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimBlue.dat\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myavgImgRedTrimBlue", ">>", 
   RowBox[{"analysisFolder", "<>", "\"\<_myAvgImgRedTrimBlue.tif\>\""}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7157382765748796`*^9, 3.715738282947692*^9}, {
   3.7157383777610674`*^9, 3.71573839027069*^9}, {3.7157400053360295`*^9, 
   3.71574003286528*^9}, {3.7157401831391506`*^9, 3.7157403053393717`*^9}, 
   3.7157404871315045`*^9, {3.7159649251121187`*^9, 3.71596493175773*^9}, {
   3.716051452198821*^9, 3.7160514949942355`*^9}, {3.7160575254201293`*^9, 
   3.716057527830534*^9}, 3.7160576280829616`*^9, {3.71605769191789*^9, 
   3.7160576968684998`*^9}, 3.7160578261529665`*^9, {3.7160585332961645`*^9, 
   3.7160585364865704`*^9}, {3.7161412082977123`*^9, 3.7161412575276012`*^9}, 
   3.716225662329816*^9, {3.716316539602732*^9, 3.716316563639383*^9}, 
   3.726513627093198*^9, {3.726525591306312*^9, 3.726525600876374*^9}, {
   3.7265910210098677`*^9, 3.7265910374418077`*^9}, {3.7265919755074615`*^9, 
   3.726591979250676*^9}, 3.727980204294412*^9, {3.7324653398567195`*^9, 
   3.7324653474619875`*^9}, {3.732465433626086*^9, 3.732465440643173*^9}, {
   3.7324655181112795`*^9, 3.7324655255499554`*^9}, {3.7324657636882567`*^9, 
   3.7324657657234936`*^9}},ExpressionUUID->"43da155f-847b-47c5-83ad-\
249435050418"],

Cell[BoxData[
 GraphicsBox[{{}, {{InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk3tM1AUAx3mccAfykAMhUlAOcOSJQAyt+35/ByqvvDJAlk4hUQJRTJ6m
ExHsAehFnYhz5wxGikVQHogOaAyGTl5hhA9eQsBknOQFrtHpoIKtPz7f7bvP
vn9+1+4/Gp1kZmJikilejOiET0IyMhJOxFgslY8SUt8MSF2Sdv+TFjIBfV0Z
WoZrsFF/GS8M9gzdbcnH1S+xvNmOCzJbyhtNOX7EnbYaa/7SJmbD5HNEtIq4
5Yt/kX29CXvT7fjN5Xm0yfWoUU1BqTbnyM9ujIqXsC2sG5JNUo4bx7HG6MBv
He7jsMUUHvSIGDxpTq3TILTpVrx0wJom+mX89J11HN26miUjgYz/cgWdDROw
n7agNHgIreonOFQyjLTjMqZlSngzeSVfVczB196XQ9INnN9+iPcLM+nWlMj8
N2LplOPPPbE2XNp771vArs5WGCpc6fXChXVVctZMuLJg1IN7t2toKrtBseM9
GmN17M06S2l7IJ91SqgbMmV/kClTdg1Ba7Rm0h+r2DkWyCOjscxtPc1NPb9S
4x0plJrlCwdPqYTv9V3cOvkxD2gDmHPUg7/fNuX85AjK1/oxpt2HEe1KHitN
4uacSqZECUJz+ICgK3pNaTs7KvwoekuY8dOyx/AB820sKN8hYnxzH86vllD/
cCUvzkaS1imc+a2Dc8YsId3PWSnZuUc5u9xZWZ29XwhWN1Hj4cmIZHPe1fYj
r6UW61V2FLmsYYEilOrEw6xTt/CSKEzotBgWova9rryaMCYEjUAIr9Twc5kj
N8eNw7HdH81ndBhViem7Yhlt7Dz5vMmHHkVnWbN7kDsb3hMSrfOFDS4hwhZV
Hy3Nd3Dh3hOUltcjSxaI2aGDCLnbB/cLi2zsgEP336gyxvHWyeOsKajl07Qu
qp5VUzqbyNuDbnQKncX1+VqEVpXB63TO2zcqyjHySgvb0i5IM8x4wcOdZ+DN
EnkMbT+LYtydMBYPr2KL7xVUFHfg60IJq3RGBWIj8TLvK7g2dOOplQ6VcTPw
7H6Irnox+x/Z8JbTVejjxnDeMABpQD8Kk6cxtT4SJzRlisRTDxTagVwMBv2J
4NpGXCyvg1X2P1in6ca14jbkPq5A17F6PAr7Dl5zg9jmcA1zvXI0qqcVrTYG
RWxLCTReV6Cw/AFZyeWQyUZx5/1zOPnuTwj3OYfoD3uROl8H8V/psCrKQ9dN
f8W2OissXtDkP1YMhAM=
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -194.4}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtk2lM0wcchhu2CIgMxlUch0PLnAQaOVoL/9/7d60VgtmQFeOOTC4HAzkG
aEKcsFXQULSGWtrBVuXosJYjCgisEwzHkIECMpEpbIUBYZvgJiBEhKnTZB/e
J3nyfH694j+XJVpwOJzDVi8gi8sWZ2XFHY1a91IS4lIDA1JfRrv/p2vV4Yv7
VRAu6xHpW4cw/1okdVVjg00VnndeRO76Ovi0XYBhqB4lX2pQ+qgEFjwlivKU
8G3VwniqFKrt1dhXU4uHyZUgbh3WQi5AHl0H6YmLGNhRi2d8E+7a6GFbWAoX
Rw0aM5UIu3kao5YaJB0pQ399DUSkx7U0I4Ya6jDGacYqpx5Vwit4z98Ec64e
PQtlCC7WIpajxa8nTiGeOYfp0TKkJBmhZZvRXdCB+zvvYHa8FaNPTPDxbwT3
9XJ4yHR4t1eB3s1nwYSko1RQgN19pxFsqUdTWBse7BjG7OgyFuefIuDKOAyv
NYEbboDVmh7TdA5/7z2D+Izj2CuUw5ubBt6qHAe6avBY+D00Riu2a5MXG/H+
FrbEYhUhMzcxtlQDJ/vzSJQoMPJqNtr/jIFpcQ8cZqLwb7cCAq0C1aIhBM1b
s7uX/diRQwxrELmyOT4/ouV6GZz0SjTIs3H5+kf41IZF4FEB2t8ORaM6BQ2y
k5Dym+CQ/xfmlzzZnu/cWf88a5a7vwstwd/gTc9sZM0eAO/gdvj1i1HRz0d+
RxAyuj/G2GAMpj8pQob4Gg6W30P7yTmsjx1AAO8SMo3ZyL0XgyiDG7xzGNg0
bcXGY14I/swOdp4sIr+KwO8PDqG/UgWPvK9RLCmHRKOD2bcAP4xEI9Y/FLKd
XAjt34A2coKO2dyl/huu+C00CLwaIcbcWOQsSfCUn4DBzkyokvdh6B0JbicG
QnVkE2qvbkDFrlcw+tYYPU/pITeaIPWNf2jbB4vUabZFsdgFJvVWmAa2YK45
EFOTPnDiO8CqwBaPWybol1sd1Dv+Lf1UmU996iIKcjIS06Ig5swzUgvukGFh
ig6ftYaH7xS18m7Rxj/aqHDPbcpyVJLdVAI5ph+nkLl4GrZqYn5+5Efyzc6U
JtJQQm40CVakNMmvopn0boqarCDzukFKK0umbVIeda6JaU7uSqkWUfTiShz3
2VhmwT5JpFKLGed2M+PiLaCrT1Q003yeLPcXkvTSZVpxD6fwhx+SdljP9Dnr
GHPECvMfJR2OHQ==
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -583.2}, {
      Center, Center}, {360., 360.00000000000006}], 
     TagBox[InsetBox[
       RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1:eJwtjX1Q0wUch3cbB5QGKJDKmghCgQjqKKB9P78RyEug1zheh5gDjsFQZLCd
0KJ0grzl2Fi8bMkfYErALpggC4W6QTnlggtlolJ6RllWZnEK4iVhetcfn+fu
ueePj0+uPDmfzWKxlM7PkJxTHqVQ5KhSHJ+LNKcolF/0PLr+v9Z+Zwy6DJPn
5Uv0HmeR9vEzUWbnIes8B6q+IKzI0rG0VYRCFGM6XIx1CzXoVXZgt+I49ppu
0zdbztL4ISPdX7ZRIqIQgwhskgSiKZyLI+07ccukRZabEH6pBXALVmL3Wh1c
Dxnx7JoVll5PruoFwWxbFz0sX49jb2/DxIFYXNpbgQ8m61BVdAQ3XfLhny1E
g1mKoYFSyFLroVOPCjKLHKl6D4tCbkrI/Q0nSC5w0WQ9ALb4Q1THFeOMVxqu
y8oh1ath8lDj2yQths8dxtPRWJL2+FLQeCh9VX2WZrl2+sgjGvNuCjQbj6L5
Wh5+ttbiyo4KbN/QhJUdcYjJfgeNqgxUJTkJRKdLiBLF1J95meLnnLAtJA3z
8gJcf5KLyM80+GT5MGx3NbjPL4BsMAOTcwehbd+Fk+dd6X2uI4kFizS+eom6
domgelgHu7kdS8MmWJvb4ck5gXssEaZ1eZgzb0Xhk5dAv/JQ97k/+eQZKDbw
JBke52J0WIsx00UE6qbQN/0Unr0cZvXULMYeaaCMC0NhWi6CRx1QdOUf2jNQ
SnbOKgRKI/Gg/i2YHfToTJ4BL2sjk74pkal9OZpZa3mBCWjpB5tnALfODx0d
D6ik5y+K0g4J+L7D9G+XA/K2h8NVpoa14A4siTFMsmU/E0tpjO33ICZePo3N
Plos5CfgakUUJiJ8ELvmFXIua6O23x7TTu8ANBwtRNeNG2hkvJmA7lRmyD+E
ec2+kZGq76HF0gdFpBpZkhJ80emHzUJHEhkldLDyF+qd76fGryPAzdEjm22D
sMSZWXZ5hHU1Mzj14gTmfuxE/IlivOpYiepPE9Atixb8MVJGqmNt9GeoklLv
uqOnhY9z4v346Y4G37vpwDp1Ghe69Wg1NCAj2wDvNVWI0/Ax4g8ybwgjedMW
4tr6KOUHwGvKA6WtGfjOtxzWfUlIaEuBOycTZ5RJkKyvxUpVDUpu5eH1gUXB
xd5BAZqPvxnMvirw5PHRc20V/jaOEG/GB5YxPnz1fvhY7oUK6bsQptVg8ksZ
blfW4j8gnHaF
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->GrayLevel],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
          MetaInformation -> 
          Association[
           "Exif" -> Association[
             "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 16,
               "Compression" -> "Uncompressed", "PhotometricInterpretation" -> 
              "Black Is Zero", "FillOrder" -> 1, 
              "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 98312, 
               114696, 131080, 147464, 163848, 180232, 196616, 213000, 229384,
                245768, 262152, 278536, 294920, 311304, 327688, 344072, 
               360456, 376840, 393224, 409608, 425992, 442376, 458760, 475144,
                491528, 507912}, "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16,
               "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384,
                16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384}, 
              "XResolution" -> 72, "YResolution" -> 72, "PlanarConfiguration" -> 
              2, "ResolutionUnit" -> "inch", "SampleFormat" -> 
              "Unsigned integer data"]]],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
     TagBox[InsetBox[
       RowBox[{
        RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {Center, Center}, {360., 360.}],
      "InsetString"]}, {InsetBox[
      FormBox[
       GraphicsBox[
        TagBox[RasterBox[CompressedData["
1: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
AEykeHo=
          "], {{0, 15}, {15, 0}}, {0., 1.},
          ColorFunction->RGBColor],
         BoxForm`ImageTag[
         "Real32", ColorSpace -> Automatic, Interleaving -> False],
         Selectable->False],
        DefaultBaseStyle->"ImageGraphics",
        ImageSizeRaw->{15, 15},
        PlotRange->{{0, 15}, {0, 15}}],
       TraditionalForm], {192., -1360.8000000000002}, {
      Center, Center}, {360., 359.9999999999998}], 
     TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {Center, Center}, {360., 359.9999999999998}],
      "InsetString"]}}, {}},
  ContentSelectable->True,
  ImageSize->100,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{
  3.7265138378839417`*^9, 3.7265140403210335`*^9, 3.7265141123925924`*^9, 
   3.7265142737273808`*^9, 3.726514342132637*^9, 3.726514430497733*^9, 
   3.726514528273715*^9, 3.726514595172801*^9, 3.7265173429013805`*^9, 
   3.7265176325257225`*^9, 3.726517690518758*^9, 3.726517803369321*^9, 
   3.7265251594631295`*^9, 3.726525226590114*^9, 3.7265252650275292`*^9, 
   3.7265253533360443`*^9, 3.7265254982415886`*^9, 3.726525640426422*^9, 
   3.726526028132743*^9, 3.726526061127495*^9, 3.726526102848234*^9, {
   3.726590275482226*^9, 3.726590298612549*^9}, 3.72659073397645*^9, {
   3.726590773940736*^9, 3.726590798400135*^9}, 3.7265910604541235`*^9, 
   3.7265913006758633`*^9, {3.7265913954252825`*^9, 3.7265914311783276`*^9}, 
   3.7265914902667074`*^9, 3.72659158419508*^9, {3.7265920024800043`*^9, 
   3.7265920476795893`*^9}, 3.726597369634988*^9, 3.726597546752119*^9, 
   3.7265976440296826`*^9, 3.726597763548519*^9, 3.7265978091601276`*^9, 
   3.72659790256847*^9, 3.72659795414142*^9, 3.726598044665598*^9, 
   3.7265981220020213`*^9, 3.726598309557749*^9, 3.726600327664178*^9, 
   3.7266006100253277`*^9, 3.726600896125692*^9, 3.7266009858198223`*^9, 
   3.7266011560295577`*^9, 3.726601235375096*^9, 3.7266012730792522`*^9, 
   3.726601335576827*^9, 3.7266013979683957`*^9, 3.7266014549096527`*^9, 
   3.726601498120124*^9, 3.72660153038997*^9, 3.7266015718403406`*^9, 
   3.7266016160328684`*^9, 3.726601694933381*^9, 3.7266017334415836`*^9, 
   3.726601770303692*^9, 3.7266018580667114`*^9, 3.726601923371447*^9, 
   3.726602037735988*^9, 3.7266020916730733`*^9, 3.7266021329554343`*^9, 
   3.7266023456055975`*^9, 3.7266024436142035`*^9, 3.7266025369075394`*^9, 
   3.7266028123082914`*^9, 3.726602914633144*^9, 3.726603006916422*^9, 
   3.7266030502298994`*^9, 3.726603137719904*^9, 3.726603205049755*^9, 
   3.7266033031333647`*^9, 3.7266034224501896`*^9, 3.7271046107866383`*^9, 
   3.7271057324069753`*^9, 3.7271074055524173`*^9, 3.7279788844025345`*^9, 
   3.7279789564484425`*^9, 3.7279791537255135`*^9, 3.727979212205663*^9, 
   3.72797926513217*^9, 3.7279793252447557`*^9, 3.727979400818308*^9, 
   3.727979463538962*^9, 3.7279794974797497`*^9, 3.7279795531022973`*^9, 
   3.727980220467798*^9, 3.7279803235033617`*^9, 3.727980446546909*^9, 
   3.727980501282436*^9, 3.727980567680085*^9, 3.7279806740347595`*^9, 
   3.7279811096102004`*^9, 3.727981602005185*^9, 3.727981659521139*^9, 
   3.727981730705536*^9, 3.727981881443534*^9, 3.727981933546461*^9, 
   3.7279819885205407`*^9, 3.7279821191081843`*^9, 3.7279821509181356`*^9, 
   3.7279821943283806`*^9, 3.7279822534387755`*^9, 3.7279824010434437`*^9, 
   3.7279824981331353`*^9, 3.7279825722562313`*^9, 3.7279826871288548`*^9, 
   3.7324639063419857`*^9, 3.7324639835052767`*^9, 3.7324656172982283`*^9, 
   3.732465782852126*^9, 3.732465847308528*^9, 3.7334871683385077`*^9, 
   3.756841474963216*^9, 3.7568415273732133`*^9, 3.756841577477079*^9, 
   3.756841782520807*^9, 3.7568418819134917`*^9, 3.756841952036503*^9, 
   3.7568420030164185`*^9, 3.7568421160678844`*^9, 3.7568422088411913`*^9, 
   3.7568422887737627`*^9, 3.7568423342813654`*^9, 3.756842431433956*^9, 
   3.756842470746316*^9, 3.7568425922203875`*^9, 3.7568426277260637`*^9, 
   3.7568428515904045`*^9, 3.7568430538309965`*^9, 3.756843163933033*^9, 
   3.7568431963715034`*^9, 
   3.757169868167421*^9},ExpressionUUID->"bc81fe8a-63d2-4a32-bac0-\
3ac17f6901b5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"GraphicsGrid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"myYellowAvgImg", ",", "\"\<Yellow\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"myWhiteAvgImg", ",", "\"\<White\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"myPurpleAvgImg", ",", "\"\<Purple\>\""}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"myRedOnlyAvgImg", ",", "\"\<Red\>\""}], "}"}]}], "}"}], "}"}],
    ",", 
   RowBox[{"ImageSize", "\[Rule]", " ", "800"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.715738434145571*^9, 3.7157385642380056`*^9}, {
  3.717506682945863*^9, 
  3.717506691148878*^9}},ExpressionUUID->"6646bf9a-7aa9-4091-a41b-\
68bab8ece118"],

Cell[BoxData[
 GraphicsBox[{{}, {InsetBox[
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[{{}, {{InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjWtME3YcRYFOrKDgBEkFJdmGuFFgrDom8L+/BhQRcOM15CUhBenQgEA7
KnU1MnnjWEPFYnlUGAFbuoIKIgOCScFogrK2Y2wxaCSQiYtOFhUH3dw02Yd7
kpPz4b6TXZgodrCzs5NyXyNRdDxcIhHJkxzfSK4of6cg/010/X/HNnzPvC1c
OPZvROD1zSi9uhvCwh24YqjCE1MO9nUfQGxoIVZMB3BDUgZlSije96/EAK8d
5z/5nB2Wq8JaEgQwf7wb854pWFLmw7ZVBb/ZAfBzW1Ah7sEpvRIFASXw+UMF
6/YG9KzW4/W1ne20P1v60AnzGbEwTJ8B054Dr7ceaQ+smJFbcKuoAaapi+B3
9GEooA05KVrMZOSCeyyaxa2/wKIfzbKZh/Voi7sJQ8Mihue2UO+Jt0j8/G0K
Vt/CrLIDfnNnEfm0GT6D1fAr34MRtR9zqtEx/cJjpvbSoMV/HDbJdrI1HaGy
kwepxCmCCsTbKCb2CX7/7Vs4/5CHTI4G8UYHyF6Whq3uckXIlf1IqjMiI5RH
dzWpZFXr6Jr4Z7puvkxBvumk0P6Niq9/weq7o9C7lKAirhIGcQKbKxxnIWne
SPniV8xr+ORh6aLl8s1CjmOUMLDBTVi2qCF7rYBGk+7gReM47qk02Nh0BIfD
1CzuZRKbe3gUyfHXENr3EcnkE9TpBuGXVrlQJyHhN5wxuiSPJEHOOhJMT0L9
WR1IV4fBAg57DDd0m75CdvAwwg+9Rw8k7eTB3yIUeScLTzXzhPZcLa0JF5Dm
5nPs6DdBxq9Fz1Mpsna64OCGu8xRshVT6T3ge6yjoyN7SRSgp9S+SSof05Fx
SUTlMg/KC1pGf6gZYcVNuOdUhU6vEIz8kwyLJB3PghpxQWHCq2F3alTFU8/E
cUo0p5HhkDcZnFcQpbyPgKQJhG26iryiDmSeeMSqKybZi4VY9HZpsaZLicml
CXgNPYP7bQca/8mReqsXMWW+jBjFKOaNpzH9qRHO5lYku9YxBVnZHV42YoIv
sfOl+xG52Ixul1r4/jkGu8HbuGj7Dm2BOpyV6+Ez1w6vTVI0+oowVDnANDe8
YNl1ny1keaIzyxcRbsVg/RqscGoRLW3FB/+W48dXVfjLR4chyCEbr0Tf2kCo
DJGoiVAwF044PGtsLFqZjpPFEZByazB6Zhvs1+/FYmIqoriZcB+pwrKsFftc
EmApCsF/LomFHA==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -194.4}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk2tMkwcYhatTKtYABmUEBgTJROWq4KT0O+9XKlRbGRVxSISQ1AVdXWkD
0yCgwOi4TaHcHFCFVamSIS2QLIqChaaMIiCZsgCRzJm5JWNFJ07IwIwOk/04
J3ly/j3J8T+hPnJyLYfD+WLDah2R58RkZ8tzk5zeQYZcGbFH+W50/T9LAXGw
iaJRrVDj9K5ClL4tgVxYiruiFrAyHXZdroWXoxzqyXy08RV4/WQ3pt7sQMJH
x3FxhwzZFz/BaFIWaoNrYY8qQojaBG/vR1D59+PpXC98267jRpMGepUKc9YU
GJa9Ie/9GFx7MGQDMmwQnoYH9wYSLdWw5VtQnfAXYtLn8Ll2EDV3BnHOVI+9
C7dgDtHA45tT6CliYB4Gzlq/QkdLHuoXTPCa7IdP+zymu9bT45nNVKNzIlHH
S3g192BT7Pco12ghHyuGYF0YPj2fi+dGLczLV9CxdRpLvs40MxlCUUYRSSxJ
xLsmJo31feLp/oGFP45/p/Twv1CHo5oIpB3OxCtS4qHwAQbOvES8MZjOzuYT
L72TuOOD1BjYRDxDLCVzXKhs0zwiCq1ocbmKvfeVWNOiwlJnPS6d12OUv46M
I0dpm62TusN9WUmfiP1l0ZVtKNRSqzSUbKZXkHX/COmDRjiOZyLv/kmULBjg
oezFWBGPQpcOUJXQQn2VLMvhFLG3nMVsXfMA/d5zkByz75Gv4ikGcpuwO+cM
DAc0eD1ahUClGYJ2LjVuCSO3rHrKCfVgswJj2emgbWzMMSOtfCehtHA/cn8+
Btu5SjxJjgeZxGh4Vg73/qtIy3iIlBEncuqSUmV2DVW3Wunr7V20ZbGEitv5
NBziTofFZvhLy5EsdTA/NXtCtu8g/h6qgC+/FjU+L1BgWIY41YVcKiKpZIGl
6bDt5PelK2VH30PIsXKsrD+EmMgZxmVjJ3NhaifiZz7DwNpGvPhTh6FgAxar
rOh1+xmSITvuCYZRSTcR5V0M67wEElEE1B9YmYKJ24JYzDLFbQJkVOxB6+ZD
KFDF4m33qntdF5RrehB/rRr6D6swESTEXHQiRA5nBEyYmdU7cAbL7jBi/mPm
kfYPZiWUB39PV4TaE2Hvk+LZ7RQ4tJlwNebAM06BuNZUyIJOIKB0nPnBjcOU
6f2YLmUDs09Xyv92Vse8+fUKk3B3hLlp4kJRJ8HlvP0QVp7Cb5Fl2BieinSf
Quj3b8V/+2GD/g==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -583.2}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox[
             RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjH1M1HUcx09TRDi500kIR4cYWBhgEDeE3+f9PXwKZIXkCbljPBmPF40D
ZGgpT22ix4P8BkKCYnccnmhhPERKEosBRfLghaDRGiUwSOxQ40EYYrr1x/u1
vfba3o6Hkw/ErRQIBGnmL3AgOmNnamr0MYXZS4mNTnrHM+llFP2/Fev9SP13
OkkWn+1wv97NqcJ0vhfnnbmLogBOoVZw005hXPFNRuZVAlIey6GGNVqKNN6m
z3h3GizbSrqSHfTiRpC/3cDlX9tEwmHet5/xXGPiCS7SxZIbzRDTrlQhlYsT
qOV3KVU99aBOP1Bf33mqUXT4nl+Y9929uIWT1aRznRY+1L1vGy3G1lGvvoAm
7BzIGMqTcTqAEuozKEWhoHBtHQllldwVNxfqf8uL++OLL31719qS21guPZnL
pfDMFHJU8VRyq5CCn3SQ4vEkueXep15PHbl4fEVFVo70KKyU02RXcA5/XuKi
htbSzZAuKk2bopwlVwzqxfA/IsZMuBBXttog3V8Cs55HFNQ+Q+0aG1o47Upd
LV7U1l5JpbHX6PHwJPVq1mNqIgibVXJYnN2L+qb3kfDX60jm30T58gKJ7afp
+Xgxd308jHhNKA3Eael+twW+3ibHbPNBHDacQ9QHV8Fv1wN5FzCeXYT4sTgc
tfJB5tAK4EEoKWVRJLyRRXF235Pa2xqrG2Mgnb2MPa1zaMy1ZP1lm5l1pJSl
mVuxhaq7UH2TgVuJdpA0VpNaoqc7Q79Q8+cmSn9jPzp7NGjZ8ACa6beZNvM4
k6bUsu8c21jS6jLW1EjsZ9tW/OOtxIL3Q+KXB0jUukyi7Bm65HIITFaOd38w
Y6bnUcz1eBcrNNrLZztd5CPVSyxrF89e0a1h6qqTeJo6ScaNHrC2cIX2YykO
ZgWjuUMPO+M6Zq06wUYm51jHXiZfpd4jj84SyuNltWzfxBbWJzoFH40ZThsm
yJ/c0Sf2RNeZCPQ2lEBaPoN/oWR1G39iiSY7eVCErXzUfIoJ+ovY5WYnFiM7
hwDnWBrl88lQYInZ/a8hpyMMDXeUqPm0CSHzlmxDjJo5j2iZKdnAzhScYvmp
AWzsyDO4VWfj9reHqCUwggY3XaXdQSuh7ZIgoMIPdSFZMPukFks6E45+ZMsu
/GbPkubEbNhpEnkDFahThkDV70A/BgbSw3vv0brCNrLpWYW8egHuzkjwa20k
vMqLcVZTixvBLXh1ogknP6yESRePe30W+A+/2Iww
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
           TagBox[InsetBox[
             RowBox[{
              RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {
             Center, Center}, {360., 360.}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1: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
SuNJuyj+C8GOhR8=
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> Automatic, Interleaving -> False],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -1360.8000000000002}, {
            Center, Center}, {360., 359.9999999999998}], 
           
           TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {
             Center, Center}, {360., 359.9999999999998}],
            "InsetString"]}}, {}},
        ContentSelectable->True,
        ImageSize->100,
        PlotRangePadding->{6, 5}], ",", "\<\"Yellow\"\>"}], 
      "}"}], {194.4, -189.}, {Center, Center}, {360.00000000000006, 360.}], 
    InsetBox[
     RowBox[{"{", 
      RowBox[{"myWhiteAvgImg", ",", "\<\"White\"\>"}], 
      "}"}], {583.2, -189.}, {Center, Center}, {360.00000000000006, 360.}], 
    InsetBox[
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[{{}, {{InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjn9Qk3UAxl/njfila3IuElkMkZLjLJnKau/zfYNobMND2oQQRFvmAONE
pFweVDs0yCVDwKSQ3xOJkSFgOeUgBA8RcR0Sc+MGWpfAYccPb8NmLcK7/vg8
d597/vkI3s9WqFkUReV6Lo9CpYk6ckR1TOnxTA6osoQRWc9Ozv/Yh1YRjXUD
cboiyLgmjdRKgkj4wUeYdK8kHTOlaOmeBuvLBYS9YIKz4xh8/vGF8WYA3W9g
oJNFoSzEjTrGgjmHC2r5fVxvdkAa+wPO21vQJBrAp+p5PNhSimLzelB7tyFa
Z6ad5u3gSEZoduAVuArakFHUjzCmBo+/rseh6EVUD5lxi/InkvtT4GdlYzmT
8qkX0peOZoJ943OYbnhCY2rD1hM90PrUYYNCDzfnHFyJ0xi40wf/qxXIsRkQ
0x+K5v5T+GzPR3inpQIhqa34ZPZFrBOchby6AY7eJIgbatGk7MQrPTOYaHmT
JCm5RLbrHsKrykHJDiKR+wf82814WGNHio2H/FNadHqJ8Fv8eSRHTuBwlZjw
youJ3d1DWH2lJNgPZF+hBMlxd/GqrwdZzZ9D624Ldjw8A6vjMi4PO1B4egr1
Oi8yozhMhjLWMiVLYG6fZjObLQVk4pEHYRUOY2PjSewaHcFrVA/u7l+F3dfO
YUnWB/fCJLaPCUnb+i5ynSdmKErLtKljmK88y0m6nktWXGhC/MaL4KdbYHhc
hKREHj7OK1tuqIEzjEVEcStIcLeW/J25krkyHccIDngz3EUtIUt+pOp3I4zG
bhwq80VjYDXeTQtFsmqS7nBWovqXt3HV2ADeGQ4pSC0iCRN95KmkkjyYkZKp
sT8hk48jIbcEP3pmYZ6di9FmPygNnbQ0JQ4J2UV4avkClalTmG1ZRKQ/l4xt
iyKxXrNIr6OIfnAQdUcrUGKVY42rECl2DoSbttDfHRfiOD8b/H0xuPVvGXJD
biJq5x2ktj+Bfe8wWD+3w9tLC0tvDeLfGqFfKl6HfIUE1g9kdMZgPT4M34za
/JPIuSeG4LlGPP/TRRjGT0CapoN3owa2IAMEwrW4xHPRabFsfP9Go3i08hrd
bIpG5KIIqUs7ELzpWyzovsF8TjFe7uqET4AOXU9U0P/VQC/og3HBNwVZe0Jx
W9RJ/7rVKlb2mujeuX5x7utyrI7YjyDbWfTJqyDPUyPvvTLE7tQh09YOulWK
gcA1CEjm4D931Y0I
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -194.4}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk31MFHQcxo/XOBQ4DJFTBOFOvCMQCCS4+z1fAwU9dyiT95usToOLSTKg
C1xKFxOJGIHEEAQ8QJHMjQjGi5CszTTvQt4iKs4X8IjyDw+Jt0CJcOuP59k+
e7bPf4/H8YyjqeYcDifbZr2OKnPCsrKUp2OsX0GKMj3wzfRXo8P/aU8TEifQ
lkYGeTQf4kBb5Bwy+5hHLYf+RUD0HLT9z3BJ1Ifp1CUcOnILF+vG4afXwkYX
Bae9PPr1rD/pLDbTpIBPGfvEFK8WkIuJS8pvLGhz+iyClsagYCU4aT2IUtMM
xrnXsGhTidB/eHRMEUoXusRk1cGnL4XedMBXRgd/PkIrC8/gNWBJswvPkWBr
xLHvptA3M4+27k5ETrTDt0BEpYpkGo6S0LhRQF4Ne8jr9Emq4cso80QoLTyw
p7seQ9AF3kKvdgK3LeYRLzXh8PZGfCXbQX83RtCqIJgO1AjoeYSIirZLyOfU
2+SQvJNmz7uQa7gtFUb3w3zfInqrRtCTM4aXV1pR2OVJt6sdyL1HRJN1HtT1
PY+uFrxBS7ytNB03C6u2TfRk0oMuZ1uRm3EGtTduYllfjISYEsiz/MnvwevE
TeORQ64rzf21ArHbKqoarKkq+CUMv/Eps5xPWflreKtvGLloh/pGBRzNP4Ak
KYgOhj+FUh5EZz9bQcfTAcQP6VCYMoQ9zIrs3/sB/iU6+Ba2QiW5jl3NWvTf
VMPLbyOSdi2gsnEF3q4GjN6Zw+dfG6EKMyAvfhROjno4v9aExMg2XElSo6il
HipuLv64PM6Kik3shZRDpsAXmEh+hAAXIzS7tahPrIbftjZ4CytxccsJLB/O
xHC+Hcq8NsClPBozeU3sz6By5im+j747nTB9WIagum6UrmnARPUYXRXD0jpy
3eWMycRVFmVpj8cFG/HFOTOEunOhV/ugM7YaY4vXsLbDgmSxGdgfF41Wjj3u
+YRgW7c5nlRIkL2fj+beC/DNDcAZJsOlT35h86mxbJp/DyGd7bBL3ouwq+cx
ZPcpoiRiGBIkUJj9zmqdA6COOQ53/jnI/fOxWybEiFswfnLskXoMLuJdYQMM
OgWaAqZYzfuncCYvBfrBMLR0J6JiayZUHcusRiNHXGwxc/pogoU7ljHPhxo2
sGEEHdLr4N5vRtpgBDSCDDzMzcHaOwn4cUqFb1W+kDf1sk2P21ltVz9T3d3J
1u/HMXEeSf8D+ll7CQ==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -583.2}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox[
             RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk38w1ncAxx9mdDMkbYyp3BqPH48VxnZ9X58nOmVWcZhfHfXoGEN+hfxo
5yES8jAmzc/VNpQs9uPG4dkKGbvarD+y62bqrJUfZbYjl0x3++P9vnvd+5/X
P2+bqKSAGF2ZTJa2bq0CVJmeqamqrED9ZxCtSnB1SXg2mvyf7DtG4s8lKzHy
9wuiKbUW6/v1dM5WYXS9kTKfCh4XaPD0bCTv9Ffc5SnHgx3E6pie8O/qw7p3
lv4PZrCd+4OD8zVUphbyS20zR8abMLVXM3vnBGN27ZT0XUYepC9+DF4vzKdG
mEo5T9Pxc3yz5xr5RRWM7y1i3yedhE6cxWi6BtPCVuKtKmjzLWDr4zOMpn/O
SmMvM6tVrJaEoTUvhgdvo81N4NypJEyjcqnb0UO67UUWHl5hs/wz9qZcYvhe
EzEhhSj085iRFfBh2nZ6DkTh0X2I+4oCgnfWUL2tjt7OAaqzDER5/SLTtkt4
Wf5LZsgVqnfXEi4V4G3ggIG0GQP1fpqX38U2toiI1z/CXV/L0Vf0RFWDm1hz
FXPl4SLDeqeYS7IU3kMjtGz1wcc7nCPPWfBxYDQJSXvQqcoizF/DSvoC9jf9
RMHAbaE89prSxOeJaP+hTCQHeAidyus8Co3ji15b2hw24nX+KB0XfJDn59Os
/ImwyGUit2uE65KjUibLU87mKpSV+eViZW6LyF5uJ+n5Y5jIY8lRhfGWRyz6
vwcw1dVEsWELbRlP2XUvT/heNFa+k+2pdDOeFV3f+wvHn8ewitbQlJuIrmca
Nkt+FPW/yeTVYN4wb6UhZoivb2v5bcJCLKjyRWxQvRj69LCYVD9itvsC1nMa
6lOyWLdJhVTqhO61ABQdNZy4NcSN7/pYPNSK5b4B/tq9wpnAGbxuDaNJ7OCS
ZTz7tZmsDkeSpvVjy6g7PX4d1J3q5NucGd7f1c10Xgfq+HLGzJMoPKCmLDWB
+YhCKlMUvOcsZ5vRvFRsZ8EDu5cYcaojJ7mFDflXcXuxi0ETDQMNGfT4lDA4
AmNyBV16YRgnuLDxVV3iGi0ZVLtKPU4HpcsZajKcs2jR19CQrKK/zoubL9tj
XxqC2SYXku0duTFiRuhZC8Yffik1jwZJKXG+0qCJasfgyfUsB+kwsbwoWe1U
8M8GCw4nWtA3GoHN3UC8nH+VSr30sFs0RGU2KQWc7JbW7iczfOIu/QfBjYSh

                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
           TagBox[InsetBox[
             RowBox[{
              RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {
             Center, Center}, {360., 360.}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1: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
/d8v8svkXMXBZb0yEflhwPwXIwV8hw==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> Automatic, Interleaving -> False],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -1360.8000000000002}, {
            Center, Center}, {360., 359.9999999999998}], 
           
           TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {
             Center, Center}, {360., 359.9999999999998}],
            "InsetString"]}}, {}},
        ContentSelectable->True,
        ImageSize->100,
        PlotRangePadding->{6, 5}], ",", "\<\"Purple\"\>"}], 
      "}"}], {972., -189.}, {Center, Center}, {360., 360.}], InsetBox[
     RowBox[{"{", 
      RowBox[{
       GraphicsBox[{{}, {{InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk3tM1AUAx3mccAfykAMhUlAOcOSJQAyt+35/ByqvvDJAlk4hUQJRTJ6m
ExHsAehFnYhz5wxGikVQHogOaAyGTl5hhA9eQsBknOQFrtHpoIKtPz7f7bvP
vn9+1+4/Gp1kZmJikilejOiET0IyMhJOxFgslY8SUt8MSF2Sdv+TFjIBfV0Z
WoZrsFF/GS8M9gzdbcnH1S+xvNmOCzJbyhtNOX7EnbYaa/7SJmbD5HNEtIq4
5Yt/kX29CXvT7fjN5Xm0yfWoUU1BqTbnyM9ujIqXsC2sG5JNUo4bx7HG6MBv
He7jsMUUHvSIGDxpTq3TILTpVrx0wJom+mX89J11HN26miUjgYz/cgWdDROw
n7agNHgIreonOFQyjLTjMqZlSngzeSVfVczB196XQ9INnN9+iPcLM+nWlMj8
N2LplOPPPbE2XNp771vArs5WGCpc6fXChXVVctZMuLJg1IN7t2toKrtBseM9
GmN17M06S2l7IJ91SqgbMmV/kClTdg1Ba7Rm0h+r2DkWyCOjscxtPc1NPb9S
4x0plJrlCwdPqYTv9V3cOvkxD2gDmHPUg7/fNuX85AjK1/oxpt2HEe1KHitN
4uacSqZECUJz+ICgK3pNaTs7KvwoekuY8dOyx/AB820sKN8hYnxzH86vllD/
cCUvzkaS1imc+a2Dc8YsId3PWSnZuUc5u9xZWZ29XwhWN1Hj4cmIZHPe1fYj
r6UW61V2FLmsYYEilOrEw6xTt/CSKEzotBgWova9rryaMCYEjUAIr9Twc5kj
N8eNw7HdH81ndBhViem7Yhlt7Dz5vMmHHkVnWbN7kDsb3hMSrfOFDS4hwhZV
Hy3Nd3Dh3hOUltcjSxaI2aGDCLnbB/cLi2zsgEP336gyxvHWyeOsKajl07Qu
qp5VUzqbyNuDbnQKncX1+VqEVpXB63TO2zcqyjHySgvb0i5IM8x4wcOdZ+DN
EnkMbT+LYtydMBYPr2KL7xVUFHfg60IJq3RGBWIj8TLvK7g2dOOplQ6VcTPw
7H6Irnox+x/Z8JbTVejjxnDeMABpQD8Kk6cxtT4SJzRlisRTDxTagVwMBv2J
4NpGXCyvg1X2P1in6ca14jbkPq5A17F6PAr7Dl5zg9jmcA1zvXI0qqcVrTYG
RWxLCTReV6Cw/AFZyeWQyUZx5/1zOPnuTwj3OYfoD3uROl8H8V/psCrKQ9dN
f8W2OissXtDkP1YMhAM=
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -194.4}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox["RNA", {576., -194.4}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtk2lM0wcchhu2CIgMxlUch0PLnAQaOVoL/9/7d60VgtmQFeOOTC4HAzkG
aEKcsFXQULSGWtrBVuXosJYjCgisEwzHkIECMpEpbIUBYZvgJiBEhKnTZB/e
J3nyfH694j+XJVpwOJzDVi8gi8sWZ2XFHY1a91IS4lIDA1JfRrv/p2vV4Yv7
VRAu6xHpW4cw/1okdVVjg00VnndeRO76Ovi0XYBhqB4lX2pQ+qgEFjwlivKU
8G3VwniqFKrt1dhXU4uHyZUgbh3WQi5AHl0H6YmLGNhRi2d8E+7a6GFbWAoX
Rw0aM5UIu3kao5YaJB0pQ399DUSkx7U0I4Ya6jDGacYqpx5Vwit4z98Ec64e
PQtlCC7WIpajxa8nTiGeOYfp0TKkJBmhZZvRXdCB+zvvYHa8FaNPTPDxbwT3
9XJ4yHR4t1eB3s1nwYSko1RQgN19pxFsqUdTWBse7BjG7OgyFuefIuDKOAyv
NYEbboDVmh7TdA5/7z2D+Izj2CuUw5ubBt6qHAe6avBY+D00Riu2a5MXG/H+
FrbEYhUhMzcxtlQDJ/vzSJQoMPJqNtr/jIFpcQ8cZqLwb7cCAq0C1aIhBM1b
s7uX/diRQwxrELmyOT4/ouV6GZz0SjTIs3H5+kf41IZF4FEB2t8ORaM6BQ2y
k5Dym+CQ/xfmlzzZnu/cWf88a5a7vwstwd/gTc9sZM0eAO/gdvj1i1HRz0d+
RxAyuj/G2GAMpj8pQob4Gg6W30P7yTmsjx1AAO8SMo3ZyL0XgyiDG7xzGNg0
bcXGY14I/swOdp4sIr+KwO8PDqG/UgWPvK9RLCmHRKOD2bcAP4xEI9Y/FLKd
XAjt34A2coKO2dyl/huu+C00CLwaIcbcWOQsSfCUn4DBzkyokvdh6B0JbicG
QnVkE2qvbkDFrlcw+tYYPU/pITeaIPWNf2jbB4vUabZFsdgFJvVWmAa2YK45
EFOTPnDiO8CqwBaPWybol1sd1Dv+Lf1UmU996iIKcjIS06Ig5swzUgvukGFh
ig6ftYaH7xS18m7Rxj/aqHDPbcpyVJLdVAI5ph+nkLl4GrZqYn5+5Efyzc6U
JtJQQm40CVakNMmvopn0boqarCDzukFKK0umbVIeda6JaU7uSqkWUfTiShz3
2VhmwT5JpFKLGed2M+PiLaCrT1Q003yeLPcXkvTSZVpxD6fwhx+SdljP9Dnr
GHPECvMfJR2OHQ==
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -583.2}, {
            Center, Center}, {360., 360.00000000000006}], 
           TagBox[InsetBox[
             RowBox[{"0", " ", "Frame"}], {576., -583.2}, {Center, Center}, {360., 360.00000000000006}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1:eJwtjX1Q0wUch3cbB5QGKJDKmghCgQjqKKB9P78RyEug1zheh5gDjsFQZLCd
0KJ0grzl2Fi8bMkfYErALpggC4W6QTnlggtlolJ6RllWZnEK4iVhetcfn+fu
ueePj0+uPDmfzWKxlM7PkJxTHqVQ5KhSHJ+LNKcolF/0PLr+v9Z+Zwy6DJPn
5Uv0HmeR9vEzUWbnIes8B6q+IKzI0rG0VYRCFGM6XIx1CzXoVXZgt+I49ppu
0zdbztL4ISPdX7ZRIqIQgwhskgSiKZyLI+07ccukRZabEH6pBXALVmL3Wh1c
Dxnx7JoVll5PruoFwWxbFz0sX49jb2/DxIFYXNpbgQ8m61BVdAQ3XfLhny1E
g1mKoYFSyFLroVOPCjKLHKl6D4tCbkrI/Q0nSC5w0WQ9ALb4Q1THFeOMVxqu
y8oh1ath8lDj2yQths8dxtPRWJL2+FLQeCh9VX2WZrl2+sgjGvNuCjQbj6L5
Wh5+ttbiyo4KbN/QhJUdcYjJfgeNqgxUJTkJRKdLiBLF1J95meLnnLAtJA3z
8gJcf5KLyM80+GT5MGx3NbjPL4BsMAOTcwehbd+Fk+dd6X2uI4kFizS+eom6
domgelgHu7kdS8MmWJvb4ck5gXssEaZ1eZgzb0Xhk5dAv/JQ97k/+eQZKDbw
JBke52J0WIsx00UE6qbQN/0Unr0cZvXULMYeaaCMC0NhWi6CRx1QdOUf2jNQ
SnbOKgRKI/Gg/i2YHfToTJ4BL2sjk74pkal9OZpZa3mBCWjpB5tnALfODx0d
D6ik5y+K0g4J+L7D9G+XA/K2h8NVpoa14A4siTFMsmU/E0tpjO33ICZePo3N
Plos5CfgakUUJiJ8ELvmFXIua6O23x7TTu8ANBwtRNeNG2hkvJmA7lRmyD+E
ec2+kZGq76HF0gdFpBpZkhJ80emHzUJHEhkldLDyF+qd76fGryPAzdEjm22D
sMSZWXZ5hHU1Mzj14gTmfuxE/IlivOpYiepPE9Atixb8MVJGqmNt9GeoklLv
uqOnhY9z4v346Y4G37vpwDp1Ghe69Wg1NCAj2wDvNVWI0/Ax4g8ybwgjedMW
4tr6KOUHwGvKA6WtGfjOtxzWfUlIaEuBOycTZ5RJkKyvxUpVDUpu5eH1gUXB
xd5BAZqPvxnMvirw5PHRc20V/jaOEG/GB5YxPnz1fvhY7oUK6bsQptVg8ksZ
blfW4j8gnHaF
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->GrayLevel],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> "Grayscale", Interleaving -> None, 
                MetaInformation -> 
                Association[
                 "Exif" -> Association[
                   "ImageWidth" -> 512, "ImageLength" -> 512, "BitsPerSample" -> 
                    16, "Compression" -> "Uncompressed", 
                    "PhotometricInterpretation" -> "Black Is Zero", 
                    "FillOrder" -> 1, 
                    "StripOffsets" -> {8, 16392, 32776, 49160, 65544, 81928, 
                    98312, 114696, 131080, 147464, 163848, 180232, 196616, 
                    213000, 229384, 245768, 262152, 278536, 294920, 311304, 
                    327688, 344072, 360456, 376840, 393224, 409608, 425992, 
                    442376, 458760, 475144, 491528, 507912}, 
                    "SamplesPerPixel" -> 1, "RowsPerStrip" -> 16, 
                    "StripByteCounts" -> {16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384, 16384, 16384, 16384, 16384, 16384, 
                    16384, 16384, 16384}, "XResolution" -> 72, "YResolution" -> 
                    72, "PlanarConfiguration" -> 2, "ResolutionUnit" -> 
                    "inch", "SampleFormat" -> "Unsigned integer data"]]],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -972.}, {Center, Center}, {360., 360.}], 
           TagBox[InsetBox[
             RowBox[{
              RowBox[{"-", "1"}], " ", "Frame"}], {576., -972.}, {
             Center, Center}, {360., 360.}],
            "InsetString"]}, {InsetBox[
            FormBox[
             GraphicsBox[
              TagBox[RasterBox[CompressedData["
1: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
AEykeHo=
                "], {{0, 15}, {15, 0}}, {0., 1.},
                ColorFunction->RGBColor],
               BoxForm`ImageTag[
               "Real32", ColorSpace -> Automatic, Interleaving -> False],
               Selectable->False],
              DefaultBaseStyle->"ImageGraphics",
              ImageSizeRaw->{15, 15},
              PlotRange->{{0, 15}, {0, 15}}],
             TraditionalForm], {192., -1360.8000000000002}, {
            Center, Center}, {360., 359.9999999999998}], 
           
           TagBox[InsetBox["Merge", {576., -1360.8000000000002}, {
             Center, Center}, {360., 359.9999999999998}],
            "InsetString"]}}, {}},
        ContentSelectable->True,
        ImageSize->100,
        PlotRangePadding->{6, 5}], ",", "\<\"Red\"\>"}], 
      "}"}], {1360.8000000000002, -189.}, {
     Center, Center}, {359.9999999999998, 360.}]}, {}},
  ContentSelectable->True,
  ImageSize->800,
  PlotRangePadding->{6, 5}]], "Output",
 CellChangeTimes->{{3.7157384563512125`*^9, 3.7157384859538655`*^9}, {
   3.715738534566353*^9, 3.715738552756386*^9}, 3.715740403866352*^9, 
   3.7157404631880617`*^9, 3.7159651981193705`*^9, 3.715965235362839*^9, 
   3.716051515843933*^9, 3.7160573541531315`*^9, 3.716058647795999*^9, 
   3.7162255491285944`*^9, {3.716225652638397*^9, 3.716225668284828*^9}, 
   3.716316639103138*^9, 3.7163166935504456`*^9, 3.7163168299930277`*^9, 
   3.7171829276307135`*^9, 3.7172568149112463`*^9, 3.7172578016002955`*^9, 
   3.71725802898167*^9, 3.717264297745609*^9, 3.7173253078080125`*^9, 
   3.71732867222649*^9, 3.7173359896695194`*^9, 3.717502640355558*^9, {
   3.7175066697252383`*^9, 3.71750669210048*^9}, 3.717507373100255*^9, 
   3.717507460887819*^9, {3.71750893398813*^9, 3.717508950186761*^9}, 
   3.717510292116826*^9, 3.7175153972751074`*^9, 3.717768190819954*^9, 
   3.7177922897312317`*^9, 3.7177927138265944`*^9, 3.717792776107705*^9, 
   3.7177928525814447`*^9, 3.718653457915475*^9, 3.7213986625068703`*^9, 
   3.722950097995965*^9, 3.722958179518202*^9, 3.726514043018947*^9, 
   3.726514121811667*^9, 3.726514275258191*^9, 3.7265143520525665`*^9, 
   3.7265144370880413`*^9, 3.7265145487903805`*^9, 3.7265145978791013`*^9, 
   3.7265173444337025`*^9, 3.7265175933532953`*^9, 3.726517633814187*^9, 
   3.7265176937526627`*^9, 3.7265178055169964`*^9, 3.726525160909924*^9, 
   3.726525228716528*^9, 3.7265252660998545`*^9, 3.7265253553743973`*^9, 
   3.726525499753408*^9, 3.7265256419365435`*^9, 3.7265260295746098`*^9, 
   3.726526063142827*^9, 3.7265261052015376`*^9, {3.7265902759362516`*^9, 
   3.726590299448597*^9}, 3.72659073519952*^9, {3.726590775011797*^9, 
   3.7265907995311995`*^9}, 3.726591062062216*^9, 3.7265913017279234`*^9, {
   3.726591396985372*^9, 3.726591433116439*^9}, 3.726591491051752*^9, 
   3.726591586018184*^9, {3.726592003114041*^9, 3.7265920496527023`*^9}, 
   3.726597373036183*^9, 3.726597560114883*^9, 3.726597658953536*^9, 
   3.726597774688156*^9, 3.726597812138298*^9, 3.7265979075937576`*^9, 
   3.726597958653678*^9, 3.726598056866296*^9, 3.726598132407616*^9, 
   3.7265983203313646`*^9, 3.7266003325144553`*^9, 3.7266006239681253`*^9, 
   3.726600909522458*^9, 3.7266009970804663`*^9, 3.726601157487641*^9, 
   3.7266012370821934`*^9, 3.7266012790085917`*^9, 3.7266013408091264`*^9, 
   3.726601401469596*^9, 3.726601459827934*^9, 3.7266015009092836`*^9, 
   3.726601534312194*^9, 3.726601577650673*^9, 3.726601621416176*^9, 
   3.726601701922781*^9, 3.7266017393459215`*^9, 3.7266017719477863`*^9, 
   3.726601864186062*^9, 3.726601932006941*^9, 3.7266020500746937`*^9, 
   3.7266020935831823`*^9, 3.726602136499637*^9, 3.726602351433931*^9, 
   3.7266024546828365`*^9, 3.7266025515783787`*^9, 3.726602815797491*^9, 
   3.7266029194674206`*^9, 3.726603022124292*^9, 3.726603053259073*^9, 
   3.72660315322379*^9, 3.726603215082329*^9, 3.7266033324620423`*^9, 
   3.726603426701432*^9, 3.727104612633853*^9, 3.727105735607487*^9, 
   3.727107407052611*^9, 3.7279788887221975`*^9, 3.7279789615203676`*^9, 
   3.727979158782467*^9, 3.7279792149644194`*^9, 3.727979276814238*^9, 
   3.727979336790319*^9, 3.72797941703408*^9, {3.7279794738648186`*^9, 
   3.7279795008647594`*^9}, {3.7279795629669304`*^9, 3.727979586844288*^9}, 
   3.7279802323048844`*^9, 3.7279803391536565`*^9, 3.727980463145296*^9, 
   3.7279805182637696`*^9, 3.727980578630931*^9, 3.727980685946229*^9, 
   3.727981135031227*^9, 3.7279816178966627`*^9, 3.7279816688221474`*^9, 
   3.7279817371988735`*^9, 3.727981891489867*^9, 3.727981942393964*^9, 
   3.7279820037563815`*^9, {3.7279821294200025`*^9, 3.727982152900758*^9}, 
   3.7279821993300953`*^9, 3.7279822634970694`*^9, 3.727982412992633*^9, 
   3.7279825078990784`*^9, 3.7279825815116367`*^9, 3.727982698971241*^9, 
   3.7324657959288282`*^9, 3.732465851100711*^9, 3.733487171353516*^9, 
   3.756841477451358*^9, 3.7568415330995407`*^9, 3.7568415820103383`*^9, 
   3.75684178571999*^9, 3.7568418927501116`*^9, 3.7568419572458005`*^9, 
   3.75684200916477*^9, 3.756842122892275*^9, 3.7568422131724386`*^9, 
   3.756842295529149*^9, 3.756842337874571*^9, 3.756842433375244*^9, 
   3.7568424738121243`*^9, 3.75684259628062*^9, 3.756842630512473*^9, 
   3.7568428674154406`*^9, 3.7568430569252033`*^9, 3.756843168606843*^9, 
   3.75684319928051*^9, 
   3.7571698849603815`*^9},ExpressionUUID->"4d2189a7-d996-4a1a-9d0f-\
154361fb8ff9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myRedOnlyParametersSplit"}]], "Input",
 CellChangeTimes->{{3.7175090066544633`*^9, 
  3.7175090246144958`*^9}},ExpressionUUID->"ec81324f-d638-4217-9f75-\
5bc221822f39"],

Cell[BoxData["236"], "Output",
 CellChangeTimes->{
  3.7175090255348973`*^9, 3.717515406706736*^9, 3.717768190866754*^9, 
   3.7186534627222834`*^9, 3.7213988264962497`*^9, 3.7229512246374054`*^9, 
   3.722958180653267*^9, 3.726514043051565*^9, 3.7265141218372364`*^9, 
   3.7265142752827935`*^9, 3.7265143520881987`*^9, 3.7265144371221304`*^9, 
   3.7265145488445234`*^9, 3.7265145979011602`*^9, 3.7265173445069027`*^9, 
   3.726517633839255*^9, 3.7265176937797556`*^9, 3.7265178055566015`*^9, 
   3.726525160960557*^9, 3.7265252287551312`*^9, 3.7265252661291933`*^9, 
   3.7265253554265385`*^9, 3.726525499786501*^9, 3.726525641966593*^9, 
   3.7265260296126885`*^9, 3.7265260631759224`*^9, 3.7265261052411127`*^9, {
   3.726590275953253*^9, 3.7265902994645977`*^9}, 3.726590735215521*^9, {
   3.726590775025798*^9, 3.726590799549201*^9}, 3.726591062079217*^9, 
   3.7265913017439246`*^9, {3.7265913970013733`*^9, 3.72659143313544*^9}, 
   3.7265914910737534`*^9, 3.726591586038185*^9, {3.7265920031280413`*^9, 
   3.726592049670704*^9}, 3.7265973730531836`*^9, 3.726597560128884*^9, 
   3.7265976589735374`*^9, 3.726597774711157*^9, 3.726597812152299*^9, 
   3.7265979076087584`*^9, 3.72659795867968*^9, 3.7265980568832965`*^9, 
   3.726598132421617*^9, 3.726598320350366*^9, 3.7266003325344563`*^9, 
   3.726600623989126*^9, 3.7266009095464597`*^9, 3.7266009970974674`*^9, 
   3.726601157508642*^9, 3.7266012370991945`*^9, 3.7266012790265923`*^9, 
   3.726601340826127*^9, 3.7266014014875965`*^9, 3.7266014598449345`*^9, 
   3.726601500929285*^9, 3.7266015343321953`*^9, 3.726601577669674*^9, 
   3.726601621432177*^9, 3.7266017019477825`*^9, 3.7266017393659225`*^9, 
   3.726601771968787*^9, 3.726601864208063*^9, 3.7266019320219417`*^9, 
   3.726602050094695*^9, 3.726602093599183*^9, 3.726602136514638*^9, 
   3.7266023514629326`*^9, 3.7266024546988373`*^9, 3.726602551593379*^9, 
   3.7266028158154917`*^9, 3.7266029194814215`*^9, 3.726603022141293*^9, 
   3.726603053275074*^9, 3.7266031532417917`*^9, 3.72660321510133*^9, 
   3.7266033324800434`*^9, 3.7266034267214336`*^9, 3.727104612672449*^9, 
   3.727107407068206*^9, 3.72797888877985*^9, 3.7279789615669913`*^9, 
   3.727979158830597*^9, 3.727979215037137*^9, 3.727979276986768*^9, 
   3.727979336949242*^9, 3.727979417247647*^9, {3.727979474107345*^9, 
   3.7279795009932575`*^9}, 3.7279795631138153`*^9, 3.7279802323469944`*^9, 
   3.7279803391872473`*^9, 3.7279804631733713`*^9, 3.7279805182843246`*^9, 
   3.727980578676051*^9, 3.727980685967286*^9, 3.727981135059825*^9, 
   3.7279816179192533`*^9, 3.727981668841675*^9, 3.7279817372193985`*^9, 
   3.7279818915224514`*^9, 3.7279819424225473`*^9, 3.7279820037909727`*^9, {
   3.727982129439556*^9, 3.727982152923318*^9}, 3.727982199366192*^9, 
   3.727982263518115*^9, 3.7279824130166907`*^9, 3.727982507923643*^9, 
   3.7279825815387096`*^9, 3.7279826990013204`*^9, 3.732465803892829*^9, 
   3.7324658511257772`*^9, 3.7334871749481263`*^9, 3.756841477466359*^9, 
   3.756841533119542*^9, 3.7568415820233393`*^9, 3.7568417857329903`*^9, 
   3.7568418927661123`*^9, 3.756841957259801*^9, 3.756842009179771*^9, 
   3.756842122908276*^9, 3.7568422131884394`*^9, 3.75684229554615*^9, 
   3.756842337891572*^9, 3.7568424333922453`*^9, 3.7568424738277245`*^9, 
   3.7568425962946205`*^9, 3.756842630528073*^9, 3.7568428774858637`*^9, 
   3.7568430569408035`*^9, 3.7568431686224427`*^9, 3.75684319929611*^9, 
   3.757169884980383*^9},ExpressionUUID->"3aef8fea-b168-4768-9c3d-\
3a2318d152d5"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myWhiteParametersSplit"}]], "Input",
 CellChangeTimes->{{3.7175090569953547`*^9, 
  3.7175090631769657`*^9}},ExpressionUUID->"bcf42281-95a8-44d8-8870-\
e119cbd06c75"],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{
  3.717509064222168*^9, 3.7175154073951373`*^9, 3.717768190866754*^9, 
   3.7186534627690835`*^9, 3.7213988265542526`*^9, 3.722951225500455*^9, 
   3.722958181182297*^9, 3.726514043074627*^9, 3.726514121862301*^9, 
   3.726514275300318*^9, 3.7265143521142364`*^9, 3.7265144371446686`*^9, 
   3.726514548874604*^9, 3.7265145979237547`*^9, 3.7265173445279655`*^9, 
   3.726517633857803*^9, 3.726517693802647*^9, 3.726517805583709*^9, 
   3.7265251609862986`*^9, 3.7265252287756915`*^9, 3.7265252661542597`*^9, 
   3.726525355451913*^9, 3.7265254998090286`*^9, 3.726525641990658*^9, 
   3.7265260296421604`*^9, 3.726526063200981*^9, 3.7265261052782135`*^9, {
   3.726590275962253*^9, 3.726590299474598*^9}, 3.7265907352245216`*^9, {
   3.7265907750347986`*^9, 3.7265907995592012`*^9}, 3.7265910620952177`*^9, 
   3.7265913017539253`*^9, {3.7265913970113735`*^9, 3.7265914331444407`*^9}, 
   3.726591491082754*^9, 3.7265915860461855`*^9, {3.726592003132042*^9, 
   3.7265920496827044`*^9}, 3.726597373061184*^9, 3.726597560136884*^9, 
   3.7265976589835377`*^9, 3.7265977747211576`*^9, 3.7265978121602993`*^9, 
   3.726597907618759*^9, 3.72659795868568*^9, 3.726598056893297*^9, 
   3.7265981324286175`*^9, 3.726598320363367*^9, 3.7266003325464573`*^9, 
   3.7266006240041275`*^9, 3.72660090956046*^9, 3.726600997110468*^9, 
   3.726601157523643*^9, 3.726601237111195*^9, 3.7266012790385933`*^9, 
   3.7266013408421283`*^9, 3.7266014014985976`*^9, 3.7266014598569355`*^9, 
   3.7266015009422855`*^9, 3.7266015343441963`*^9, 3.726601577688675*^9, 
   3.726601621445178*^9, 3.7266017019727836`*^9, 3.726601739379923*^9, 
   3.726601771980788*^9, 3.7266018642190638`*^9, 3.7266019320349426`*^9, 
   3.726602050107696*^9, 3.7266020936141844`*^9, 3.726602136527639*^9, 
   3.7266023514769335`*^9, 3.726602454710838*^9, 3.72660255160638*^9, 
   3.7266028158274927`*^9, 3.726602919493422*^9, 3.7266030221622944`*^9, 
   3.726603053287074*^9, 3.726603153254792*^9, 3.7266032151133304`*^9, 
   3.7266033324940443`*^9, 3.7266034267334347`*^9, 3.727104612689494*^9, 
   3.7271074070838575`*^9, 3.7279788887948933`*^9, 3.7279789615820303`*^9, 
   3.7279791588446603`*^9, 3.7279792150656433`*^9, 3.727979276997797*^9, 
   3.727979336963278*^9, 3.7279794172787304`*^9, {3.7279794741334133`*^9, 
   3.727979501023394*^9}, 3.727979563125848*^9, 3.7279802323625374`*^9, 
   3.7279803392118397`*^9, 3.727980463186407*^9, 3.7279805182988667`*^9, 
   3.727980578694149*^9, 3.7279806859878445`*^9, 3.727981135081355*^9, 
   3.727981617937272*^9, 3.7279816688577175`*^9, 3.7279817372314296`*^9, 
   3.727981891538494*^9, 3.727981942445602*^9, 3.727982003816541*^9, {
   3.727982129470645*^9, 3.727982152937357*^9}, 3.727982199374714*^9, 
   3.7279822635336313`*^9, 3.7279824130347404`*^9, 3.7279825079386835`*^9, 
   3.727982581556757*^9, 3.7279826990217056`*^9, 3.7324658039414587`*^9, 
   3.732465851146834*^9, 3.7334871749949265`*^9, 3.7568414774763594`*^9, 
   3.7568415331305428`*^9, 3.75684158203434*^9, 3.7568417857449913`*^9, 
   3.756841892777113*^9, 3.756841957270802*^9, 3.7568420091917715`*^9, 
   3.7568421229182763`*^9, 3.7568422131994405`*^9, 3.756842295556151*^9, 
   3.7568423379015727`*^9, 3.756842433403246*^9, 3.7568424738433247`*^9, 
   3.756842596305621*^9, 3.7568426305436726`*^9, 3.756842877501464*^9, 
   3.7568430569564033`*^9, 3.7568431686224427`*^9, 3.75684319929611*^9, 
   3.7571698849973836`*^9},ExpressionUUID->"4c306fb0-72cb-477e-8b91-\
ce055b989f2f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myYellowParametersSplit"}]], "Input",
 CellChangeTimes->{{3.717509068580576*^9, 
  3.717509073089385*^9}},ExpressionUUID->"2cc16347-9252-4142-b0b8-\
e7537a716984"],

Cell[BoxData["20"], "Output",
 CellChangeTimes->{
  3.717509074118986*^9, 3.717515408362339*^9, 3.717768190882354*^9, 
   3.7186534627846837`*^9, 3.7213988265672536`*^9, 3.722951226669522*^9, 
   3.7229581817593303`*^9, 3.726514043094178*^9, 3.7265141218858624`*^9, 
   3.7265142753217325`*^9, 3.7265143521408024`*^9, 3.7265144371682267`*^9, 
   3.7265145488971634`*^9, 3.726514597951294*^9, 3.7265173445555177`*^9, 
   3.7265176338813667`*^9, 3.726517693827712*^9, 3.7265178056052513`*^9, 
   3.726525161013871*^9, 3.726525228801284*^9, 3.7265252661793303`*^9, 
   3.7265253554754705`*^9, 3.7265254998391085`*^9, 3.7265256420152235`*^9, 
   3.7265260296702223`*^9, 3.7265260632255464`*^9, 3.726526105301276*^9, {
   3.726590275971254*^9, 3.726590299484599*^9}, 3.726590735233522*^9, {
   3.7265907750437994`*^9, 3.726590799568202*^9}, 3.7265910621072183`*^9, 
   3.7265913017629256`*^9, {3.726591397019374*^9, 3.7265914331534405`*^9}, 
   3.726591491092755*^9, 3.7265915860551863`*^9, {3.726592003138042*^9, 
   3.726592049695705*^9}, 3.7265973730701847`*^9, 3.726597560146885*^9, 
   3.7265976589925385`*^9, 3.7265977747311583`*^9, 3.7265978121692996`*^9, 
   3.7265979076267595`*^9, 3.726597958704681*^9, 3.7265980569022975`*^9, 
   3.7265981324626193`*^9, 3.726598320375367*^9, 3.7266003325584574`*^9, 
   3.7266006240181284`*^9, 3.726600909572461*^9, 3.7266009971234684`*^9, 
   3.7266011575356436`*^9, 3.7266012371221957`*^9, 3.726601279051594*^9, 
   3.7266013408581295`*^9, 3.7266014015115986`*^9, 3.726601459867936*^9, 
   3.7266015009562864`*^9, 3.726601534357197*^9, 3.726601577701676*^9, 
   3.7266016214581785`*^9, 3.7266017019927845`*^9, 3.726601739391924*^9, 
   3.7266017719937887`*^9, 3.7266018642300644`*^9, 3.7266019320489435`*^9, 
   3.7266020501216965`*^9, 3.726602093626185*^9, 3.7266021365396395`*^9, 
   3.726602351489934*^9, 3.7266024547228384`*^9, 3.7266025516183805`*^9, 
   3.7266028158384933`*^9, 3.726602919504422*^9, 3.7266030221822953`*^9, 
   3.7266030533000755`*^9, 3.7266031532667933`*^9, 3.7266032151263313`*^9, 
   3.726603332506045*^9, 3.726603426746435*^9, 3.7271046127075415`*^9, 
   3.7271074070994825`*^9, 3.7279788888114343`*^9, 3.7279789615950656`*^9, 
   3.7279791588586693`*^9, 3.7279792150947514`*^9, 3.7279792770083246`*^9, 
   3.727979336977315*^9, 3.727979417286751*^9, {3.727979474163995*^9, 
   3.727979501061997*^9}, 3.7279795631378856`*^9, 3.727980232377616*^9, 
   3.7279803392308927`*^9, 3.7279804632004433`*^9, 3.7279805183144045`*^9, 
   3.7279805787257576`*^9, 3.7279806860048857`*^9, 3.7279811350963964`*^9, 
   3.72798161795582*^9, 3.7279816688762712`*^9, 3.7279817372444935`*^9, 
   3.727981891553034*^9, 3.7279819424666686`*^9, 3.7279820038365955`*^9, {
   3.7279821294801626`*^9, 3.727982152955864*^9}, 3.72798219938626*^9, 
   3.7279822635501766`*^9, 3.7279824130557957`*^9, 3.727982507953027*^9, 
   3.7279825815758157`*^9, 3.7279826990447702`*^9, 3.732465803958331*^9, 
   3.7324658511663876`*^9, 3.7334871750105267`*^9, 3.75684147748736*^9, 
   3.7568415331415434`*^9, 3.75684158204434*^9, 3.7568417857569923`*^9, 
   3.756841892790114*^9, 3.7568419572808027`*^9, 3.7568420092017727`*^9, 
   3.7568421229292774`*^9, 3.7568422132094407`*^9, 3.756842295567151*^9, 
   3.7568423379125733`*^9, 3.7568424334142466`*^9, 3.7568424738589244`*^9, 
   3.756842596317622*^9, 3.756842630559273*^9, 3.7568428775170636`*^9, 
   3.7568430569564033`*^9, 3.7568431686380424`*^9, 3.75684319931171*^9, 
   3.7571698850103846`*^9},ExpressionUUID->"0373321f-de82-4824-a32e-\
1f597d9ac3ad"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Length", "@", "myPurpleParametersSplit"}]], "Input",
 CellChangeTimes->{{3.7175091085520487`*^9, 
  3.7175091128630576`*^9}},ExpressionUUID->"b7ad9afb-3141-4791-845f-\
cbbc78b5317d"],

Cell[BoxData["5"], "Output",
 CellChangeTimes->{
  3.717509113518259*^9, 3.7175154097123423`*^9, 3.717768190882354*^9, 
   3.718653462800284*^9, 3.7213988265782547`*^9, 3.7229512277375827`*^9, 
   3.722958182545375*^9, 3.7265140431202517`*^9, 3.726514121913436*^9, 
   3.726514275343292*^9, 3.7265143521638985`*^9, 3.7265144371898108`*^9, 
   3.7265145489207263`*^9, 3.7265145979813876`*^9, 3.726517344574049*^9, 
   3.726517633904912*^9, 3.726517693850151*^9, 3.726517805624302*^9, 
   3.726525161045455*^9, 3.726525228825818*^9, 3.726525266206901*^9, 
   3.7265253555000114`*^9, 3.7265254998646774`*^9, 3.72652564204182*^9, 
   3.7265260296978106`*^9, 3.7265260632566376`*^9, 3.726526105325347*^9, {
   3.726590275980254*^9, 3.7265902994925995`*^9}, 3.726590735244523*^9, {
   3.7265907750527997`*^9, 3.7265907995782022`*^9}, 3.726591062118219*^9, 
   3.7265913017739267`*^9, {3.7265913970293746`*^9, 3.7265914331634417`*^9}, 
   3.726591491101755*^9, 3.726591586064187*^9, {3.726592003142042*^9, 
   3.726592049715706*^9}, 3.7265973730791855`*^9, 3.7265975601548853`*^9, 
   3.7265976590045395`*^9, 3.7265977747411585`*^9, 3.7265978121773*^9, 
   3.7265979076357603`*^9, 3.7265979587096815`*^9, 3.726598056914298*^9, 
   3.7265981324686193`*^9, 3.7265983203883677`*^9, 3.7266003325694585`*^9, 
   3.7266006240321293`*^9, 3.7266009095854616`*^9, 3.7266009971354694`*^9, 
   3.7266011575496445`*^9, 3.7266012371351967`*^9, 3.7266012790655947`*^9, 
   3.7266013408691297`*^9, 3.726601401524599*^9, 3.7266014598799367`*^9, 
   3.7266015009702873`*^9, 3.726601534369197*^9, 3.7266015777156763`*^9, 
   3.726601621470179*^9, 3.726601702012786*^9, 3.726601739404925*^9, 
   3.7266017720087895`*^9, 3.726601864242065*^9, 3.726601932063944*^9, 
   3.726602050136698*^9, 3.726602093640186*^9, 3.7266021365516405`*^9, 
   3.726602351503935*^9, 3.726602454735839*^9, 3.7266025516323814`*^9, 
   3.726602815849494*^9, 3.726602919516423*^9, 3.7266030221982965`*^9, 
   3.726603053312076*^9, 3.7266031532797937`*^9, 3.726603215138332*^9, 
   3.7266033325180454`*^9, 3.7266034267594357`*^9, 3.7271046127255917`*^9, 
   3.727107407115083*^9, 3.7279788888284845`*^9, 3.7279789616070986`*^9, 
   3.727979158872739*^9, 3.7279792151233106`*^9, 3.7279792770223618`*^9, 
   3.727979336987342*^9, 3.7279794172937703`*^9, {3.727979474171014*^9, 
   3.727979501068531*^9}, 3.7279795631484137`*^9, 3.727980232393117*^9, 
   3.7279803392484083`*^9, 3.72798046321349*^9, 3.7279805183339567`*^9, 
   3.7279805787478137`*^9, 3.7279806860219307`*^9, 3.727981135117953*^9, 
   3.7279816179803877`*^9, 3.727981668895317*^9, 3.7279817372595015`*^9, 
   3.7279818915685744`*^9, 3.7279819424842052`*^9, 3.7279820038541403`*^9, {
   3.727982129493701*^9, 3.727982152974906*^9}, 3.7279821993932657`*^9, 
   3.727982263568725*^9, 3.727982413074297*^9, 3.7279825079804974`*^9, 
   3.7279825816008625`*^9, 3.727982699073331*^9, 3.732465803975377*^9, 
   3.732465851187454*^9, 3.7334871750261264`*^9, 3.7568414774983606`*^9, 
   3.756841533152544*^9, 3.7568415820563407`*^9, 3.7568417857679925`*^9, 
   3.756841892801114*^9, 3.7568419572918034`*^9, 3.756842009212773*^9, 
   3.756842122942278*^9, 3.756842213220442*^9, 3.7568422955771523`*^9, 
   3.756842337923574*^9, 3.756842433427247*^9, 3.7568424738589244`*^9, 
   3.756842596328623*^9, 3.756842630574873*^9, 3.756842877532664*^9, 
   3.7568430569720035`*^9, 3.7568431686536427`*^9, 3.75684319932731*^9, 
   3.7571698850303855`*^9},ExpressionUUID->"4db6ac30-56f7-41c6-b2e8-\
b88c3a083389"]
}, Open  ]]
}, Closed]]
}, Open  ]]
},
WindowSize->{1858, 1038},
WindowMargins->{{-8, Automatic}, {Automatic, -8}},
FrontEndVersion->"11.2 for Microsoft Windows (64-bit) (September 10, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 208, 4, 67, "Section",ExpressionUUID->"0f236970-ae33-4703-a8f1-6e66e884fc65"],
Cell[791, 28, 644, 14, 67, "Input",ExpressionUUID->"8af93823-c0d0-417c-9600-5159f4d303d8"],
Cell[1438, 44, 227, 5, 28, "Input",ExpressionUUID->"d9cc3694-f5e2-4058-92e4-986c4b3184f9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1702, 54, 217, 4, 67, "Section",ExpressionUUID->"7bfe393b-416d-4815-9f81-d4b8a507dc1e"],
Cell[CellGroupData[{
Cell[1944, 62, 184, 4, 53, "Subsection",ExpressionUUID->"c747899a-7371-4e8f-b9e1-8eb6e2845540",
 InitializationCell->True],
Cell[2131, 68, 703, 19, 327519375, "Input",ExpressionUUID->"c1d19c4a-58eb-40b8-a641-02ade21d1784",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[2859, 91, 216, 5, 203767234, "Input",ExpressionUUID->"31d92837-6df8-4e97-a53d-603fe1b9808e"],
Cell[3078, 98, 2829, 40, 70, "Output",ExpressionUUID->"7d68e994-0918-47b5-8a78-b69c0f0f7ac7"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5956, 144, 157, 3, 37, "Subsection",ExpressionUUID->"ed8894e9-9ceb-48e5-9407-e85efab62cda"],
Cell[6116, 149, 1641, 45, 2147483647, "Input",ExpressionUUID->"7370f708-efae-40a3-b781-24c2c1d9be92"],
Cell[7760, 196, 51112, 845, 2147483647, "Input",ExpressionUUID->"9caeb34d-e9f6-4873-887a-c6fadac943eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[58909, 1046, 253, 4, 37, "Subsection",ExpressionUUID->"a434a46b-a0b5-4b86-b483-82f003184979"],
Cell[59165, 1052, 4634, 101, 278308, "Input",ExpressionUUID->"4e052168-fd0a-4f86-92c4-053d295da235"],
Cell[63802, 1155, 3500, 70, 191614, "Input",ExpressionUUID->"db3e8986-e2b1-4328-b92c-c2c1611d46c9"]
}, Closed]],
Cell[CellGroupData[{
Cell[67339, 1230, 398, 8, 37, "Subsection",ExpressionUUID->"a906cba2-d493-4a6e-a112-4543c0caec24"],
Cell[67740, 1240, 12015, 227, 2147483647, "Input",ExpressionUUID->"7dec82e2-186a-4802-b0c6-b31833609870"]
}, Closed]],
Cell[CellGroupData[{
Cell[79792, 1472, 426, 8, 37, "Subsection",ExpressionUUID->"bfc44d79-77f3-4302-8d35-e187d03faae2"],
Cell[80221, 1482, 3361, 68, 453193, "Input",ExpressionUUID->"8069a282-ad5b-4925-aa30-37d7985000f6"],
Cell[83585, 1552, 5179, 125, 540511, "Input",ExpressionUUID->"1ceafa4e-bdb7-4d45-8059-abb95aa184ca"]
}, Closed]],
Cell[CellGroupData[{
Cell[88801, 1682, 292, 4, 37, "Subsection",ExpressionUUID->"5dd49b40-3020-479f-b5ff-ce16ed9d1b46"],
Cell[89096, 1688, 2418, 54, 365938, "Input",ExpressionUUID->"be7cc7d4-7ea7-495d-b9c9-87c233bcf883"],
Cell[91517, 1744, 1286, 36, 104412, "Input",ExpressionUUID->"0b4797d7-f45d-46e3-a517-c18c0eac39e7"],
Cell[92806, 1782, 8873, 204, 918819, "Input",ExpressionUUID->"8ae9693a-eec4-40a2-afb1-2373b31b55f5"]
}, Closed]],
Cell[CellGroupData[{
Cell[101716, 1991, 259, 4, 37, "Subsection",ExpressionUUID->"49b994d3-5f4f-4ecd-8b81-6acbc03eb8e1"],
Cell[101978, 1997, 4215, 96, 16690, "Input",ExpressionUUID->"ed630347-7f95-44a6-bb2f-3550dc8d87c5"]
}, Closed]],
Cell[CellGroupData[{
Cell[106230, 2098, 161, 3, 37, "Subsection",ExpressionUUID->"a574a8cc-8d68-46b9-a07d-2fcc4a26f001"],
Cell[106394, 2103, 487, 11, 45202, "Input",ExpressionUUID->"775a161a-6cf7-41f2-90a9-c3d74e98f9ba"],
Cell[106884, 2116, 3848, 97, 424234, "Input",ExpressionUUID->"555fa2e2-7988-4b32-93e4-1a61f7422b6f"]
}, Closed]],
Cell[CellGroupData[{
Cell[110769, 2218, 159, 3, 37, "Subsection",ExpressionUUID->"0645c2ab-1663-4114-a7c5-706b2e8c65bf"],
Cell[110931, 2223, 494, 10, 45202, "Input",ExpressionUUID->"bbceb9de-a1a5-4524-9288-96dc67dd611e"],
Cell[111428, 2235, 13254, 295, 1587561, "Input",ExpressionUUID->"32acaefb-6e3a-4a22-a420-415ae8e7ea7f"],
Cell[124685, 2532, 421, 11, 45202, "Input",ExpressionUUID->"28281faf-1d84-46ef-9608-ea1dd370a52a"]
}, Closed]],
Cell[CellGroupData[{
Cell[125143, 2548, 165, 3, 37, "Subsection",ExpressionUUID->"c42d9c91-57cd-4a01-92b8-e3a4c6d99594"],
Cell[125311, 2553, 643, 12, 2922, "Text"],
Cell[125957, 2567, 2492, 53, 6597, "Input",ExpressionUUID->"0cc9633a-36bd-4ff1-a57c-b0055c864eaf"],
Cell[128452, 2622, 12741, 274, 25966, "Input",ExpressionUUID->"84476b62-7e69-4919-891d-50ece1b96d3f"],
Cell[141196, 2898, 13614, 290, 26665, "Input",ExpressionUUID->"cafcb1f5-8bda-4b1b-ad59-a981366c1ccb"],
Cell[154813, 3190, 14942, 313, 28741, "Input",ExpressionUUID->"f1c6b078-19c7-4e9e-a9cf-057dfe347022"]
}, Closed]],
Cell[CellGroupData[{
Cell[169792, 3508, 162, 3, 37, "Subsection",ExpressionUUID->"205f38f0-0344-4699-b876-6ee46702a525"],
Cell[169957, 3513, 6848, 163, 2010767007, "Input",ExpressionUUID->"2b128334-8e67-4934-bcb3-cd02d34c9030"],
Cell[176808, 3678, 1867, 48, 852927265, "Input",ExpressionUUID->"72901dd3-65d6-4f25-bb18-172497da0fe2"],
Cell[178678, 3728, 1941, 47, 942083452, "Input",ExpressionUUID->"352e0049-ac94-4a2a-944e-f4f199093938"],
Cell[180622, 3777, 1780, 45, 852927265, "Input",ExpressionUUID->"47010940-a4f5-4cf6-ae53-59b05e014ad8"]
}, Closed]],
Cell[CellGroupData[{
Cell[182439, 3827, 424, 8, 37, "Subsection",ExpressionUUID->"387ca8f0-94a7-47d3-b1a2-e8d28bb12220"],
Cell[182866, 3837, 5504, 132, 2602, "Input",ExpressionUUID->"666ddd95-6b95-4ae2-96ae-fed33c80d3df"]
}, Closed]],
Cell[CellGroupData[{
Cell[188407, 3974, 312, 7, 37, "Subsection",ExpressionUUID->"add62a34-3c2f-43d9-a5ad-95781a71c2a1"],
Cell[188722, 3983, 2510, 52, 52451127, "Input",ExpressionUUID->"f187d268-4f1a-48dc-9aa3-9cab99bd3f14"]
}, Closed]],
Cell[CellGroupData[{
Cell[191269, 4040, 438, 8, 37, "Subsection",ExpressionUUID->"9763de77-e5fe-4736-a731-57de8fdc304d"],
Cell[191710, 4050, 4380, 90, 118007095, "Input",ExpressionUUID->"43120282-b390-4a85-a1bc-5038d6906d65"]
}, Closed]],
Cell[CellGroupData[{
Cell[196127, 4145, 306, 5, 37, "Subsection",ExpressionUUID->"19967f13-107f-44ec-8e67-23a0aca5d952"],
Cell[196436, 4152, 14337, 315, 11035, "Input",ExpressionUUID->"72cd1ae4-78f0-4239-9982-52455fd9c3af"],
Cell[210776, 4469, 8554, 202, 6322, "Input",ExpressionUUID->"f593a9e0-ac70-4814-aef0-91ffa9a13c66"],
Cell[219333, 4673, 3596, 86, 4345, "Input",ExpressionUUID->"ecf1daa1-ead7-424b-a6f5-e1b0b0c3f493"]
}, Closed]],
Cell[CellGroupData[{
Cell[222966, 4764, 253, 4, 37, "Subsection",ExpressionUUID->"29816512-c456-4724-b303-6f696d62586c"],
Cell[223222, 4770, 1589, 37, 675619678, "Input",ExpressionUUID->"ebaa37f7-145e-4638-8370-003f23933b64"],
Cell[224814, 4809, 1918, 44, 675619678, "Input",ExpressionUUID->"eb62d8be-b47e-49d5-89da-4da239f40d9c"],
Cell[226735, 4855, 6744, 155, 1921036150, "Input",ExpressionUUID->"af3d309f-55c3-44e7-b8ae-8873b4193def"]
}, Closed]],
Cell[CellGroupData[{
Cell[233516, 5015, 158, 3, 37, "Subsection",ExpressionUUID->"dad5cb5a-bb38-4fd4-a22c-0313d30e7ec6"],
Cell[233677, 5020, 602, 12, 230272237, "Input",ExpressionUUID->"27a11b49-75a6-4eb9-87a4-e6fe75774064"],
Cell[234282, 5034, 8940, 200, 2147483647, "Input",ExpressionUUID->"15a06461-10d4-4876-85de-fb4b6659e6b5"]
}, Closed]],
Cell[CellGroupData[{
Cell[243259, 5239, 171, 3, 37, "Subsection",ExpressionUUID->"f9fed715-6079-4e62-9e6d-dedc92349cf1"],
Cell[243433, 5244, 7632, 176, 23364660, "Input",ExpressionUUID->"d6cbd7f4-b272-4d61-8afc-d2256ce792e7"]
}, Closed]],
Cell[CellGroupData[{
Cell[251102, 5425, 242, 6, 37, "Subsection",ExpressionUUID->"a628e657-0374-4225-b22a-a5638b08f67d"],
Cell[251347, 5433, 1592, 40, 6666894, "Input",ExpressionUUID->"785b4dd3-ade8-4e83-9cfa-cff88d891bf2"],
Cell[252942, 5475, 1717, 42, 6666894, "Input",ExpressionUUID->"df49a674-f49a-40a8-99f1-b61797b2e0fe"]
}, Closed]],
Cell[CellGroupData[{
Cell[254696, 5522, 241, 4, 37, "Subsection",ExpressionUUID->"23d6f942-4cfb-4ddd-9708-54fef398fa02"],
Cell[254940, 5528, 1353, 37, 3092994, "Input",ExpressionUUID->"40e16cdc-76d0-47e4-8523-b7c488182547"]
}, Closed]],
Cell[CellGroupData[{
Cell[256330, 5570, 231, 5, 37, "Subsection",ExpressionUUID->"379806d4-26eb-4f87-aa52-a569c1ffb004"],
Cell[256564, 5577, 4554, 101, 13587, "Input",ExpressionUUID->"797cf264-63d2-48ae-b791-7e5ddc39d284"],
Cell[261121, 5680, 4363, 95, 13587, "Input",ExpressionUUID->"ba63f4a6-6c06-4f3d-9383-75b652acf0b5"]
}, Closed]],
Cell[CellGroupData[{
Cell[265521, 5780, 204, 3, 37, "Subsection"],
Cell[265728, 5785, 5373, 141, 811, "Input",ExpressionUUID->"c975f0bb-259c-433a-8f3b-246153a03e55"]
}, Closed]],
Cell[CellGroupData[{
Cell[271138, 5931, 342, 7, 37, "Subsection"],
Cell[271483, 5940, 23770, 581, 35043, "Input",ExpressionUUID->"09db4e26-f839-4739-8139-dce81c90c697"]
}, Closed]],
Cell[CellGroupData[{
Cell[295290, 6526, 213, 3, 37, "Subsection"],
Cell[295506, 6531, 6267, 143, 801, "Input",ExpressionUUID->"ab1247ed-9265-4f3d-9d21-dd87850682d1"],
Cell[301776, 6676, 128, 3, 93, "Input",ExpressionUUID->"fae8b39e-2db3-4313-9ab0-8085123e09f6"]
}, Closed]],
Cell[CellGroupData[{
Cell[301941, 6684, 282, 6, 37, "Subsection"],
Cell[302226, 6692, 5794, 147, 482215, "Input",ExpressionUUID->"9160aa85-6ba7-4dd1-b4f3-77b21fc55797"],
Cell[308023, 6841, 2969, 71, 278308, "Input",ExpressionUUID->"366ae5bc-4370-4d1a-98da-8a24afa44a3f"]
}, Closed]],
Cell[311007, 6915, 172, 3, 37, "Subsection"],
Cell[CellGroupData[{
Cell[311204, 6922, 178, 3, 37, "Subsection"],
Cell[311385, 6927, 5725, 148, 972, "Input",ExpressionUUID->"62de225e-74ce-403f-8a5a-0875b7ee4fb3"],
Cell[317113, 7077, 4312, 114, 972, "Input",ExpressionUUID->"e27f3681-18dc-4b80-b76f-12c377d635eb"]
}, Closed]],
Cell[CellGroupData[{
Cell[321462, 7196, 296, 4, 37, "Subsection"],
Cell[321761, 7202, 1641, 45, 174, "Input",ExpressionUUID->"0aa9996a-50b4-434e-9c0a-00eaaada7493"],
Cell[323405, 7249, 51112, 845, 82, "Input",ExpressionUUID->"4c331371-e3eb-4d7f-a250-10fad46c651b"],
Cell[374520, 8096, 4634, 101, 124, "Input",ExpressionUUID->"7ef2d0dd-5f28-4158-b369-af76ae850f03"],
Cell[379157, 8199, 3500, 70, 86, "Input",ExpressionUUID->"69075793-99f2-4418-9536-8e0a8166d020"],
Cell[382660, 8271, 592, 10, 56, "Text"],
Cell[383255, 8283, 480, 13, 28, "Input",ExpressionUUID->"32901978-3e79-4cc8-aa91-99d168beed5e"],
Cell[383738, 8298, 14101, 311, 603, "Input",ExpressionUUID->"68dbaf88-d94b-434b-8e7f-182358217c0f"],
Cell[397842, 8611, 15712, 347, 682, "Input",ExpressionUUID->"f50d7672-18fb-4e01-9e28-523b0357a349"],
Cell[413557, 8960, 13217, 316, 682, "Input",ExpressionUUID->"81d2ca67-5325-46e6-8c8b-441bb9aaabda"],
Cell[426777, 9278, 9889, 228, 352, "Input",ExpressionUUID->"5cfe949f-8662-4614-935e-1f675a8fef77"],
Cell[436669, 9508, 14516, 316, 603, "Input",ExpressionUUID->"e97e6b77-5d05-4caf-882f-3cef90934858"],
Cell[451188, 9826, 15968, 350, 682, "Input",ExpressionUUID->"422542ea-d54a-4237-93ca-32618c87aef8"],
Cell[467159, 10178, 16799, 365, 682, "Input",ExpressionUUID->"05e480b1-5272-4765-ba6e-fe40ce5e1f96"],
Cell[483961, 10545, 2936, 66, 143, "Input",ExpressionUUID->"b1e893d2-5c08-49ce-90b1-708a1015b348"]
}, Open  ]],
Cell[CellGroupData[{
Cell[486934, 10616, 160, 3, 53, "Subsection"],
Cell[487097, 10621, 3472, 98, 291, "Input",ExpressionUUID->"004a5ae0-31b1-4c90-b8c5-392576d9a600"]
}, Closed]],
Cell[CellGroupData[{
Cell[490606, 10724, 301, 4, 37, "Subsection"],
Cell[490910, 10730, 4225, 110, 522, "Input",ExpressionUUID->"5b59b97c-0b84-4507-a30a-2c6103f87ba6"]
}, Closed]],
Cell[CellGroupData[{
Cell[495172, 10845, 190, 3, 37, "Subsection"],
Cell[495365, 10850, 4156, 107, 124, "Input",ExpressionUUID->"62a3193d-d60f-4940-a362-83487cc4a578"],
Cell[499524, 10959, 4248, 109, 124, "Input",ExpressionUUID->"db54a44c-cc70-4cba-bae0-68b7854125b7"],
Cell[503775, 11070, 5869, 145, 178, "Input",ExpressionUUID->"39e76908-e17d-4a6e-b3f4-7a4ad5709fb5"]
}, Open  ]],
Cell[CellGroupData[{
Cell[509681, 11220, 312, 7, 53, "Subsection"],
Cell[509996, 11229, 6600, 157, 178, "Input",ExpressionUUID->"ed873ad7-5c1b-43e8-95bd-db2ef6f7b71a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[516633, 11391, 218, 5, 53, "Subsection"],
Cell[516854, 11398, 4583, 119, 492, "Input",ExpressionUUID->"10fd7d00-c9ed-4018-b6c4-c485ea36a69e"]
}, Closed]],
Cell[CellGroupData[{
Cell[521474, 11522, 309, 6, 37, "Subsection"],
Cell[521786, 11530, 5659, 144, 556, "Input",ExpressionUUID->"50ad3241-57af-4ec1-8042-0e3df93e48a1"]
}, Closed]],
Cell[CellGroupData[{
Cell[527482, 11679, 218, 4, 37, "Subsection"],
Cell[527703, 11685, 4570, 108, 200, "Input",ExpressionUUID->"78c6484a-cb57-4b2b-aae9-6c7a5fbd2369"]
}, Open  ]],
Cell[CellGroupData[{
Cell[532310, 11798, 164, 3, 53, "Subsection"],
Cell[532477, 11803, 1191, 34, 31, "Input",ExpressionUUID->"ca6f0176-b2f8-4e0c-8ca0-725caa1bd921"]
}, Open  ]],
Cell[CellGroupData[{
Cell[533705, 11842, 350, 7, 53, "Subsection"],
Cell[534058, 11851, 8764, 219, 1, "Input",ExpressionUUID->"37a84e3e-ed08-47e3-8bed-f6c28f3c79a0"],
Cell[542825, 12072, 8019, 207, 0, "Input",ExpressionUUID->"fbcc9076-e949-491b-93de-215a146a84db"]
}, Closed]],
Cell[CellGroupData[{
Cell[550881, 12284, 207, 3, 37, "Subsection"],
Cell[551091, 12289, 6157, 143, 200, "Input",ExpressionUUID->"b58fc8c9-04e1-4cd4-b3f5-45f2c511215a"],
Cell[557251, 12434, 7877, 181, 238, "Input",ExpressionUUID->"14347ddc-2d1c-4536-a9d0-1fb78349d6b1"],
Cell[565131, 12617, 6484, 164, 238, "Input",ExpressionUUID->"582a2e45-c032-4c62-920f-de20fd431387"],
Cell[571618, 12783, 6430, 148, 200, "Input",ExpressionUUID->"7b998f18-d0ff-495c-831d-4fb671347a18"],
Cell[578051, 12933, 354, 8, 28, "Input",ExpressionUUID->"9ef5859c-4552-4eff-bb84-ae3ee468f638"],
Cell[578408, 12943, 469, 9, 28, "Input",ExpressionUUID->"2bbb5078-8b10-4b7f-9f44-24d489991eb5"],
Cell[578880, 12954, 1219, 34, 67, "Input",ExpressionUUID->"25bd156a-9a62-49b1-b814-3ef8c566526c"],
Cell[580102, 12990, 182, 4, 28, "Input",ExpressionUUID->"c3fba93d-b23b-4be2-94ee-32d5968d8c0a"],
Cell[580287, 12996, 335, 7, 28, "Input",ExpressionUUID->"c92d9e69-8dee-46b6-81c4-1d1f495707dc"],
Cell[580625, 13005, 3445, 92, 86, "Input",ExpressionUUID->"ddbfd35f-8674-4c36-a719-fd0de12dd6df"],
Cell[584073, 13099, 207, 4, 28, "Input",ExpressionUUID->"5a23efa7-069b-41de-845f-15dde32e1171"],
Cell[584283, 13105, 367, 11, 28, "Input",ExpressionUUID->"cec616a7-16f6-441c-85b1-7f4849529907"],
Cell[584653, 13118, 492, 14, 28, "Input",ExpressionUUID->"f57cd704-380d-4098-b5f0-790019431eb6"],
Cell[585148, 13134, 219, 5, 28, "Input",ExpressionUUID->"961f4ee2-b25a-43bd-a9e9-cc1ca7964460"],
Cell[585370, 13141, 528, 15, 28, "Input",ExpressionUUID->"2f3f87ac-2b24-4f5f-8af6-9491c40e4f94"],
Cell[585901, 13158, 3562, 95, 86, "Input",ExpressionUUID->"fa79adc9-6a46-4da8-bd6b-ae9adddab694"],
Cell[589466, 13255, 183, 4, 28, "Input",ExpressionUUID->"c3852b83-5862-45f4-ba73-92164eba67e5"],
Cell[589652, 13261, 222, 5, 28, "Input",ExpressionUUID->"e0e073d0-47d4-455b-9dde-3b7c0b689b18"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[589923, 13272, 157, 3, 53, "Section",ExpressionUUID->"1be8c170-70bb-44ff-bf0e-3a585633d3ea"],
Cell[CellGroupData[{
Cell[590105, 13279, 475, 7, 53, "Subsection",ExpressionUUID->"920526e2-e0f8-43a0-ae0c-a0d6c663cf35"],
Cell[CellGroupData[{
Cell[590605, 13290, 625, 12, 28, "Input",ExpressionUUID->"164a1778-751f-4d48-92c3-f3ed7c4e7a27"],
Cell[591233, 13304, 448, 10, 44, "Output",ExpressionUUID->"7cad7cac-3a1f-4c7b-97d8-25f93aa297cc"]
}, Open  ]],
Cell[591696, 13317, 254, 6, 34, "Text",ExpressionUUID->"67119e28-6cf3-414d-82c5-fa170086002c"],
Cell[591953, 13325, 1692, 51, 86, "Input",ExpressionUUID->"8f8d08c3-87d7-4e1b-a8a6-4d57096ad2c7"],
Cell[593648, 13378, 218, 5, 34, "Text",ExpressionUUID->"6ffc853a-df06-4af4-8a66-c1bd2d018262"],
Cell[593869, 13385, 848, 23, 86, "Input",ExpressionUUID->"96d5818c-c7cb-4313-a859-6864c53f2774"]
}, Open  ]],
Cell[CellGroupData[{
Cell[594754, 13413, 335, 5, 53, "Subsection",ExpressionUUID->"1525a9ab-d02f-487f-8e64-ce82c02b1517"],
Cell[595092, 13420, 229, 5, 34, "Text",ExpressionUUID->"e0622622-8e77-4cad-8e9e-0030075b85ee"],
Cell[595324, 13427, 1043, 29, 67, "Input",ExpressionUUID->"e7864fd2-d74e-4dae-9c9f-d1a11569e86c"],
Cell[596370, 13458, 387, 8, 34, "Text",ExpressionUUID->"9aa24e42-4ca3-459d-84d2-09fc3376e5bf"],
Cell[CellGroupData[{
Cell[596782, 13470, 543, 11, 28, "Input",ExpressionUUID->"c14f7ea9-576e-4272-b23b-a431224dd75a"],
Cell[597328, 13483, 437310, 7174, 529, "Output",ExpressionUUID->"d5d585e2-351c-473d-a677-2706a554202e"]
}, Open  ]],
Cell[1034653, 20660, 202, 3, 34, "Text",ExpressionUUID->"1f5a8698-6fde-4ab7-a8b4-0a694f7bf228"],
Cell[1034858, 20665, 3715, 67, 134, "Input",ExpressionUUID->"51b024b7-e397-46aa-b3ce-10c4b3bd52d6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1038610, 20737, 344, 7, 53, "Subsection",ExpressionUUID->"9f776d27-e6a7-4d44-a752-fb224e0da7d8"],
Cell[1038957, 20746, 542, 13, 28, "Input"],
Cell[1039502, 20761, 2280, 55, 124, "Input"],
Cell[1041785, 20818, 2100, 49, 105, "Input"],
Cell[CellGroupData[{
Cell[1043910, 20871, 2014, 43, 67, "Input"],
Cell[1045927, 20916, 1851, 27, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1047815, 20948, 2766, 56, 86, "Input"],
Cell[1050584, 21006, 3092, 63, 269, "Output"]
}, Open  ]],
Cell[1053691, 21072, 278, 7, 28, "Input"],
Cell[1053972, 21081, 179, 4, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1054188, 21090, 434, 8, 37, "Subsection",ExpressionUUID->"ad52af19-3242-4b69-b0bb-51f783040403"],
Cell[1054625, 21100, 2416, 58, 86, "Input",ExpressionUUID->"04d42832-4860-4c51-82ca-aaacc100ffd3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1057078, 21163, 184, 3, 53, "Subsection",ExpressionUUID->"683400fc-f610-48de-903a-66b3e8ed039e"],
Cell[1057265, 21168, 1062, 26, 556, "Input"],
Cell[1058330, 21196, 1985, 47, 880, "Input"],
Cell[CellGroupData[{
Cell[1060340, 21247, 1712, 39, 556, "Input"],
Cell[1062055, 21288, 561, 9, 232, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1062665, 21303, 348, 5, 37, "Subsection",ExpressionUUID->"ed676a96-70fe-4bfd-9483-c9dc33cd57aa"],
Cell[1063016, 21310, 1026, 28, 48, "Input"],
Cell[CellGroupData[{
Cell[1064067, 21342, 410, 10, 28, "Input"],
Cell[1064480, 21354, 461, 9, 21, "Message"]
}, Open  ]],
Cell[1064956, 21366, 515, 12, 28, "Input"],
Cell[CellGroupData[{
Cell[1065496, 21382, 324, 9, 28, "Input"],
Cell[1065823, 21393, 137, 3, 32, "Output"]
}, Open  ]],
Cell[1065975, 21399, 277, 7, 28, "Input"],
Cell[1066255, 21408, 179, 4, 28, "Input"],
Cell[1066437, 21414, 304, 9, 28, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[1066778, 21428, 296, 6, 37, "Subsection",ExpressionUUID->"5dac7600-5d4c-4fe6-8fd8-cb15f6fc06e7"],
Cell[1067077, 21436, 567, 16, 28, "Input",ExpressionUUID->"f0c7504e-6ed5-410c-9414-db428bbbe253"],
Cell[1067647, 21454, 180, 3, 34, "Text",ExpressionUUID->"6373dab2-032c-4f13-8347-33546b17d523"],
Cell[1067830, 21459, 1393, 40, 67, "Input",ExpressionUUID->"db6ea7eb-27b6-4e7b-a278-1b6320ec0039"],
Cell[1069226, 21501, 249, 6, 34, "Text",ExpressionUUID->"d6ad9471-edb8-4b54-8caf-93d93e004df8"],
Cell[1069478, 21509, 5210, 125, 143, "Input",ExpressionUUID->"fdaeafdf-e9b7-426b-bace-b12bab0a121c"],
Cell[CellGroupData[{
Cell[1074713, 21638, 3022, 56, 48, "Input",ExpressionUUID->"1d5455de-3c79-45fe-8062-e7f2ddbd992f"],
Cell[1077738, 21696, 1288, 23, 32, "Output",ExpressionUUID->"b82cd680-0f54-4762-9a4a-3f6d52a6a5b5"]
}, Open  ]],
Cell[1079041, 21722, 1276, 28, 28, "Input",ExpressionUUID->"be9def9a-ecac-4e77-a39c-462f88b77dfb"],
Cell[1080320, 21752, 253, 6, 34, "Text",ExpressionUUID->"7915ba14-59f3-4a42-b96a-3c35500bae07"],
Cell[1080576, 21760, 1939, 47, 67, "Input",ExpressionUUID->"899d21fc-8749-4d15-9aea-2c4f34c55557"],
Cell[1082518, 21809, 198, 3, 34, "Text",ExpressionUUID->"1f0f644e-39db-47a1-90ea-317c8320f765"],
Cell[CellGroupData[{
Cell[1082741, 21816, 577, 13, 28, "Input",ExpressionUUID->"f4bdb803-f1f5-42c8-b564-afcf03833851"],
Cell[1083321, 21831, 6372, 111, 246, "Output",ExpressionUUID->"be24f4b9-d942-4a28-a2f7-9310660f8a22"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1089742, 21948, 372, 6, 53, "Subsection",ExpressionUUID->"840ac6a5-06e1-4907-88ee-f0db5df22803"],
Cell[1090117, 21956, 545, 10, 34, "Text",ExpressionUUID->"7f0c0e5d-6482-417a-a5dc-6d68af7fefcf"],
Cell[1090665, 21968, 995, 16, 48, "Input",ExpressionUUID->"2707b321-a107-4e05-9cae-544f27530fe5"],
Cell[CellGroupData[{
Cell[1091685, 21988, 1819, 33, 48, "Input",ExpressionUUID->"93bb11b9-6ef7-4586-9ce4-5b5efe59c212"],
Cell[1093507, 22023, 2955, 44, 32, "Output",ExpressionUUID->"fe4f6182-b448-4962-ae98-6fe22d4fd4ce"]
}, Open  ]],
Cell[1096477, 22070, 268, 7, 28, "Input",ExpressionUUID->"4ab3ef33-43fe-4a30-8745-dd0809e15e6d"],
Cell[1096748, 22079, 278, 6, 34, "Text",ExpressionUUID->"6d28e7aa-f140-439c-93e5-8d8973089ead"],
Cell[1097029, 22087, 996, 16, 28, "Input",ExpressionUUID->"8e62790b-e259-47ef-b046-5a3207b5adc4"],
Cell[CellGroupData[{
Cell[1098050, 22107, 1200, 28, 48, "Input",ExpressionUUID->"cc2a17b6-79f2-4a2b-bcaa-f994d5a2a85b"],
Cell[1099253, 22137, 3435, 50, 32, "Output",ExpressionUUID->"ae180d41-d184-435f-8601-b11b2de31aa6"]
}, Open  ]],
Cell[1102703, 22190, 843, 19, 28, "Input",ExpressionUUID->"c8fb956d-d10a-486e-8fa9-4beb8f48c777"],
Cell[1103549, 22211, 1240, 34, 28, "Input",ExpressionUUID->"90a6ddea-b2e0-428d-b9eb-bf15532fee38"],
Cell[CellGroupData[{
Cell[1104814, 22249, 482, 11, 28, "Input",ExpressionUUID->"54349282-88e5-4ee4-b856-8f00ba111449"],
Cell[1105299, 22262, 4890, 91, 247, "Output",ExpressionUUID->"498fbe51-b65b-4808-99b3-625a2dc98855"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1110238, 22359, 264, 5, 53, "Subsection",ExpressionUUID->"aba60a1f-c31e-46aa-a784-ce5e317d090c"],
Cell[1110505, 22366, 1360, 31, 86, "Input",ExpressionUUID->"6fa69a90-5e3b-4228-9aca-c7b0522f01e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1111902, 22402, 240, 4, 53, "Subsection",ExpressionUUID->"71e85a52-838f-49e6-a667-2480ee1d4463"],
Cell[1112145, 22408, 1356, 28, 48, "Input",ExpressionUUID->"c1e95933-0dec-42aa-b72d-245542fddb9a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1113550, 22442, 342, 7, 70, "Section",ExpressionUUID->"21507333-7ab9-4560-987a-4f50033655c2"],
Cell[CellGroupData[{
Cell[1113917, 22453, 171, 3, 44, "Subsubsection",ExpressionUUID->"79cb851a-71e1-4bd0-b89a-ae099ea057f7"],
Cell[1114091, 22458, 325, 9, 48, "Input",ExpressionUUID->"f00a35f0-1dc6-4ef1-9766-04e15369ac80"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1114453, 22472, 282, 4, 44, "Subsubsection",ExpressionUUID->"42c6dc3e-f037-4f7d-96be-0cc13acdfb80"],
Cell[1114738, 22478, 290, 6, 34, "Text",ExpressionUUID->"8f1ce227-2b17-4d7e-90fd-f288e425a0b8"],
Cell[CellGroupData[{
Cell[1115053, 22488, 1252, 23, 28, "Input",ExpressionUUID->"6bf130a0-3e20-460e-a303-7d2d3d049d4c"],
Cell[1116308, 22513, 587, 12, 21, "Message",ExpressionUUID->"6500ee87-172a-4c69-a3d3-4da7e13e8621"],
Cell[1116898, 22527, 587, 12, 21, "Message",ExpressionUUID->"ac327e1a-4199-40e3-b092-441be9c8562f"],
Cell[1117488, 22541, 589, 12, 21, "Message",ExpressionUUID->"87582799-9c7c-40a1-b8e0-c986c951a980"],
Cell[1118080, 22555, 631, 12, 21, "Message",ExpressionUUID->"194c5375-bcf6-44b1-8e8f-86c10c863a14"]
}, Open  ]],
Cell[1118726, 22570, 401, 10, 28, "Input",ExpressionUUID->"0b96285b-dce2-44fc-b2f9-cf0e74c5f28f"],
Cell[1119130, 22582, 526, 14, 28, "Input",ExpressionUUID->"35369436-9d61-4196-9f79-23f6a891be44"],
Cell[1119659, 22598, 889, 21, 48, "Input",ExpressionUUID->"e0e8644b-913c-4a64-a17e-2fb69ed556e6"],
Cell[1120551, 22621, 1958, 35, 105, "Input",ExpressionUUID->"c2ae3abd-dba2-4337-9dd5-0a5b44c59fa8"],
Cell[1122512, 22658, 1243, 23, 48, "Input",ExpressionUUID->"1a456fff-2370-4891-9e48-7657e1b98d1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1123804, 22687, 327, 4, 67, "Section",ExpressionUUID->"23f58fe8-ea52-4f75-8cfd-8b402ddf8899"],
Cell[1124134, 22693, 336, 7, 34, "Text",ExpressionUUID->"ce6746bb-0f76-49f0-a733-b1a994e0a3b1"],
Cell[CellGroupData[{
Cell[1124495, 22704, 254, 6, 28, "Input",ExpressionUUID->"a046aee7-5d3c-40e2-a796-5d3882261d41"],
Cell[1124752, 22712, 3548, 53, 44, "Output",ExpressionUUID->"73c8d88c-3b49-448d-bdb2-25c4fe24ec56"]
}, Open  ]],
Cell[1128315, 22768, 350, 7, 34, "Text",ExpressionUUID->"37757d87-6c41-4329-9947-5b518edfb846"],
Cell[1128668, 22777, 506, 14, 28, "Input",ExpressionUUID->"f1343a04-feca-4032-94a5-53908f7c1a2d"],
Cell[1129177, 22793, 1518, 41, 67, "Input",ExpressionUUID->"064b2ddb-292f-4660-9c9b-5a51091c124c"],
Cell[CellGroupData[{
Cell[1130720, 22838, 183, 3, 53, "Subsection",ExpressionUUID->"e6ad2f2f-d52d-49ff-ad76-1dbd54d2bf60"],
Cell[1130906, 22843, 183, 3, 34, "Text",ExpressionUUID->"0467252e-f5f4-4d33-8800-b2b37f9445fc"],
Cell[1131092, 22848, 1791, 45, 105, "Input",ExpressionUUID->"17dc5d1d-1575-4829-9b7c-b9a0ecb94e35"],
Cell[1132886, 22895, 4406, 105, 238, "Input",ExpressionUUID->"6ac183c2-1ebb-41a5-bab8-b89763a92c8c"],
Cell[1137295, 23002, 4042, 109, 124, "Input",ExpressionUUID->"5526b6ae-c35a-427e-8392-129648ed4eea"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1141374, 23116, 231, 5, 53, "Subsection",ExpressionUUID->"21a5c1ba-1682-4d12-b697-acf7b95be5a1"],
Cell[1141608, 23123, 537, 15, 48, "Input",ExpressionUUID->"d1881963-5bee-4270-b642-e450b70e5b00"],
Cell[1142148, 23140, 5423, 120, 257, "Input",ExpressionUUID->"44891428-034f-4708-9abe-b9595ddad5ad"],
Cell[1147574, 23262, 381, 10, 28, "Input",ExpressionUUID->"4dc744f5-5423-4dfd-9cc9-15ea4bfe8f1b"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1148004, 23278, 345, 6, 67, "Section",ExpressionUUID->"971c84ae-b25f-4a07-85ac-b33e6490db04"],
Cell[CellGroupData[{
Cell[1148374, 23288, 229, 4, 53, "Subsection",ExpressionUUID->"76a827e1-96d0-4aaf-ad79-ae8eec44a654"],
Cell[1148606, 23294, 339, 7, 34, "Text",ExpressionUUID->"ca9e2d39-0658-4f45-a1ca-b16f9f7134df"],
Cell[1148948, 23303, 2129, 38, 67, "Input",ExpressionUUID->"31d1cccb-13cb-4990-8e79-61c2d90b05d0"],
Cell[1151080, 23343, 227, 5, 34, "Text",ExpressionUUID->"ef8981ff-7991-42df-a234-577acdabc192"],
Cell[CellGroupData[{
Cell[1151332, 23352, 545, 15, 28, "Input",ExpressionUUID->"b1b33f58-98e2-4865-a936-e854ebd4ba6f"],
Cell[1151880, 23369, 1169, 18, 32, "Output",ExpressionUUID->"d891bf2b-d323-4fce-8347-61c6722d2b91"]
}, Open  ]],
Cell[1153064, 23390, 259, 6, 34, "Text",ExpressionUUID->"21594733-b5b0-4379-954c-ecfd278f6db0"],
Cell[1153326, 23398, 2771, 60, 67, "Input",ExpressionUUID->"daefb777-ddbb-4472-9c84-0a04d0d610f7"],
Cell[1156100, 23460, 304, 7, 34, "Text",ExpressionUUID->"a80b36dc-01d2-4257-bf09-ac115943cc6f"],
Cell[CellGroupData[{
Cell[1156429, 23471, 206, 4, 28, "Input",ExpressionUUID->"8c007fb5-ed9e-49e0-a215-592336488530"],
Cell[1156638, 23477, 649, 10, 32, "Output",ExpressionUUID->"9c0b6c37-8d2b-4cf6-a1d5-fa38ea284c9d"]
}, Open  ]],
Cell[1157302, 23490, 329, 7, 34, "Text",ExpressionUUID->"7445f571-9965-4cb7-822b-29e97d4caac0"],
Cell[CellGroupData[{
Cell[1157656, 23501, 417, 8, 28, "Input",ExpressionUUID->"1028d8d6-c965-461a-92bd-302988c0b0df"],
Cell[1158076, 23511, 2090, 31, 52, "Output",ExpressionUUID->"81d13c67-116a-4dec-8d06-df5c76e1f319"]
}, Open  ]],
Cell[1160181, 23545, 218, 5, 34, "Text",ExpressionUUID->"450917a9-12eb-4318-8a74-92143672c66c"],
Cell[1160402, 23552, 671, 14, 28, "Input",ExpressionUUID->"5967cc81-6707-43af-a29a-e01d80d84c4b"],
Cell[CellGroupData[{
Cell[1161098, 23570, 956, 20, 28, "Input",ExpressionUUID->"8cf56cbf-2f27-46fb-8b8a-9e7cc352b12b"],
Cell[1162057, 23592, 1823, 28, 52, "Output",ExpressionUUID->"41604852-0d0a-4b55-b347-0779b3983adc"]
}, Open  ]],
Cell[1163895, 23623, 257, 6, 34, "Text",ExpressionUUID->"6a29e3e5-0b0a-4819-ab03-9c8941516359"],
Cell[CellGroupData[{
Cell[1164177, 23633, 207, 4, 28, "Input",ExpressionUUID->"dc32408b-591a-43d8-88b0-5a8dbe228416"],
Cell[1164387, 23639, 543, 8, 32, "Output",ExpressionUUID->"86069752-dedd-4742-8891-254fd157b4ab"]
}, Open  ]],
Cell[1164945, 23650, 1991, 47, 105, "Input",ExpressionUUID->"75a051c0-27a0-4e82-bc04-8024be03d053"],
Cell[1166939, 23699, 273, 4, 34, "Text",ExpressionUUID->"f6bb7336-bbd3-44bf-8cf6-686cd1134f6d"],
Cell[1167215, 23705, 998, 26, 28, "Input",ExpressionUUID->"42b7dba5-5ef2-4c52-87ed-3410608996fa"],
Cell[1168216, 23733, 194, 3, 34, "Text",ExpressionUUID->"78535fb0-b8dd-449f-91a7-e432de2e056a"],
Cell[1168413, 23738, 381, 10, 28, "Input",ExpressionUUID->"abd3a069-398e-476d-9d61-10f6f68e482d"],
Cell[1168797, 23750, 602, 13, 34, "Text",ExpressionUUID->"132f02f2-bf6b-45a8-90c7-c9168f00d8d2"],
Cell[1169402, 23765, 1037, 28, 67, "Input",ExpressionUUID->"022bba4d-0161-4416-a1c7-6cb72414a2e6"],
Cell[1170442, 23795, 485, 11, 34, "Text",ExpressionUUID->"e9e5ac88-1f7e-465f-87c9-6716eb5d2e4c"],
Cell[1170930, 23808, 1192, 27, 28, "Input",ExpressionUUID->"d0970b84-0914-4260-b52b-37e5f013119b"],
Cell[1172125, 23837, 194, 3, 34, "Text",ExpressionUUID->"ea27b98e-1175-4640-b8da-125a2f2a2b1e"],
Cell[1172322, 23842, 381, 10, 28, "Input",ExpressionUUID->"140d8417-2a20-4a55-98e1-088eda4063b4"],
Cell[1172706, 23854, 260, 6, 34, "Text",ExpressionUUID->"9e45e249-836f-4e8a-a56c-72689987fada"],
Cell[CellGroupData[{
Cell[1172991, 23864, 263, 5, 28, "Input",ExpressionUUID->"65a39f4e-2686-4f59-899f-c961a10aa218"],
Cell[1173257, 23871, 640, 10, 32, "Output",ExpressionUUID->"e883124e-df75-4be1-a9b1-09a336c6073b"]
}, Open  ]],
Cell[1173912, 23884, 327, 7, 34, "Text",ExpressionUUID->"b09372b6-6bce-408d-ab8b-b08ae4b7da23"],
Cell[CellGroupData[{
Cell[1174264, 23895, 449, 9, 28, "Input",ExpressionUUID->"a9887666-da89-4e56-9faf-cb5175da6f11"],
Cell[1174716, 23906, 1841, 28, 52, "Output",ExpressionUUID->"87c763a3-b1e2-4ccb-b83f-11caf33e6dd9"]
}, Open  ]],
Cell[1176572, 23937, 319, 7, 34, "Text",ExpressionUUID->"a71b9ef1-a18b-4d88-8a24-c7cb90af1421"],
Cell[CellGroupData[{
Cell[1176916, 23948, 362, 9, 28, "Input",ExpressionUUID->"d99d63c4-e71f-4680-820f-ce7e6d2d812e"],
Cell[1177281, 23959, 183, 4, 32, "Output",ExpressionUUID->"edd1067a-ba12-4507-bbcf-75514bdbf296"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1177501, 23968, 290, 7, 28, "Input",ExpressionUUID->"2f0f1a9e-533d-4ca1-81bb-ee986812ddd1"],
Cell[1177794, 23977, 133, 3, 32, "Output",ExpressionUUID->"8024d509-f84d-4083-8f46-5b85ccad5ed3"]
}, Open  ]],
Cell[1177942, 23983, 142, 3, 28, "Input",ExpressionUUID->"a565eb76-7e41-4d5b-838f-8faf048446ee"],
Cell[1178087, 23988, 14767, 279, 409, "Input",ExpressionUUID->"ee063b0b-ee99-42b6-b332-2d91584e4eef"],
Cell[1192857, 24269, 490, 15, 37, "Input",ExpressionUUID->"a54b32b9-a50b-4011-8fed-df80b8d1e1d4"],
Cell[1193350, 24286, 2213, 45, 107, "Input",ExpressionUUID->"d16999a1-e00a-4868-b7d7-ebdf2fc404c1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1195600, 24336, 465, 11, 53, "Subsection",ExpressionUUID->"01907d9f-8a02-479f-aabe-dd613c6c8a1b"],
Cell[1196068, 24349, 411, 8, 34, "Text",ExpressionUUID->"c2cf9789-ac40-4685-9d7d-aa70f1b66d63"],
Cell[1196482, 24359, 765, 14, 28, "Input",ExpressionUUID->"c46d9efc-b4b1-465e-88d1-862f5dfa8fea"],
Cell[1197250, 24375, 1710, 26, 28, "Input",ExpressionUUID->"b30b8d89-0273-4533-a8e2-9903cc01046b"],
Cell[CellGroupData[{
Cell[1198985, 24405, 173, 3, 28, "Input",ExpressionUUID->"d8e0d716-2d38-4b96-ba1c-6e144f4c91c4"],
Cell[1199161, 24410, 617, 11, 32, "Output",ExpressionUUID->"fe178984-2296-4c23-8e3f-9cd492ae896f"]
}, Open  ]],
Cell[1199793, 24424, 473, 10, 28, "Input",ExpressionUUID->"5c31b0b5-b3b6-4726-8d5d-163ea608fc9b"],
Cell[CellGroupData[{
Cell[1200291, 24438, 207, 4, 28, "Input",ExpressionUUID->"302bf95d-c4af-45a0-bee4-5468ec5e9e09"],
Cell[1200501, 24444, 828, 14, 32, "Output",ExpressionUUID->"93d163e3-cafd-488e-a234-129d8d051a02"]
}, Open  ]],
Cell[1201344, 24461, 519, 9, 56, "Text",ExpressionUUID->"0a0a640c-71e4-438d-ba37-96fb49b393ef"],
Cell[1201866, 24472, 870, 15, 28, "Input",ExpressionUUID->"53b37473-2c89-48a8-944b-7e1e7263a186"],
Cell[CellGroupData[{
Cell[1202761, 24491, 532, 12, 28, "Input",ExpressionUUID->"f91e2b66-a182-4339-b093-2e396feab5e9"],
Cell[1203296, 24505, 734, 17, 32, "Output",ExpressionUUID->"925f36f4-1c5d-4bef-b5a3-d41f2a58501f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1204079, 24528, 440, 10, 53, "Subsection",ExpressionUUID->"a903b405-7d02-473d-9978-a7ba108ccb55"],
Cell[1204522, 24540, 401, 10, 28, "Input"],
Cell[1204926, 24552, 1710, 26, 28, "Input"],
Cell[1206639, 24580, 473, 10, 28, "Input"],
Cell[CellGroupData[{
Cell[1207137, 24594, 207, 4, 28, "Input"],
Cell[1207347, 24600, 440, 8, 32, "Output"]
}, Open  ]],
Cell[1207802, 24611, 350, 7, 34, "Text"],
Cell[1208155, 24620, 550, 14, 48, "Input"],
Cell[1208708, 24636, 726, 16, 48, "Input"],
Cell[CellGroupData[{
Cell[1209459, 24656, 292, 5, 28, "Input"],
Cell[1209754, 24663, 365, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210156, 24675, 266, 7, 28, "Input"],
Cell[1210425, 24684, 182, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210644, 24692, 236, 4, 28, "Input"],
Cell[1210883, 24698, 367, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1211287, 24710, 403, 10, 28, "Input"],
Cell[1211693, 24722, 151, 2, 32, "Output"]
}, Open  ]],
Cell[1211859, 24727, 1907, 47, 86, "Input"],
Cell[CellGroupData[{
Cell[1213791, 24778, 212, 4, 28, "Input"],
Cell[1214006, 24784, 223, 5, 32, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[1214278, 24795, 186, 3, 37, "Subsection",ExpressionUUID->"c7316399-f6c6-435b-bf36-ca5f75fa72e4"],
Cell[1214467, 24800, 192, 3, 34, "Text",ExpressionUUID->"3de14f0a-4f1c-4384-9425-a4da7e5bcd75"],
Cell[1214662, 24805, 893, 18, 28, "Input",ExpressionUUID->"081db12e-1d9e-4ac0-8061-93df2c0e5593"],
Cell[1215558, 24825, 195, 3, 34, "Text",ExpressionUUID->"d7105aa8-1365-45f5-a6f2-44e110b890dc"],
Cell[1215756, 24830, 4357, 92, 219, "Input",ExpressionUUID->"e9158007-53ab-46ea-89d5-5bc75aece1bb"],
Cell[1220116, 24924, 370, 10, 28, "Input",ExpressionUUID->"78f7254f-8cb9-4698-b63c-67632484f5a6"],
Cell[1220489, 24936, 603, 14, 28, "Input",ExpressionUUID->"4fa71029-60da-42bf-931c-57c567fc6640"],
Cell[CellGroupData[{
Cell[1221117, 24954, 197, 4, 28, "Input",ExpressionUUID->"fbfe08b1-54b6-4774-bcbc-39f40c26d2a3"],
Cell[1221317, 24960, 570, 9, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1221924, 24974, 1500, 23, 28, "Input"],
Cell[1223427, 24999, 4496, 74, 198, "Output"]
}, Open  ]],
Cell[1227938, 25076, 1274, 41, 37, "Input"],
Cell[CellGroupData[{
Cell[1229237, 25121, 1774, 31, 48, "Input"],
Cell[1231014, 25154, 373, 6, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1231436, 25166, 388, 8, 53, "Subsection"],
Cell[CellGroupData[{
Cell[1231849, 25178, 2690, 63, 318, "Input"],
Cell[1234542, 25243, 778, 11, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1235357, 25259, 2301, 57, 318, "Input"],
Cell[1237661, 25318, 1270, 19, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1238968, 25342, 2281, 57, 318, "Input"],
Cell[1241252, 25401, 1277, 19, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1242566, 25425, 7678, 173, 1843, "Input"],
Cell[1250247, 25600, 14011, 250, 798, "Output"]
}, Open  ]],
Cell[1264273, 25853, 7007, 154, 1555, "Input"],
Cell[CellGroupData[{
Cell[1271305, 26011, 6637, 151, 1555, "Input"],
Cell[1277945, 26164, 13465, 242, 798, "Output"]
}, Open  ]],
Cell[1291425, 26409, 3711, 90, 318, "Input"],
Cell[CellGroupData[{
Cell[1295161, 26503, 6471, 159, 1407, "Input"],
Cell[1301635, 26664, 16798, 289, 798, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1318470, 26958, 729, 19, 100, "Input"],
Cell[1319202, 26979, 47744, 827, 796, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1366983, 27811, 207, 4, 100, "Input"],
Cell[1367193, 27817, 3504, 49, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1370734, 27871, 205, 4, 100, "Input"],
Cell[1370942, 27877, 3507, 49, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1374486, 27931, 202, 4, 100, "Input"],
Cell[1374691, 27937, 3536, 49, 112, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1378264, 27991, 206, 4, 100, "Input"],
Cell[1378473, 27997, 3503, 49, 112, "Output"]
}, Open  ]]
}, Closed]]
}, Open  ]]
}
]
*)

